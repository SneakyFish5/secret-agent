{
  "removals": [
    "window.document.documentElement.style.backdropFilter",
    "window.document.documentElement.style.backfaceVisibility",
    "window.document.documentElement.style.contain",
    "window.document.documentElement.style.d",
    "window.document.documentElement.style.epubCaptionSide",
    "window.document.documentElement.style.epubTextCombine",
    "window.document.documentElement.style.epubTextEmphasis",
    "window.document.documentElement.style.epubTextEmphasisColor",
    "window.document.documentElement.style.epubTextEmphasisStyle",
    "window.document.documentElement.style.epubTextOrientation",
    "window.document.documentElement.style.epubTextTransform",
    "window.document.documentElement.style.epubWordBreak",
    "window.document.documentElement.style.epubWritingMode",
    "window.document.documentElement.style.fontKerning",
    "window.document.documentElement.style.gridColumnGap",
    "window.document.documentElement.style.gridGap",
    "window.document.documentElement.style.gridRowGap",
    "window.document.documentElement.style.hyphens",
    "window.document.documentElement.style.maxZoom",
    "window.document.documentElement.style.minZoom",
    "window.document.documentElement.style.offset",
    "window.document.documentElement.style.offsetDistance",
    "window.document.documentElement.style.offsetPath",
    "window.document.documentElement.style.offsetRotate",
    "window.document.documentElement.style.orientation",
    "window.document.documentElement.style.overflowAnchor",
    "window.document.documentElement.style.overscrollBehavior",
    "window.document.documentElement.style.overscrollBehaviorBlock",
    "window.document.documentElement.style.overscrollBehaviorInline",
    "window.document.documentElement.style.overscrollBehaviorX",
    "window.document.documentElement.style.overscrollBehaviorY",
    "window.document.documentElement.style.scrollBehavior",
    "window.document.documentElement.style.scrollMargin",
    "window.document.documentElement.style.scrollMarginBlock",
    "window.document.documentElement.style.scrollMarginBlockEnd",
    "window.document.documentElement.style.scrollMarginBlockStart",
    "window.document.documentElement.style.scrollMarginBottom",
    "window.document.documentElement.style.scrollMarginInline",
    "window.document.documentElement.style.scrollMarginInlineEnd",
    "window.document.documentElement.style.scrollMarginInlineStart",
    "window.document.documentElement.style.scrollMarginLeft",
    "window.document.documentElement.style.scrollMarginRight",
    "window.document.documentElement.style.scrollMarginTop",
    "window.document.documentElement.style.scrollPaddingBlock",
    "window.document.documentElement.style.scrollPaddingBlockEnd",
    "window.document.documentElement.style.scrollPaddingBlockStart",
    "window.document.documentElement.style.scrollPaddingInline",
    "window.document.documentElement.style.scrollPaddingInlineEnd",
    "window.document.documentElement.style.scrollPaddingInlineStart",
    "window.document.documentElement.style.scrollSnapStop",
    "window.document.documentElement.style.speak",
    "window.document.documentElement.style.textAlignLast",
    "window.document.documentElement.style.textCombineUpright",
    "window.document.documentElement.style.textDecorationSkipInk",
    "window.document.documentElement.style.textOrientation",
    "window.document.documentElement.style.textSizeAdjust",
    "window.document.documentElement.style.userSelect",
    "window.document.documentElement.style.userZoom",
    "window.document.documentElement.style.webkitAlignContent",
    "window.document.documentElement.style.webkitAlignItems",
    "window.document.documentElement.style.webkitAlignSelf",
    "window.document.documentElement.style.webkitAnimation",
    "window.document.documentElement.style.webkitAnimationDelay",
    "window.document.documentElement.style.webkitAnimationDirection",
    "window.document.documentElement.style.webkitAnimationDuration",
    "window.document.documentElement.style.webkitAnimationFillMode",
    "window.document.documentElement.style.webkitAnimationIterationCount",
    "window.document.documentElement.style.webkitAnimationName",
    "window.document.documentElement.style.webkitAnimationPlayState",
    "window.document.documentElement.style.webkitAnimationTimingFunction",
    "window.document.documentElement.style.webkitAppRegion",
    "window.document.documentElement.style.webkitBorderAfter",
    "window.document.documentElement.style.webkitBorderAfterColor",
    "window.document.documentElement.style.webkitBorderAfterStyle",
    "window.document.documentElement.style.webkitBorderAfterWidth",
    "window.document.documentElement.style.webkitBorderBefore",
    "window.document.documentElement.style.webkitBorderBeforeColor",
    "window.document.documentElement.style.webkitBorderBeforeStyle",
    "window.document.documentElement.style.webkitBorderBeforeWidth",
    "window.document.documentElement.style.webkitBorderBottomLeftRadius",
    "window.document.documentElement.style.webkitBorderBottomRightRadius",
    "window.document.documentElement.style.webkitBorderEnd",
    "window.document.documentElement.style.webkitBorderEndColor",
    "window.document.documentElement.style.webkitBorderEndStyle",
    "window.document.documentElement.style.webkitBorderEndWidth",
    "window.document.documentElement.style.webkitBorderStart",
    "window.document.documentElement.style.webkitBorderStartColor",
    "window.document.documentElement.style.webkitBorderStartStyle",
    "window.document.documentElement.style.webkitBorderStartWidth",
    "window.document.documentElement.style.webkitBorderTopLeftRadius",
    "window.document.documentElement.style.webkitBorderTopRightRadius",
    "window.document.documentElement.style.webkitBoxSizing",
    "window.document.documentElement.style.webkitColumnCount",
    "window.document.documentElement.style.webkitColumnGap",
    "window.document.documentElement.style.webkitColumnRule",
    "window.document.documentElement.style.webkitColumnRuleColor",
    "window.document.documentElement.style.webkitColumnRuleStyle",
    "window.document.documentElement.style.webkitColumnRuleWidth",
    "window.document.documentElement.style.webkitColumnSpan",
    "window.document.documentElement.style.webkitColumnWidth",
    "window.document.documentElement.style.webkitColumns",
    "window.document.documentElement.style.webkitFilter",
    "window.document.documentElement.style.webkitFlex",
    "window.document.documentElement.style.webkitFlexBasis",
    "window.document.documentElement.style.webkitFlexDirection",
    "window.document.documentElement.style.webkitFlexFlow",
    "window.document.documentElement.style.webkitFlexGrow",
    "window.document.documentElement.style.webkitFlexShrink",
    "window.document.documentElement.style.webkitFlexWrap",
    "window.document.documentElement.style.webkitFontFeatureSettings",
    "window.document.documentElement.style.webkitHighlight",
    "window.document.documentElement.style.webkitJustifyContent",
    "window.document.documentElement.style.webkitLineBreak",
    "window.document.documentElement.style.webkitLogicalHeight",
    "window.document.documentElement.style.webkitLogicalWidth",
    "window.document.documentElement.style.webkitMarginAfter",
    "window.document.documentElement.style.webkitMarginBefore",
    "window.document.documentElement.style.webkitMarginEnd",
    "window.document.documentElement.style.webkitMarginStart",
    "window.document.documentElement.style.webkitMaxLogicalHeight",
    "window.document.documentElement.style.webkitMaxLogicalWidth",
    "window.document.documentElement.style.webkitMinLogicalHeight",
    "window.document.documentElement.style.webkitMinLogicalWidth",
    "window.document.documentElement.style.webkitOpacity",
    "window.document.documentElement.style.webkitOrder",
    "window.document.documentElement.style.webkitPaddingAfter",
    "window.document.documentElement.style.webkitPaddingBefore",
    "window.document.documentElement.style.webkitPaddingEnd",
    "window.document.documentElement.style.webkitPaddingStart",
    "window.document.documentElement.style.webkitPerspective",
    "window.document.documentElement.style.webkitPerspectiveOrigin",
    "window.document.documentElement.style.webkitPerspectiveOriginX",
    "window.document.documentElement.style.webkitPerspectiveOriginY",
    "window.document.documentElement.style.webkitShapeImageThreshold",
    "window.document.documentElement.style.webkitShapeMargin",
    "window.document.documentElement.style.webkitShapeOutside",
    "window.document.documentElement.style.webkitTapHighlightColor",
    "window.document.documentElement.style.webkitTransform",
    "window.document.documentElement.style.webkitTransformOrigin",
    "window.document.documentElement.style.webkitTransformOriginX",
    "window.document.documentElement.style.webkitTransformOriginY",
    "window.document.documentElement.style.webkitTransformOriginZ",
    "window.document.documentElement.style.webkitTransition",
    "window.document.documentElement.style.webkitTransitionDelay",
    "window.document.documentElement.style.webkitTransitionDuration",
    "window.document.documentElement.style.webkitTransitionProperty",
    "window.document.documentElement.style.webkitTransitionTimingFunction",
    "window.document.documentElement.style.webkitWritingMode",
    "window.document.documentElement.autocapitalize",
    "window.document.documentElement.oncancel",
    "window.document.documentElement.onclose",
    "window.document.documentElement.onformdata",
    "window.document.documentElement.onwheel",
    "window.document.documentElement.onauxclick",
    "window.document.documentElement.onselectstart",
    "window.document.documentElement.onselectionchange",
    "window.document.documentElement.nonce",
    "window.document.documentElement.autofocus",
    "window.document.documentElement.enterKeyHint",
    "window.document.documentElement.onpointerrawupdate",
    "window.document.documentElement.part",
    "window.document.documentElement.attributeStyleMap",
    "window.document.documentElement.onbeforecopy",
    "window.document.documentElement.onbeforecut",
    "window.document.documentElement.onbeforepaste",
    "window.document.documentElement.onsearch",
    "window.document.documentElement.elementTiming",
    "window.document.documentElement.onfullscreenchange",
    "window.document.documentElement.onfullscreenerror",
    "window.document.documentElement.onwebkitfullscreenchange",
    "window.document.documentElement.onwebkitfullscreenerror",
    "window.document.body",
    "window.document.head",
    "window.document.images",
    "window.document.embeds",
    "window.document.links",
    "window.document.forms",
    "window.document.scripts",
    "window.document.anchors",
    "window.document.applets",
    "window.document.onpointerlockchange",
    "window.document.onpointerlockerror",
    "window.document.wasDiscarded",
    "window.document.webkitVisibilityState",
    "window.document.webkitHidden",
    "window.document.onbeforecopy",
    "window.document.onbeforecut",
    "window.document.onbeforepaste",
    "window.document.onfreeze",
    "window.document.onresume",
    "window.document.onsearch",
    "window.document.onsecuritypolicyviolation",
    "window.document.fonts",
    "window.document.styleSheets",
    "window.document.fullscreenElement",
    "window.document.adoptedStyleSheets",
    "window.document.oncancel",
    "window.document.onclose",
    "window.document.onformdata",
    "window.document.onwheel",
    "window.document.onauxclick",
    "window.document.onselectstart",
    "window.document.onselectionchange",
    "window.document.fullscreenEnabled",
    "window.document.fullscreen",
    "window.document.onfullscreenchange",
    "window.document.onfullscreenerror",
    "window.document.onwebkitfullscreenchange",
    "window.document.onwebkitfullscreenerror",
    "window.document.featurePolicy",
    "window.document.onpointerrawupdate",
    "window.document.pictureInPictureElement",
    "window.document.pictureInPictureEnabled",
    "window.navigator.hardwareConcurrency",
    "window.navigator.doNotTrack",
    "window.navigator.connection",
    "window.navigator.webkitTemporaryStorage",
    "window.navigator.webkitPersistentStorage",
    "window.navigator.userActivation",
    "window.navigator.mediaSession",
    "window.navigator.permissions",
    "window.navigator.deviceMemory",
    "window.navigator.clipboard",
    "window.navigator.keyboard",
    "window.navigator.locks",
    "window.navigator.storage",
    "window.navigator.presentation",
    "window.navigator.usb",
    "window.navigator.xr",
    "window.screen.orientation",
    "window.IDBCursor.prototype.request",
    "window.IDBCursor.prototype[Symbol.toStringTag]",
    "window.IDBCursorWithValue.prototype[Symbol.toStringTag]",
    "window.IDBDatabase.prototype[Symbol.toStringTag]",
    "window.IDBFactory.prototype.databases",
    "window.IDBFactory.prototype[Symbol.toStringTag]",
    "window.IDBIndex.prototype[Symbol.toStringTag]",
    "window.IDBKeyRange.prototype[Symbol.toStringTag]",
    "window.IDBObjectStore.prototype[Symbol.toStringTag]",
    "window.IDBOpenDBRequest.prototype[Symbol.toStringTag]",
    "window.IDBRequest.prototype[Symbol.toStringTag]",
    "window.IDBTransaction.prototype.commit",
    "window.IDBTransaction.prototype[Symbol.toStringTag]",
    "window.IDBVersionChangeEvent.prototype.dataLoss",
    "window.IDBVersionChangeEvent.prototype.dataLossMessage",
    "window.IDBVersionChangeEvent.prototype[Symbol.toStringTag]",
    "window.SourceBuffer.prototype[Symbol.toStringTag]",
    "window.SourceBufferList.prototype[Symbol.toStringTag]",
    "window.CanvasCaptureMediaStreamTrack.prototype[Symbol.toStringTag]",
    "window.MediaDeviceInfo.prototype[Symbol.toStringTag]",
    "window.MediaDevices.prototype[Symbol.toStringTag]",
    "window.MediaStreamTrack.prototype[Symbol.toStringTag]",
    "window.MediaStreamTrackEvent.prototype[Symbol.toStringTag]",
    "window.OverconstrainedError.prototype.name",
    "window.OverconstrainedError.prototype[Symbol.toStringTag]",
    "window.Notification.prototype.badge",
    "window.Notification.prototype.vibrate",
    "window.Notification.prototype.timestamp",
    "window.Notification.prototype.renotify",
    "window.Notification.prototype.silent",
    "window.Notification.prototype.requireInteraction",
    "window.Notification.prototype.data",
    "window.Notification.prototype.actions",
    "window.Notification.prototype.image",
    "window.Notification.prototype[Symbol.toStringTag]",
    "window.Notification.maxActions",
    "window.SpeechSynthesisEvent.prototype.utterance",
    "window.SpeechSynthesisEvent.prototype.charLength",
    "window.SpeechSynthesisEvent.prototype[Symbol.toStringTag]",
    "window.SpeechSynthesisUtterance.prototype[Symbol.toStringTag]",
    "window.ByteLengthQueuingStrategy.prototype.highWaterMark",
    "window.ByteLengthQueuingStrategy.prototype[Symbol.toStringTag]",
    "window.CountQueuingStrategy.prototype.highWaterMark",
    "window.CountQueuingStrategy.prototype[Symbol.toStringTag]",
    "window.ReadableStream.prototype[Symbol.toStringTag]",
    "window.AnalyserNode.prototype.getFloatTimeDomainData",
    "window.AnalyserNode.prototype[Symbol.toStringTag]",
    "window.AudioBuffer.prototype.copyFromChannel",
    "window.AudioBuffer.prototype.copyToChannel",
    "window.AudioBuffer.prototype[Symbol.toStringTag]",
    "window.AudioBufferSourceNode.prototype.detune",
    "window.AudioBufferSourceNode.prototype[Symbol.toStringTag]",
    "window.AudioDestinationNode.prototype[Symbol.toStringTag]",
    "window.AudioListener.prototype.positionX",
    "window.AudioListener.prototype.positionY",
    "window.AudioListener.prototype.positionZ",
    "window.AudioListener.prototype.forwardX",
    "window.AudioListener.prototype.forwardY",
    "window.AudioListener.prototype.forwardZ",
    "window.AudioListener.prototype.upX",
    "window.AudioListener.prototype.upY",
    "window.AudioListener.prototype.upZ",
    "window.AudioListener.prototype[Symbol.toStringTag]",
    "window.AudioNode.prototype[Symbol.toStringTag]",
    "window.AudioParam.prototype.automationRate",
    "window.AudioParam.prototype.cancelAndHoldAtTime",
    "window.AudioParam.prototype[Symbol.toStringTag]",
    "window.AudioProcessingEvent.prototype[Symbol.toStringTag]",
    "window.BiquadFilterNode.prototype[Symbol.toStringTag]",
    "window.ChannelMergerNode.prototype[Symbol.toStringTag]",
    "window.ChannelSplitterNode.prototype[Symbol.toStringTag]",
    "window.ConvolverNode.prototype[Symbol.toStringTag]",
    "window.DelayNode.prototype[Symbol.toStringTag]",
    "window.DynamicsCompressorNode.prototype[Symbol.toStringTag]",
    "window.GainNode.prototype[Symbol.toStringTag]",
    "window.MediaElementAudioSourceNode.prototype[Symbol.toStringTag]",
    "window.MediaStreamAudioDestinationNode.prototype[Symbol.toStringTag]",
    "window.MediaStreamAudioSourceNode.prototype[Symbol.toStringTag]",
    "window.OfflineAudioCompletionEvent.prototype[Symbol.toStringTag]",
    "window.OscillatorNode.prototype[Symbol.toStringTag]",
    "window.PeriodicWave.prototype[Symbol.toStringTag]",
    "window.ScriptProcessorNode.prototype[Symbol.toStringTag]",
    "window.WaveShaperNode.prototype[Symbol.toStringTag]",
    "window.CloseEvent.prototype[Symbol.toStringTag]",
    "window.CryptoKey.prototype[Symbol.toStringTag]",
    "window.SubtleCrypto.prototype[Symbol.toStringTag]",
    "window.CSSFontFaceRule.prototype[Symbol.toStringTag]",
    "window.CSSImportRule.prototype[Symbol.toStringTag]",
    "window.CSSKeyframeRule.prototype[Symbol.toStringTag]",
    "window.CSSKeyframesRule.prototype[Symbol.toStringTag]",
    "window.CSSMediaRule.prototype[Symbol.toStringTag]",
    "window.CSSNamespaceRule.prototype[Symbol.toStringTag]",
    "window.CSSPageRule.prototype[Symbol.toStringTag]",
    "window.CSSRule.prototype[Symbol.toStringTag]",
    "window.CSSRuleList.prototype[Symbol.toStringTag]",
    "window.CSSStyleDeclaration.prototype[Symbol.toStringTag]",
    "window.CSSStyleRule.prototype.styleMap",
    "window.CSSStyleRule.prototype[Symbol.toStringTag]",
    "window.CSSStyleSheet.prototype.replace",
    "window.CSSStyleSheet.prototype.replaceSync",
    "window.CSSStyleSheet.prototype[Symbol.toStringTag]",
    "window.CSSSupportsRule.prototype[Symbol.toStringTag]",
    "window.CSS.prototype[Symbol.toStringTag]",
    "window.CSS.number",
    "window.CSS.percent",
    "window.CSS.em",
    "window.CSS.ex",
    "window.CSS.ch",
    "window.CSS.rem",
    "window.CSS.vw",
    "window.CSS.vh",
    "window.CSS.vmin",
    "window.CSS.vmax",
    "window.CSS.cm",
    "window.CSS.mm",
    "window.CSS.in",
    "window.CSS.pt",
    "window.CSS.pc",
    "window.CSS.px",
    "window.CSS.Q",
    "window.CSS.deg",
    "window.CSS.grad",
    "window.CSS.rad",
    "window.CSS.turn",
    "window.CSS.s",
    "window.CSS.ms",
    "window.CSS.Hz",
    "window.CSS.kHz",
    "window.CSS.dpi",
    "window.CSS.dpcm",
    "window.CSS.dppx",
    "window.CSS.fr",
    "window.CSS.registerProperty",
    "window.CSS.paintWorklet",
    "window.DOMMatrix.prototype[Symbol.toStringTag]",
    "window.DOMMatrixReadOnly.prototype.scaleNonUniform",
    "window.DOMMatrixReadOnly.prototype[Symbol.toStringTag]",
    "window.FontFace.prototype[Symbol.toStringTag]",
    "window.MediaList.prototype[Symbol.toStringTag]",
    "window.StyleSheet.prototype[Symbol.toStringTag]",
    "window.StyleSheetList.prototype[Symbol.toStringTag]",
    "window.AbortController.prototype[Symbol.toStringTag]",
    "window.AbortSignal.prototype[Symbol.toStringTag]",
    "window.AnimationEvent.prototype.pseudoElement",
    "window.AnimationEvent.prototype[Symbol.toStringTag]",
    "window.Attr.prototype[Symbol.toStringTag]",
    "window.BeforeUnloadEvent.prototype[Symbol.toStringTag]",
    "window.CDATASection.prototype[Symbol.toStringTag]",
    "window.CharacterData.prototype[Symbol.toStringTag]",
    "window.ClipboardEvent.prototype[Symbol.toStringTag]",
    "window.Comment.prototype[Symbol.toStringTag]",
    "window.CompositionEvent.prototype[Symbol.toStringTag]",
    "window.CustomEvent.prototype[Symbol.toStringTag]",
    "window.DOMException.prototype[Symbol.toStringTag]",
    "window.DOMImplementation.prototype[Symbol.toStringTag]",
    "window.DOMPoint.prototype[Symbol.toStringTag]",
    "window.DOMPointReadOnly.prototype[Symbol.toStringTag]",
    "window.DOMQuad.prototype[Symbol.toStringTag]",
    "window.DOMRect.prototype[Symbol.toStringTag]",
    "window.DOMRectList.prototype[Symbol.toStringTag]",
    "window.DOMRectReadOnly.prototype[Symbol.toStringTag]",
    "window.DOMStringList.prototype[Symbol.toStringTag]",
    "window.DOMStringMap.prototype[Symbol.toStringTag]",
    "window.DataTransfer.prototype[Symbol.toStringTag]",
    "window.Document.prototype[Symbol.unscopables].fullscreen",
    "window.Document.prototype.wasDiscarded",
    "window.Document.prototype.webkitVisibilityState",
    "window.Document.prototype.webkitHidden",
    "window.Document.prototype.onfreeze",
    "window.Document.prototype.onresume",
    "window.Document.prototype.onsecuritypolicyviolation",
    "window.Document.prototype.fullscreenElement",
    "window.Document.prototype.adoptedStyleSheets",
    "window.Document.prototype.oncancel",
    "window.Document.prototype.onclose",
    "window.Document.prototype.onformdata",
    "window.Document.prototype.onauxclick",
    "window.Document.prototype.fullscreenEnabled",
    "window.Document.prototype.fullscreen",
    "window.Document.prototype.onfullscreenchange",
    "window.Document.prototype.onfullscreenerror",
    "window.Document.prototype.exitFullscreen",
    "window.Document.prototype.registerElement",
    "window.Document.prototype.featurePolicy",
    "window.Document.prototype.onpointerrawupdate",
    "window.Document.prototype.pictureInPictureElement",
    "window.Document.prototype.pictureInPictureEnabled",
    "window.Document.prototype.exitPictureInPicture",
    "window.Document.prototype[Symbol.toStringTag]",
    "window.DocumentFragment.prototype[Symbol.toStringTag]",
    "window.DocumentType.prototype[Symbol.toStringTag]",
    "window.Element.prototype.part",
    "window.Element.prototype.attributeStyleMap",
    "window.Element.prototype.onsearch",
    "window.Element.prototype.elementTiming",
    "window.Element.prototype.onfullscreenchange",
    "window.Element.prototype.onfullscreenerror",
    "window.Element.prototype.animate",
    "window.Element.prototype.computedStyleMap",
    "window.Element.prototype.requestFullscreen",
    "window.Element.prototype.createShadowRoot",
    "window.Element.prototype.getDestinationInsertionPoints",
    "window.Element.prototype[Symbol.toStringTag]",
    "window.ErrorEvent.prototype[Symbol.toStringTag]",
    "window.Event.prototype.path",
    "window.Event.prototype[Symbol.toStringTag]",
    "window.EventTarget.prototype[Symbol.toStringTag]",
    "window.FocusEvent.prototype[Symbol.toStringTag]",
    "window.HashChangeEvent.prototype[Symbol.toStringTag]",
    "window.KeyboardEvent.prototype[Symbol.toStringTag]",
    "window.MessageChannel.prototype[Symbol.toStringTag]",
    "window.MessageEvent.prototype.userActivation",
    "window.MessageEvent.prototype[Symbol.toStringTag]",
    "window.MessagePort.prototype.onmessageerror",
    "window.MessagePort.prototype[Symbol.toStringTag]",
    "window.MouseEvent.prototype.pageX",
    "window.MouseEvent.prototype.pageY",
    "window.MouseEvent.prototype.layerX",
    "window.MouseEvent.prototype.layerY",
    "window.MouseEvent.prototype[Symbol.toStringTag]",
    "window.MutationEvent.prototype[Symbol.toStringTag]",
    "window.MutationObserver.prototype[Symbol.toStringTag]",
    "window.MutationRecord.prototype[Symbol.toStringTag]",
    "window.NamedNodeMap.prototype[Symbol.toStringTag]",
    "window.Node.prototype[Symbol.toStringTag]",
    "window.NodeIterator.prototype[Symbol.toStringTag]",
    "window.NodeList.prototype[Symbol.toStringTag]",
    "window.PageTransitionEvent.prototype[Symbol.toStringTag]",
    "window.PopStateEvent.prototype[Symbol.toStringTag]",
    "window.ProcessingInstruction.prototype[Symbol.toStringTag]",
    "window.ProgressEvent.prototype[Symbol.toStringTag]",
    "window.PromiseRejectionEvent.prototype[Symbol.toStringTag]",
    "window.Range.prototype[Symbol.toStringTag]",
    "window.SecurityPolicyViolationEvent.prototype.disposition",
    "window.SecurityPolicyViolationEvent.prototype.sample",
    "window.SecurityPolicyViolationEvent.prototype[Symbol.toStringTag]",
    "window.Text.prototype.getDestinationInsertionPoints",
    "window.Text.prototype[Symbol.toStringTag]",
    "window.TextDecoder.prototype[Symbol.toStringTag]",
    "window.TextEncoder.prototype.encodeInto",
    "window.TextEncoder.prototype[Symbol.toStringTag]",
    "window.TextEvent.prototype[Symbol.toStringTag]",
    "window.TransitionEvent.prototype[Symbol.toStringTag]",
    "window.TreeWalker.prototype[Symbol.toStringTag]",
    "window.UIEvent.prototype.sourceCapabilities",
    "window.UIEvent.prototype[Symbol.toStringTag]",
    "window.WheelEvent.prototype[Symbol.toStringTag]",
    "window.XMLDocument.prototype[Symbol.toStringTag]",
    "window.Blob.prototype.stream",
    "window.Blob.prototype.text",
    "window.Blob.prototype.arrayBuffer",
    "window.Blob.prototype[Symbol.toStringTag]",
    "window.File.prototype.lastModifiedDate",
    "window.File.prototype[Symbol.toStringTag]",
    "window.FileList.prototype[Symbol.toStringTag]",
    "window.FileReader.prototype[Symbol.toStringTag]",
    "window.FormData.prototype[Symbol.toStringTag]",
    "window.DOMTokenList.prototype[Symbol.toStringTag]",
    "window.URL.prototype[Symbol.toStringTag]",
    "window.HTMLAllCollection.prototype[Symbol.toStringTag]",
    "window.HTMLAnchorElement.prototype.referrerPolicy",
    "window.HTMLAnchorElement.prototype[Symbol.toStringTag]",
    "window.HTMLAreaElement.prototype.referrerPolicy",
    "window.HTMLAreaElement.prototype[Symbol.toStringTag]",
    "window.HTMLBRElement.prototype[Symbol.toStringTag]",
    "window.HTMLBaseElement.prototype[Symbol.toStringTag]",
    "window.HTMLBodyElement.prototype.onmessageerror",
    "window.HTMLBodyElement.prototype.onrejectionhandled",
    "window.HTMLBodyElement.prototype.onunhandledrejection",
    "window.HTMLBodyElement.prototype[Symbol.toStringTag]",
    "window.HTMLButtonElement.prototype[Symbol.toStringTag]",
    "window.HTMLCanvasElement.prototype.transferControlToOffscreen",
    "window.HTMLCanvasElement.prototype[Symbol.toStringTag]",
    "window.HTMLCollection.prototype[Symbol.toStringTag]",
    "window.HTMLDListElement.prototype[Symbol.toStringTag]",
    "window.HTMLDataElement.prototype[Symbol.toStringTag]",
    "window.HTMLDetailsElement.prototype[Symbol.toStringTag]",
    "window.HTMLDirectoryElement.prototype[Symbol.toStringTag]",
    "window.HTMLDivElement.prototype[Symbol.toStringTag]",
    "window.HTMLDocument.prototype[Symbol.toStringTag]",
    "window.HTMLElement.prototype.autocapitalize",
    "window.HTMLElement.prototype.oncopy",
    "window.HTMLElement.prototype.oncut",
    "window.HTMLElement.prototype.onpaste",
    "window.HTMLElement.prototype.oncancel",
    "window.HTMLElement.prototype.onclose",
    "window.HTMLElement.prototype.onformdata",
    "window.HTMLElement.prototype.onauxclick",
    "window.HTMLElement.prototype.onselectstart",
    "window.HTMLElement.prototype.onselectionchange",
    "window.HTMLElement.prototype.nonce",
    "window.HTMLElement.prototype.autofocus",
    "window.HTMLElement.prototype.attachInternals",
    "window.HTMLElement.prototype.enterKeyHint",
    "window.HTMLElement.prototype.onpointerrawupdate",
    "window.HTMLElement.prototype[Symbol.toStringTag]",
    "window.HTMLEmbedElement.prototype[Symbol.toStringTag]",
    "window.HTMLFieldSetElement.prototype[Symbol.toStringTag]",
    "window.HTMLFontElement.prototype[Symbol.toStringTag]",
    "window.HTMLFormControlsCollection.prototype[Symbol.toStringTag]",
    "window.HTMLFormElement.prototype.requestSubmit",
    "window.HTMLFormElement.prototype[Symbol.toStringTag]",
    "window.HTMLFrameElement.prototype[Symbol.toStringTag]",
    "window.HTMLFrameSetElement.prototype.onmessageerror",
    "window.HTMLFrameSetElement.prototype.onrejectionhandled",
    "window.HTMLFrameSetElement.prototype.onunhandledrejection",
    "window.HTMLFrameSetElement.prototype[Symbol.toStringTag]",
    "window.HTMLHRElement.prototype[Symbol.toStringTag]",
    "window.HTMLHeadElement.prototype[Symbol.toStringTag]",
    "window.HTMLHeadingElement.prototype[Symbol.toStringTag]",
    "window.HTMLHtmlElement.prototype[Symbol.toStringTag]",
    "window.HTMLIFrameElement.prototype.referrerPolicy",
    "window.HTMLIFrameElement.prototype.csp",
    "window.HTMLIFrameElement.prototype.featurePolicy",
    "window.HTMLIFrameElement.prototype.loading",
    "window.HTMLIFrameElement.prototype.allowPaymentRequest",
    "window.HTMLIFrameElement.prototype[Symbol.toStringTag]",
    "window.HTMLInputElement.prototype[Symbol.toStringTag]",
    "window.HTMLLIElement.prototype[Symbol.toStringTag]",
    "window.HTMLLabelElement.prototype[Symbol.toStringTag]",
    "window.HTMLLegendElement.prototype[Symbol.toStringTag]",
    "window.HTMLLinkElement.prototype.referrerPolicy",
    "window.HTMLLinkElement.prototype.imageSrcset",
    "window.HTMLLinkElement.prototype.imageSizes",
    "window.HTMLLinkElement.prototype.import",
    "window.HTMLLinkElement.prototype[Symbol.toStringTag]",
    "window.HTMLMapElement.prototype[Symbol.toStringTag]",
    "window.HTMLMarqueeElement.prototype[Symbol.toStringTag]",
    "window.HTMLMediaElement.prototype.controlsList",
    "window.HTMLMediaElement.prototype.webkitAudioDecodedByteCount",
    "window.HTMLMediaElement.prototype.webkitVideoDecodedByteCount",
    "window.HTMLMediaElement.prototype.captureStream",
    "window.HTMLMediaElement.prototype.sinkId",
    "window.HTMLMediaElement.prototype.remote",
    "window.HTMLMediaElement.prototype.disableRemotePlayback",
    "window.HTMLMediaElement.prototype.setSinkId",
    "window.HTMLMediaElement.prototype[Symbol.toStringTag]",
    "window.HTMLMenuElement.prototype[Symbol.toStringTag]",
    "window.HTMLMetaElement.prototype[Symbol.toStringTag]",
    "window.HTMLMeterElement.prototype[Symbol.toStringTag]",
    "window.HTMLModElement.prototype[Symbol.toStringTag]",
    "window.HTMLOListElement.prototype[Symbol.toStringTag]",
    "window.HTMLObjectElement.prototype[Symbol.toStringTag]",
    "window.HTMLOptGroupElement.prototype[Symbol.toStringTag]",
    "window.HTMLOptionsCollection.prototype[Symbol.toStringTag]",
    "window.HTMLOutputElement.prototype[Symbol.toStringTag]",
    "window.HTMLParagraphElement.prototype[Symbol.toStringTag]",
    "window.HTMLParamElement.prototype[Symbol.toStringTag]",
    "window.HTMLPictureElement.prototype[Symbol.toStringTag]",
    "window.HTMLPreElement.prototype[Symbol.toStringTag]",
    "window.HTMLProgressElement.prototype[Symbol.toStringTag]",
    "window.HTMLQuoteElement.prototype[Symbol.toStringTag]",
    "window.HTMLScriptElement.prototype.referrerPolicy",
    "window.HTMLScriptElement.prototype[Symbol.toStringTag]",
    "window.HTMLSelectElement.prototype[Symbol.toStringTag]",
    "window.HTMLSourceElement.prototype[Symbol.toStringTag]",
    "window.HTMLSpanElement.prototype[Symbol.toStringTag]",
    "window.HTMLStyleElement.prototype[Symbol.toStringTag]",
    "window.HTMLTableCaptionElement.prototype[Symbol.toStringTag]",
    "window.HTMLTableCellElement.prototype[Symbol.toStringTag]",
    "window.HTMLTableColElement.prototype[Symbol.toStringTag]",
    "window.HTMLTableElement.prototype[Symbol.toStringTag]",
    "window.HTMLTableRowElement.prototype[Symbol.toStringTag]",
    "window.HTMLTableSectionElement.prototype[Symbol.toStringTag]",
    "window.HTMLTemplateElement.prototype[Symbol.toStringTag]",
    "window.HTMLTextAreaElement.prototype[Symbol.toStringTag]",
    "window.HTMLTimeElement.prototype[Symbol.toStringTag]",
    "window.HTMLTitleElement.prototype[Symbol.toStringTag]",
    "window.HTMLTrackElement.prototype[Symbol.toStringTag]",
    "window.HTMLUListElement.prototype[Symbol.toStringTag]",
    "window.HTMLUnknownElement.prototype[Symbol.toStringTag]",
    "window.HTMLVideoElement.prototype.webkitDecodedFrameCount",
    "window.HTMLVideoElement.prototype.webkitDroppedFrameCount",
    "window.HTMLVideoElement.prototype.disablePictureInPicture",
    "window.HTMLVideoElement.prototype.onenterpictureinpicture",
    "window.HTMLVideoElement.prototype.onleavepictureinpicture",
    "window.HTMLVideoElement.prototype.getVideoPlaybackQuality",
    "window.HTMLVideoElement.prototype.requestPictureInPicture",
    "window.HTMLVideoElement.prototype[Symbol.toStringTag]",
    "window.ImageData.prototype[Symbol.toStringTag]",
    "window.MediaError.prototype.message",
    "window.MediaError.prototype[Symbol.toStringTag]",
    "window.RadioNodeList.prototype[Symbol.toStringTag]",
    "window.TextMetrics.prototype[Symbol.toStringTag]",
    "window.TimeRanges.prototype[Symbol.toStringTag]",
    "window.URLSearchParams.prototype[Symbol.toStringTag]",
    "window.ValidityState.prototype[Symbol.toStringTag]",
    "window.CanvasGradient.prototype[Symbol.toStringTag]",
    "window.CanvasPattern.prototype[Symbol.toStringTag]",
    "window.CanvasRenderingContext2D.prototype.filter",
    "window.CanvasRenderingContext2D.prototype.getContextAttributes",
    "window.CanvasRenderingContext2D.prototype[Symbol.toStringTag]",
    "window.Path2D.prototype[Symbol.toStringTag]",
    "window.WebGLActiveInfo.prototype[Symbol.toStringTag]",
    "window.WebGLBuffer.prototype[Symbol.toStringTag]",
    "window.WebGLContextEvent.prototype[Symbol.toStringTag]",
    "window.WebGLFramebuffer.prototype[Symbol.toStringTag]",
    "window.WebGLProgram.prototype[Symbol.toStringTag]",
    "window.WebGLQuery.prototype[Symbol.toStringTag]",
    "window.WebGLRenderbuffer.prototype[Symbol.toStringTag]",
    "window.WebGLRenderingContext.prototype.makeXRCompatible",
    "window.WebGLRenderingContext.prototype[Symbol.toStringTag]",
    "window.WebGLSampler.prototype[Symbol.toStringTag]",
    "window.WebGLShader.prototype[Symbol.toStringTag]",
    "window.WebGLShaderPrecisionFormat.prototype[Symbol.toStringTag]",
    "window.WebGLSync.prototype[Symbol.toStringTag]",
    "window.WebGLTexture.prototype[Symbol.toStringTag]",
    "window.WebGLTransformFeedback.prototype[Symbol.toStringTag]",
    "window.WebGLUniformLocation.prototype[Symbol.toStringTag]",
    "window.TextTrack.prototype[Symbol.toStringTag]",
    "window.TextTrackCue.prototype[Symbol.toStringTag]",
    "window.TextTrackCueList.prototype[Symbol.toStringTag]",
    "window.TextTrackList.prototype[Symbol.toStringTag]",
    "window.TrackEvent.prototype[Symbol.toStringTag]",
    "window.VTTCue.prototype[Symbol.toStringTag]",
    "window.ApplicationCache.prototype[Symbol.toStringTag]",
    "window.BarProp.prototype[Symbol.toStringTag]",
    "window.Crypto.prototype[Symbol.toStringTag]",
    "window.Selection.prototype.removeRange",
    "window.Selection.prototype[Symbol.toStringTag]",
    "window.Window.prototype.TEMPORARY",
    "window.Window.prototype.PERSISTENT",
    "window.Window.prototype[Symbol.toStringTag]",
    "window.Window.TEMPORARY",
    "window.Window.PERSISTENT",
    "window.EventSource.prototype[Symbol.toStringTag]",
    "window.History.prototype[Symbol.toStringTag]",
    "window.Location.prototype[Symbol.toStringTag]",
    "window.Navigator.prototype.hardwareConcurrency",
    "window.Navigator.prototype.doNotTrack",
    "window.Navigator.prototype.connection",
    "window.Navigator.prototype.webkitTemporaryStorage",
    "window.Navigator.prototype.webkitPersistentStorage",
    "window.Navigator.prototype.getBattery",
    "window.Navigator.prototype.vibrate",
    "window.Navigator.prototype.userActivation",
    "window.Navigator.prototype.mediaSession",
    "window.Navigator.prototype.permissions",
    "window.Navigator.prototype.deviceMemory",
    "window.Navigator.prototype.clipboard",
    "window.Navigator.prototype.keyboard",
    "window.Navigator.prototype.locks",
    "window.Navigator.prototype.storage",
    "window.Navigator.prototype.presentation",
    "window.Navigator.prototype.usb",
    "window.Navigator.prototype.xr",
    "window.Navigator.prototype.getInstalledRelatedApps",
    "window.Navigator.prototype.getUserMedia",
    "window.Navigator.prototype.webkitGetUserMedia",
    "window.Navigator.prototype.registerProtocolHandler",
    "window.Navigator.prototype.unregisterProtocolHandler",
    "window.Navigator.prototype.requestMIDIAccess",
    "window.Navigator.prototype[Symbol.toStringTag]",
    "window.Performance.prototype.timeOrigin",
    "window.Performance.prototype.toJSON",
    "window.Performance.prototype.memory",
    "window.Performance.prototype[Symbol.toStringTag]",
    "window.PerformanceNavigation.prototype.toJSON",
    "window.PerformanceNavigation.prototype[Symbol.toStringTag]",
    "window.PerformanceTiming.prototype[Symbol.toStringTag]",
    "window.Screen.prototype.orientation",
    "window.Screen.prototype[Symbol.toStringTag]",
    "window.MimeType.prototype[Symbol.toStringTag]",
    "window.MimeTypeArray.prototype[Symbol.toStringTag]",
    "window.Plugin.prototype[Symbol.toStringTag]",
    "window.PluginArray.prototype[Symbol.toStringTag]",
    "window.Storage.prototype[Symbol.toStringTag]",
    "window.StorageEvent.prototype[Symbol.toStringTag]",
    "window.SVGAElement.prototype[Symbol.toStringTag]",
    "window.SVGAngle.prototype[Symbol.toStringTag]",
    "window.SVGAnimateElement.prototype[Symbol.toStringTag]",
    "window.SVGAnimateMotionElement.prototype[Symbol.toStringTag]",
    "window.SVGAnimateTransformElement.prototype[Symbol.toStringTag]",
    "window.SVGAnimatedAngle.prototype[Symbol.toStringTag]",
    "window.SVGAnimatedBoolean.prototype[Symbol.toStringTag]",
    "window.SVGAnimatedEnumeration.prototype[Symbol.toStringTag]",
    "window.SVGAnimatedInteger.prototype[Symbol.toStringTag]",
    "window.SVGAnimatedLength.prototype[Symbol.toStringTag]",
    "window.SVGAnimatedLengthList.prototype[Symbol.toStringTag]",
    "window.SVGAnimatedNumber.prototype[Symbol.toStringTag]",
    "window.SVGAnimatedNumberList.prototype[Symbol.toStringTag]",
    "window.SVGAnimatedPreserveAspectRatio.prototype[Symbol.toStringTag]",
    "window.SVGAnimatedRect.prototype[Symbol.toStringTag]",
    "window.SVGAnimatedString.prototype[Symbol.toStringTag]",
    "window.SVGAnimatedTransformList.prototype[Symbol.toStringTag]",
    "window.SVGAnimationElement.prototype.onbegin",
    "window.SVGAnimationElement.prototype.onend",
    "window.SVGAnimationElement.prototype.onrepeat",
    "window.SVGAnimationElement.prototype[Symbol.toStringTag]",
    "window.SVGCircleElement.prototype[Symbol.toStringTag]",
    "window.SVGClipPathElement.prototype[Symbol.toStringTag]",
    "window.SVGComponentTransferFunctionElement.prototype[Symbol.toStringTag]",
    "window.SVGDefsElement.prototype[Symbol.toStringTag]",
    "window.SVGDescElement.prototype[Symbol.toStringTag]",
    "window.SVGElement.prototype.oncopy",
    "window.SVGElement.prototype.oncut",
    "window.SVGElement.prototype.onpaste",
    "window.SVGElement.prototype.oncancel",
    "window.SVGElement.prototype.onclose",
    "window.SVGElement.prototype.onformdata",
    "window.SVGElement.prototype.onauxclick",
    "window.SVGElement.prototype.onselectstart",
    "window.SVGElement.prototype.onselectionchange",
    "window.SVGElement.prototype.nonce",
    "window.SVGElement.prototype.autofocus",
    "window.SVGElement.prototype.onpointerrawupdate",
    "window.SVGElement.prototype[Symbol.toStringTag]",
    "window.SVGEllipseElement.prototype[Symbol.toStringTag]",
    "window.SVGFEBlendElement.prototype[Symbol.toStringTag]",
    "window.SVGFEColorMatrixElement.prototype[Symbol.toStringTag]",
    "window.SVGFEComponentTransferElement.prototype[Symbol.toStringTag]",
    "window.SVGFECompositeElement.prototype[Symbol.toStringTag]",
    "window.SVGFEConvolveMatrixElement.prototype[Symbol.toStringTag]",
    "window.SVGFEDiffuseLightingElement.prototype[Symbol.toStringTag]",
    "window.SVGFEDisplacementMapElement.prototype[Symbol.toStringTag]",
    "window.SVGFEDistantLightElement.prototype[Symbol.toStringTag]",
    "window.SVGFEDropShadowElement.prototype[Symbol.toStringTag]",
    "window.SVGFEFloodElement.prototype[Symbol.toStringTag]",
    "window.SVGFEFuncAElement.prototype[Symbol.toStringTag]",
    "window.SVGFEFuncBElement.prototype[Symbol.toStringTag]",
    "window.SVGFEFuncGElement.prototype[Symbol.toStringTag]",
    "window.SVGFEFuncRElement.prototype[Symbol.toStringTag]",
    "window.SVGFEGaussianBlurElement.prototype[Symbol.toStringTag]",
    "window.SVGFEImageElement.prototype[Symbol.toStringTag]",
    "window.SVGFEMergeElement.prototype[Symbol.toStringTag]",
    "window.SVGFEMergeNodeElement.prototype[Symbol.toStringTag]",
    "window.SVGFEMorphologyElement.prototype[Symbol.toStringTag]",
    "window.SVGFEOffsetElement.prototype[Symbol.toStringTag]",
    "window.SVGFEPointLightElement.prototype[Symbol.toStringTag]",
    "window.SVGFESpecularLightingElement.prototype.kernelUnitLengthX",
    "window.SVGFESpecularLightingElement.prototype.kernelUnitLengthY",
    "window.SVGFESpecularLightingElement.prototype[Symbol.toStringTag]",
    "window.SVGFESpotLightElement.prototype[Symbol.toStringTag]",
    "window.SVGFETileElement.prototype[Symbol.toStringTag]",
    "window.SVGFETurbulenceElement.prototype[Symbol.toStringTag]",
    "window.SVGFilterElement.prototype[Symbol.toStringTag]",
    "window.SVGForeignObjectElement.prototype[Symbol.toStringTag]",
    "window.SVGGElement.prototype[Symbol.toStringTag]",
    "window.SVGGeometryElement.prototype[Symbol.toStringTag]",
    "window.SVGGradientElement.prototype[Symbol.toStringTag]",
    "window.SVGGraphicsElement.prototype[Symbol.toStringTag]",
    "window.SVGImageElement.prototype.decoding",
    "window.SVGImageElement.prototype.decode",
    "window.SVGImageElement.prototype[Symbol.toStringTag]",
    "window.SVGLength.prototype[Symbol.toStringTag]",
    "window.SVGLengthList.prototype.length",
    "window.SVGLengthList.prototype[Symbol.toStringTag]",
    "window.SVGLengthList.prototype[Symbol.iterator]",
    "window.SVGLineElement.prototype[Symbol.toStringTag]",
    "window.SVGLinearGradientElement.prototype[Symbol.toStringTag]",
    "window.SVGMPathElement.prototype[Symbol.toStringTag]",
    "window.SVGMarkerElement.prototype[Symbol.toStringTag]",
    "window.SVGMaskElement.prototype[Symbol.toStringTag]",
    "window.SVGMatrix.prototype[Symbol.toStringTag]",
    "window.SVGMetadataElement.prototype[Symbol.toStringTag]",
    "window.SVGNumber.prototype[Symbol.toStringTag]",
    "window.SVGNumberList.prototype.length",
    "window.SVGNumberList.prototype[Symbol.toStringTag]",
    "window.SVGNumberList.prototype[Symbol.iterator]",
    "window.SVGPathElement.prototype[Symbol.toStringTag]",
    "window.SVGPatternElement.prototype[Symbol.toStringTag]",
    "window.SVGPoint.prototype[Symbol.toStringTag]",
    "window.SVGPointList.prototype.length",
    "window.SVGPointList.prototype[Symbol.toStringTag]",
    "window.SVGPointList.prototype[Symbol.iterator]",
    "window.SVGPolygonElement.prototype[Symbol.toStringTag]",
    "window.SVGPolylineElement.prototype[Symbol.toStringTag]",
    "window.SVGPreserveAspectRatio.prototype[Symbol.toStringTag]",
    "window.SVGRadialGradientElement.prototype[Symbol.toStringTag]",
    "window.SVGRect.prototype[Symbol.toStringTag]",
    "window.SVGRectElement.prototype[Symbol.toStringTag]",
    "window.SVGSVGElement.prototype[Symbol.toStringTag]",
    "window.SVGScriptElement.prototype[Symbol.toStringTag]",
    "window.SVGSetElement.prototype[Symbol.toStringTag]",
    "window.SVGStopElement.prototype[Symbol.toStringTag]",
    "window.SVGStringList.prototype.length",
    "window.SVGStringList.prototype[Symbol.toStringTag]",
    "window.SVGStringList.prototype[Symbol.iterator]",
    "window.SVGStyleElement.prototype.sheet",
    "window.SVGStyleElement.prototype[Symbol.toStringTag]",
    "window.SVGSwitchElement.prototype[Symbol.toStringTag]",
    "window.SVGSymbolElement.prototype[Symbol.toStringTag]",
    "window.SVGTSpanElement.prototype[Symbol.toStringTag]",
    "window.SVGTextContentElement.prototype[Symbol.toStringTag]",
    "window.SVGTextElement.prototype[Symbol.toStringTag]",
    "window.SVGTextPathElement.prototype[Symbol.toStringTag]",
    "window.SVGTextPositioningElement.prototype[Symbol.toStringTag]",
    "window.SVGTitleElement.prototype[Symbol.toStringTag]",
    "window.SVGTransform.prototype[Symbol.toStringTag]",
    "window.SVGTransformList.prototype.length",
    "window.SVGTransformList.prototype[Symbol.toStringTag]",
    "window.SVGTransformList.prototype[Symbol.iterator]",
    "window.SVGUnitTypes.prototype[Symbol.toStringTag]",
    "window.SVGUseElement.prototype[Symbol.toStringTag]",
    "window.SVGViewElement.prototype[Symbol.toStringTag]",
    "window.Worker.prototype[Symbol.toStringTag]",
    "window.DOMParser.prototype[Symbol.toStringTag]",
    "window.XMLHttpRequest.prototype[Symbol.toStringTag]",
    "window.XMLHttpRequestEventTarget.prototype[Symbol.toStringTag]",
    "window.XMLHttpRequestUpload.prototype[Symbol.toStringTag]",
    "window.XMLSerializer.prototype[Symbol.toStringTag]",
    "window.XPathEvaluator.prototype[Symbol.toStringTag]",
    "window.XPathExpression.prototype[Symbol.toStringTag]",
    "window.XPathResult.prototype[Symbol.toStringTag]",
    "window.XSLTProcessor.prototype[Symbol.toStringTag]",
    "window.speechSynthesis.onvoiceschanged",
    "window.openDatabase.length",
    "window.openDatabase.name",
    "window.performance.timeOrigin",
    "window.performance.memory",
    "window.console.context",
    "window.console.memory",
    "window.console[Symbol.toStringTag]",
    "window.DataView.prototype.getBigInt64",
    "window.DataView.prototype.setBigInt64",
    "window.DataView.prototype.getBigUint64",
    "window.DataView.prototype.setBigUint64",
    "window.Error.captureStackTrace",
    "window.Intl.DateTimeFormat.prototype.formatRange",
    "window.Intl.DateTimeFormat.prototype.formatRangeToParts",
    "window.Intl.v8BreakIterator",
    "window.Intl.RelativeTimeFormat",
    "window.Intl.ListFormat",
    "window.Intl.Locale",
    "window.WebAssembly.CompileError.prototype.name",
    "window.WebAssembly.CompileError.prototype.message",
    "window.WebAssembly.CompileError.stackTraceLimit",
    "window.WebAssembly.Instance.prototype[Symbol.toStringTag]",
    "window.WebAssembly.LinkError.prototype.name",
    "window.WebAssembly.LinkError.prototype.message",
    "window.WebAssembly.LinkError.stackTraceLimit",
    "window.WebAssembly.Memory.prototype.grow.prototype",
    "window.WebAssembly.Memory.prototype[Symbol.toStringTag]",
    "window.WebAssembly.Module.customSections.prototype",
    "window.WebAssembly.Module.imports.prototype",
    "window.WebAssembly.Module.exports.prototype",
    "window.WebAssembly.Module.prototype[Symbol.toStringTag]",
    "window.WebAssembly.RuntimeError.prototype.name",
    "window.WebAssembly.RuntimeError.prototype.message",
    "window.WebAssembly.RuntimeError.stackTraceLimit",
    "window.WebAssembly.Table.prototype.grow.prototype",
    "window.WebAssembly.Table.prototype.get.prototype",
    "window.WebAssembly.Table.prototype.set.prototype",
    "window.WebAssembly.Table.prototype[Symbol.toStringTag]",
    "window.WebAssembly.compile",
    "window.WebAssembly.validate",
    "window.WebAssembly.instantiate",
    "window.WebAssembly.compileStreaming",
    "window.WebAssembly.instantiateStreaming",
    "window.WebAssembly.Global",
    "window.WebAssembly[Symbol.toStringTag]",
    "window.Cache.prototype[Symbol.toStringTag]",
    "window.CacheStorage.prototype[Symbol.toStringTag]",
    "window.Credential.prototype[Symbol.toStringTag]",
    "window.CredentialsContainer.prototype[Symbol.toStringTag]",
    "window.MediaKeyMessageEvent.prototype[Symbol.toStringTag]",
    "window.MediaKeySession.prototype[Symbol.toStringTag]",
    "window.MediaKeyStatusMap.prototype[Symbol.toStringTag]",
    "window.MediaKeySystemAccess.prototype[Symbol.toStringTag]",
    "window.MediaKeys.prototype.getStatusForPolicy",
    "window.MediaKeys.prototype[Symbol.toStringTag]",
    "window.Headers.prototype[Symbol.toStringTag]",
    "window.Request.prototype.isHistoryNavigation",
    "window.Request.prototype[Symbol.toStringTag]",
    "window.Response.prototype[Symbol.toStringTag]",
    "window.Gamepad.prototype.vibrationActuator",
    "window.Gamepad.prototype[Symbol.toStringTag]",
    "window.GamepadButton.prototype.touched",
    "window.GamepadButton.prototype[Symbol.toStringTag]",
    "window.GamepadEvent.prototype[Symbol.toStringTag]",
    "window.MediaCapabilities.prototype[Symbol.toStringTag]",
    "window.MediaSource.prototype[Symbol.toStringTag]",
    "window.RTCCertificate.prototype[Symbol.toStringTag]",
    "window.RTCDataChannel.prototype.reliable",
    "window.RTCDataChannel.prototype[Symbol.toStringTag]",
    "window.RTCDataChannelEvent.prototype[Symbol.toStringTag]",
    "window.RTCIceCandidate.prototype.foundation",
    "window.RTCIceCandidate.prototype.component",
    "window.RTCIceCandidate.prototype.priority",
    "window.RTCIceCandidate.prototype.address",
    "window.RTCIceCandidate.prototype.protocol",
    "window.RTCIceCandidate.prototype.port",
    "window.RTCIceCandidate.prototype.type",
    "window.RTCIceCandidate.prototype.tcpType",
    "window.RTCIceCandidate.prototype.relatedAddress",
    "window.RTCIceCandidate.prototype.relatedPort",
    "window.RTCIceCandidate.prototype.usernameFragment",
    "window.RTCIceCandidate.prototype[Symbol.toStringTag]",
    "window.RTCIceTransport.prototype.role",
    "window.RTCIceTransport.prototype.ongatheringstatechange",
    "window.RTCIceTransport.prototype.onselectedcandidatepairchange",
    "window.RTCIceTransport.prototype.onstatechange",
    "window.RTCIceTransport.prototype.getLocalCandidates",
    "window.RTCIceTransport.prototype.getRemoteCandidates",
    "window.RTCIceTransport.prototype.getSelectedCandidatePair",
    "window.RTCIceTransport.prototype.getLocalParameters",
    "window.RTCIceTransport.prototype.getRemoteParameters",
    "window.RTCIceTransport.prototype[Symbol.toStringTag]",
    "window.RTCPeerConnectionIceEvent.prototype[Symbol.toStringTag]",
    "window.RTCRtpReceiver.prototype.playoutDelayHint",
    "window.RTCRtpReceiver.prototype.rtcpTransport",
    "window.RTCRtpReceiver.prototype.transport",
    "window.RTCRtpReceiver.prototype[Symbol.toStringTag]",
    "window.RTCRtpSender.prototype.dtmf",
    "window.RTCRtpSender.prototype.setStreams",
    "window.RTCRtpSender.prototype.rtcpTransport",
    "window.RTCRtpSender.prototype.transport",
    "window.RTCRtpSender.prototype[Symbol.toStringTag]",
    "window.RTCRtpTransceiver.prototype.setCodecPreferences",
    "window.RTCRtpTransceiver.prototype[Symbol.toStringTag]",
    "window.RTCSessionDescription.prototype[Symbol.toStringTag]",
    "window.RTCStatsReport.prototype[Symbol.toStringTag]",
    "window.RTCTrackEvent.prototype[Symbol.toStringTag]",
    "window.PaymentAddress.prototype[Symbol.toStringTag]",
    "window.PaymentMethodChangeEvent.prototype[Symbol.toStringTag]",
    "window.PaymentRequest.prototype.hasEnrolledInstrument",
    "window.PaymentRequest.prototype[Symbol.toStringTag]",
    "window.PaymentRequestUpdateEvent.prototype[Symbol.toStringTag]",
    "window.PaymentResponse.prototype[Symbol.toStringTag]",
    "window.AuthenticatorAssertionResponse.prototype[Symbol.toStringTag]",
    "window.AuthenticatorAttestationResponse.prototype.getTransports",
    "window.AuthenticatorAttestationResponse.prototype[Symbol.toStringTag]",
    "window.AuthenticatorResponse.prototype[Symbol.toStringTag]",
    "window.PublicKeyCredential.prototype[Symbol.toStringTag]",
    "window.WebSocket.prototype[Symbol.toStringTag]",
    "window.CustomElementRegistry.prototype[Symbol.toStringTag]",
    "window.DataTransferItem.prototype[Symbol.toStringTag]",
    "window.DataTransferItemList.prototype[Symbol.toStringTag]",
    "window.InputEvent.prototype.isComposing",
    "window.InputEvent.prototype[Symbol.toStringTag]",
    "window.PointerEvent.prototype.getCoalescedEvents",
    "window.PointerEvent.prototype.getPredictedEvents",
    "window.PointerEvent.prototype[Symbol.toStringTag]",
    "window.ShadowRoot.prototype.delegatesFocus",
    "window.ShadowRoot.prototype.fullscreenElement",
    "window.ShadowRoot.prototype.adoptedStyleSheets",
    "window.ShadowRoot.prototype.getSelection",
    "window.ShadowRoot.prototype.pictureInPictureElement",
    "window.ShadowRoot.prototype[Symbol.toStringTag]",
    "window.StaticRange.prototype[Symbol.toStringTag]",
    "window.HTMLDataListElement.prototype[Symbol.toStringTag]",
    "window.HTMLSlotElement.prototype[Symbol.toStringTag]",
    "window.MediaEncryptedEvent.prototype[Symbol.toStringTag]",
    "window.IntersectionObserver.prototype.delay",
    "window.IntersectionObserver.prototype.trackVisibility",
    "window.IntersectionObserver.prototype[Symbol.toStringTag]",
    "window.IntersectionObserverEntry.prototype.isVisible",
    "window.IntersectionObserverEntry.prototype[Symbol.toStringTag]",
    "window.PerformanceEntry.prototype[Symbol.toStringTag]",
    "window.PerformanceMark.prototype.detail",
    "window.PerformanceMark.prototype[Symbol.toStringTag]",
    "window.PerformanceMeasure.prototype.detail",
    "window.PerformanceMeasure.prototype[Symbol.toStringTag]",
    "window.PerformanceObserver.prototype.takeRecords",
    "window.PerformanceObserver.prototype[Symbol.toStringTag]",
    "window.PerformanceObserver.supportedEntryTypes.3",
    "window.PerformanceObserver.supportedEntryTypes.4",
    "window.PerformanceObserver.supportedEntryTypes.5",
    "window.PerformanceObserver.supportedEntryTypes.6",
    "window.PerformanceObserver.supportedEntryTypes.7",
    "window.PerformanceObserver.supportedEntryTypes.8",
    "window.PerformanceObserver.supportedEntryTypes.9",
    "window.PerformanceObserverEntryList.prototype[Symbol.toStringTag]",
    "window.PerformanceResourceTiming.prototype.transferSize",
    "window.PerformanceResourceTiming.prototype.encodedBodySize",
    "window.PerformanceResourceTiming.prototype.decodedBodySize",
    "window.PerformanceResourceTiming.prototype.serverTiming",
    "window.PerformanceResourceTiming.prototype[Symbol.toStringTag]",
    "window.VisualViewport.prototype[Symbol.toStringTag]",
    "window.ServiceWorker.prototype[Symbol.toStringTag]",
    "window.ServiceWorkerContainer.prototype[Symbol.toStringTag]",
    "window.ServiceWorkerRegistration.prototype.navigationPreload",
    "window.ServiceWorkerRegistration.prototype.sync",
    "window.ServiceWorkerRegistration.prototype.backgroundFetch",
    "window.ServiceWorkerRegistration.prototype.paymentManager",
    "window.ServiceWorkerRegistration.prototype.periodicSync",
    "window.ServiceWorkerRegistration.prototype.pushManager",
    "window.ServiceWorkerRegistration.prototype.showNotification",
    "window.ServiceWorkerRegistration.prototype.getNotifications",
    "window.ServiceWorkerRegistration.prototype[Symbol.toStringTag]",
    "window.BigUint64Array",
    "window.BigInt64Array",
    "window.BigInt",
    "window.webkitRTCPeerConnection",
    "window.webkitMediaStream",
    "window.WebGLVertexArrayObject",
    "window.WebGL2RenderingContext",
    "window.TextEncoderStream",
    "window.TextDecoderStream",
    "window.SyncManager",
    "window.StereoPannerNode",
    "window.ScreenOrientation",
    "window.RTCPeerConnectionIceErrorEvent",
    "window.RTCErrorEvent",
    "window.RTCError",
    "window.RTCDTMFToneChangeEvent",
    "window.RTCDTMFSender",
    "window.PhotoCapabilities",
    "window.PannerNode",
    "window.OfflineAudioContext",
    "window.NetworkInformation",
    "window.MediaStreamEvent",
    "window.MediaSettingsRange",
    "window.MediaRecorder",
    "window.InputDeviceInfo",
    "window.ImageCapture",
    "window.ImageBitmapRenderingContext",
    "window.IIRFilterNode",
    "window.GeolocationPositionError",
    "window.GeolocationPosition",
    "window.GeolocationCoordinates",
    "window.Geolocation",
    "window.GamepadHapticActuator",
    "window.DecompressionStream",
    "window.DOMError",
    "window.ConstantSourceNode",
    "window.CompressionStream",
    "window.BroadcastChannel",
    "window.BlobEvent",
    "window.BeforeInstallPromptEvent",
    "window.BatteryManager",
    "window.BaseAudioContext",
    "window.AudioWorkletNode",
    "window.AudioScheduledSourceNode",
    "window.AudioParamMap",
    "window.AudioContext",
    "window.WritableStreamDefaultWriter",
    "window.WritableStream",
    "window.TransformStream",
    "window.TouchList",
    "window.TouchEvent",
    "window.Touch",
    "window.TaskAttributionTiming",
    "window.StylePropertyMapReadOnly",
    "window.StylePropertyMap",
    "window.SVGDiscardElement",
    "window.ResizeObserverEntry",
    "window.ResizeObserver",
    "window.ReportingObserver",
    "window.ReadableStreamDefaultReader",
    "window.PerformanceServerTiming",
    "window.PerformancePaintTiming",
    "window.PerformanceNavigationTiming",
    "window.PerformanceLongTaskTiming",
    "window.PerformanceEventTiming",
    "window.PerformanceElementTiming",
    "window.MediaQueryListEvent",
    "window.MediaQueryList",
    "window.LayoutShift",
    "window.LargestContentfulPaint",
    "window.KeyframeEffect",
    "window.InputDeviceCapabilities",
    "window.ImageBitmap",
    "window.IdleDeadline",
    "window.HTMLShadowElement",
    "window.HTMLDialogElement",
    "window.HTMLContentElement",
    "window.FormDataEvent",
    "window.FontFaceSetLoadEvent",
    "window.External",
    "window.ElementInternals",
    "window.DragEvent",
    "window.CSSVariableReferenceValue",
    "window.CSSUnparsedValue",
    "window.CSSUnitValue",
    "window.CSSTranslate",
    "window.CSSTransformValue",
    "window.CSSTransformComponent",
    "window.CSSStyleValue",
    "window.CSSSkewY",
    "window.CSSSkewX",
    "window.CSSSkew",
    "window.CSSScale",
    "window.CSSRotate",
    "window.CSSPositionValue",
    "window.CSSPerspective",
    "window.CSSNumericValue",
    "window.CSSNumericArray",
    "window.CSSMatrixComponent",
    "window.CSSMathValue",
    "window.CSSMathSum",
    "window.CSSMathProduct",
    "window.CSSMathNegate",
    "window.CSSMathMin",
    "window.CSSMathMax",
    "window.CSSMathInvert",
    "window.CSSKeywordValue",
    "window.CSSImageValue",
    "window.CSSGroupingRule",
    "window.CSSConditionRule",
    "window.AnimationEffect",
    "window.Animation",
    "window.external",
    "window.oncancel",
    "window.onclose",
    "window.onformdata",
    "window.onauxclick",
    "window.onselectstart",
    "window.onselectionchange",
    "window.onmessageerror",
    "window.requestIdleCallback",
    "window.cancelIdleCallback",
    "window.createImageBitmap",
    "window.onappinstalled",
    "window.onbeforeinstallprompt",
    "window.webkitStorageInfo",
    "window.SharedArrayBuffer",
    "window.Atomics",
    "window.FeaturePolicy",
    "window.SharedWorker",
    "window.OffscreenCanvas",
    "window.UserActivation",
    "window.onpointerrawupdate",
    "window.ClipboardItem",
    "window.BackgroundFetchManager",
    "window.BackgroundFetchRecord",
    "window.BackgroundFetchRegistration",
    "window.MediaMetadata",
    "window.MediaSession",
    "window.PaymentInstruments",
    "window.PaymentManager",
    "window.PeriodicSyncManager",
    "window.Permissions",
    "window.PermissionStatus",
    "window.EnterPictureInPictureEvent",
    "window.PictureInPictureWindow",
    "window.PushManager",
    "window.PushSubscription",
    "window.PushSubscriptionOptions",
    "window.RTCDtlsTransport",
    "window.RTCSctpTransport",
    "window.RemotePlayback",
    "window.webkitSpeechGrammar",
    "window.webkitSpeechGrammarList",
    "window.webkitSpeechRecognition",
    "window.webkitSpeechRecognitionError",
    "window.webkitSpeechRecognitionEvent",
    "window.SpeechSynthesisErrorEvent",
    "window.OffscreenCanvasRenderingContext2D",
    "window.VideoPlaybackQuality",
    "window.webkitRequestFileSystem",
    "window.webkitResolveLocalFileSystemURL",
    "window.Worklet",
    "window.ApplicationCacheErrorEvent",
    "window.ondevicemotion",
    "window.ondeviceorientation",
    "window.ondeviceorientationabsolute",
    "window.AbsoluteOrientationSensor",
    "window.Accelerometer",
    "window.AudioWorklet",
    "window.Clipboard",
    "window.DeviceMotionEvent",
    "window.DeviceMotionEventAcceleration",
    "window.DeviceMotionEventRotationRate",
    "window.DeviceOrientationEvent",
    "window.FederatedCredential",
    "window.Gyroscope",
    "window.Keyboard",
    "window.KeyboardLayoutMap",
    "window.LinearAccelerationSensor",
    "window.Lock",
    "window.LockManager",
    "window.MIDIAccess",
    "window.MIDIConnectionEvent",
    "window.MIDIInput",
    "window.MIDIInputMap",
    "window.MIDIMessageEvent",
    "window.MIDIOutput",
    "window.MIDIOutputMap",
    "window.MIDIPort",
    "window.NavigationPreloadManager",
    "window.OrientationSensor",
    "window.PasswordCredential",
    "window.RelativeOrientationSensor",
    "window.Sensor",
    "window.SensorErrorEvent",
    "window.StorageManager",
    "window.Presentation",
    "window.PresentationAvailability",
    "window.PresentationConnection",
    "window.PresentationConnectionAvailableEvent",
    "window.PresentationConnectionCloseEvent",
    "window.PresentationConnectionList",
    "window.PresentationReceiver",
    "window.PresentationRequest",
    "window.USB",
    "window.USBAlternateInterface",
    "window.USBConfiguration",
    "window.USBConnectionEvent",
    "window.USBDevice",
    "window.USBEndpoint",
    "window.USBInterface",
    "window.USBInTransferResult",
    "window.USBIsochronousInTransferPacket",
    "window.USBIsochronousInTransferResult",
    "window.USBIsochronousOutTransferPacket",
    "window.USBIsochronousOutTransferResult",
    "window.USBOutTransferResult",
    "window.XR",
    "window.XRBoundedReferenceSpace",
    "window.XRFrame",
    "window.XRInputSource",
    "window.XRInputSourceArray",
    "window.XRInputSourceEvent",
    "window.XRInputSourcesChangeEvent",
    "window.XRPose",
    "window.XRReferenceSpace",
    "window.XRReferenceSpaceEvent",
    "window.XRRenderState",
    "window.XRRigidTransform",
    "window.XRSession",
    "window.XRSessionEvent",
    "window.XRSpace",
    "window.XRView",
    "window.XRViewerPose",
    "window.XRViewport",
    "window.XRWebGLLayer",
    "window.TEMPORARY",
    "window.PERSISTENT",
    "detached.WindowProperties.prototype",
    "detached.MemoryInfo.prototype",
    "detached.FontFaceSet.prototype",
    "detached.DeprecatedStorageQuota.prototype",
    "detached.StyleMedia.prototype",
    "detached.DeprecatedStorageInfo.prototype",
    "detached.SpeechSynthesis.prototype"
  ],
  "additions": [
    {
      "path": "window.document",
      "propertyName": "origin",
      "prevProperty": "documentURI",
      "property": {
        "_type": "string",
        "_value": "https://<host>"
      }
    },
    {
      "path": "window.document.documentElement",
      "propertyName": "manifest",
      "prevProperty": "version",
      "property": {
        "_type": "string",
        "_value": ""
      }
    },
    {
      "path": "window.document.documentElement",
      "propertyName": "webkitdropzone",
      "prevProperty": "outerText",
      "property": {
        "_type": "string",
        "_value": ""
      }
    },
    {
      "path": "window.document.documentElement.style",
      "propertyName": "alt",
      "prevProperty": "all",
      "property": {
        "_type": "string",
        "_flags": "cew",
        "_value": ""
      }
    },
    {
      "path": "window.document.documentElement.style",
      "propertyName": "appleColorFilter",
      "prevProperty": "animationTimingFunction",
      "property": {}
    },
    {
      "path": "window.document.documentElement.style",
      "propertyName": "applePayButtonStyle",
      "prevProperty": "appleColorFilter",
      "property": {}
    },
    {
      "path": "window.document.documentElement.style",
      "propertyName": "applePayButtonType",
      "prevProperty": "applePayButtonStyle",
      "property": {}
    },
    {
      "path": "window.document.documentElement.style",
      "propertyName": "appleTrailingWord",
      "prevProperty": "applePayButtonType",
      "property": {}
    },
    {
      "path": "window.document.documentElement.style",
      "propertyName": "colorProfile",
      "prevProperty": "colorInterpolationFilters",
      "property": {
        "_type": "string",
        "_flags": "cew",
        "_value": ""
      }
    },
    {
      "path": "window.document.documentElement.style",
      "propertyName": "colorScheme",
      "prevProperty": "colorRendering",
      "property": {
        "_type": "string",
        "_flags": "cew",
        "_value": ""
      }
    },
    {
      "path": "window.document.documentElement.style",
      "propertyName": "enableBackground",
      "prevProperty": "emptyCells",
      "property": {
        "_type": "string",
        "_flags": "cew",
        "_value": ""
      }
    },
    {
      "path": "window.document.documentElement.style",
      "propertyName": "fontSynthesis",
      "prevProperty": "fontStyle",
      "property": {
        "_type": "string",
        "_flags": "cew",
        "_value": ""
      }
    },
    {
      "path": "window.document.documentElement.style",
      "propertyName": "fontVariantAlternates",
      "prevProperty": "fontVariant",
      "property": {
        "_type": "string",
        "_flags": "cew",
        "_value": ""
      }
    },
    {
      "path": "window.document.documentElement.style",
      "propertyName": "fontVariantPosition",
      "prevProperty": "fontVariantNumeric",
      "property": {
        "_type": "string",
        "_flags": "cew",
        "_value": ""
      }
    },
    {
      "path": "window.document.documentElement.style",
      "propertyName": "glyphOrientationHorizontal",
      "prevProperty": "gap",
      "property": {
        "_type": "string",
        "_flags": "cew",
        "_value": ""
      }
    },
    {
      "path": "window.document.documentElement.style",
      "propertyName": "glyphOrientationVertical",
      "prevProperty": "glyphOrientationHorizontal",
      "property": {
        "_type": "string",
        "_flags": "cew",
        "_value": ""
      }
    },
    {
      "path": "window.document.documentElement.style",
      "propertyName": "hangingPunctuation",
      "prevProperty": "gridTemplateRows",
      "property": {
        "_type": "string",
        "_flags": "cew",
        "_value": ""
      }
    },
    {
      "path": "window.document.documentElement.style",
      "propertyName": "internalTextAutosizingStatus",
      "prevProperty": "inlineSize",
      "property": {}
    },
    {
      "path": "window.document.documentElement.style",
      "propertyName": "kerning",
      "prevProperty": "justifySelf",
      "property": {
        "_type": "string",
        "_flags": "cew",
        "_value": ""
      }
    },
    {
      "path": "window.document.documentElement.style",
      "propertyName": "perspectiveOriginX",
      "prevProperty": "perspectiveOrigin",
      "property": {
        "_type": "string",
        "_flags": "cew",
        "_value": ""
      }
    },
    {
      "path": "window.document.documentElement.style",
      "propertyName": "perspectiveOriginY",
      "prevProperty": "perspectiveOriginX",
      "property": {
        "_type": "string",
        "_flags": "cew",
        "_value": ""
      }
    },
    {
      "path": "window.document.documentElement.style",
      "propertyName": "scrollSnapMargin",
      "prevProperty": "scrollSnapAlign",
      "property": {
        "_type": "string",
        "_flags": "cew",
        "_value": ""
      }
    },
    {
      "path": "window.document.documentElement.style",
      "propertyName": "scrollSnapMarginBottom",
      "prevProperty": "scrollSnapMargin",
      "property": {
        "_type": "string",
        "_flags": "cew",
        "_value": ""
      }
    },
    {
      "path": "window.document.documentElement.style",
      "propertyName": "scrollSnapMarginLeft",
      "prevProperty": "scrollSnapMarginBottom",
      "property": {
        "_type": "string",
        "_flags": "cew",
        "_value": ""
      }
    },
    {
      "path": "window.document.documentElement.style",
      "propertyName": "scrollSnapMarginRight",
      "prevProperty": "scrollSnapMarginLeft",
      "property": {
        "_type": "string",
        "_flags": "cew",
        "_value": ""
      }
    },
    {
      "path": "window.document.documentElement.style",
      "propertyName": "scrollSnapMarginTop",
      "prevProperty": "scrollSnapMarginRight",
      "property": {
        "_type": "string",
        "_flags": "cew",
        "_value": ""
      }
    },
    {
      "path": "window.document.documentElement.style",
      "propertyName": "speakAs",
      "prevProperty": "size",
      "property": {
        "_type": "string",
        "_flags": "cew",
        "_value": ""
      }
    },
    {
      "path": "window.document.documentElement.style",
      "propertyName": "strokeColor",
      "prevProperty": "stroke",
      "property": {
        "_type": "string",
        "_flags": "cew",
        "_value": ""
      }
    },
    {
      "path": "window.document.documentElement.style",
      "propertyName": "textDecorationSkip",
      "prevProperty": "textDecorationLine",
      "property": {
        "_type": "string",
        "_flags": "cew",
        "_value": ""
      }
    },
    {
      "path": "window.document.documentElement.style",
      "propertyName": "textDecorationThickness",
      "prevProperty": "textDecorationStyle",
      "property": {
        "_type": "string",
        "_flags": "cew",
        "_value": ""
      }
    },
    {
      "path": "window.document.documentElement.style",
      "propertyName": "textUnderlineOffset",
      "prevProperty": "textTransform",
      "property": {
        "_type": "string",
        "_flags": "cew",
        "_value": ""
      }
    },
    {
      "path": "window.document.documentElement.style",
      "propertyName": "transformOriginX",
      "prevProperty": "transformOrigin",
      "property": {
        "_type": "string",
        "_flags": "cew",
        "_value": ""
      }
    },
    {
      "path": "window.document.documentElement.style",
      "propertyName": "transformOriginY",
      "prevProperty": "transformOriginX",
      "property": {
        "_type": "string",
        "_flags": "cew",
        "_value": ""
      }
    },
    {
      "path": "window.document.documentElement.style",
      "propertyName": "transformOriginZ",
      "prevProperty": "transformOriginY",
      "property": {
        "_type": "string",
        "_flags": "cew",
        "_value": ""
      }
    },
    {
      "path": "window.document.documentElement.style",
      "propertyName": "webkitAspectRatio",
      "prevProperty": "webkitAppearance",
      "property": {
        "_type": "string",
        "_flags": "cew",
        "_value": ""
      }
    },
    {
      "path": "window.document.documentElement.style",
      "propertyName": "webkitBackdropFilter",
      "prevProperty": "webkitAspectRatio",
      "property": {
        "_type": "string",
        "_flags": "cew",
        "_value": ""
      }
    },
    {
      "path": "window.document.documentElement.style",
      "propertyName": "webkitBackgroundComposite",
      "prevProperty": "webkitBackgroundClip",
      "property": {
        "_type": "string",
        "_flags": "cew",
        "_value": ""
      }
    },
    {
      "path": "window.document.documentElement.style",
      "propertyName": "webkitBorderFit",
      "prevProperty": "webkitBackgroundSize",
      "property": {
        "_type": "string",
        "_flags": "cew",
        "_value": ""
      }
    },
    {
      "path": "window.document.documentElement.style",
      "propertyName": "webkitBoxFlexGroup",
      "prevProperty": "webkitBoxFlex",
      "property": {
        "_type": "string",
        "_flags": "cew",
        "_value": ""
      }
    },
    {
      "path": "window.document.documentElement.style",
      "propertyName": "webkitBoxLines",
      "prevProperty": "webkitBoxFlexGroup",
      "property": {
        "_type": "string",
        "_flags": "cew",
        "_value": ""
      }
    },
    {
      "path": "window.document.documentElement.style",
      "propertyName": "webkitColumnAxis",
      "prevProperty": "webkitClipPath",
      "property": {
        "_type": "string",
        "_flags": "cew",
        "_value": ""
      }
    },
    {
      "path": "window.document.documentElement.style",
      "propertyName": "webkitColumnProgression",
      "prevProperty": "webkitColumnBreakInside",
      "property": {
        "_type": "string",
        "_flags": "cew",
        "_value": ""
      }
    },
    {
      "path": "window.document.documentElement.style",
      "propertyName": "webkitCursorVisibility",
      "prevProperty": "webkitColumnProgression",
      "property": {
        "_type": "string",
        "_flags": "cew",
        "_value": ""
      }
    },
    {
      "path": "window.document.documentElement.style",
      "propertyName": "webkitFontKerning",
      "prevProperty": "webkitCursorVisibility",
      "property": {
        "_type": "string",
        "_flags": "cew",
        "_value": ""
      }
    },
    {
      "path": "window.document.documentElement.style",
      "propertyName": "webkitHyphenateLimitAfter",
      "prevProperty": "webkitHyphenateCharacter",
      "property": {
        "_type": "string",
        "_flags": "cew",
        "_value": ""
      }
    },
    {
      "path": "window.document.documentElement.style",
      "propertyName": "webkitHyphenateLimitBefore",
      "prevProperty": "webkitHyphenateLimitAfter",
      "property": {
        "_type": "string",
        "_flags": "cew",
        "_value": ""
      }
    },
    {
      "path": "window.document.documentElement.style",
      "propertyName": "webkitHyphenateLimitLines",
      "prevProperty": "webkitHyphenateLimitBefore",
      "property": {
        "_type": "string",
        "_flags": "cew",
        "_value": ""
      }
    },
    {
      "path": "window.document.documentElement.style",
      "propertyName": "webkitHyphens",
      "prevProperty": "webkitHyphenateLimitLines",
      "property": {
        "_type": "string",
        "_flags": "cew",
        "_value": ""
      }
    },
    {
      "path": "window.document.documentElement.style",
      "propertyName": "webkitInitialLetter",
      "prevProperty": "webkitHyphens",
      "property": {
        "_type": "string",
        "_flags": "cew",
        "_value": ""
      }
    },
    {
      "path": "window.document.documentElement.style",
      "propertyName": "webkitLineAlign",
      "prevProperty": "webkitInitialLetter",
      "property": {
        "_type": "string",
        "_flags": "cew",
        "_value": ""
      }
    },
    {
      "path": "window.document.documentElement.style",
      "propertyName": "webkitLineBoxContain",
      "prevProperty": "webkitLineAlign",
      "property": {
        "_type": "string",
        "_flags": "cew",
        "_value": ""
      }
    },
    {
      "path": "window.document.documentElement.style",
      "propertyName": "webkitLineGrid",
      "prevProperty": "webkitLineClamp",
      "property": {
        "_type": "string",
        "_flags": "cew",
        "_value": ""
      }
    },
    {
      "path": "window.document.documentElement.style",
      "propertyName": "webkitLineSnap",
      "prevProperty": "webkitLineGrid",
      "property": {
        "_type": "string",
        "_flags": "cew",
        "_value": ""
      }
    },
    {
      "path": "window.document.documentElement.style",
      "propertyName": "webkitMarquee",
      "prevProperty": "webkitMarginTopCollapse",
      "property": {
        "_type": "string",
        "_flags": "cew",
        "_value": ""
      }
    },
    {
      "path": "window.document.documentElement.style",
      "propertyName": "webkitMarqueeDirection",
      "prevProperty": "webkitMarquee",
      "property": {
        "_type": "string",
        "_flags": "cew",
        "_value": ""
      }
    },
    {
      "path": "window.document.documentElement.style",
      "propertyName": "webkitMarqueeIncrement",
      "prevProperty": "webkitMarqueeDirection",
      "property": {
        "_type": "string",
        "_flags": "cew",
        "_value": ""
      }
    },
    {
      "path": "window.document.documentElement.style",
      "propertyName": "webkitMarqueeRepetition",
      "prevProperty": "webkitMarqueeIncrement",
      "property": {
        "_type": "string",
        "_flags": "cew",
        "_value": ""
      }
    },
    {
      "path": "window.document.documentElement.style",
      "propertyName": "webkitMarqueeSpeed",
      "prevProperty": "webkitMarqueeRepetition",
      "property": {
        "_type": "string",
        "_flags": "cew",
        "_value": ""
      }
    },
    {
      "path": "window.document.documentElement.style",
      "propertyName": "webkitMarqueeStyle",
      "prevProperty": "webkitMarqueeSpeed",
      "property": {
        "_type": "string",
        "_flags": "cew",
        "_value": ""
      }
    },
    {
      "path": "window.document.documentElement.style",
      "propertyName": "webkitMaskSourceType",
      "prevProperty": "webkitMaskSize",
      "property": {
        "_type": "string",
        "_flags": "cew",
        "_value": ""
      }
    },
    {
      "path": "window.document.documentElement.style",
      "propertyName": "webkitNbspMode",
      "prevProperty": "webkitMaskSourceType",
      "property": {
        "_type": "string",
        "_flags": "cew",
        "_value": ""
      }
    },
    {
      "path": "window.document.documentElement.style",
      "propertyName": "webkitTextDecoration",
      "prevProperty": "webkitTextCombine",
      "property": {
        "_type": "string",
        "_flags": "cew",
        "_value": ""
      }
    },
    {
      "path": "window.document.documentElement.style",
      "propertyName": "webkitTextZoom",
      "prevProperty": "webkitTextStrokeWidth",
      "property": {
        "_type": "string",
        "_flags": "cew",
        "_value": ""
      }
    },
    {
      "path": "window.document.documentElement",
      "propertyName": "onrejectionhandled",
      "prevProperty": "onratechange",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.document.documentElement",
      "propertyName": "onunhandledrejection",
      "prevProperty": "ontoggle",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.document.documentElement",
      "propertyName": "ontransitionrun",
      "prevProperty": "ontransitionend",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.document.documentElement",
      "propertyName": "ontransitionstart",
      "prevProperty": "ontransitionrun",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.document.documentElement",
      "propertyName": "ontransitioncancel",
      "prevProperty": "ontransitionstart",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.document.documentElement",
      "propertyName": "onanimationcancel",
      "prevProperty": "onanimationstart",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.document.documentElement",
      "propertyName": "role",
      "prevProperty": "outerHTML",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.document.documentElement",
      "propertyName": "ariaAtomic",
      "prevProperty": "role",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.document.documentElement",
      "propertyName": "ariaAutoComplete",
      "prevProperty": "ariaAtomic",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.document.documentElement",
      "propertyName": "ariaBusy",
      "prevProperty": "ariaAutoComplete",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.document.documentElement",
      "propertyName": "ariaChecked",
      "prevProperty": "ariaBusy",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.document.documentElement",
      "propertyName": "ariaColCount",
      "prevProperty": "ariaChecked",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.document.documentElement",
      "propertyName": "ariaColIndex",
      "prevProperty": "ariaColCount",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.document.documentElement",
      "propertyName": "ariaColSpan",
      "prevProperty": "ariaColIndex",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.document.documentElement",
      "propertyName": "ariaCurrent",
      "prevProperty": "ariaColSpan",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.document.documentElement",
      "propertyName": "ariaDisabled",
      "prevProperty": "ariaCurrent",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.document.documentElement",
      "propertyName": "ariaExpanded",
      "prevProperty": "ariaDisabled",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.document.documentElement",
      "propertyName": "ariaHasPopup",
      "prevProperty": "ariaExpanded",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.document.documentElement",
      "propertyName": "ariaHidden",
      "prevProperty": "ariaHasPopup",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.document.documentElement",
      "propertyName": "ariaInvalid",
      "prevProperty": "ariaHidden",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.document.documentElement",
      "propertyName": "ariaKeyShortcuts",
      "prevProperty": "ariaInvalid",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.document.documentElement",
      "propertyName": "ariaLabel",
      "prevProperty": "ariaKeyShortcuts",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.document.documentElement",
      "propertyName": "ariaLevel",
      "prevProperty": "ariaLabel",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.document.documentElement",
      "propertyName": "ariaLive",
      "prevProperty": "ariaLevel",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.document.documentElement",
      "propertyName": "ariaModal",
      "prevProperty": "ariaLive",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.document.documentElement",
      "propertyName": "ariaMultiLine",
      "prevProperty": "ariaModal",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.document.documentElement",
      "propertyName": "ariaMultiSelectable",
      "prevProperty": "ariaMultiLine",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.document.documentElement",
      "propertyName": "ariaOrientation",
      "prevProperty": "ariaMultiSelectable",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.document.documentElement",
      "propertyName": "ariaPlaceholder",
      "prevProperty": "ariaOrientation",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.document.documentElement",
      "propertyName": "ariaPosInSet",
      "prevProperty": "ariaPlaceholder",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.document.documentElement",
      "propertyName": "ariaPressed",
      "prevProperty": "ariaPosInSet",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.document.documentElement",
      "propertyName": "ariaReadOnly",
      "prevProperty": "ariaPressed",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.document.documentElement",
      "propertyName": "ariaRelevant",
      "prevProperty": "ariaReadOnly",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.document.documentElement",
      "propertyName": "ariaRequired",
      "prevProperty": "ariaRelevant",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.document.documentElement",
      "propertyName": "ariaRoleDescription",
      "prevProperty": "ariaRequired",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.document.documentElement",
      "propertyName": "ariaRowCount",
      "prevProperty": "ariaRoleDescription",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.document.documentElement",
      "propertyName": "ariaRowIndex",
      "prevProperty": "ariaRowCount",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.document.documentElement",
      "propertyName": "ariaRowSpan",
      "prevProperty": "ariaRowIndex",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.document.documentElement",
      "propertyName": "ariaSelected",
      "prevProperty": "ariaRowSpan",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.document.documentElement",
      "propertyName": "ariaSetSize",
      "prevProperty": "ariaSelected",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.document.documentElement",
      "propertyName": "ariaSort",
      "prevProperty": "ariaSetSize",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.document.documentElement",
      "propertyName": "ariaValueMax",
      "prevProperty": "ariaSort",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.document.documentElement",
      "propertyName": "ariaValueMin",
      "prevProperty": "ariaValueMax",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.document.documentElement",
      "propertyName": "ariaValueNow",
      "prevProperty": "ariaValueMin",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.document.documentElement",
      "propertyName": "ariaValueText",
      "prevProperty": "ariaValueNow",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.document",
      "propertyName": "currentScript",
      "prevProperty": "dir",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.document",
      "propertyName": "webkitFullScreenKeyboardInputAllowed",
      "prevProperty": "webkitIsFullScreen",
      "property": {
        "_type": "boolean",
        "_value": false
      }
    },
    {
      "path": "window.document",
      "propertyName": "onrejectionhandled",
      "prevProperty": "onratechange",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.document",
      "propertyName": "onunhandledrejection",
      "prevProperty": "ontoggle",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.document",
      "propertyName": "ontransitionrun",
      "prevProperty": "ontransitionend",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.document",
      "propertyName": "ontransitionstart",
      "prevProperty": "ontransitionrun",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.document",
      "propertyName": "ontransitioncancel",
      "prevProperty": "ontransitionstart",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.document",
      "propertyName": "onanimationcancel",
      "prevProperty": "onanimationstart",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.closed",
      "propertyName": "_get",
      "prevProperty": "_value",
      "property": "function closed() {\n    [native code]\n}"
    },
    {
      "path": "window.length",
      "propertyName": "_get",
      "prevProperty": "_value",
      "property": "function length() {\n    [native code]\n}"
    },
    {
      "path": "window.opener",
      "propertyName": "_get",
      "prevProperty": "_value",
      "property": "function opener() {\n    [native code]\n}"
    },
    {
      "path": "window.closed",
      "propertyName": "_getToStringToString",
      "prevProperty": "_get",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.length",
      "propertyName": "_set",
      "prevProperty": "_get",
      "property": "function length() {\n    [native code]\n}"
    },
    {
      "path": "window.opener",
      "propertyName": "_set",
      "prevProperty": "_get",
      "property": "function opener() {\n    [native code]\n}"
    },
    {
      "path": "window.length",
      "propertyName": "_getToStringToString",
      "prevProperty": "_set",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.opener",
      "propertyName": "_getToStringToString",
      "prevProperty": "_set",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.length",
      "propertyName": "_setToStringToString",
      "prevProperty": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.opener",
      "propertyName": "_setToStringToString",
      "prevProperty": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.navigator.geolocation",
      "propertyName": "getCurrentPosition",
      "prevProperty": "_protos",
      "property": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "getCurrentPosition"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "_func": "function getCurrentPosition() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.navigator.geolocation",
      "propertyName": "watchPosition",
      "prevProperty": "getCurrentPosition",
      "property": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "watchPosition"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "_func": "function watchPosition() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.navigator.geolocation",
      "propertyName": "clearWatch",
      "prevProperty": "watchPosition",
      "property": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "clearWatch"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "_func": "function clearWatch() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.styleMedia",
      "propertyName": "matchMedium",
      "prevProperty": "type",
      "property": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "matchMedium"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "_func": "function matchMedium() {\n    [native code]\n}",
        "_invocation": false
      }
    },
    {
      "path": "window",
      "propertyName": "GestureEvent",
      "prevProperty": "onwebkittransitionend",
      "property": {
        "prototype": {
          "_protos": ["UIEvent.prototype", "Event.prototype", "Object.prototype"],
          "target": {
            "_flags": "ce",
            "_accessException": "TypeError: The GestureEvent.target getter can only be used on instances of GestureEvent",
            "_get": "function target() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "scale": {
            "_flags": "ce",
            "_accessException": "TypeError: The GestureEvent.scale getter can only be used on instances of GestureEvent",
            "_get": "function scale() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "rotation": {
            "_flags": "ce",
            "_accessException": "TypeError: The GestureEvent.rotation getter can only be used on instances of GestureEvent",
            "_get": "function rotation() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "screenX": {
            "_flags": "ce",
            "_accessException": "TypeError: The GestureEvent.screenX getter can only be used on instances of GestureEvent",
            "_get": "function screenX() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "screenY": {
            "_flags": "ce",
            "_accessException": "TypeError: The GestureEvent.screenY getter can only be used on instances of GestureEvent",
            "_get": "function screenY() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "clientX": {
            "_flags": "ce",
            "_accessException": "TypeError: The GestureEvent.clientX getter can only be used on instances of GestureEvent",
            "_get": "function clientX() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "clientY": {
            "_flags": "ce",
            "_accessException": "TypeError: The GestureEvent.clientY getter can only be used on instances of GestureEvent",
            "_get": "function clientY() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "ctrlKey": {
            "_flags": "ce",
            "_accessException": "TypeError: The GestureEvent.ctrlKey getter can only be used on instances of GestureEvent",
            "_get": "function ctrlKey() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "shiftKey": {
            "_flags": "ce",
            "_accessException": "TypeError: The GestureEvent.shiftKey getter can only be used on instances of GestureEvent",
            "_get": "function shiftKey() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "altKey": {
            "_flags": "ce",
            "_accessException": "TypeError: The GestureEvent.altKey getter can only be used on instances of GestureEvent",
            "_get": "function altKey() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "metaKey": {
            "_flags": "ce",
            "_accessException": "TypeError: The GestureEvent.metaKey getter can only be used on instances of GestureEvent",
            "_get": "function metaKey() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "initGestureEvent": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "initGestureEvent"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 16
            },
            "_function": "function initGestureEvent() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "NONE": {
            "_type": "number",
            "_value": 0
          },
          "CAPTURING_PHASE": {
            "_type": "number",
            "_value": 1
          },
          "AT_TARGET": {
            "_type": "number",
            "_value": 2
          },
          "BUBBLING_PHASE": {
            "_type": "number",
            "_value": 3
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "GestureEvent"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "NONE": {
          "_type": "number",
          "_value": 0
        },
        "CAPTURING_PHASE": {
          "_type": "number",
          "_value": 1
        },
        "AT_TARGET": {
          "_type": "number",
          "_value": 2
        },
        "BUBBLING_PHASE": {
          "_type": "number",
          "_value": 3
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function GestureEvent() {\n    [native code]\n}",
        "_flags": "cw"
      }
    },
    {
      "path": "window",
      "propertyName": "WebKitPlaybackTargetAvailabilityEvent",
      "prevProperty": "GestureEvent",
      "property": {
        "prototype": {
          "_protos": ["Event.prototype", "Object.prototype"],
          "availability": {
            "_flags": "ce",
            "_accessException": "TypeError: The WebKitPlaybackTargetAvailabilityEvent.availability getter can only be used on instances of WebKitPlaybackTargetAvailabilityEvent",
            "_get": "function availability() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "NONE": {
            "_type": "number",
            "_value": 0
          },
          "CAPTURING_PHASE": {
            "_type": "number",
            "_value": 1
          },
          "AT_TARGET": {
            "_type": "number",
            "_value": 2
          },
          "BUBBLING_PHASE": {
            "_type": "number",
            "_value": 3
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "WebKitPlaybackTargetAvailabilityEvent"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "NONE": {
          "_type": "number",
          "_value": 0
        },
        "CAPTURING_PHASE": {
          "_type": "number",
          "_value": 1
        },
        "AT_TARGET": {
          "_type": "number",
          "_value": 2
        },
        "BUBBLING_PHASE": {
          "_type": "number",
          "_value": 3
        },
        "new()": "TypeError: Not enough arguments",
        "_function": "function WebKitPlaybackTargetAvailabilityEvent() {\n    [native code]\n}",
        "_flags": "cw"
      }
    },
    {
      "path": "window",
      "propertyName": "ApplePayError",
      "prevProperty": "WebKitPlaybackTargetAvailabilityEvent",
      "property": {
        "prototype": {
          "_protos": ["Object.prototype"],
          "code": {
            "_flags": "ce",
            "_accessException": "TypeError: The ApplePayError.code getter can only be used on instances of ApplePayError",
            "_get": "function code() {\n    [native code]\n}",
            "_set": "function code() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "contactField": {
            "_flags": "ce",
            "_accessException": "TypeError: The ApplePayError.contactField getter can only be used on instances of ApplePayError",
            "_get": "function contactField() {\n    [native code]\n}",
            "_set": "function contactField() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "message": {
            "_flags": "ce",
            "_accessException": "TypeError: The ApplePayError.message getter can only be used on instances of ApplePayError",
            "_get": "function message() {\n    [native code]\n}",
            "_set": "function message() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "ApplePayError"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "new()": "TypeError: Not enough arguments",
        "_function": "function ApplePayError() {\n    [native code]\n}",
        "_flags": "cw"
      }
    },
    {
      "path": "window.IDBCursor.prototype",
      "propertyName": "_type",
      "prevProperty": "delete",
      "property": "object"
    },
    {
      "path": "window.IDBCursor.prototype",
      "propertyName": "_flags",
      "prevProperty": "_type",
      "property": ""
    },
    {
      "path": "window.SourceBuffer.prototype",
      "propertyName": "audioTracks",
      "prevProperty": "timestampOffset",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The SourceBuffer.audioTracks getter can only be used on instances of SourceBuffer",
        "_get": "function audioTracks() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.SourceBuffer.prototype",
      "propertyName": "videoTracks",
      "prevProperty": "audioTracks",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The SourceBuffer.videoTracks getter can only be used on instances of SourceBuffer",
        "_get": "function videoTracks() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.SourceBuffer.prototype",
      "propertyName": "textTracks",
      "prevProperty": "videoTracks",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The SourceBuffer.textTracks getter can only be used on instances of SourceBuffer",
        "_get": "function textTracks() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.SourceBufferList.prototype",
      "propertyName": "item",
      "prevProperty": "onremovesourcebuffer",
      "property": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "item"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "_function": "function item() {\n    [native code]\n}",
        "_flags": "cew"
      }
    },
    {
      "path": "window.MediaDeviceInfo.prototype",
      "propertyName": "_type",
      "prevProperty": "toJSON",
      "property": "object"
    },
    {
      "path": "window.MediaDeviceInfo.prototype",
      "propertyName": "_flags",
      "prevProperty": "_type",
      "property": ""
    },
    {
      "path": "window.MediaStreamTrack.prototype",
      "propertyName": "onoverconstrained",
      "prevProperty": "onended",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The MediaStreamTrack.onoverconstrained getter can only be used on instances of MediaStreamTrack",
        "_get": "function onoverconstrained() {\n    [native code]\n}",
        "_set": "function onoverconstrained() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.OverconstrainedError.prototype._protos",
      "propertyName": "1",
      "prevProperty": "0",
      "property": "Object.prototype"
    },
    {
      "path": "window",
      "propertyName": "OverconstrainedErrorEvent",
      "prevProperty": "OverconstrainedError",
      "property": {
        "prototype": {
          "_protos": ["Event.prototype", "Object.prototype"],
          "error": {
            "_flags": "ce",
            "_accessException": "TypeError: The OverconstrainedErrorEvent.error getter can only be used on instances of OverconstrainedErrorEvent",
            "_get": "function error() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "NONE": {
            "_type": "number",
            "_value": 0
          },
          "CAPTURING_PHASE": {
            "_type": "number",
            "_value": 1
          },
          "AT_TARGET": {
            "_type": "number",
            "_value": 2
          },
          "BUBBLING_PHASE": {
            "_type": "number",
            "_value": 3
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "OverconstrainedErrorEvent"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "NONE": {
          "_type": "number",
          "_value": 0
        },
        "CAPTURING_PHASE": {
          "_type": "number",
          "_value": 1
        },
        "AT_TARGET": {
          "_type": "number",
          "_value": 2
        },
        "BUBBLING_PHASE": {
          "_type": "number",
          "_value": 3
        },
        "new()": "TypeError: Not enough arguments",
        "_function": "function OverconstrainedErrorEvent() {\n    [native code]\n}",
        "_flags": "cw"
      }
    },
    {
      "path": "window.Notification.prototype",
      "propertyName": "ondisplay",
      "prevProperty": "onclose",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The Notification.ondisplay getter can only be used on instances of Notification",
        "_get": "function ondisplay() {\n    [native code]\n}",
        "_set": "function ondisplay() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.Notification.prototype",
      "propertyName": "show",
      "prevProperty": "close",
      "property": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "show"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "_function": "function show() {\n    [native code]\n}",
        "_flags": "cew"
      }
    },
    {
      "path": "window.SpeechSynthesisEvent.prototype",
      "propertyName": "_type",
      "prevProperty": "BUBBLING_PHASE",
      "property": "object"
    },
    {
      "path": "window.SpeechSynthesisEvent.prototype",
      "propertyName": "_flags",
      "prevProperty": "_type",
      "property": ""
    },
    {
      "path": "window.ByteLengthQueuingStrategy.prototype.size",
      "propertyName": "length",
      "property": {
        "_type": "number",
        "_flags": "c",
        "_value": 1
      }
    },
    {
      "path": "window.CountQueuingStrategy.prototype.size",
      "propertyName": "length",
      "property": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      }
    },
    {
      "path": "window.ByteLengthQueuingStrategy.prototype.size",
      "propertyName": "name",
      "prevProperty": "length",
      "property": {
        "_type": "string",
        "_flags": "c",
        "_value": "size"
      }
    },
    {
      "path": "window.CountQueuingStrategy.prototype.size",
      "propertyName": "name",
      "prevProperty": "length",
      "property": {
        "_type": "string",
        "_flags": "c",
        "_value": "size"
      }
    },
    {
      "path": "window.ByteLengthQueuingStrategy.prototype.size",
      "propertyName": "_function",
      "prevProperty": "name",
      "property": "function size() {\n    [native code]\n}"
    },
    {
      "path": "window.CountQueuingStrategy.prototype.size",
      "propertyName": "_function",
      "prevProperty": "name",
      "property": "function size() {\n    [native code]\n}"
    },
    {
      "path": "window.CountQueuingStrategy.prototype.size",
      "propertyName": "_invocation",
      "prevProperty": "_function",
      "property": 1
    },
    {
      "path": "window.ReadableStream.prototype",
      "propertyName": "_type",
      "prevProperty": "tee",
      "property": "object"
    },
    {
      "path": "window.ReadableStream.prototype",
      "propertyName": "_flags",
      "prevProperty": "_type",
      "property": ""
    },
    {
      "path": "window.AudioBuffer.prototype",
      "propertyName": "gain",
      "prevProperty": "sampleRate",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The AudioBuffer.gain getter can only be used on instances of AudioBuffer",
        "_get": "function gain() {\n    [native code]\n}",
        "_set": "function gain() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.AudioBufferSourceNode.prototype",
      "propertyName": "playbackState",
      "prevProperty": "buffer",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The AudioBufferSourceNode.playbackState getter can only be used on instances of AudioBufferSourceNode",
        "_get": "function playbackState() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.AudioBufferSourceNode.prototype",
      "propertyName": "gain",
      "prevProperty": "playbackState",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The AudioBufferSourceNode.gain getter can only be used on instances of AudioBufferSourceNode",
        "_get": "function gain() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.AudioBufferSourceNode.prototype",
      "propertyName": "onended",
      "prevProperty": "loopEnd",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The AudioBufferSourceNode.onended getter can only be used on instances of AudioBufferSourceNode",
        "_get": "function onended() {\n    [native code]\n}",
        "_set": "function onended() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.AudioBufferSourceNode.prototype",
      "propertyName": "stop",
      "prevProperty": "start",
      "property": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "stop"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "_function": "function stop() {\n    [native code]\n}",
        "_flags": "cew"
      }
    },
    {
      "path": "window.AudioBufferSourceNode.prototype",
      "propertyName": "UNSCHEDULED_STATE",
      "prevProperty": "stop",
      "property": {
        "_type": "number",
        "_flags": "e",
        "_value": 0
      }
    },
    {
      "path": "window.AudioBufferSourceNode.prototype",
      "propertyName": "SCHEDULED_STATE",
      "prevProperty": "UNSCHEDULED_STATE",
      "property": {
        "_type": "number",
        "_flags": "e",
        "_value": 1
      }
    },
    {
      "path": "window.AudioBufferSourceNode.prototype",
      "propertyName": "PLAYING_STATE",
      "prevProperty": "SCHEDULED_STATE",
      "property": {
        "_type": "number",
        "_flags": "e",
        "_value": 2
      }
    },
    {
      "path": "window.AudioBufferSourceNode.prototype",
      "propertyName": "FINISHED_STATE",
      "prevProperty": "PLAYING_STATE",
      "property": {
        "_type": "number",
        "_flags": "e",
        "_value": 3
      }
    },
    {
      "path": "window.AudioBufferSourceNode",
      "propertyName": "UNSCHEDULED_STATE",
      "prevProperty": "length",
      "property": {
        "_type": "number",
        "_flags": "e",
        "_value": 0
      }
    },
    {
      "path": "window.AudioBufferSourceNode",
      "propertyName": "SCHEDULED_STATE",
      "prevProperty": "UNSCHEDULED_STATE",
      "property": {
        "_type": "number",
        "_flags": "e",
        "_value": 1
      }
    },
    {
      "path": "window.AudioBufferSourceNode",
      "propertyName": "PLAYING_STATE",
      "prevProperty": "SCHEDULED_STATE",
      "property": {
        "_type": "number",
        "_flags": "e",
        "_value": 2
      }
    },
    {
      "path": "window.AudioBufferSourceNode",
      "propertyName": "FINISHED_STATE",
      "prevProperty": "PLAYING_STATE",
      "property": {
        "_type": "number",
        "_flags": "e",
        "_value": 3
      }
    },
    {
      "path": "window.AudioListener.prototype",
      "propertyName": "dopplerFactor",
      "prevProperty": "_protos",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The AudioListener.dopplerFactor getter can only be used on instances of AudioListener",
        "_get": "function dopplerFactor() {\n    [native code]\n}",
        "_set": "function dopplerFactor() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.AudioListener.prototype",
      "propertyName": "speedOfSound",
      "prevProperty": "dopplerFactor",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The AudioListener.speedOfSound getter can only be used on instances of AudioListener",
        "_get": "function speedOfSound() {\n    [native code]\n}",
        "_set": "function speedOfSound() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.AudioListener.prototype",
      "propertyName": "setVelocity",
      "prevProperty": "setOrientation",
      "property": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "setVelocity"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 3
        },
        "_function": "function setVelocity() {\n    [native code]\n}",
        "_flags": "cew"
      }
    },
    {
      "path": "window.AudioParam.prototype",
      "propertyName": "name",
      "prevProperty": "defaultValue",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The AudioParam.name getter can only be used on instances of AudioParam",
        "_get": "function name() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.AudioParam.prototype",
      "propertyName": "units",
      "prevProperty": "name",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The AudioParam.units getter can only be used on instances of AudioParam",
        "_get": "function units() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window",
      "propertyName": "webkitOfflineAudioContext",
      "prevProperty": "OfflineAudioCompletionEvent",
      "property": {
        "prototype": {
          "_protos": ["webkitAudioContext.prototype", "EventTarget.prototype", "Object.prototype"],
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "webkitOfflineAudioContext"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 3
        },
        "new()": "TypeError: Not enough arguments",
        "_function": "function webkitOfflineAudioContext() {\n    [native code]\n}",
        "_flags": "cw"
      }
    },
    {
      "path": "window.OscillatorNode.prototype",
      "propertyName": "playbackState",
      "prevProperty": "type",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The OscillatorNode.playbackState getter can only be used on instances of OscillatorNode",
        "_get": "function playbackState() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.OscillatorNode.prototype",
      "propertyName": "onended",
      "prevProperty": "detune",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The OscillatorNode.onended getter can only be used on instances of OscillatorNode",
        "_get": "function onended() {\n    [native code]\n}",
        "_set": "function onended() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.OscillatorNode.prototype",
      "propertyName": "start",
      "prevProperty": "onended",
      "property": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "start"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "_function": "function start() {\n    [native code]\n}",
        "_flags": "cew"
      }
    },
    {
      "path": "window.OscillatorNode.prototype",
      "propertyName": "stop",
      "prevProperty": "start",
      "property": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "stop"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "_function": "function stop() {\n    [native code]\n}",
        "_flags": "cew"
      }
    },
    {
      "path": "window.OscillatorNode.prototype",
      "propertyName": "UNSCHEDULED_STATE",
      "prevProperty": "setPeriodicWave",
      "property": {
        "_type": "number",
        "_flags": "e",
        "_value": 0
      }
    },
    {
      "path": "window.OscillatorNode.prototype",
      "propertyName": "SCHEDULED_STATE",
      "prevProperty": "UNSCHEDULED_STATE",
      "property": {
        "_type": "number",
        "_flags": "e",
        "_value": 1
      }
    },
    {
      "path": "window.OscillatorNode.prototype",
      "propertyName": "PLAYING_STATE",
      "prevProperty": "SCHEDULED_STATE",
      "property": {
        "_type": "number",
        "_flags": "e",
        "_value": 2
      }
    },
    {
      "path": "window.OscillatorNode.prototype",
      "propertyName": "FINISHED_STATE",
      "prevProperty": "PLAYING_STATE",
      "property": {
        "_type": "number",
        "_flags": "e",
        "_value": 3
      }
    },
    {
      "path": "window.OscillatorNode",
      "propertyName": "UNSCHEDULED_STATE",
      "prevProperty": "length",
      "property": {
        "_type": "number",
        "_flags": "e",
        "_value": 0
      }
    },
    {
      "path": "window.OscillatorNode",
      "propertyName": "SCHEDULED_STATE",
      "prevProperty": "UNSCHEDULED_STATE",
      "property": {
        "_type": "number",
        "_flags": "e",
        "_value": 1
      }
    },
    {
      "path": "window.OscillatorNode",
      "propertyName": "PLAYING_STATE",
      "prevProperty": "SCHEDULED_STATE",
      "property": {
        "_type": "number",
        "_flags": "e",
        "_value": 2
      }
    },
    {
      "path": "window.OscillatorNode",
      "propertyName": "FINISHED_STATE",
      "prevProperty": "PLAYING_STATE",
      "property": {
        "_type": "number",
        "_flags": "e",
        "_value": 3
      }
    },
    {
      "path": "window",
      "propertyName": "webkitAudioPannerNode",
      "prevProperty": "OscillatorNode",
      "property": {
        "prototype": {
          "_protos": ["AudioNode.prototype", "EventTarget.prototype", "Object.prototype"],
          "panningModel": {
            "_flags": "ce",
            "_accessException": "TypeError: The webkitAudioPannerNode.panningModel getter can only be used on instances of webkitAudioPannerNode",
            "_get": "function panningModel() {\n    [native code]\n}",
            "_set": "function panningModel() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "distanceModel": {
            "_flags": "ce",
            "_accessException": "TypeError: The webkitAudioPannerNode.distanceModel getter can only be used on instances of webkitAudioPannerNode",
            "_get": "function distanceModel() {\n    [native code]\n}",
            "_set": "function distanceModel() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "refDistance": {
            "_flags": "ce",
            "_accessException": "TypeError: The webkitAudioPannerNode.refDistance getter can only be used on instances of webkitAudioPannerNode",
            "_get": "function refDistance() {\n    [native code]\n}",
            "_set": "function refDistance() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "maxDistance": {
            "_flags": "ce",
            "_accessException": "TypeError: The webkitAudioPannerNode.maxDistance getter can only be used on instances of webkitAudioPannerNode",
            "_get": "function maxDistance() {\n    [native code]\n}",
            "_set": "function maxDistance() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "rolloffFactor": {
            "_flags": "ce",
            "_accessException": "TypeError: The webkitAudioPannerNode.rolloffFactor getter can only be used on instances of webkitAudioPannerNode",
            "_get": "function rolloffFactor() {\n    [native code]\n}",
            "_set": "function rolloffFactor() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "coneInnerAngle": {
            "_flags": "ce",
            "_accessException": "TypeError: The webkitAudioPannerNode.coneInnerAngle getter can only be used on instances of webkitAudioPannerNode",
            "_get": "function coneInnerAngle() {\n    [native code]\n}",
            "_set": "function coneInnerAngle() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "coneOuterAngle": {
            "_flags": "ce",
            "_accessException": "TypeError: The webkitAudioPannerNode.coneOuterAngle getter can only be used on instances of webkitAudioPannerNode",
            "_get": "function coneOuterAngle() {\n    [native code]\n}",
            "_set": "function coneOuterAngle() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "coneOuterGain": {
            "_flags": "ce",
            "_accessException": "TypeError: The webkitAudioPannerNode.coneOuterGain getter can only be used on instances of webkitAudioPannerNode",
            "_get": "function coneOuterGain() {\n    [native code]\n}",
            "_set": "function coneOuterGain() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "setPosition": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "setPosition"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 3
            },
            "_function": "function setPosition() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "setOrientation": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "setOrientation"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 3
            },
            "_function": "function setOrientation() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "setVelocity": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "setVelocity"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 3
            },
            "_function": "function setVelocity() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "webkitAudioPannerNode"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function webkitAudioPannerNode() {\n    [native code]\n}",
        "_flags": "cw"
      }
    },
    {
      "path": "window",
      "propertyName": "SQLTransaction",
      "prevProperty": "WaveShaperNode",
      "property": {
        "prototype": {
          "_protos": ["Object.prototype"],
          "executeSql": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "executeSql"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function executeSql() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SQLTransaction"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SQLTransaction() {\n    [native code]\n}",
        "_flags": "cw"
      }
    },
    {
      "path": "window",
      "propertyName": "VRPose",
      "prevProperty": "CloseEvent",
      "property": {
        "prototype": {
          "_protos": ["Object.prototype"],
          "position": {
            "_flags": "ce",
            "_accessException": "TypeError: The VRPose.position getter can only be used on instances of VRPose",
            "_get": "function position() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "linearVelocity": {
            "_flags": "ce",
            "_accessException": "TypeError: The VRPose.linearVelocity getter can only be used on instances of VRPose",
            "_get": "function linearVelocity() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "linearAcceleration": {
            "_flags": "ce",
            "_accessException": "TypeError: The VRPose.linearAcceleration getter can only be used on instances of VRPose",
            "_get": "function linearAcceleration() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "orientation": {
            "_flags": "ce",
            "_accessException": "TypeError: The VRPose.orientation getter can only be used on instances of VRPose",
            "_get": "function orientation() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "angularVelocity": {
            "_flags": "ce",
            "_accessException": "TypeError: The VRPose.angularVelocity getter can only be used on instances of VRPose",
            "_get": "function angularVelocity() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "angularAcceleration": {
            "_flags": "ce",
            "_accessException": "TypeError: The VRPose.angularAcceleration getter can only be used on instances of VRPose",
            "_get": "function angularAcceleration() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "VRPose"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function VRPose() {\n    [native code]\n}",
        "_flags": "cw"
      }
    },
    {
      "path": "window.CSSFontFaceRule.prototype",
      "propertyName": "UNKNOWN_RULE",
      "prevProperty": "style",
      "property": {
        "_type": "number",
        "_value": 0
      }
    },
    {
      "path": "window.CSSFontFaceRule.prototype",
      "propertyName": "WEBKIT_KEYFRAMES_RULE",
      "prevProperty": "SUPPORTS_RULE",
      "property": {
        "_type": "number",
        "_value": 7
      }
    },
    {
      "path": "window.CSSFontFaceRule.prototype",
      "propertyName": "WEBKIT_KEYFRAME_RULE",
      "prevProperty": "WEBKIT_KEYFRAMES_RULE",
      "property": {
        "_type": "number",
        "_value": 8
      }
    },
    {
      "path": "window.CSSFontFaceRule",
      "propertyName": "UNKNOWN_RULE",
      "prevProperty": "length",
      "property": {
        "_type": "number",
        "_value": 0
      }
    },
    {
      "path": "window.CSSFontFaceRule",
      "propertyName": "WEBKIT_KEYFRAMES_RULE",
      "prevProperty": "SUPPORTS_RULE",
      "property": {
        "_type": "number",
        "_value": 7
      }
    },
    {
      "path": "window.CSSFontFaceRule",
      "propertyName": "WEBKIT_KEYFRAME_RULE",
      "prevProperty": "WEBKIT_KEYFRAMES_RULE",
      "property": {
        "_type": "number",
        "_value": 8
      }
    },
    {
      "path": "window.CSSImportRule.prototype",
      "propertyName": "UNKNOWN_RULE",
      "prevProperty": "styleSheet",
      "property": {
        "_type": "number",
        "_value": 0
      }
    },
    {
      "path": "window.CSSImportRule.prototype",
      "propertyName": "WEBKIT_KEYFRAMES_RULE",
      "prevProperty": "SUPPORTS_RULE",
      "property": {
        "_type": "number",
        "_value": 7
      }
    },
    {
      "path": "window.CSSImportRule.prototype",
      "propertyName": "WEBKIT_KEYFRAME_RULE",
      "prevProperty": "WEBKIT_KEYFRAMES_RULE",
      "property": {
        "_type": "number",
        "_value": 8
      }
    },
    {
      "path": "window.CSSImportRule",
      "propertyName": "UNKNOWN_RULE",
      "prevProperty": "length",
      "property": {
        "_type": "number",
        "_value": 0
      }
    },
    {
      "path": "window.CSSImportRule",
      "propertyName": "WEBKIT_KEYFRAMES_RULE",
      "prevProperty": "SUPPORTS_RULE",
      "property": {
        "_type": "number",
        "_value": 7
      }
    },
    {
      "path": "window.CSSImportRule",
      "propertyName": "WEBKIT_KEYFRAME_RULE",
      "prevProperty": "WEBKIT_KEYFRAMES_RULE",
      "property": {
        "_type": "number",
        "_value": 8
      }
    },
    {
      "path": "window.CSSKeyframeRule.prototype",
      "propertyName": "UNKNOWN_RULE",
      "prevProperty": "style",
      "property": {
        "_type": "number",
        "_value": 0
      }
    },
    {
      "path": "window.CSSKeyframeRule.prototype",
      "propertyName": "WEBKIT_KEYFRAMES_RULE",
      "prevProperty": "SUPPORTS_RULE",
      "property": {
        "_type": "number",
        "_value": 7
      }
    },
    {
      "path": "window.CSSKeyframeRule.prototype",
      "propertyName": "WEBKIT_KEYFRAME_RULE",
      "prevProperty": "WEBKIT_KEYFRAMES_RULE",
      "property": {
        "_type": "number",
        "_value": 8
      }
    },
    {
      "path": "window.CSSKeyframeRule",
      "propertyName": "UNKNOWN_RULE",
      "prevProperty": "length",
      "property": {
        "_type": "number",
        "_value": 0
      }
    },
    {
      "path": "window.CSSKeyframeRule",
      "propertyName": "WEBKIT_KEYFRAMES_RULE",
      "prevProperty": "SUPPORTS_RULE",
      "property": {
        "_type": "number",
        "_value": 7
      }
    },
    {
      "path": "window.CSSKeyframeRule",
      "propertyName": "WEBKIT_KEYFRAME_RULE",
      "prevProperty": "WEBKIT_KEYFRAMES_RULE",
      "property": {
        "_type": "number",
        "_value": 8
      }
    },
    {
      "path": "window.CSSKeyframesRule.prototype",
      "propertyName": "insertRule",
      "prevProperty": "cssRules",
      "property": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "insertRule"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "_function": "function insertRule() {\n    [native code]\n}",
        "_flags": "cew"
      }
    },
    {
      "path": "window.CSSKeyframesRule.prototype",
      "propertyName": "UNKNOWN_RULE",
      "prevProperty": "findRule",
      "property": {
        "_type": "number",
        "_value": 0
      }
    },
    {
      "path": "window.CSSKeyframesRule.prototype",
      "propertyName": "WEBKIT_KEYFRAMES_RULE",
      "prevProperty": "SUPPORTS_RULE",
      "property": {
        "_type": "number",
        "_value": 7
      }
    },
    {
      "path": "window.CSSKeyframesRule.prototype",
      "propertyName": "WEBKIT_KEYFRAME_RULE",
      "prevProperty": "WEBKIT_KEYFRAMES_RULE",
      "property": {
        "_type": "number",
        "_value": 8
      }
    },
    {
      "path": "window.CSSKeyframesRule",
      "propertyName": "UNKNOWN_RULE",
      "prevProperty": "length",
      "property": {
        "_type": "number",
        "_value": 0
      }
    },
    {
      "path": "window.CSSKeyframesRule",
      "propertyName": "WEBKIT_KEYFRAMES_RULE",
      "prevProperty": "SUPPORTS_RULE",
      "property": {
        "_type": "number",
        "_value": 7
      }
    },
    {
      "path": "window.CSSKeyframesRule",
      "propertyName": "WEBKIT_KEYFRAME_RULE",
      "prevProperty": "WEBKIT_KEYFRAMES_RULE",
      "property": {
        "_type": "number",
        "_value": 8
      }
    },
    {
      "path": "window.CSSMediaRule.prototype",
      "propertyName": "cssRules",
      "prevProperty": "media",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The CSSMediaRule.cssRules getter can only be used on instances of CSSMediaRule",
        "_get": "function cssRules() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.CSSMediaRule.prototype",
      "propertyName": "insertRule",
      "prevProperty": "cssRules",
      "property": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "insertRule"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "_function": "function insertRule() {\n    [native code]\n}",
        "_flags": "cew"
      }
    },
    {
      "path": "window.CSSMediaRule.prototype",
      "propertyName": "deleteRule",
      "prevProperty": "insertRule",
      "property": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "deleteRule"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "_function": "function deleteRule() {\n    [native code]\n}",
        "_flags": "cew"
      }
    },
    {
      "path": "window.CSSMediaRule.prototype",
      "propertyName": "UNKNOWN_RULE",
      "prevProperty": "deleteRule",
      "property": {
        "_type": "number",
        "_value": 0
      }
    },
    {
      "path": "window.CSSMediaRule.prototype",
      "propertyName": "WEBKIT_KEYFRAMES_RULE",
      "prevProperty": "SUPPORTS_RULE",
      "property": {
        "_type": "number",
        "_value": 7
      }
    },
    {
      "path": "window.CSSMediaRule.prototype",
      "propertyName": "WEBKIT_KEYFRAME_RULE",
      "prevProperty": "WEBKIT_KEYFRAMES_RULE",
      "property": {
        "_type": "number",
        "_value": 8
      }
    },
    {
      "path": "window.CSSMediaRule",
      "propertyName": "UNKNOWN_RULE",
      "prevProperty": "length",
      "property": {
        "_type": "number",
        "_value": 0
      }
    },
    {
      "path": "window.CSSMediaRule",
      "propertyName": "WEBKIT_KEYFRAMES_RULE",
      "prevProperty": "SUPPORTS_RULE",
      "property": {
        "_type": "number",
        "_value": 7
      }
    },
    {
      "path": "window.CSSMediaRule",
      "propertyName": "WEBKIT_KEYFRAME_RULE",
      "prevProperty": "WEBKIT_KEYFRAMES_RULE",
      "property": {
        "_type": "number",
        "_value": 8
      }
    },
    {
      "path": "window.CSSNamespaceRule.prototype",
      "propertyName": "UNKNOWN_RULE",
      "prevProperty": "prefix",
      "property": {
        "_type": "number",
        "_value": 0
      }
    },
    {
      "path": "window.CSSNamespaceRule.prototype",
      "propertyName": "WEBKIT_KEYFRAMES_RULE",
      "prevProperty": "SUPPORTS_RULE",
      "property": {
        "_type": "number",
        "_value": 7
      }
    },
    {
      "path": "window.CSSNamespaceRule.prototype",
      "propertyName": "WEBKIT_KEYFRAME_RULE",
      "prevProperty": "WEBKIT_KEYFRAMES_RULE",
      "property": {
        "_type": "number",
        "_value": 8
      }
    },
    {
      "path": "window.CSSNamespaceRule",
      "propertyName": "UNKNOWN_RULE",
      "prevProperty": "length",
      "property": {
        "_type": "number",
        "_value": 0
      }
    },
    {
      "path": "window.CSSNamespaceRule",
      "propertyName": "WEBKIT_KEYFRAMES_RULE",
      "prevProperty": "SUPPORTS_RULE",
      "property": {
        "_type": "number",
        "_value": 7
      }
    },
    {
      "path": "window.CSSNamespaceRule",
      "propertyName": "WEBKIT_KEYFRAME_RULE",
      "prevProperty": "WEBKIT_KEYFRAMES_RULE",
      "property": {
        "_type": "number",
        "_value": 8
      }
    },
    {
      "path": "window.CSSPageRule.prototype",
      "propertyName": "UNKNOWN_RULE",
      "prevProperty": "style",
      "property": {
        "_type": "number",
        "_value": 0
      }
    },
    {
      "path": "window.CSSPageRule.prototype",
      "propertyName": "WEBKIT_KEYFRAMES_RULE",
      "prevProperty": "SUPPORTS_RULE",
      "property": {
        "_type": "number",
        "_value": 7
      }
    },
    {
      "path": "window.CSSPageRule.prototype",
      "propertyName": "WEBKIT_KEYFRAME_RULE",
      "prevProperty": "WEBKIT_KEYFRAMES_RULE",
      "property": {
        "_type": "number",
        "_value": 8
      }
    },
    {
      "path": "window.CSSPageRule",
      "propertyName": "UNKNOWN_RULE",
      "prevProperty": "length",
      "property": {
        "_type": "number",
        "_value": 0
      }
    },
    {
      "path": "window.CSSPageRule",
      "propertyName": "WEBKIT_KEYFRAMES_RULE",
      "prevProperty": "SUPPORTS_RULE",
      "property": {
        "_type": "number",
        "_value": 7
      }
    },
    {
      "path": "window.CSSPageRule",
      "propertyName": "WEBKIT_KEYFRAME_RULE",
      "prevProperty": "WEBKIT_KEYFRAMES_RULE",
      "property": {
        "_type": "number",
        "_value": 8
      }
    },
    {
      "path": "window.CSSRule.prototype",
      "propertyName": "UNKNOWN_RULE",
      "prevProperty": "parentRule",
      "property": {
        "_type": "number",
        "_flags": "e",
        "_value": 0
      }
    },
    {
      "path": "window.CSSRule.prototype",
      "propertyName": "WEBKIT_KEYFRAMES_RULE",
      "prevProperty": "SUPPORTS_RULE",
      "property": {
        "_type": "number",
        "_flags": "e",
        "_value": 7
      }
    },
    {
      "path": "window.CSSRule.prototype",
      "propertyName": "WEBKIT_KEYFRAME_RULE",
      "prevProperty": "WEBKIT_KEYFRAMES_RULE",
      "property": {
        "_type": "number",
        "_flags": "e",
        "_value": 8
      }
    },
    {
      "path": "window.CSSRule",
      "propertyName": "UNKNOWN_RULE",
      "prevProperty": "length",
      "property": {
        "_type": "number",
        "_flags": "e",
        "_value": 0
      }
    },
    {
      "path": "window.CSSRule",
      "propertyName": "WEBKIT_KEYFRAMES_RULE",
      "prevProperty": "SUPPORTS_RULE",
      "property": {
        "_type": "number",
        "_flags": "e",
        "_value": 7
      }
    },
    {
      "path": "window.CSSRule",
      "propertyName": "WEBKIT_KEYFRAME_RULE",
      "prevProperty": "WEBKIT_KEYFRAMES_RULE",
      "property": {
        "_type": "number",
        "_flags": "e",
        "_value": 8
      }
    },
    {
      "path": "window.CSSRuleList.prototype",
      "propertyName": "_type",
      "prevProperty": "Symbol(Symbol.iterator)",
      "property": "object"
    },
    {
      "path": "window.CSSRuleList.prototype",
      "propertyName": "_flags",
      "prevProperty": "_type",
      "property": ""
    },
    {
      "path": "window.CSSStyleDeclaration.prototype",
      "propertyName": "getPropertyShorthand",
      "prevProperty": "item",
      "property": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "getPropertyShorthand"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "_function": "function getPropertyShorthand() {\n    [native code]\n}",
        "_flags": "cew"
      }
    },
    {
      "path": "window.CSSStyleDeclaration.prototype",
      "propertyName": "isPropertyImplicit",
      "prevProperty": "getPropertyShorthand",
      "property": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "isPropertyImplicit"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "_function": "function isPropertyImplicit() {\n    [native code]\n}",
        "_flags": "cew"
      }
    },
    {
      "path": "window.CSSStyleDeclaration.prototype",
      "propertyName": "getPropertyCSSValue",
      "prevProperty": "isPropertyImplicit",
      "property": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "getPropertyCSSValue"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "_function": "function getPropertyCSSValue() {\n    [native code]\n}",
        "_flags": "cew"
      }
    },
    {
      "path": "window.CSSStyleRule.prototype",
      "propertyName": "UNKNOWN_RULE",
      "prevProperty": "style",
      "property": {
        "_type": "number",
        "_value": 0
      }
    },
    {
      "path": "window.CSSStyleRule.prototype",
      "propertyName": "WEBKIT_KEYFRAMES_RULE",
      "prevProperty": "SUPPORTS_RULE",
      "property": {
        "_type": "number",
        "_value": 7
      }
    },
    {
      "path": "window.CSSStyleRule.prototype",
      "propertyName": "WEBKIT_KEYFRAME_RULE",
      "prevProperty": "WEBKIT_KEYFRAMES_RULE",
      "property": {
        "_type": "number",
        "_value": 8
      }
    },
    {
      "path": "window.CSSStyleRule",
      "propertyName": "UNKNOWN_RULE",
      "prevProperty": "length",
      "property": {
        "_type": "number",
        "_value": 0
      }
    },
    {
      "path": "window.CSSStyleRule",
      "propertyName": "WEBKIT_KEYFRAMES_RULE",
      "prevProperty": "SUPPORTS_RULE",
      "property": {
        "_type": "number",
        "_value": 7
      }
    },
    {
      "path": "window.CSSStyleRule",
      "propertyName": "WEBKIT_KEYFRAME_RULE",
      "prevProperty": "WEBKIT_KEYFRAMES_RULE",
      "property": {
        "_type": "number",
        "_value": 8
      }
    },
    {
      "path": "window.CSSSupportsRule.prototype",
      "propertyName": "cssRules",
      "prevProperty": "_protos",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The CSSSupportsRule.cssRules getter can only be used on instances of CSSSupportsRule",
        "_get": "function cssRules() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.CSSSupportsRule.prototype",
      "propertyName": "conditionText",
      "prevProperty": "cssRules",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The CSSSupportsRule.conditionText getter can only be used on instances of CSSSupportsRule",
        "_get": "function conditionText() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.CSSSupportsRule.prototype",
      "propertyName": "insertRule",
      "prevProperty": "conditionText",
      "property": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "insertRule"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "_function": "function insertRule() {\n    [native code]\n}",
        "_flags": "cew"
      }
    },
    {
      "path": "window.CSSSupportsRule.prototype",
      "propertyName": "deleteRule",
      "prevProperty": "insertRule",
      "property": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "deleteRule"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "_function": "function deleteRule() {\n    [native code]\n}",
        "_flags": "cew"
      }
    },
    {
      "path": "window.CSSSupportsRule.prototype",
      "propertyName": "UNKNOWN_RULE",
      "prevProperty": "deleteRule",
      "property": {
        "_type": "number",
        "_value": 0
      }
    },
    {
      "path": "window.CSSSupportsRule.prototype",
      "propertyName": "WEBKIT_KEYFRAMES_RULE",
      "prevProperty": "SUPPORTS_RULE",
      "property": {
        "_type": "number",
        "_value": 7
      }
    },
    {
      "path": "window.CSSSupportsRule.prototype",
      "propertyName": "WEBKIT_KEYFRAME_RULE",
      "prevProperty": "WEBKIT_KEYFRAMES_RULE",
      "property": {
        "_type": "number",
        "_value": 8
      }
    },
    {
      "path": "window.CSSSupportsRule",
      "propertyName": "UNKNOWN_RULE",
      "prevProperty": "length",
      "property": {
        "_type": "number",
        "_value": 0
      }
    },
    {
      "path": "window.CSSSupportsRule",
      "propertyName": "WEBKIT_KEYFRAMES_RULE",
      "prevProperty": "SUPPORTS_RULE",
      "property": {
        "_type": "number",
        "_value": 7
      }
    },
    {
      "path": "window.CSSSupportsRule",
      "propertyName": "WEBKIT_KEYFRAME_RULE",
      "prevProperty": "WEBKIT_KEYFRAMES_RULE",
      "property": {
        "_type": "number",
        "_value": 8
      }
    },
    {
      "path": "window",
      "propertyName": "Counter",
      "prevProperty": "DOMMatrixReadOnly",
      "property": {
        "prototype": {
          "_protos": ["Object.prototype"],
          "identifier": {
            "_flags": "ce",
            "_accessException": "TypeError: The Counter.identifier getter can only be used on instances of Counter",
            "_get": "function identifier() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "listStyle": {
            "_flags": "ce",
            "_accessException": "TypeError: The Counter.listStyle getter can only be used on instances of Counter",
            "_get": "function listStyle() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "separator": {
            "_flags": "ce",
            "_accessException": "TypeError: The Counter.separator getter can only be used on instances of Counter",
            "_get": "function separator() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "Counter"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function Counter() {\n    [native code]\n}",
        "_flags": "cw"
      }
    },
    {
      "path": "window",
      "propertyName": "CSSPrimitiveValue",
      "prevProperty": "Counter",
      "property": {
        "prototype": {
          "_protos": ["CSSValue.prototype", "Object.prototype"],
          "primitiveType": {
            "_flags": "ce",
            "_accessException": "TypeError: The CSSPrimitiveValue.primitiveType getter can only be used on instances of CSSPrimitiveValue",
            "_get": "function primitiveType() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "setFloatValue": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "setFloatValue"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function setFloatValue() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "getFloatValue": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getFloatValue"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function getFloatValue() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "setStringValue": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "setStringValue"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function setStringValue() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "getStringValue": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getStringValue"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function getStringValue() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "getCounterValue": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getCounterValue"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function getCounterValue() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "getRectValue": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getRectValue"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function getRectValue() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "getRGBColorValue": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getRGBColorValue"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function getRGBColorValue() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "CSS_UNKNOWN": {
            "_type": "number",
            "_flags": "e",
            "_value": 0
          },
          "CSS_NUMBER": {
            "_type": "number",
            "_flags": "e",
            "_value": 1
          },
          "CSS_PERCENTAGE": {
            "_type": "number",
            "_flags": "e",
            "_value": 2
          },
          "CSS_EMS": {
            "_type": "number",
            "_flags": "e",
            "_value": 3
          },
          "CSS_EXS": {
            "_type": "number",
            "_flags": "e",
            "_value": 4
          },
          "CSS_PX": {
            "_type": "number",
            "_flags": "e",
            "_value": 5
          },
          "CSS_CM": {
            "_type": "number",
            "_flags": "e",
            "_value": 6
          },
          "CSS_MM": {
            "_type": "number",
            "_flags": "e",
            "_value": 7
          },
          "CSS_IN": {
            "_type": "number",
            "_flags": "e",
            "_value": 8
          },
          "CSS_PT": {
            "_type": "number",
            "_flags": "e",
            "_value": 9
          },
          "CSS_PC": {
            "_type": "number",
            "_flags": "e",
            "_value": 10
          },
          "CSS_DEG": {
            "_type": "number",
            "_flags": "e",
            "_value": 11
          },
          "CSS_RAD": {
            "_type": "number",
            "_flags": "e",
            "_value": 12
          },
          "CSS_GRAD": {
            "_type": "number",
            "_flags": "e",
            "_value": 13
          },
          "CSS_MS": {
            "_type": "number",
            "_flags": "e",
            "_value": 14
          },
          "CSS_S": {
            "_type": "number",
            "_flags": "e",
            "_value": 15
          },
          "CSS_HZ": {
            "_type": "number",
            "_flags": "e",
            "_value": 16
          },
          "CSS_KHZ": {
            "_type": "number",
            "_flags": "e",
            "_value": 17
          },
          "CSS_DIMENSION": {
            "_type": "number",
            "_flags": "e",
            "_value": 18
          },
          "CSS_STRING": {
            "_type": "number",
            "_flags": "e",
            "_value": 19
          },
          "CSS_URI": {
            "_type": "number",
            "_flags": "e",
            "_value": 20
          },
          "CSS_IDENT": {
            "_type": "number",
            "_flags": "e",
            "_value": 21
          },
          "CSS_ATTR": {
            "_type": "number",
            "_flags": "e",
            "_value": 22
          },
          "CSS_COUNTER": {
            "_type": "number",
            "_flags": "e",
            "_value": 23
          },
          "CSS_RECT": {
            "_type": "number",
            "_flags": "e",
            "_value": 24
          },
          "CSS_RGBCOLOR": {
            "_type": "number",
            "_flags": "e",
            "_value": 25
          },
          "CSS_VW": {
            "_type": "number",
            "_flags": "e",
            "_value": 26
          },
          "CSS_VH": {
            "_type": "number",
            "_flags": "e",
            "_value": 27
          },
          "CSS_VMIN": {
            "_type": "number",
            "_flags": "e",
            "_value": 28
          },
          "CSS_VMAX": {
            "_type": "number",
            "_flags": "e",
            "_value": 29
          },
          "CSS_INHERIT": {
            "_type": "number",
            "_value": 0
          },
          "CSS_PRIMITIVE_VALUE": {
            "_type": "number",
            "_value": 1
          },
          "CSS_VALUE_LIST": {
            "_type": "number",
            "_value": 2
          },
          "CSS_CUSTOM": {
            "_type": "number",
            "_value": 3
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "CSSPrimitiveValue"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "CSS_UNKNOWN": {
          "_type": "number",
          "_flags": "e",
          "_value": 0
        },
        "CSS_NUMBER": {
          "_type": "number",
          "_flags": "e",
          "_value": 1
        },
        "CSS_PERCENTAGE": {
          "_type": "number",
          "_flags": "e",
          "_value": 2
        },
        "CSS_EMS": {
          "_type": "number",
          "_flags": "e",
          "_value": 3
        },
        "CSS_EXS": {
          "_type": "number",
          "_flags": "e",
          "_value": 4
        },
        "CSS_PX": {
          "_type": "number",
          "_flags": "e",
          "_value": 5
        },
        "CSS_CM": {
          "_type": "number",
          "_flags": "e",
          "_value": 6
        },
        "CSS_MM": {
          "_type": "number",
          "_flags": "e",
          "_value": 7
        },
        "CSS_IN": {
          "_type": "number",
          "_flags": "e",
          "_value": 8
        },
        "CSS_PT": {
          "_type": "number",
          "_flags": "e",
          "_value": 9
        },
        "CSS_PC": {
          "_type": "number",
          "_flags": "e",
          "_value": 10
        },
        "CSS_DEG": {
          "_type": "number",
          "_flags": "e",
          "_value": 11
        },
        "CSS_RAD": {
          "_type": "number",
          "_flags": "e",
          "_value": 12
        },
        "CSS_GRAD": {
          "_type": "number",
          "_flags": "e",
          "_value": 13
        },
        "CSS_MS": {
          "_type": "number",
          "_flags": "e",
          "_value": 14
        },
        "CSS_S": {
          "_type": "number",
          "_flags": "e",
          "_value": 15
        },
        "CSS_HZ": {
          "_type": "number",
          "_flags": "e",
          "_value": 16
        },
        "CSS_KHZ": {
          "_type": "number",
          "_flags": "e",
          "_value": 17
        },
        "CSS_DIMENSION": {
          "_type": "number",
          "_flags": "e",
          "_value": 18
        },
        "CSS_STRING": {
          "_type": "number",
          "_flags": "e",
          "_value": 19
        },
        "CSS_URI": {
          "_type": "number",
          "_flags": "e",
          "_value": 20
        },
        "CSS_IDENT": {
          "_type": "number",
          "_flags": "e",
          "_value": 21
        },
        "CSS_ATTR": {
          "_type": "number",
          "_flags": "e",
          "_value": 22
        },
        "CSS_COUNTER": {
          "_type": "number",
          "_flags": "e",
          "_value": 23
        },
        "CSS_RECT": {
          "_type": "number",
          "_flags": "e",
          "_value": 24
        },
        "CSS_RGBCOLOR": {
          "_type": "number",
          "_flags": "e",
          "_value": 25
        },
        "CSS_VW": {
          "_type": "number",
          "_flags": "e",
          "_value": 26
        },
        "CSS_VH": {
          "_type": "number",
          "_flags": "e",
          "_value": 27
        },
        "CSS_VMIN": {
          "_type": "number",
          "_flags": "e",
          "_value": 28
        },
        "CSS_VMAX": {
          "_type": "number",
          "_flags": "e",
          "_value": 29
        },
        "CSS_INHERIT": {
          "_type": "number",
          "_value": 0
        },
        "CSS_PRIMITIVE_VALUE": {
          "_type": "number",
          "_value": 1
        },
        "CSS_VALUE_LIST": {
          "_type": "number",
          "_value": 2
        },
        "CSS_CUSTOM": {
          "_type": "number",
          "_value": 3
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function CSSPrimitiveValue() {\n    [native code]\n}",
        "_flags": "cw"
      }
    },
    {
      "path": "window",
      "propertyName": "RGBColor",
      "prevProperty": "CSSPrimitiveValue",
      "property": {
        "prototype": {
          "_protos": ["Object.prototype"],
          "red": {
            "_flags": "ce",
            "_accessException": "TypeError: The RGBColor.red getter can only be used on instances of RGBColor",
            "_get": "function red() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "green": {
            "_flags": "ce",
            "_accessException": "TypeError: The RGBColor.green getter can only be used on instances of RGBColor",
            "_get": "function green() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "blue": {
            "_flags": "ce",
            "_accessException": "TypeError: The RGBColor.blue getter can only be used on instances of RGBColor",
            "_get": "function blue() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "alpha": {
            "_flags": "ce",
            "_accessException": "TypeError: The RGBColor.alpha getter can only be used on instances of RGBColor",
            "_get": "function alpha() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "RGBColor"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function RGBColor() {\n    [native code]\n}",
        "_flags": "cw"
      }
    },
    {
      "path": "window",
      "propertyName": "Rect",
      "prevProperty": "RGBColor",
      "property": {
        "prototype": {
          "_protos": ["Object.prototype"],
          "top": {
            "_flags": "ce",
            "_accessException": "TypeError: The Rect.top getter can only be used on instances of Rect",
            "_get": "function top() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "right": {
            "_flags": "ce",
            "_accessException": "TypeError: The Rect.right getter can only be used on instances of Rect",
            "_get": "function right() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "bottom": {
            "_flags": "ce",
            "_accessException": "TypeError: The Rect.bottom getter can only be used on instances of Rect",
            "_get": "function bottom() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "left": {
            "_flags": "ce",
            "_accessException": "TypeError: The Rect.left getter can only be used on instances of Rect",
            "_get": "function left() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "Rect"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function Rect() {\n    [native code]\n}",
        "_flags": "cw"
      }
    },
    {
      "path": "window",
      "propertyName": "CSSValue",
      "prevProperty": "Rect",
      "property": {
        "prototype": {
          "_protos": ["Object.prototype"],
          "cssText": {
            "_flags": "ce",
            "_accessException": "TypeError: The CSSValue.cssText getter can only be used on instances of CSSValue",
            "_get": "function cssText() {\n    [native code]\n}",
            "_set": "function cssText() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "cssValueType": {
            "_flags": "ce",
            "_accessException": "TypeError: The CSSValue.cssValueType getter can only be used on instances of CSSValue",
            "_get": "function cssValueType() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "CSS_INHERIT": {
            "_type": "number",
            "_flags": "e",
            "_value": 0
          },
          "CSS_PRIMITIVE_VALUE": {
            "_type": "number",
            "_flags": "e",
            "_value": 1
          },
          "CSS_VALUE_LIST": {
            "_type": "number",
            "_flags": "e",
            "_value": 2
          },
          "CSS_CUSTOM": {
            "_type": "number",
            "_flags": "e",
            "_value": 3
          }
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "CSSValue"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "CSS_INHERIT": {
          "_type": "number",
          "_flags": "e",
          "_value": 0
        },
        "CSS_PRIMITIVE_VALUE": {
          "_type": "number",
          "_flags": "e",
          "_value": 1
        },
        "CSS_VALUE_LIST": {
          "_type": "number",
          "_flags": "e",
          "_value": 2
        },
        "CSS_CUSTOM": {
          "_type": "number",
          "_flags": "e",
          "_value": 3
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function CSSValue() {\n    [native code]\n}",
        "_flags": "cw"
      }
    },
    {
      "path": "window",
      "propertyName": "CSSValueList",
      "prevProperty": "CSSValue",
      "property": {
        "prototype": {
          "_protos": ["CSSValue.prototype", "Object.prototype"],
          "length": {
            "_flags": "ce",
            "_accessException": "TypeError: The CSSValueList.length getter can only be used on instances of CSSValueList",
            "_get": "function length() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "item": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "item"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function item() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "Symbol(Symbol.iterator)": "REF: window.DOMStringList.prototype.Symbol(Symbol.iterator)",
          "CSS_INHERIT": {
            "_type": "number",
            "_value": 0
          },
          "CSS_PRIMITIVE_VALUE": {
            "_type": "number",
            "_value": 1
          },
          "CSS_VALUE_LIST": {
            "_type": "number",
            "_value": 2
          },
          "CSS_CUSTOM": {
            "_type": "number",
            "_value": 3
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "CSSValueList"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "CSS_INHERIT": {
          "_type": "number",
          "_value": 0
        },
        "CSS_PRIMITIVE_VALUE": {
          "_type": "number",
          "_value": 1
        },
        "CSS_VALUE_LIST": {
          "_type": "number",
          "_value": 2
        },
        "CSS_CUSTOM": {
          "_type": "number",
          "_value": 3
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function CSSValueList() {\n    [native code]\n}",
        "_flags": "cw"
      }
    },
    {
      "path": "window",
      "propertyName": "FontFaceSet",
      "prevProperty": "FontFace",
      "property": {
        "prototype": {
          "_protos": ["EventTarget.prototype", "Object.prototype"],
          "size": {
            "_flags": "ce",
            "_accessException": "TypeError: The FontFaceSet.size getter can only be used on instances of FontFaceSet",
            "_get": "function size() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onloading": {
            "_flags": "ce",
            "_accessException": "TypeError: The FontFaceSet.onloading getter can only be used on instances of FontFaceSet",
            "_get": "function onloading() {\n    [native code]\n}",
            "_set": "function onloading() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onloadingdone": {
            "_flags": "ce",
            "_accessException": "TypeError: The FontFaceSet.onloadingdone getter can only be used on instances of FontFaceSet",
            "_get": "function onloadingdone() {\n    [native code]\n}",
            "_set": "function onloadingdone() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onloadingerror": {
            "_flags": "ce",
            "_accessException": "TypeError: The FontFaceSet.onloadingerror getter can only be used on instances of FontFaceSet",
            "_get": "function onloadingerror() {\n    [native code]\n}",
            "_set": "function onloadingerror() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "ready": {
            "_flags": "ce",
            "_accessException": "TypeError: The FontFaceSet.ready getter can only be used on instances of FontFaceSet",
            "_get": "function ready() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "status": {
            "_flags": "ce",
            "_accessException": "TypeError: The FontFaceSet.status getter can only be used on instances of FontFaceSet",
            "_get": "function status() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "has": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "has"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function has() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "add": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "add"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function add() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "delete": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "delete"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function delete() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "clear": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "clear"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function clear() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "load": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "load"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function load() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "check": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "check"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function check() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "entries": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "entries"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function entries() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "keys": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "keys"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function keys() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "values": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "values"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function values() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "forEach": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "forEach"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function forEach() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "Symbol(Symbol.iterator)": "REF: window.FontFaceSet.prototype.entries"
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "FontFaceSet"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "new()": "TypeError: Not enough arguments",
        "_function": "function FontFaceSet() {\n    [native code]\n}",
        "_flags": "cw"
      }
    },
    {
      "path": "window.Attr.prototype",
      "propertyName": "_type",
      "prevProperty": "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC",
      "property": "object"
    },
    {
      "path": "window.Attr.prototype",
      "propertyName": "_flags",
      "prevProperty": "_type",
      "property": ""
    },
    {
      "path": "window",
      "propertyName": "BeforeLoadEvent",
      "prevProperty": "Attr",
      "property": {
        "prototype": {
          "_protos": ["Event.prototype", "Object.prototype"],
          "url": {
            "_flags": "ce",
            "_accessException": "TypeError: The BeforeLoadEvent.url getter can only be used on instances of BeforeLoadEvent",
            "_get": "function url() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "NONE": {
            "_type": "number",
            "_value": 0
          },
          "CAPTURING_PHASE": {
            "_type": "number",
            "_value": 1
          },
          "AT_TARGET": {
            "_type": "number",
            "_value": 2
          },
          "BUBBLING_PHASE": {
            "_type": "number",
            "_value": 3
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "BeforeLoadEvent"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "NONE": {
          "_type": "number",
          "_value": 0
        },
        "CAPTURING_PHASE": {
          "_type": "number",
          "_value": 1
        },
        "AT_TARGET": {
          "_type": "number",
          "_value": 2
        },
        "BUBBLING_PHASE": {
          "_type": "number",
          "_value": 3
        },
        "new()": "TypeError: Not enough arguments",
        "_function": "function BeforeLoadEvent() {\n    [native code]\n}",
        "_flags": "cw"
      }
    },
    {
      "path": "window.DOMException.prototype",
      "propertyName": "_type",
      "prevProperty": "DATA_CLONE_ERR",
      "property": "object"
    },
    {
      "path": "window.DOMPoint.prototype",
      "propertyName": "_type",
      "prevProperty": "w",
      "property": "object"
    },
    {
      "path": "window.DOMException.prototype",
      "propertyName": "_flags",
      "prevProperty": "_type",
      "property": ""
    },
    {
      "path": "window.DOMPoint.prototype",
      "propertyName": "_flags",
      "prevProperty": "_type",
      "property": ""
    },
    {
      "path": "window.Document.prototype",
      "propertyName": "origin",
      "prevProperty": "documentURI",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The Document.origin getter can only be used on instances of Document",
        "_get": "function origin() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.Document.prototype.all",
      "propertyName": "_set",
      "prevProperty": "_get",
      "property": "function all() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.all",
      "propertyName": "_setToStringToString",
      "prevProperty": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype",
      "propertyName": "onbeforeinput",
      "prevProperty": "onbeforecut",
      "property": {
        "_flags": "c",
        "_accessException": "TypeError: The Document.onbeforeinput getter can only be used on instances of Document",
        "_get": "function onbeforeinput() {\n    [native code]\n}",
        "_set": "function onbeforeinput() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.Document.prototype",
      "propertyName": "webkitFullScreenKeyboardInputAllowed",
      "prevProperty": "webkitIsFullScreen",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The Document.webkitFullScreenKeyboardInputAllowed getter can only be used on instances of Document",
        "_get": "function webkitFullScreenKeyboardInputAllowed() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.Document.prototype",
      "propertyName": "onrejectionhandled",
      "prevProperty": "onratechange",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The Document.onrejectionhandled getter can only be used on instances of Document",
        "_get": "function onrejectionhandled() {\n    [native code]\n}",
        "_set": "function onrejectionhandled() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.Document.prototype",
      "propertyName": "onunhandledrejection",
      "prevProperty": "ontoggle",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The Document.onunhandledrejection getter can only be used on instances of Document",
        "_get": "function onunhandledrejection() {\n    [native code]\n}",
        "_set": "function onunhandledrejection() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.Document.prototype",
      "propertyName": "ontransitionrun",
      "prevProperty": "ontransitionend",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The Document.ontransitionrun getter can only be used on instances of Document",
        "_get": "function ontransitionrun() {\n    [native code]\n}",
        "_set": "function ontransitionrun() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.Document.prototype",
      "propertyName": "ontransitionstart",
      "prevProperty": "ontransitionrun",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The Document.ontransitionstart getter can only be used on instances of Document",
        "_get": "function ontransitionstart() {\n    [native code]\n}",
        "_set": "function ontransitionstart() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.Document.prototype",
      "propertyName": "ontransitioncancel",
      "prevProperty": "ontransitionstart",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The Document.ontransitioncancel getter can only be used on instances of Document",
        "_get": "function ontransitioncancel() {\n    [native code]\n}",
        "_set": "function ontransitioncancel() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.Document.prototype",
      "propertyName": "onanimationcancel",
      "prevProperty": "onanimationstart",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The Document.onanimationcancel getter can only be used on instances of Document",
        "_get": "function onanimationcancel() {\n    [native code]\n}",
        "_set": "function onanimationcancel() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.Document.prototype",
      "propertyName": "onwebkitmouseforcechanged",
      "prevProperty": "onwheel",
      "property": {
        "_flags": "c",
        "_accessException": "TypeError: The Document.onwebkitmouseforcechanged getter can only be used on instances of Document",
        "_get": "function onwebkitmouseforcechanged() {\n    [native code]\n}",
        "_set": "function onwebkitmouseforcechanged() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.Document.prototype",
      "propertyName": "onwebkitmouseforcedown",
      "prevProperty": "onwebkitmouseforcechanged",
      "property": {
        "_flags": "c",
        "_accessException": "TypeError: The Document.onwebkitmouseforcedown getter can only be used on instances of Document",
        "_get": "function onwebkitmouseforcedown() {\n    [native code]\n}",
        "_set": "function onwebkitmouseforcedown() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.Document.prototype",
      "propertyName": "onwebkitmouseforcewillbegin",
      "prevProperty": "onwebkitmouseforcedown",
      "property": {
        "_flags": "c",
        "_accessException": "TypeError: The Document.onwebkitmouseforcewillbegin getter can only be used on instances of Document",
        "_get": "function onwebkitmouseforcewillbegin() {\n    [native code]\n}",
        "_set": "function onwebkitmouseforcewillbegin() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.Document.prototype",
      "propertyName": "onwebkitmouseforceup",
      "prevProperty": "onwebkitmouseforcewillbegin",
      "property": {
        "_flags": "c",
        "_accessException": "TypeError: The Document.onwebkitmouseforceup getter can only be used on instances of Document",
        "_get": "function onwebkitmouseforceup() {\n    [native code]\n}",
        "_set": "function onwebkitmouseforceup() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.Document.prototype",
      "propertyName": "getOverrideStyle",
      "prevProperty": "exitPointerLock",
      "property": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "getOverrideStyle"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "_function": "function getOverrideStyle() {\n    [native code]\n}",
        "_flags": "cew"
      }
    },
    {
      "path": "window.Document.prototype",
      "propertyName": "getCSSCanvasContext",
      "prevProperty": "caretRangeFromPoint",
      "property": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "getCSSCanvasContext"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 4
        },
        "_function": "function getCSSCanvasContext() {\n    [native code]\n}",
        "_flags": "cew"
      }
    },
    {
      "path": "window.Document.prototype",
      "propertyName": "hasStorageAccess",
      "prevProperty": "elementsFromPoint",
      "property": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "hasStorageAccess"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "_function": "function hasStorageAccess() {\n    [native code]\n}",
        "_flags": "cew"
      }
    },
    {
      "path": "window.Document.prototype",
      "propertyName": "requestStorageAccess",
      "prevProperty": "hasStorageAccess",
      "property": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "requestStorageAccess"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "_function": "function requestStorageAccess() {\n    [native code]\n}",
        "_flags": "cew"
      }
    },
    {
      "path": "window.Document.new()",
      "propertyName": "origin",
      "prevProperty": "documentURI",
      "property": {
        "_type": "string",
        "_value": "https://<host>"
      }
    },
    {
      "path": "window.Document.new().fonts",
      "propertyName": "size",
      "prevProperty": "_protos",
      "property": {
        "_type": "number",
        "_value": 0
      }
    },
    {
      "path": "window.Document.new()",
      "propertyName": "webkitFullScreenKeyboardInputAllowed",
      "prevProperty": "webkitIsFullScreen",
      "property": {
        "_type": "boolean",
        "_value": false
      }
    },
    {
      "path": "window.Document.new()",
      "propertyName": "onrejectionhandled",
      "prevProperty": "onratechange",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.Document.new()",
      "propertyName": "onunhandledrejection",
      "prevProperty": "ontoggle",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.Document.new()",
      "propertyName": "ontransitionrun",
      "prevProperty": "ontransitionend",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.Document.new()",
      "propertyName": "ontransitionstart",
      "prevProperty": "ontransitionrun",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.Document.new()",
      "propertyName": "ontransitioncancel",
      "prevProperty": "ontransitionstart",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.Document.new()",
      "propertyName": "onanimationcancel",
      "prevProperty": "onanimationstart",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.DocumentFragment.prototype",
      "propertyName": "_type",
      "prevProperty": "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC",
      "property": "object"
    },
    {
      "path": "window.DocumentFragment.prototype",
      "propertyName": "_flags",
      "prevProperty": "_type",
      "property": ""
    },
    {
      "path": "window.Element.prototype",
      "propertyName": "onselectstart",
      "prevProperty": "outerHTML",
      "property": {
        "_flags": "c",
        "_accessException": "TypeError: The Element.onselectstart getter can only be used on instances of Element",
        "_get": "function onselectstart() {\n    [native code]\n}",
        "_set": "function onselectstart() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.Element.prototype",
      "propertyName": "onwebkitanimationend",
      "prevProperty": "onselectstart",
      "property": {
        "_flags": "c",
        "_accessException": "TypeError: The Element.onwebkitanimationend getter can only be used on instances of Element",
        "_get": "function onwebkitanimationend() {\n    [native code]\n}",
        "_set": "function onwebkitanimationend() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.Element.prototype",
      "propertyName": "onwebkitanimationiteration",
      "prevProperty": "onwebkitanimationend",
      "property": {
        "_flags": "c",
        "_accessException": "TypeError: The Element.onwebkitanimationiteration getter can only be used on instances of Element",
        "_get": "function onwebkitanimationiteration() {\n    [native code]\n}",
        "_set": "function onwebkitanimationiteration() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.Element.prototype",
      "propertyName": "onwebkitanimationstart",
      "prevProperty": "onwebkitanimationiteration",
      "property": {
        "_flags": "c",
        "_accessException": "TypeError: The Element.onwebkitanimationstart getter can only be used on instances of Element",
        "_get": "function onwebkitanimationstart() {\n    [native code]\n}",
        "_set": "function onwebkitanimationstart() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.Element.prototype",
      "propertyName": "onwebkittransitionend",
      "prevProperty": "onwebkitanimationstart",
      "property": {
        "_flags": "c",
        "_accessException": "TypeError: The Element.onwebkittransitionend getter can only be used on instances of Element",
        "_get": "function onwebkittransitionend() {\n    [native code]\n}",
        "_set": "function onwebkittransitionend() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.Element.prototype",
      "propertyName": "onfocusin",
      "prevProperty": "onwebkitfullscreenerror",
      "property": {
        "_flags": "c",
        "_accessException": "TypeError: The Element.onfocusin getter can only be used on instances of Element",
        "_get": "function onfocusin() {\n    [native code]\n}",
        "_set": "function onfocusin() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.Element.prototype",
      "propertyName": "onfocusout",
      "prevProperty": "onfocusin",
      "property": {
        "_flags": "c",
        "_accessException": "TypeError: The Element.onfocusout getter can only be used on instances of Element",
        "_get": "function onfocusout() {\n    [native code]\n}",
        "_set": "function onfocusout() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.Element.prototype",
      "propertyName": "onbeforeload",
      "prevProperty": "onfocusout",
      "property": {
        "_flags": "c",
        "_accessException": "TypeError: The Element.onbeforeload getter can only be used on instances of Element",
        "_get": "function onbeforeload() {\n    [native code]\n}",
        "_set": "function onbeforeload() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.Element.prototype",
      "propertyName": "onwebkitneedkey",
      "prevProperty": "onbeforeload",
      "property": {
        "_flags": "c",
        "_accessException": "TypeError: The Element.onwebkitneedkey getter can only be used on instances of Element",
        "_get": "function onwebkitneedkey() {\n    [native code]\n}",
        "_set": "function onwebkitneedkey() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.Element.prototype",
      "propertyName": "onwebkitpresentationmodechanged",
      "prevProperty": "onwebkitneedkey",
      "property": {
        "_flags": "c",
        "_accessException": "TypeError: The Element.onwebkitpresentationmodechanged getter can only be used on instances of Element",
        "_get": "function onwebkitpresentationmodechanged() {\n    [native code]\n}",
        "_set": "function onwebkitpresentationmodechanged() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.Element.prototype",
      "propertyName": "onwebkitcurrentplaybacktargetiswirelesschanged",
      "prevProperty": "onwebkitpresentationmodechanged",
      "property": {
        "_flags": "c",
        "_accessException": "TypeError: The Element.onwebkitcurrentplaybacktargetiswirelesschanged getter can only be used on instances of Element",
        "_get": "function onwebkitcurrentplaybacktargetiswirelesschanged() {\n    [native code]\n}",
        "_set": "function onwebkitcurrentplaybacktargetiswirelesschanged() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.Element.prototype",
      "propertyName": "onwebkitplaybacktargetavailabilitychanged",
      "prevProperty": "onwebkitcurrentplaybacktargetiswirelesschanged",
      "property": {
        "_flags": "c",
        "_accessException": "TypeError: The Element.onwebkitplaybacktargetavailabilitychanged getter can only be used on instances of Element",
        "_get": "function onwebkitplaybacktargetavailabilitychanged() {\n    [native code]\n}",
        "_set": "function onwebkitplaybacktargetavailabilitychanged() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.Element.prototype",
      "propertyName": "role",
      "prevProperty": "onwebkitplaybacktargetavailabilitychanged",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The Element.role getter can only be used on instances of Element",
        "_get": "function role() {\n    [native code]\n}",
        "_set": "function role() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.Element.prototype",
      "propertyName": "ariaAtomic",
      "prevProperty": "role",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The Element.ariaAtomic getter can only be used on instances of Element",
        "_get": "function ariaAtomic() {\n    [native code]\n}",
        "_set": "function ariaAtomic() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.Element.prototype",
      "propertyName": "ariaAutoComplete",
      "prevProperty": "ariaAtomic",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The Element.ariaAutoComplete getter can only be used on instances of Element",
        "_get": "function ariaAutoComplete() {\n    [native code]\n}",
        "_set": "function ariaAutoComplete() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.Element.prototype",
      "propertyName": "ariaBusy",
      "prevProperty": "ariaAutoComplete",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The Element.ariaBusy getter can only be used on instances of Element",
        "_get": "function ariaBusy() {\n    [native code]\n}",
        "_set": "function ariaBusy() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.Element.prototype",
      "propertyName": "ariaChecked",
      "prevProperty": "ariaBusy",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The Element.ariaChecked getter can only be used on instances of Element",
        "_get": "function ariaChecked() {\n    [native code]\n}",
        "_set": "function ariaChecked() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.Element.prototype",
      "propertyName": "ariaColCount",
      "prevProperty": "ariaChecked",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The Element.ariaColCount getter can only be used on instances of Element",
        "_get": "function ariaColCount() {\n    [native code]\n}",
        "_set": "function ariaColCount() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.Element.prototype",
      "propertyName": "ariaColIndex",
      "prevProperty": "ariaColCount",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The Element.ariaColIndex getter can only be used on instances of Element",
        "_get": "function ariaColIndex() {\n    [native code]\n}",
        "_set": "function ariaColIndex() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.Element.prototype",
      "propertyName": "ariaColSpan",
      "prevProperty": "ariaColIndex",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The Element.ariaColSpan getter can only be used on instances of Element",
        "_get": "function ariaColSpan() {\n    [native code]\n}",
        "_set": "function ariaColSpan() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.Element.prototype",
      "propertyName": "ariaCurrent",
      "prevProperty": "ariaColSpan",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The Element.ariaCurrent getter can only be used on instances of Element",
        "_get": "function ariaCurrent() {\n    [native code]\n}",
        "_set": "function ariaCurrent() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.Element.prototype",
      "propertyName": "ariaDisabled",
      "prevProperty": "ariaCurrent",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The Element.ariaDisabled getter can only be used on instances of Element",
        "_get": "function ariaDisabled() {\n    [native code]\n}",
        "_set": "function ariaDisabled() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.Element.prototype",
      "propertyName": "ariaExpanded",
      "prevProperty": "ariaDisabled",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The Element.ariaExpanded getter can only be used on instances of Element",
        "_get": "function ariaExpanded() {\n    [native code]\n}",
        "_set": "function ariaExpanded() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.Element.prototype",
      "propertyName": "ariaHasPopup",
      "prevProperty": "ariaExpanded",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The Element.ariaHasPopup getter can only be used on instances of Element",
        "_get": "function ariaHasPopup() {\n    [native code]\n}",
        "_set": "function ariaHasPopup() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.Element.prototype",
      "propertyName": "ariaHidden",
      "prevProperty": "ariaHasPopup",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The Element.ariaHidden getter can only be used on instances of Element",
        "_get": "function ariaHidden() {\n    [native code]\n}",
        "_set": "function ariaHidden() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.Element.prototype",
      "propertyName": "ariaInvalid",
      "prevProperty": "ariaHidden",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The Element.ariaInvalid getter can only be used on instances of Element",
        "_get": "function ariaInvalid() {\n    [native code]\n}",
        "_set": "function ariaInvalid() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.Element.prototype",
      "propertyName": "ariaKeyShortcuts",
      "prevProperty": "ariaInvalid",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The Element.ariaKeyShortcuts getter can only be used on instances of Element",
        "_get": "function ariaKeyShortcuts() {\n    [native code]\n}",
        "_set": "function ariaKeyShortcuts() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.Element.prototype",
      "propertyName": "ariaLabel",
      "prevProperty": "ariaKeyShortcuts",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The Element.ariaLabel getter can only be used on instances of Element",
        "_get": "function ariaLabel() {\n    [native code]\n}",
        "_set": "function ariaLabel() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.Element.prototype",
      "propertyName": "ariaLevel",
      "prevProperty": "ariaLabel",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The Element.ariaLevel getter can only be used on instances of Element",
        "_get": "function ariaLevel() {\n    [native code]\n}",
        "_set": "function ariaLevel() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.Element.prototype",
      "propertyName": "ariaLive",
      "prevProperty": "ariaLevel",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The Element.ariaLive getter can only be used on instances of Element",
        "_get": "function ariaLive() {\n    [native code]\n}",
        "_set": "function ariaLive() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.Element.prototype",
      "propertyName": "ariaModal",
      "prevProperty": "ariaLive",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The Element.ariaModal getter can only be used on instances of Element",
        "_get": "function ariaModal() {\n    [native code]\n}",
        "_set": "function ariaModal() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.Element.prototype",
      "propertyName": "ariaMultiLine",
      "prevProperty": "ariaModal",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The Element.ariaMultiLine getter can only be used on instances of Element",
        "_get": "function ariaMultiLine() {\n    [native code]\n}",
        "_set": "function ariaMultiLine() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.Element.prototype",
      "propertyName": "ariaMultiSelectable",
      "prevProperty": "ariaMultiLine",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The Element.ariaMultiSelectable getter can only be used on instances of Element",
        "_get": "function ariaMultiSelectable() {\n    [native code]\n}",
        "_set": "function ariaMultiSelectable() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.Element.prototype",
      "propertyName": "ariaOrientation",
      "prevProperty": "ariaMultiSelectable",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The Element.ariaOrientation getter can only be used on instances of Element",
        "_get": "function ariaOrientation() {\n    [native code]\n}",
        "_set": "function ariaOrientation() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.Element.prototype",
      "propertyName": "ariaPlaceholder",
      "prevProperty": "ariaOrientation",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The Element.ariaPlaceholder getter can only be used on instances of Element",
        "_get": "function ariaPlaceholder() {\n    [native code]\n}",
        "_set": "function ariaPlaceholder() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.Element.prototype",
      "propertyName": "ariaPosInSet",
      "prevProperty": "ariaPlaceholder",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The Element.ariaPosInSet getter can only be used on instances of Element",
        "_get": "function ariaPosInSet() {\n    [native code]\n}",
        "_set": "function ariaPosInSet() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.Element.prototype",
      "propertyName": "ariaPressed",
      "prevProperty": "ariaPosInSet",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The Element.ariaPressed getter can only be used on instances of Element",
        "_get": "function ariaPressed() {\n    [native code]\n}",
        "_set": "function ariaPressed() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.Element.prototype",
      "propertyName": "ariaReadOnly",
      "prevProperty": "ariaPressed",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The Element.ariaReadOnly getter can only be used on instances of Element",
        "_get": "function ariaReadOnly() {\n    [native code]\n}",
        "_set": "function ariaReadOnly() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.Element.prototype",
      "propertyName": "ariaRelevant",
      "prevProperty": "ariaReadOnly",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The Element.ariaRelevant getter can only be used on instances of Element",
        "_get": "function ariaRelevant() {\n    [native code]\n}",
        "_set": "function ariaRelevant() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.Element.prototype",
      "propertyName": "ariaRequired",
      "prevProperty": "ariaRelevant",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The Element.ariaRequired getter can only be used on instances of Element",
        "_get": "function ariaRequired() {\n    [native code]\n}",
        "_set": "function ariaRequired() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.Element.prototype",
      "propertyName": "ariaRoleDescription",
      "prevProperty": "ariaRequired",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The Element.ariaRoleDescription getter can only be used on instances of Element",
        "_get": "function ariaRoleDescription() {\n    [native code]\n}",
        "_set": "function ariaRoleDescription() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.Element.prototype",
      "propertyName": "ariaRowCount",
      "prevProperty": "ariaRoleDescription",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The Element.ariaRowCount getter can only be used on instances of Element",
        "_get": "function ariaRowCount() {\n    [native code]\n}",
        "_set": "function ariaRowCount() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.Element.prototype",
      "propertyName": "ariaRowIndex",
      "prevProperty": "ariaRowCount",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The Element.ariaRowIndex getter can only be used on instances of Element",
        "_get": "function ariaRowIndex() {\n    [native code]\n}",
        "_set": "function ariaRowIndex() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.Element.prototype",
      "propertyName": "ariaRowSpan",
      "prevProperty": "ariaRowIndex",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The Element.ariaRowSpan getter can only be used on instances of Element",
        "_get": "function ariaRowSpan() {\n    [native code]\n}",
        "_set": "function ariaRowSpan() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.Element.prototype",
      "propertyName": "ariaSelected",
      "prevProperty": "ariaRowSpan",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The Element.ariaSelected getter can only be used on instances of Element",
        "_get": "function ariaSelected() {\n    [native code]\n}",
        "_set": "function ariaSelected() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.Element.prototype",
      "propertyName": "ariaSetSize",
      "prevProperty": "ariaSelected",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The Element.ariaSetSize getter can only be used on instances of Element",
        "_get": "function ariaSetSize() {\n    [native code]\n}",
        "_set": "function ariaSetSize() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.Element.prototype",
      "propertyName": "ariaSort",
      "prevProperty": "ariaSetSize",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The Element.ariaSort getter can only be used on instances of Element",
        "_get": "function ariaSort() {\n    [native code]\n}",
        "_set": "function ariaSort() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.Element.prototype",
      "propertyName": "ariaValueMax",
      "prevProperty": "ariaSort",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The Element.ariaValueMax getter can only be used on instances of Element",
        "_get": "function ariaValueMax() {\n    [native code]\n}",
        "_set": "function ariaValueMax() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.Element.prototype",
      "propertyName": "ariaValueMin",
      "prevProperty": "ariaValueMax",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The Element.ariaValueMin getter can only be used on instances of Element",
        "_get": "function ariaValueMin() {\n    [native code]\n}",
        "_set": "function ariaValueMin() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.Element.prototype",
      "propertyName": "ariaValueNow",
      "prevProperty": "ariaValueMin",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The Element.ariaValueNow getter can only be used on instances of Element",
        "_get": "function ariaValueNow() {\n    [native code]\n}",
        "_set": "function ariaValueNow() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.Element.prototype",
      "propertyName": "ariaValueText",
      "prevProperty": "ariaValueNow",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The Element.ariaValueText getter can only be used on instances of Element",
        "_get": "function ariaValueText() {\n    [native code]\n}",
        "_set": "function ariaValueText() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.Element.prototype",
      "propertyName": "oncopy",
      "prevProperty": "ariaValueText",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The Element.oncopy getter can only be used on instances of Element",
        "_get": "function oncopy() {\n    [native code]\n}",
        "_set": "function oncopy() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.Element.prototype",
      "propertyName": "oncut",
      "prevProperty": "oncopy",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The Element.oncut getter can only be used on instances of Element",
        "_get": "function oncut() {\n    [native code]\n}",
        "_set": "function oncut() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.Element.prototype",
      "propertyName": "onpaste",
      "prevProperty": "oncut",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The Element.onpaste getter can only be used on instances of Element",
        "_get": "function onpaste() {\n    [native code]\n}",
        "_set": "function onpaste() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.Element.prototype",
      "propertyName": "onbeforeinput",
      "prevProperty": "onbeforecut",
      "property": {
        "_flags": "c",
        "_accessException": "TypeError: The Element.onbeforeinput getter can only be used on instances of Element",
        "_get": "function onbeforeinput() {\n    [native code]\n}",
        "_set": "function onbeforeinput() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.EventTarget.prototype._protos",
      "propertyName": "1",
      "prevProperty": "0",
      "property": "Object.prototype"
    },
    {
      "path": "window.EventTarget.prototype.addEventListener",
      "propertyName": "_func",
      "prevProperty": "length",
      "property": "function addEventListener() {\n    [native code]\n}"
    },
    {
      "path": "window.EventTarget.prototype.removeEventListener",
      "propertyName": "_func",
      "prevProperty": "length",
      "property": "function removeEventListener() {\n    [native code]\n}"
    },
    {
      "path": "window.EventTarget.prototype.dispatchEvent",
      "propertyName": "_func",
      "prevProperty": "length",
      "property": "function dispatchEvent() {\n    [native code]\n}"
    },
    {
      "path": "window.HashChangeEvent.prototype",
      "propertyName": "initHashChangeEvent",
      "prevProperty": "newURL",
      "property": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "initHashChangeEvent"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "_function": "function initHashChangeEvent() {\n    [native code]\n}",
        "_flags": "cew"
      }
    },
    {
      "path": "window.KeyboardEvent.prototype",
      "propertyName": "keyIdentifier",
      "prevProperty": "isComposing",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The KeyboardEvent.keyIdentifier getter can only be used on instances of KeyboardEvent",
        "_get": "function keyIdentifier() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.KeyboardEvent.prototype",
      "propertyName": "keyLocation",
      "prevProperty": "keyIdentifier",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The KeyboardEvent.keyLocation getter can only be used on instances of KeyboardEvent",
        "_get": "function keyLocation() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.KeyboardEvent.prototype",
      "propertyName": "altGraphKey",
      "prevProperty": "keyLocation",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The KeyboardEvent.altGraphKey getter can only be used on instances of KeyboardEvent",
        "_get": "function altGraphKey() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.KeyboardEvent.prototype",
      "propertyName": "which",
      "prevProperty": "keyCode",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The KeyboardEvent.which getter can only be used on instances of KeyboardEvent",
        "_get": "function which() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.MouseEvent.prototype",
      "propertyName": "webkitForce",
      "prevProperty": "movementY",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The MouseEvent.webkitForce getter can only be used on instances of MouseEvent",
        "_get": "function webkitForce() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.MouseEvent.prototype",
      "propertyName": "dataTransfer",
      "prevProperty": "toElement",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The MouseEvent.dataTransfer getter can only be used on instances of MouseEvent",
        "_get": "function dataTransfer() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.MouseEvent.prototype",
      "propertyName": "WEBKIT_FORCE_AT_MOUSE_DOWN",
      "prevProperty": "initMouseEvent",
      "property": {
        "_type": "number",
        "_flags": "e",
        "_value": 1
      }
    },
    {
      "path": "window.MouseEvent.prototype",
      "propertyName": "WEBKIT_FORCE_AT_FORCE_MOUSE_DOWN",
      "prevProperty": "WEBKIT_FORCE_AT_MOUSE_DOWN",
      "property": {
        "_type": "number",
        "_flags": "e",
        "_value": 2
      }
    },
    {
      "path": "window.MouseEvent.prototype",
      "propertyName": "_type",
      "prevProperty": "BUBBLING_PHASE",
      "property": "object"
    },
    {
      "path": "window.MouseEvent.prototype",
      "propertyName": "_flags",
      "prevProperty": "_type",
      "property": ""
    },
    {
      "path": "window.MouseEvent",
      "propertyName": "WEBKIT_FORCE_AT_MOUSE_DOWN",
      "prevProperty": "length",
      "property": {
        "_type": "number",
        "_flags": "e",
        "_value": 1
      }
    },
    {
      "path": "window.MouseEvent",
      "propertyName": "WEBKIT_FORCE_AT_FORCE_MOUSE_DOWN",
      "prevProperty": "WEBKIT_FORCE_AT_MOUSE_DOWN",
      "property": {
        "_type": "number",
        "_flags": "e",
        "_value": 2
      }
    },
    {
      "path": "window",
      "propertyName": "OverflowEvent",
      "prevProperty": "NodeList",
      "property": {
        "prototype": {
          "_protos": ["Event.prototype", "Object.prototype"],
          "orient": {
            "_flags": "ce",
            "_accessException": "TypeError: The OverflowEvent.orient getter can only be used on instances of OverflowEvent",
            "_get": "function orient() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "horizontalOverflow": {
            "_flags": "ce",
            "_accessException": "TypeError: The OverflowEvent.horizontalOverflow getter can only be used on instances of OverflowEvent",
            "_get": "function horizontalOverflow() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "verticalOverflow": {
            "_flags": "ce",
            "_accessException": "TypeError: The OverflowEvent.verticalOverflow getter can only be used on instances of OverflowEvent",
            "_get": "function verticalOverflow() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "HORIZONTAL": {
            "_type": "number",
            "_flags": "e",
            "_value": 0
          },
          "VERTICAL": {
            "_type": "number",
            "_flags": "e",
            "_value": 1
          },
          "BOTH": {
            "_type": "number",
            "_flags": "e",
            "_value": 2
          },
          "NONE": {
            "_type": "number",
            "_value": 0
          },
          "CAPTURING_PHASE": {
            "_type": "number",
            "_value": 1
          },
          "AT_TARGET": {
            "_type": "number",
            "_value": 2
          },
          "BUBBLING_PHASE": {
            "_type": "number",
            "_value": 3
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "OverflowEvent"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "HORIZONTAL": {
          "_type": "number",
          "_flags": "e",
          "_value": 0
        },
        "VERTICAL": {
          "_type": "number",
          "_flags": "e",
          "_value": 1
        },
        "BOTH": {
          "_type": "number",
          "_flags": "e",
          "_value": 2
        },
        "NONE": {
          "_type": "number",
          "_value": 0
        },
        "CAPTURING_PHASE": {
          "_type": "number",
          "_value": 1
        },
        "AT_TARGET": {
          "_type": "number",
          "_value": 2
        },
        "BUBBLING_PHASE": {
          "_type": "number",
          "_value": 3
        },
        "new()": "TypeError: Not enough arguments",
        "_function": "function OverflowEvent() {\n    [native code]\n}",
        "_flags": "cw"
      }
    },
    {
      "path": "window.Range.prototype",
      "propertyName": "compareNode",
      "prevProperty": "expand",
      "property": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "compareNode"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "_function": "function compareNode() {\n    [native code]\n}",
        "_flags": "cew"
      }
    },
    {
      "path": "window.Range.prototype",
      "propertyName": "NODE_BEFORE",
      "prevProperty": "END_TO_START",
      "property": {
        "_type": "number",
        "_flags": "e",
        "_value": 0
      }
    },
    {
      "path": "window.Range.prototype",
      "propertyName": "NODE_AFTER",
      "prevProperty": "NODE_BEFORE",
      "property": {
        "_type": "number",
        "_flags": "e",
        "_value": 1
      }
    },
    {
      "path": "window.Range.prototype",
      "propertyName": "NODE_BEFORE_AND_AFTER",
      "prevProperty": "NODE_AFTER",
      "property": {
        "_type": "number",
        "_flags": "e",
        "_value": 2
      }
    },
    {
      "path": "window.Range.prototype",
      "propertyName": "NODE_INSIDE",
      "prevProperty": "NODE_BEFORE_AND_AFTER",
      "property": {
        "_type": "number",
        "_flags": "e",
        "_value": 3
      }
    },
    {
      "path": "window.Range",
      "propertyName": "NODE_BEFORE",
      "prevProperty": "END_TO_START",
      "property": {
        "_type": "number",
        "_flags": "e",
        "_value": 0
      }
    },
    {
      "path": "window.Range",
      "propertyName": "NODE_AFTER",
      "prevProperty": "NODE_BEFORE",
      "property": {
        "_type": "number",
        "_flags": "e",
        "_value": 1
      }
    },
    {
      "path": "window.Range",
      "propertyName": "NODE_BEFORE_AND_AFTER",
      "prevProperty": "NODE_AFTER",
      "property": {
        "_type": "number",
        "_flags": "e",
        "_value": 2
      }
    },
    {
      "path": "window.Range",
      "propertyName": "NODE_INSIDE",
      "prevProperty": "NODE_BEFORE_AND_AFTER",
      "property": {
        "_type": "number",
        "_flags": "e",
        "_value": 3
      }
    },
    {
      "path": "window.Range.new()",
      "propertyName": "NODE_BEFORE",
      "prevProperty": "END_TO_START",
      "property": {
        "_type": "number",
        "_value": 0
      }
    },
    {
      "path": "window.Range.new()",
      "propertyName": "NODE_AFTER",
      "prevProperty": "NODE_BEFORE",
      "property": {
        "_type": "number",
        "_value": 1
      }
    },
    {
      "path": "window.Range.new()",
      "propertyName": "NODE_BEFORE_AND_AFTER",
      "prevProperty": "NODE_AFTER",
      "property": {
        "_type": "number",
        "_value": 2
      }
    },
    {
      "path": "window.Range.new()",
      "propertyName": "NODE_INSIDE",
      "prevProperty": "NODE_BEFORE_AND_AFTER",
      "property": {
        "_type": "number",
        "_value": 3
      }
    },
    {
      "path": "window.UIEvent.prototype",
      "propertyName": "layerX",
      "prevProperty": "detail",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The UIEvent.layerX getter can only be used on instances of UIEvent",
        "_get": "function layerX() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.UIEvent.prototype",
      "propertyName": "layerY",
      "prevProperty": "layerX",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The UIEvent.layerY getter can only be used on instances of UIEvent",
        "_get": "function layerY() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.UIEvent.prototype",
      "propertyName": "pageX",
      "prevProperty": "layerY",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The UIEvent.pageX getter can only be used on instances of UIEvent",
        "_get": "function pageX() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.UIEvent.prototype",
      "propertyName": "pageY",
      "prevProperty": "pageX",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The UIEvent.pageY getter can only be used on instances of UIEvent",
        "_get": "function pageY() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window",
      "propertyName": "WebKitAnimationEvent",
      "prevProperty": "UIEvent",
      "property": {
        "prototype": {
          "_protos": ["Event.prototype", "Object.prototype"],
          "animationName": {
            "_flags": "ce",
            "_accessException": "TypeError: The WebKitAnimationEvent.animationName getter can only be used on instances of WebKitAnimationEvent",
            "_get": "function animationName() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "elapsedTime": {
            "_flags": "ce",
            "_accessException": "TypeError: The WebKitAnimationEvent.elapsedTime getter can only be used on instances of WebKitAnimationEvent",
            "_get": "function elapsedTime() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "NONE": {
            "_type": "number",
            "_value": 0
          },
          "CAPTURING_PHASE": {
            "_type": "number",
            "_value": 1
          },
          "AT_TARGET": {
            "_type": "number",
            "_value": 2
          },
          "BUBBLING_PHASE": {
            "_type": "number",
            "_value": 3
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "WebKitAnimationEvent"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "NONE": {
          "_type": "number",
          "_value": 0
        },
        "CAPTURING_PHASE": {
          "_type": "number",
          "_value": 1
        },
        "AT_TARGET": {
          "_type": "number",
          "_value": 2
        },
        "BUBBLING_PHASE": {
          "_type": "number",
          "_value": 3
        },
        "new()": "TypeError: Not enough arguments",
        "_function": "function WebKitAnimationEvent() {\n    [native code]\n}",
        "_flags": "cw"
      }
    },
    {
      "path": "window",
      "propertyName": "WebKitTransitionEvent",
      "prevProperty": "WebKitAnimationEvent",
      "property": {
        "prototype": {
          "_protos": ["Event.prototype", "Object.prototype"],
          "propertyName": {
            "_flags": "ce",
            "_accessException": "TypeError: The WebKitTransitionEvent.propertyName getter can only be used on instances of WebKitTransitionEvent",
            "_get": "function propertyName() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "elapsedTime": {
            "_flags": "ce",
            "_accessException": "TypeError: The WebKitTransitionEvent.elapsedTime getter can only be used on instances of WebKitTransitionEvent",
            "_get": "function elapsedTime() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "pseudoElement": {
            "_flags": "ce",
            "_accessException": "TypeError: The WebKitTransitionEvent.pseudoElement getter can only be used on instances of WebKitTransitionEvent",
            "_get": "function pseudoElement() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "NONE": {
            "_type": "number",
            "_value": 0
          },
          "CAPTURING_PHASE": {
            "_type": "number",
            "_value": 1
          },
          "AT_TARGET": {
            "_type": "number",
            "_value": 2
          },
          "BUBBLING_PHASE": {
            "_type": "number",
            "_value": 3
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "WebKitTransitionEvent"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "NONE": {
          "_type": "number",
          "_value": 0
        },
        "CAPTURING_PHASE": {
          "_type": "number",
          "_value": 1
        },
        "AT_TARGET": {
          "_type": "number",
          "_value": 2
        },
        "BUBBLING_PHASE": {
          "_type": "number",
          "_value": 3
        },
        "new()": "TypeError: Not enough arguments",
        "_function": "function WebKitTransitionEvent() {\n    [native code]\n}",
        "_flags": "cw"
      }
    },
    {
      "path": "window.WheelEvent.prototype",
      "propertyName": "webkitDirectionInvertedFromDevice",
      "prevProperty": "wheelDelta",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The WheelEvent.webkitDirectionInvertedFromDevice getter can only be used on instances of WheelEvent",
        "_get": "function webkitDirectionInvertedFromDevice() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.WheelEvent.prototype",
      "propertyName": "initWebKitWheelEvent",
      "prevProperty": "webkitDirectionInvertedFromDevice",
      "property": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "initWebKitWheelEvent"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "_function": "function initWebKitWheelEvent() {\n    [native code]\n}",
        "_flags": "cew"
      }
    },
    {
      "path": "window.WheelEvent.prototype",
      "propertyName": "WEBKIT_FORCE_AT_MOUSE_DOWN",
      "prevProperty": "DOM_DELTA_PAGE",
      "property": {
        "_type": "number",
        "_value": 1
      }
    },
    {
      "path": "window.WheelEvent",
      "propertyName": "WEBKIT_FORCE_AT_MOUSE_DOWN",
      "prevProperty": "DOM_DELTA_PAGE",
      "property": {
        "_type": "number",
        "_value": 1
      }
    },
    {
      "path": "window.WheelEvent.prototype",
      "propertyName": "WEBKIT_FORCE_AT_FORCE_MOUSE_DOWN",
      "prevProperty": "WEBKIT_FORCE_AT_MOUSE_DOWN",
      "property": {
        "_type": "number",
        "_value": 2
      }
    },
    {
      "path": "window.WheelEvent",
      "propertyName": "WEBKIT_FORCE_AT_FORCE_MOUSE_DOWN",
      "prevProperty": "WEBKIT_FORCE_AT_MOUSE_DOWN",
      "property": {
        "_type": "number",
        "_value": 2
      }
    },
    {
      "path": "window",
      "propertyName": "SVGDocument",
      "prevProperty": "XMLDocument",
      "property": "REF: window.XMLDocument"
    },
    {
      "path": "window.Blob.prototype",
      "propertyName": "_type",
      "prevProperty": "slice",
      "property": "object"
    },
    {
      "path": "window.Blob.prototype",
      "propertyName": "_flags",
      "prevProperty": "_type",
      "property": ""
    },
    {
      "path": "window",
      "propertyName": "FileError",
      "prevProperty": "File",
      "property": {
        "prototype": {
          "_protos": ["Object.prototype"],
          "code": {
            "_flags": "ce",
            "_accessException": "TypeError: The FileError.code getter can only be used on instances of FileError",
            "_get": "function code() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "NOT_FOUND_ERR": {
            "_type": "number",
            "_flags": "e",
            "_value": 1
          },
          "SECURITY_ERR": {
            "_type": "number",
            "_flags": "e",
            "_value": 2
          },
          "ABORT_ERR": {
            "_type": "number",
            "_flags": "e",
            "_value": 3
          },
          "NOT_READABLE_ERR": {
            "_type": "number",
            "_flags": "e",
            "_value": 4
          },
          "ENCODING_ERR": {
            "_type": "number",
            "_flags": "e",
            "_value": 5
          },
          "NO_MODIFICATION_ALLOWED_ERR": {
            "_type": "number",
            "_flags": "e",
            "_value": 6
          },
          "INVALID_STATE_ERR": {
            "_type": "number",
            "_flags": "e",
            "_value": 7
          },
          "SYNTAX_ERR": {
            "_type": "number",
            "_flags": "e",
            "_value": 8
          },
          "INVALID_MODIFICATION_ERR": {
            "_type": "number",
            "_flags": "e",
            "_value": 9
          },
          "QUOTA_EXCEEDED_ERR": {
            "_type": "number",
            "_flags": "e",
            "_value": 10
          },
          "TYPE_MISMATCH_ERR": {
            "_type": "number",
            "_flags": "e",
            "_value": 11
          },
          "PATH_EXISTS_ERR": {
            "_type": "number",
            "_flags": "e",
            "_value": 12
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "FileError"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "NOT_FOUND_ERR": {
          "_type": "number",
          "_flags": "e",
          "_value": 1
        },
        "SECURITY_ERR": {
          "_type": "number",
          "_flags": "e",
          "_value": 2
        },
        "ABORT_ERR": {
          "_type": "number",
          "_flags": "e",
          "_value": 3
        },
        "NOT_READABLE_ERR": {
          "_type": "number",
          "_flags": "e",
          "_value": 4
        },
        "ENCODING_ERR": {
          "_type": "number",
          "_flags": "e",
          "_value": 5
        },
        "NO_MODIFICATION_ALLOWED_ERR": {
          "_type": "number",
          "_flags": "e",
          "_value": 6
        },
        "INVALID_STATE_ERR": {
          "_type": "number",
          "_flags": "e",
          "_value": 7
        },
        "SYNTAX_ERR": {
          "_type": "number",
          "_flags": "e",
          "_value": 8
        },
        "INVALID_MODIFICATION_ERR": {
          "_type": "number",
          "_flags": "e",
          "_value": 9
        },
        "QUOTA_EXCEEDED_ERR": {
          "_type": "number",
          "_flags": "e",
          "_value": 10
        },
        "TYPE_MISMATCH_ERR": {
          "_type": "number",
          "_flags": "e",
          "_value": 11
        },
        "PATH_EXISTS_ERR": {
          "_type": "number",
          "_flags": "e",
          "_value": 12
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function FileError() {\n    [native code]\n}",
        "_flags": "cw"
      }
    },
    {
      "path": "window",
      "propertyName": "HTMLAppletElement",
      "prevProperty": "HTMLAnchorElement",
      "property": {
        "prototype": {
          "_protos": [
            "HTMLElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "align": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLAppletElement.align getter can only be used on instances of HTMLAppletElement",
            "_get": "function align() {\n    [native code]\n}",
            "_set": "function align() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "alt": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLAppletElement.alt getter can only be used on instances of HTMLAppletElement",
            "_get": "function alt() {\n    [native code]\n}",
            "_set": "function alt() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "archive": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLAppletElement.archive getter can only be used on instances of HTMLAppletElement",
            "_get": "function archive() {\n    [native code]\n}",
            "_set": "function archive() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "code": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLAppletElement.code getter can only be used on instances of HTMLAppletElement",
            "_get": "function code() {\n    [native code]\n}",
            "_set": "function code() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "codeBase": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLAppletElement.codeBase getter can only be used on instances of HTMLAppletElement",
            "_get": "function codeBase() {\n    [native code]\n}",
            "_set": "function codeBase() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "height": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLAppletElement.height getter can only be used on instances of HTMLAppletElement",
            "_get": "function height() {\n    [native code]\n}",
            "_set": "function height() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "hspace": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLAppletElement.hspace getter can only be used on instances of HTMLAppletElement",
            "_get": "function hspace() {\n    [native code]\n}",
            "_set": "function hspace() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "name": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLAppletElement.name getter can only be used on instances of HTMLAppletElement",
            "_get": "function name() {\n    [native code]\n}",
            "_set": "function name() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "object": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLAppletElement.object getter can only be used on instances of HTMLAppletElement",
            "_get": "function object() {\n    [native code]\n}",
            "_set": "function object() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "vspace": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLAppletElement.vspace getter can only be used on instances of HTMLAppletElement",
            "_get": "function vspace() {\n    [native code]\n}",
            "_set": "function vspace() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "width": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLAppletElement.width getter can only be used on instances of HTMLAppletElement",
            "_get": "function width() {\n    [native code]\n}",
            "_set": "function width() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "HTMLAppletElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function HTMLAppletElement() {\n    [native code]\n}",
        "_flags": "cw"
      }
    },
    {
      "path": "window.Audio.new()",
      "propertyName": "webkitPreservesPitch",
      "prevProperty": "defaultMuted",
      "property": {
        "_type": "boolean",
        "_value": true
      }
    },
    {
      "path": "window.Audio.new()",
      "propertyName": "webkitHasClosedCaptions",
      "prevProperty": "webkitPreservesPitch",
      "property": {
        "_type": "boolean",
        "_value": false
      }
    },
    {
      "path": "window.Audio.new()",
      "propertyName": "webkitClosedCaptionsVisible",
      "prevProperty": "webkitHasClosedCaptions",
      "property": {
        "_type": "boolean",
        "_value": false
      }
    },
    {
      "path": "window.Audio.new()",
      "propertyName": "webkitKeys",
      "prevProperty": "webkitClosedCaptionsVisible",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.Audio.new()",
      "propertyName": "audioTracks",
      "prevProperty": "onwaitingforkey",
      "property": {
        "_protos": ["AudioTrackList.prototype", "EventTarget.prototype", "Object.prototype"],
        "length": {
          "_type": "number",
          "_value": 0
        },
        "onchange": {
          "_type": "object",
          "_value": null
        },
        "onaddtrack": {
          "_type": "object",
          "_value": null
        },
        "onremovetrack": {
          "_type": "object",
          "_value": null
        },
        "_type": "object"
      }
    },
    {
      "path": "window.Audio.new()",
      "propertyName": "videoTracks",
      "prevProperty": "textTracks",
      "property": {
        "_protos": ["VideoTrackList.prototype", "EventTarget.prototype", "Object.prototype"],
        "length": {
          "_type": "number",
          "_value": 0
        },
        "selectedIndex": {
          "_type": "number",
          "_value": -1
        },
        "onchange": {
          "_type": "object",
          "_value": null
        },
        "onaddtrack": {
          "_type": "object",
          "_value": null
        },
        "onremovetrack": {
          "_type": "object",
          "_value": null
        },
        "_type": "object"
      }
    },
    {
      "path": "window.Audio.new()",
      "propertyName": "mediaGroup",
      "prevProperty": "videoTracks",
      "property": {
        "_type": "string",
        "_value": ""
      }
    },
    {
      "path": "window.Audio.new()",
      "propertyName": "controller",
      "prevProperty": "mediaGroup",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.Audio.new()",
      "propertyName": "webkitCurrentPlaybackTargetIsWireless",
      "prevProperty": "controller",
      "property": {
        "_type": "boolean",
        "_value": false
      }
    },
    {
      "path": "window.Audio.new()",
      "propertyName": "webkitdropzone",
      "prevProperty": "outerText",
      "property": {
        "_type": "string",
        "_value": ""
      }
    },
    {
      "path": "window.Audio.new()",
      "propertyName": "onrejectionhandled",
      "prevProperty": "onratechange",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.Audio.new()",
      "propertyName": "onunhandledrejection",
      "prevProperty": "ontoggle",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.Audio.new()",
      "propertyName": "ontransitionrun",
      "prevProperty": "ontransitionend",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.Audio.new()",
      "propertyName": "ontransitionstart",
      "prevProperty": "ontransitionrun",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.Audio.new()",
      "propertyName": "ontransitioncancel",
      "prevProperty": "ontransitionstart",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.Audio.new()",
      "propertyName": "onanimationcancel",
      "prevProperty": "onanimationstart",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.Audio.new()",
      "propertyName": "role",
      "prevProperty": "outerHTML",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.Audio.new()",
      "propertyName": "ariaAtomic",
      "prevProperty": "role",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.Audio.new()",
      "propertyName": "ariaAutoComplete",
      "prevProperty": "ariaAtomic",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.Audio.new()",
      "propertyName": "ariaBusy",
      "prevProperty": "ariaAutoComplete",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.Audio.new()",
      "propertyName": "ariaChecked",
      "prevProperty": "ariaBusy",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.Audio.new()",
      "propertyName": "ariaColCount",
      "prevProperty": "ariaChecked",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.Audio.new()",
      "propertyName": "ariaColIndex",
      "prevProperty": "ariaColCount",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.Audio.new()",
      "propertyName": "ariaColSpan",
      "prevProperty": "ariaColIndex",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.Audio.new()",
      "propertyName": "ariaCurrent",
      "prevProperty": "ariaColSpan",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.Audio.new()",
      "propertyName": "ariaDisabled",
      "prevProperty": "ariaCurrent",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.Audio.new()",
      "propertyName": "ariaExpanded",
      "prevProperty": "ariaDisabled",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.Audio.new()",
      "propertyName": "ariaHasPopup",
      "prevProperty": "ariaExpanded",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.Audio.new()",
      "propertyName": "ariaHidden",
      "prevProperty": "ariaHasPopup",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.Audio.new()",
      "propertyName": "ariaInvalid",
      "prevProperty": "ariaHidden",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.Audio.new()",
      "propertyName": "ariaKeyShortcuts",
      "prevProperty": "ariaInvalid",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.Audio.new()",
      "propertyName": "ariaLabel",
      "prevProperty": "ariaKeyShortcuts",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.Audio.new()",
      "propertyName": "ariaLevel",
      "prevProperty": "ariaLabel",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.Audio.new()",
      "propertyName": "ariaLive",
      "prevProperty": "ariaLevel",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.Audio.new()",
      "propertyName": "ariaModal",
      "prevProperty": "ariaLive",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.Audio.new()",
      "propertyName": "ariaMultiLine",
      "prevProperty": "ariaModal",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.Audio.new()",
      "propertyName": "ariaMultiSelectable",
      "prevProperty": "ariaMultiLine",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.Audio.new()",
      "propertyName": "ariaOrientation",
      "prevProperty": "ariaMultiSelectable",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.Audio.new()",
      "propertyName": "ariaPlaceholder",
      "prevProperty": "ariaOrientation",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.Audio.new()",
      "propertyName": "ariaPosInSet",
      "prevProperty": "ariaPlaceholder",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.Audio.new()",
      "propertyName": "ariaPressed",
      "prevProperty": "ariaPosInSet",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.Audio.new()",
      "propertyName": "ariaReadOnly",
      "prevProperty": "ariaPressed",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.Audio.new()",
      "propertyName": "ariaRelevant",
      "prevProperty": "ariaReadOnly",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.Audio.new()",
      "propertyName": "ariaRequired",
      "prevProperty": "ariaRelevant",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.Audio.new()",
      "propertyName": "ariaRoleDescription",
      "prevProperty": "ariaRequired",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.Audio.new()",
      "propertyName": "ariaRowCount",
      "prevProperty": "ariaRoleDescription",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.Audio.new()",
      "propertyName": "ariaRowIndex",
      "prevProperty": "ariaRowCount",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.Audio.new()",
      "propertyName": "ariaRowSpan",
      "prevProperty": "ariaRowIndex",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.Audio.new()",
      "propertyName": "ariaSelected",
      "prevProperty": "ariaRowSpan",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.Audio.new()",
      "propertyName": "ariaSetSize",
      "prevProperty": "ariaSelected",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.Audio.new()",
      "propertyName": "ariaSort",
      "prevProperty": "ariaSetSize",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.Audio.new()",
      "propertyName": "ariaValueMax",
      "prevProperty": "ariaSort",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.Audio.new()",
      "propertyName": "ariaValueMin",
      "prevProperty": "ariaValueMax",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.Audio.new()",
      "propertyName": "ariaValueNow",
      "prevProperty": "ariaValueMin",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.Audio.new()",
      "propertyName": "ariaValueText",
      "prevProperty": "ariaValueNow",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.HTMLBodyElement.prototype",
      "propertyName": "onfocusin",
      "prevProperty": "onfocus",
      "property": {
        "_flags": "c",
        "_accessException": "TypeError: The HTMLBodyElement.onfocusin getter can only be used on instances of HTMLBodyElement",
        "_get": "function onfocusin() {\n    [native code]\n}",
        "_set": "function onfocusin() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.HTMLBodyElement.prototype",
      "propertyName": "onfocusout",
      "prevProperty": "onfocusin",
      "property": {
        "_flags": "c",
        "_accessException": "TypeError: The HTMLBodyElement.onfocusout getter can only be used on instances of HTMLBodyElement",
        "_get": "function onfocusout() {\n    [native code]\n}",
        "_set": "function onfocusout() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.HTMLBodyElement.prototype",
      "propertyName": "onwebkitmouseforcechanged",
      "prevProperty": "onscroll",
      "property": {
        "_flags": "c",
        "_accessException": "TypeError: The HTMLBodyElement.onwebkitmouseforcechanged getter can only be used on instances of HTMLBodyElement",
        "_get": "function onwebkitmouseforcechanged() {\n    [native code]\n}",
        "_set": "function onwebkitmouseforcechanged() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.HTMLBodyElement.prototype",
      "propertyName": "onwebkitmouseforcedown",
      "prevProperty": "onwebkitmouseforcechanged",
      "property": {
        "_flags": "c",
        "_accessException": "TypeError: The HTMLBodyElement.onwebkitmouseforcedown getter can only be used on instances of HTMLBodyElement",
        "_get": "function onwebkitmouseforcedown() {\n    [native code]\n}",
        "_set": "function onwebkitmouseforcedown() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.HTMLBodyElement.prototype",
      "propertyName": "onwebkitmouseforcewillbegin",
      "prevProperty": "onwebkitmouseforcedown",
      "property": {
        "_flags": "c",
        "_accessException": "TypeError: The HTMLBodyElement.onwebkitmouseforcewillbegin getter can only be used on instances of HTMLBodyElement",
        "_get": "function onwebkitmouseforcewillbegin() {\n    [native code]\n}",
        "_set": "function onwebkitmouseforcewillbegin() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.HTMLBodyElement.prototype",
      "propertyName": "onwebkitmouseforceup",
      "prevProperty": "onwebkitmouseforcewillbegin",
      "property": {
        "_flags": "c",
        "_accessException": "TypeError: The HTMLBodyElement.onwebkitmouseforceup getter can only be used on instances of HTMLBodyElement",
        "_get": "function onwebkitmouseforceup() {\n    [native code]\n}",
        "_set": "function onwebkitmouseforceup() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.HTMLBodyElement.prototype",
      "propertyName": "onselectionchange",
      "prevProperty": "onwebkitmouseforceup",
      "property": {
        "_flags": "c",
        "_accessException": "TypeError: The HTMLBodyElement.onselectionchange getter can only be used on instances of HTMLBodyElement",
        "_get": "function onselectionchange() {\n    [native code]\n}",
        "_set": "function onselectionchange() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.HTMLButtonElement.prototype",
      "propertyName": "autofocus",
      "prevProperty": "_protos",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The HTMLButtonElement.autofocus getter can only be used on instances of HTMLButtonElement",
        "_get": "function autofocus() {\n    [native code]\n}",
        "_set": "function autofocus() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.HTMLElement.prototype",
      "propertyName": "webkitdropzone",
      "prevProperty": "outerText",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The HTMLElement.webkitdropzone getter can only be used on instances of HTMLElement",
        "_get": "function webkitdropzone() {\n    [native code]\n}",
        "_set": "function webkitdropzone() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.HTMLElement.prototype",
      "propertyName": "onrejectionhandled",
      "prevProperty": "onratechange",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The HTMLElement.onrejectionhandled getter can only be used on instances of HTMLElement",
        "_get": "function onrejectionhandled() {\n    [native code]\n}",
        "_set": "function onrejectionhandled() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.HTMLElement.prototype",
      "propertyName": "onunhandledrejection",
      "prevProperty": "ontoggle",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The HTMLElement.onunhandledrejection getter can only be used on instances of HTMLElement",
        "_get": "function onunhandledrejection() {\n    [native code]\n}",
        "_set": "function onunhandledrejection() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.HTMLElement.prototype",
      "propertyName": "ontransitionrun",
      "prevProperty": "ontransitionend",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The HTMLElement.ontransitionrun getter can only be used on instances of HTMLElement",
        "_get": "function ontransitionrun() {\n    [native code]\n}",
        "_set": "function ontransitionrun() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.HTMLElement.prototype",
      "propertyName": "ontransitionstart",
      "prevProperty": "ontransitionrun",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The HTMLElement.ontransitionstart getter can only be used on instances of HTMLElement",
        "_get": "function ontransitionstart() {\n    [native code]\n}",
        "_set": "function ontransitionstart() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.HTMLElement.prototype",
      "propertyName": "ontransitioncancel",
      "prevProperty": "ontransitionstart",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The HTMLElement.ontransitioncancel getter can only be used on instances of HTMLElement",
        "_get": "function ontransitioncancel() {\n    [native code]\n}",
        "_set": "function ontransitioncancel() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.HTMLElement.prototype",
      "propertyName": "onanimationcancel",
      "prevProperty": "onanimationstart",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The HTMLElement.onanimationcancel getter can only be used on instances of HTMLElement",
        "_get": "function onanimationcancel() {\n    [native code]\n}",
        "_set": "function onanimationcancel() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.HTMLElement.prototype",
      "propertyName": "onsearch",
      "prevProperty": "onpointerleave",
      "property": {
        "_flags": "c",
        "_accessException": "TypeError: The HTMLElement.onsearch getter can only be used on instances of HTMLElement",
        "_get": "function onsearch() {\n    [native code]\n}",
        "_set": "function onsearch() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.HTMLElement.prototype",
      "propertyName": "onwebkitmouseforcechanged",
      "prevProperty": "onwheel",
      "property": {
        "_flags": "c",
        "_accessException": "TypeError: The HTMLElement.onwebkitmouseforcechanged getter can only be used on instances of HTMLElement",
        "_get": "function onwebkitmouseforcechanged() {\n    [native code]\n}",
        "_set": "function onwebkitmouseforcechanged() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.HTMLElement.prototype",
      "propertyName": "onwebkitmouseforcedown",
      "prevProperty": "onwebkitmouseforcechanged",
      "property": {
        "_flags": "c",
        "_accessException": "TypeError: The HTMLElement.onwebkitmouseforcedown getter can only be used on instances of HTMLElement",
        "_get": "function onwebkitmouseforcedown() {\n    [native code]\n}",
        "_set": "function onwebkitmouseforcedown() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.HTMLElement.prototype",
      "propertyName": "onwebkitmouseforcewillbegin",
      "prevProperty": "onwebkitmouseforcedown",
      "property": {
        "_flags": "c",
        "_accessException": "TypeError: The HTMLElement.onwebkitmouseforcewillbegin getter can only be used on instances of HTMLElement",
        "_get": "function onwebkitmouseforcewillbegin() {\n    [native code]\n}",
        "_set": "function onwebkitmouseforcewillbegin() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.HTMLElement.prototype",
      "propertyName": "onwebkitmouseforceup",
      "prevProperty": "onwebkitmouseforcewillbegin",
      "property": {
        "_flags": "c",
        "_accessException": "TypeError: The HTMLElement.onwebkitmouseforceup getter can only be used on instances of HTMLElement",
        "_get": "function onwebkitmouseforceup() {\n    [native code]\n}",
        "_set": "function onwebkitmouseforceup() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.HTMLFrameElement.prototype",
      "propertyName": "width",
      "prevProperty": "marginWidth",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The HTMLFrameElement.width getter can only be used on instances of HTMLFrameElement",
        "_get": "function width() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.HTMLFrameElement.prototype",
      "propertyName": "height",
      "prevProperty": "width",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The HTMLFrameElement.height getter can only be used on instances of HTMLFrameElement",
        "_get": "function height() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.HTMLFrameElement.prototype",
      "propertyName": "location",
      "prevProperty": "height",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The HTMLFrameElement.location getter can only be used on instances of HTMLFrameElement",
        "_get": "function location() {\n    [native code]\n}",
        "_set": "function location() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.HTMLFrameElement.prototype",
      "propertyName": "getSVGDocument",
      "prevProperty": "location",
      "property": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "getSVGDocument"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "_function": "function getSVGDocument() {\n    [native code]\n}",
        "_flags": "cew"
      }
    },
    {
      "path": "window.HTMLFrameSetElement.prototype",
      "propertyName": "onfocusin",
      "prevProperty": "onfocus",
      "property": {
        "_flags": "c",
        "_accessException": "TypeError: The HTMLFrameSetElement.onfocusin getter can only be used on instances of HTMLFrameSetElement",
        "_get": "function onfocusin() {\n    [native code]\n}",
        "_set": "function onfocusin() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.HTMLFrameSetElement.prototype",
      "propertyName": "onfocusout",
      "prevProperty": "onfocusin",
      "property": {
        "_flags": "c",
        "_accessException": "TypeError: The HTMLFrameSetElement.onfocusout getter can only be used on instances of HTMLFrameSetElement",
        "_get": "function onfocusout() {\n    [native code]\n}",
        "_set": "function onfocusout() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.HTMLHeadElement.prototype",
      "propertyName": "profile",
      "prevProperty": "_protos",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The HTMLHeadElement.profile getter can only be used on instances of HTMLHeadElement",
        "_get": "function profile() {\n    [native code]\n}",
        "_set": "function profile() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.HTMLHtmlElement.prototype",
      "propertyName": "manifest",
      "prevProperty": "version",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The HTMLHtmlElement.manifest getter can only be used on instances of HTMLHtmlElement",
        "_get": "function manifest() {\n    [native code]\n}",
        "_set": "function manifest() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.Image.new()",
      "propertyName": "webkitdropzone",
      "prevProperty": "outerText",
      "property": {
        "_type": "string",
        "_value": ""
      }
    },
    {
      "path": "window.Image.new()",
      "propertyName": "onrejectionhandled",
      "prevProperty": "onratechange",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.Image.new()",
      "propertyName": "onunhandledrejection",
      "prevProperty": "ontoggle",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.Image.new()",
      "propertyName": "ontransitionrun",
      "prevProperty": "ontransitionend",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.Image.new()",
      "propertyName": "ontransitionstart",
      "prevProperty": "ontransitionrun",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.Image.new()",
      "propertyName": "ontransitioncancel",
      "prevProperty": "ontransitionstart",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.Image.new()",
      "propertyName": "onanimationcancel",
      "prevProperty": "onanimationstart",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.Image.new()",
      "propertyName": "role",
      "prevProperty": "outerHTML",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.Image.new()",
      "propertyName": "ariaAtomic",
      "prevProperty": "role",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.Image.new()",
      "propertyName": "ariaAutoComplete",
      "prevProperty": "ariaAtomic",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.Image.new()",
      "propertyName": "ariaBusy",
      "prevProperty": "ariaAutoComplete",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.Image.new()",
      "propertyName": "ariaChecked",
      "prevProperty": "ariaBusy",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.Image.new()",
      "propertyName": "ariaColCount",
      "prevProperty": "ariaChecked",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.Image.new()",
      "propertyName": "ariaColIndex",
      "prevProperty": "ariaColCount",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.Image.new()",
      "propertyName": "ariaColSpan",
      "prevProperty": "ariaColIndex",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.Image.new()",
      "propertyName": "ariaCurrent",
      "prevProperty": "ariaColSpan",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.Image.new()",
      "propertyName": "ariaDisabled",
      "prevProperty": "ariaCurrent",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.Image.new()",
      "propertyName": "ariaExpanded",
      "prevProperty": "ariaDisabled",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.Image.new()",
      "propertyName": "ariaHasPopup",
      "prevProperty": "ariaExpanded",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.Image.new()",
      "propertyName": "ariaHidden",
      "prevProperty": "ariaHasPopup",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.Image.new()",
      "propertyName": "ariaInvalid",
      "prevProperty": "ariaHidden",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.Image.new()",
      "propertyName": "ariaKeyShortcuts",
      "prevProperty": "ariaInvalid",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.Image.new()",
      "propertyName": "ariaLabel",
      "prevProperty": "ariaKeyShortcuts",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.Image.new()",
      "propertyName": "ariaLevel",
      "prevProperty": "ariaLabel",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.Image.new()",
      "propertyName": "ariaLive",
      "prevProperty": "ariaLevel",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.Image.new()",
      "propertyName": "ariaModal",
      "prevProperty": "ariaLive",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.Image.new()",
      "propertyName": "ariaMultiLine",
      "prevProperty": "ariaModal",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.Image.new()",
      "propertyName": "ariaMultiSelectable",
      "prevProperty": "ariaMultiLine",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.Image.new()",
      "propertyName": "ariaOrientation",
      "prevProperty": "ariaMultiSelectable",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.Image.new()",
      "propertyName": "ariaPlaceholder",
      "prevProperty": "ariaOrientation",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.Image.new()",
      "propertyName": "ariaPosInSet",
      "prevProperty": "ariaPlaceholder",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.Image.new()",
      "propertyName": "ariaPressed",
      "prevProperty": "ariaPosInSet",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.Image.new()",
      "propertyName": "ariaReadOnly",
      "prevProperty": "ariaPressed",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.Image.new()",
      "propertyName": "ariaRelevant",
      "prevProperty": "ariaReadOnly",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.Image.new()",
      "propertyName": "ariaRequired",
      "prevProperty": "ariaRelevant",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.Image.new()",
      "propertyName": "ariaRoleDescription",
      "prevProperty": "ariaRequired",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.Image.new()",
      "propertyName": "ariaRowCount",
      "prevProperty": "ariaRoleDescription",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.Image.new()",
      "propertyName": "ariaRowIndex",
      "prevProperty": "ariaRowCount",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.Image.new()",
      "propertyName": "ariaRowSpan",
      "prevProperty": "ariaRowIndex",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.Image.new()",
      "propertyName": "ariaSelected",
      "prevProperty": "ariaRowSpan",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.Image.new()",
      "propertyName": "ariaSetSize",
      "prevProperty": "ariaSelected",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.Image.new()",
      "propertyName": "ariaSort",
      "prevProperty": "ariaSetSize",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.Image.new()",
      "propertyName": "ariaValueMax",
      "prevProperty": "ariaSort",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.Image.new()",
      "propertyName": "ariaValueMin",
      "prevProperty": "ariaValueMax",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.Image.new()",
      "propertyName": "ariaValueNow",
      "prevProperty": "ariaValueMin",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.Image.new()",
      "propertyName": "ariaValueText",
      "prevProperty": "ariaValueNow",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.HTMLInputElement.prototype",
      "propertyName": "autofocus",
      "prevProperty": "autocomplete",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The HTMLInputElement.autofocus getter can only be used on instances of HTMLInputElement",
        "_get": "function autofocus() {\n    [native code]\n}",
        "_set": "function autofocus() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window",
      "propertyName": "HTMLKeygenElement",
      "prevProperty": "HTMLInputElement",
      "property": {
        "prototype": {
          "_protos": [
            "HTMLElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "autofocus": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLKeygenElement.autofocus getter can only be used on instances of HTMLKeygenElement",
            "_get": "function autofocus() {\n    [native code]\n}",
            "_set": "function autofocus() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "challenge": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLKeygenElement.challenge getter can only be used on instances of HTMLKeygenElement",
            "_get": "function challenge() {\n    [native code]\n}",
            "_set": "function challenge() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "disabled": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLKeygenElement.disabled getter can only be used on instances of HTMLKeygenElement",
            "_get": "function disabled() {\n    [native code]\n}",
            "_set": "function disabled() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "form": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLKeygenElement.form getter can only be used on instances of HTMLKeygenElement",
            "_get": "function form() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "keytype": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLKeygenElement.keytype getter can only be used on instances of HTMLKeygenElement",
            "_get": "function keytype() {\n    [native code]\n}",
            "_set": "function keytype() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "name": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLKeygenElement.name getter can only be used on instances of HTMLKeygenElement",
            "_get": "function name() {\n    [native code]\n}",
            "_set": "function name() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "type": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLKeygenElement.type getter can only be used on instances of HTMLKeygenElement",
            "_get": "function type() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "willValidate": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLKeygenElement.willValidate getter can only be used on instances of HTMLKeygenElement",
            "_get": "function willValidate() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "validity": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLKeygenElement.validity getter can only be used on instances of HTMLKeygenElement",
            "_get": "function validity() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "validationMessage": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLKeygenElement.validationMessage getter can only be used on instances of HTMLKeygenElement",
            "_get": "function validationMessage() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "labels": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLKeygenElement.labels getter can only be used on instances of HTMLKeygenElement",
            "_get": "function labels() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "checkValidity": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "checkValidity"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function checkValidity() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "reportValidity": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "reportValidity"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function reportValidity() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "setCustomValidity": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "setCustomValidity"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function setCustomValidity() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "HTMLKeygenElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function HTMLKeygenElement() {\n    [native code]\n}",
        "_flags": "cw"
      }
    },
    {
      "path": "window.HTMLLinkElement.prototype",
      "propertyName": "nonce",
      "prevProperty": "relList",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The HTMLLinkElement.nonce getter can only be used on instances of HTMLLinkElement",
        "_get": "function nonce() {\n    [native code]\n}",
        "_set": "function nonce() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.HTMLMediaElement.prototype",
      "propertyName": "webkitPreservesPitch",
      "prevProperty": "defaultMuted",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The HTMLMediaElement.webkitPreservesPitch getter can only be used on instances of HTMLMediaElement",
        "_get": "function webkitPreservesPitch() {\n    [native code]\n}",
        "_set": "function webkitPreservesPitch() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.HTMLMediaElement.prototype",
      "propertyName": "webkitHasClosedCaptions",
      "prevProperty": "webkitPreservesPitch",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The HTMLMediaElement.webkitHasClosedCaptions getter can only be used on instances of HTMLMediaElement",
        "_get": "function webkitHasClosedCaptions() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.HTMLMediaElement.prototype",
      "propertyName": "webkitClosedCaptionsVisible",
      "prevProperty": "webkitHasClosedCaptions",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The HTMLMediaElement.webkitClosedCaptionsVisible getter can only be used on instances of HTMLMediaElement",
        "_get": "function webkitClosedCaptionsVisible() {\n    [native code]\n}",
        "_set": "function webkitClosedCaptionsVisible() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.HTMLMediaElement.prototype",
      "propertyName": "webkitKeys",
      "prevProperty": "webkitClosedCaptionsVisible",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The HTMLMediaElement.webkitKeys getter can only be used on instances of HTMLMediaElement",
        "_get": "function webkitKeys() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.HTMLMediaElement.prototype",
      "propertyName": "audioTracks",
      "prevProperty": "onwaitingforkey",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The HTMLMediaElement.audioTracks getter can only be used on instances of HTMLMediaElement",
        "_get": "function audioTracks() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.HTMLMediaElement.prototype",
      "propertyName": "videoTracks",
      "prevProperty": "textTracks",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The HTMLMediaElement.videoTracks getter can only be used on instances of HTMLMediaElement",
        "_get": "function videoTracks() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.HTMLMediaElement.prototype",
      "propertyName": "mediaGroup",
      "prevProperty": "videoTracks",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The HTMLMediaElement.mediaGroup getter can only be used on instances of HTMLMediaElement",
        "_get": "function mediaGroup() {\n    [native code]\n}",
        "_set": "function mediaGroup() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.HTMLMediaElement.prototype",
      "propertyName": "controller",
      "prevProperty": "mediaGroup",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The HTMLMediaElement.controller getter can only be used on instances of HTMLMediaElement",
        "_get": "function controller() {\n    [native code]\n}",
        "_set": "function controller() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.HTMLMediaElement.prototype",
      "propertyName": "webkitCurrentPlaybackTargetIsWireless",
      "prevProperty": "controller",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The HTMLMediaElement.webkitCurrentPlaybackTargetIsWireless getter can only be used on instances of HTMLMediaElement",
        "_get": "function webkitCurrentPlaybackTargetIsWireless() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.HTMLMediaElement.prototype",
      "propertyName": "getStartDate",
      "prevProperty": "canPlayType",
      "property": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "getStartDate"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "_function": "function getStartDate() {\n    [native code]\n}",
        "_flags": "cew"
      }
    },
    {
      "path": "window.HTMLMediaElement.prototype",
      "propertyName": "fastSeek",
      "prevProperty": "pause",
      "property": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "fastSeek"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "_function": "function fastSeek() {\n    [native code]\n}",
        "_flags": "cew"
      }
    },
    {
      "path": "window.HTMLMediaElement.prototype",
      "propertyName": "webkitSetMediaKeys",
      "prevProperty": "fastSeek",
      "property": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "webkitSetMediaKeys"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "_function": "function webkitSetMediaKeys() {\n    [native code]\n}",
        "_flags": "cew"
      }
    },
    {
      "path": "window.HTMLMediaElement.prototype",
      "propertyName": "getVideoPlaybackQuality",
      "prevProperty": "addTextTrack",
      "property": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "getVideoPlaybackQuality"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "_function": "function getVideoPlaybackQuality() {\n    [native code]\n}",
        "_flags": "cew"
      }
    },
    {
      "path": "window.HTMLMediaElement.prototype",
      "propertyName": "webkitShowPlaybackTargetPicker",
      "prevProperty": "getVideoPlaybackQuality",
      "property": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "webkitShowPlaybackTargetPicker"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "_function": "function webkitShowPlaybackTargetPicker() {\n    [native code]\n}",
        "_flags": "cew"
      }
    },
    {
      "path": "window.Option.new()",
      "propertyName": "webkitdropzone",
      "prevProperty": "outerText",
      "property": {
        "_type": "string",
        "_value": ""
      }
    },
    {
      "path": "window.Option.new()",
      "propertyName": "onrejectionhandled",
      "prevProperty": "onratechange",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.Option.new()",
      "propertyName": "onunhandledrejection",
      "prevProperty": "ontoggle",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.Option.new()",
      "propertyName": "ontransitionrun",
      "prevProperty": "ontransitionend",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.Option.new()",
      "propertyName": "ontransitionstart",
      "prevProperty": "ontransitionrun",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.Option.new()",
      "propertyName": "ontransitioncancel",
      "prevProperty": "ontransitionstart",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.Option.new()",
      "propertyName": "onanimationcancel",
      "prevProperty": "onanimationstart",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.Option.new()",
      "propertyName": "role",
      "prevProperty": "outerHTML",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.Option.new()",
      "propertyName": "ariaAtomic",
      "prevProperty": "role",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.Option.new()",
      "propertyName": "ariaAutoComplete",
      "prevProperty": "ariaAtomic",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.Option.new()",
      "propertyName": "ariaBusy",
      "prevProperty": "ariaAutoComplete",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.Option.new()",
      "propertyName": "ariaChecked",
      "prevProperty": "ariaBusy",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.Option.new()",
      "propertyName": "ariaColCount",
      "prevProperty": "ariaChecked",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.Option.new()",
      "propertyName": "ariaColIndex",
      "prevProperty": "ariaColCount",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.Option.new()",
      "propertyName": "ariaColSpan",
      "prevProperty": "ariaColIndex",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.Option.new()",
      "propertyName": "ariaCurrent",
      "prevProperty": "ariaColSpan",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.Option.new()",
      "propertyName": "ariaDisabled",
      "prevProperty": "ariaCurrent",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.Option.new()",
      "propertyName": "ariaExpanded",
      "prevProperty": "ariaDisabled",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.Option.new()",
      "propertyName": "ariaHasPopup",
      "prevProperty": "ariaExpanded",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.Option.new()",
      "propertyName": "ariaHidden",
      "prevProperty": "ariaHasPopup",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.Option.new()",
      "propertyName": "ariaInvalid",
      "prevProperty": "ariaHidden",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.Option.new()",
      "propertyName": "ariaKeyShortcuts",
      "prevProperty": "ariaInvalid",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.Option.new()",
      "propertyName": "ariaLabel",
      "prevProperty": "ariaKeyShortcuts",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.Option.new()",
      "propertyName": "ariaLevel",
      "prevProperty": "ariaLabel",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.Option.new()",
      "propertyName": "ariaLive",
      "prevProperty": "ariaLevel",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.Option.new()",
      "propertyName": "ariaModal",
      "prevProperty": "ariaLive",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.Option.new()",
      "propertyName": "ariaMultiLine",
      "prevProperty": "ariaModal",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.Option.new()",
      "propertyName": "ariaMultiSelectable",
      "prevProperty": "ariaMultiLine",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.Option.new()",
      "propertyName": "ariaOrientation",
      "prevProperty": "ariaMultiSelectable",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.Option.new()",
      "propertyName": "ariaPlaceholder",
      "prevProperty": "ariaOrientation",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.Option.new()",
      "propertyName": "ariaPosInSet",
      "prevProperty": "ariaPlaceholder",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.Option.new()",
      "propertyName": "ariaPressed",
      "prevProperty": "ariaPosInSet",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.Option.new()",
      "propertyName": "ariaReadOnly",
      "prevProperty": "ariaPressed",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.Option.new()",
      "propertyName": "ariaRelevant",
      "prevProperty": "ariaReadOnly",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.Option.new()",
      "propertyName": "ariaRequired",
      "prevProperty": "ariaRelevant",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.Option.new()",
      "propertyName": "ariaRoleDescription",
      "prevProperty": "ariaRequired",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.Option.new()",
      "propertyName": "ariaRowCount",
      "prevProperty": "ariaRoleDescription",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.Option.new()",
      "propertyName": "ariaRowIndex",
      "prevProperty": "ariaRowCount",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.Option.new()",
      "propertyName": "ariaRowSpan",
      "prevProperty": "ariaRowIndex",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.Option.new()",
      "propertyName": "ariaSelected",
      "prevProperty": "ariaRowSpan",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.Option.new()",
      "propertyName": "ariaSetSize",
      "prevProperty": "ariaSelected",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.Option.new()",
      "propertyName": "ariaSort",
      "prevProperty": "ariaSetSize",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.Option.new()",
      "propertyName": "ariaValueMax",
      "prevProperty": "ariaSort",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.Option.new()",
      "propertyName": "ariaValueMin",
      "prevProperty": "ariaValueMax",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.Option.new()",
      "propertyName": "ariaValueNow",
      "prevProperty": "ariaValueMin",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.Option.new()",
      "propertyName": "ariaValueText",
      "prevProperty": "ariaValueNow",
      "property": {
        "_type": "object",
        "_value": null
      }
    },
    {
      "path": "window.HTMLOptionsCollection.prototype",
      "propertyName": "item",
      "prevProperty": "remove",
      "property": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "item"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "_function": "function item() {\n    [native code]\n}",
        "_flags": "cew"
      }
    },
    {
      "path": "window.HTMLOptionsCollection.prototype",
      "propertyName": "namedItem",
      "prevProperty": "item",
      "property": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "namedItem"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "_function": "function namedItem() {\n    [native code]\n}",
        "_flags": "cew"
      }
    },
    {
      "path": "window.HTMLPreElement.prototype",
      "propertyName": "wrap",
      "prevProperty": "width",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The HTMLPreElement.wrap getter can only be used on instances of HTMLPreElement",
        "_get": "function wrap() {\n    [native code]\n}",
        "_set": "function wrap() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.HTMLScriptElement.prototype",
      "propertyName": "nonce",
      "prevProperty": "crossOrigin",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The HTMLScriptElement.nonce getter can only be used on instances of HTMLScriptElement",
        "_get": "function nonce() {\n    [native code]\n}",
        "_set": "function nonce() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.HTMLSelectElement.prototype",
      "propertyName": "autofocus",
      "prevProperty": "autocomplete",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The HTMLSelectElement.autofocus getter can only be used on instances of HTMLSelectElement",
        "_get": "function autofocus() {\n    [native code]\n}",
        "_set": "function autofocus() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.HTMLStyleElement.prototype",
      "propertyName": "nonce",
      "prevProperty": "sheet",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The HTMLStyleElement.nonce getter can only be used on instances of HTMLStyleElement",
        "_get": "function nonce() {\n    [native code]\n}",
        "_set": "function nonce() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.HTMLTextAreaElement.prototype",
      "propertyName": "autofocus",
      "prevProperty": "_protos",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The HTMLTextAreaElement.autofocus getter can only be used on instances of HTMLTextAreaElement",
        "_get": "function autofocus() {\n    [native code]\n}",
        "_set": "function autofocus() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.HTMLVideoElement.prototype",
      "propertyName": "webkitWirelessVideoPlaybackDisabled",
      "prevProperty": "webkitDisplayingFullscreen",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The HTMLVideoElement.webkitWirelessVideoPlaybackDisabled getter can only be used on instances of HTMLVideoElement",
        "_get": "function webkitWirelessVideoPlaybackDisabled() {\n    [native code]\n}",
        "_set": "function webkitWirelessVideoPlaybackDisabled() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.HTMLVideoElement.prototype",
      "propertyName": "webkitPresentationMode",
      "prevProperty": "webkitWirelessVideoPlaybackDisabled",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The HTMLVideoElement.webkitPresentationMode getter can only be used on instances of HTMLVideoElement",
        "_get": "function webkitPresentationMode() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.HTMLVideoElement.prototype",
      "propertyName": "webkitSupportsPresentationMode",
      "prevProperty": "webkitExitFullScreen",
      "property": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "webkitSupportsPresentationMode"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "_function": "function webkitSupportsPresentationMode() {\n    [native code]\n}",
        "_flags": "cew"
      }
    },
    {
      "path": "window.HTMLVideoElement.prototype",
      "propertyName": "webkitSetPresentationMode",
      "prevProperty": "webkitSupportsPresentationMode",
      "property": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "webkitSetPresentationMode"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "_function": "function webkitSetPresentationMode() {\n    [native code]\n}",
        "_flags": "cew"
      }
    },
    {
      "path": "window",
      "propertyName": "MediaController",
      "prevProperty": "ImageData",
      "property": {
        "prototype": {
          "_protos": ["EventTarget.prototype", "Object.prototype"],
          "buffered": {
            "_flags": "ce",
            "_accessException": "TypeError: The MediaController.buffered getter can only be used on instances of MediaController",
            "_get": "function buffered() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "seekable": {
            "_flags": "ce",
            "_accessException": "TypeError: The MediaController.seekable getter can only be used on instances of MediaController",
            "_get": "function seekable() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "duration": {
            "_flags": "ce",
            "_accessException": "TypeError: The MediaController.duration getter can only be used on instances of MediaController",
            "_get": "function duration() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "currentTime": {
            "_flags": "ce",
            "_accessException": "TypeError: The MediaController.currentTime getter can only be used on instances of MediaController",
            "_get": "function currentTime() {\n    [native code]\n}",
            "_set": "function currentTime() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "paused": {
            "_flags": "ce",
            "_accessException": "TypeError: The MediaController.paused getter can only be used on instances of MediaController",
            "_get": "function paused() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "played": {
            "_flags": "ce",
            "_accessException": "TypeError: The MediaController.played getter can only be used on instances of MediaController",
            "_get": "function played() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "playbackState": {
            "_flags": "ce",
            "_accessException": "TypeError: The MediaController.playbackState getter can only be used on instances of MediaController",
            "_get": "function playbackState() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "defaultPlaybackRate": {
            "_flags": "ce",
            "_accessException": "TypeError: The MediaController.defaultPlaybackRate getter can only be used on instances of MediaController",
            "_get": "function defaultPlaybackRate() {\n    [native code]\n}",
            "_set": "function defaultPlaybackRate() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "playbackRate": {
            "_flags": "ce",
            "_accessException": "TypeError: The MediaController.playbackRate getter can only be used on instances of MediaController",
            "_get": "function playbackRate() {\n    [native code]\n}",
            "_set": "function playbackRate() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "volume": {
            "_flags": "ce",
            "_accessException": "TypeError: The MediaController.volume getter can only be used on instances of MediaController",
            "_get": "function volume() {\n    [native code]\n}",
            "_set": "function volume() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "muted": {
            "_flags": "ce",
            "_accessException": "TypeError: The MediaController.muted getter can only be used on instances of MediaController",
            "_get": "function muted() {\n    [native code]\n}",
            "_set": "function muted() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "play": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "play"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function play() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "pause": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "pause"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function pause() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "unpause": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "unpause"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function unpause() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "MediaController"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": {
          "_protos": ["MediaController.prototype", "EventTarget.prototype", "Object.prototype"],
          "buffered": {
            "_protos": ["TimeRanges.prototype", "Object.prototype"],
            "length": {
              "_type": "number",
              "_value": 0
            },
            "_type": "object",
            "_value": "[object TimeRanges]"
          },
          "seekable": {
            "_protos": ["TimeRanges.prototype", "Object.prototype"],
            "length": {
              "_type": "number",
              "_value": 0
            },
            "_type": "object",
            "_value": "[object TimeRanges]"
          },
          "duration": {
            "_type": "number",
            "_value": 0
          },
          "currentTime": {
            "_type": "number",
            "_value": 0
          },
          "paused": {
            "_type": "boolean",
            "_value": false
          },
          "played": {
            "_protos": ["TimeRanges.prototype", "Object.prototype"],
            "length": {
              "_type": "number",
              "_value": 0
            },
            "_type": "object",
            "_value": "[object TimeRanges]"
          },
          "playbackState": {
            "_type": "string",
            "_value": "waiting"
          },
          "defaultPlaybackRate": {
            "_type": "number",
            "_value": 1
          },
          "playbackRate": {
            "_type": "number",
            "_value": 1
          },
          "volume": {
            "_type": "number",
            "_value": 1
          },
          "muted": {
            "_type": "boolean",
            "_value": false
          }
        },
        "_function": "function MediaController() {\n    [native code]\n}",
        "_flags": "cw"
      }
    },
    {
      "path": "window.MediaError.prototype",
      "propertyName": "MEDIA_ERR_ENCRYPTED",
      "prevProperty": "MEDIA_ERR_SRC_NOT_SUPPORTED",
      "property": {
        "_type": "number",
        "_flags": "e",
        "_value": 5
      }
    },
    {
      "path": "window.MediaError",
      "propertyName": "MEDIA_ERR_ENCRYPTED",
      "prevProperty": "MEDIA_ERR_SRC_NOT_SUPPORTED",
      "property": {
        "_type": "number",
        "_flags": "e",
        "_value": 5
      }
    },
    {
      "path": "window.TextMetrics.prototype",
      "propertyName": "fontBoundingBoxAscent",
      "prevProperty": "actualBoundingBoxRight",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The TextMetrics.fontBoundingBoxAscent getter can only be used on instances of TextMetrics",
        "_get": "function fontBoundingBoxAscent() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.TextMetrics.prototype",
      "propertyName": "fontBoundingBoxDescent",
      "prevProperty": "fontBoundingBoxAscent",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The TextMetrics.fontBoundingBoxDescent getter can only be used on instances of TextMetrics",
        "_get": "function fontBoundingBoxDescent() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.TextMetrics.prototype",
      "propertyName": "emHeightAscent",
      "prevProperty": "actualBoundingBoxDescent",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The TextMetrics.emHeightAscent getter can only be used on instances of TextMetrics",
        "_get": "function emHeightAscent() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.TextMetrics.prototype",
      "propertyName": "emHeightDescent",
      "prevProperty": "emHeightAscent",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The TextMetrics.emHeightDescent getter can only be used on instances of TextMetrics",
        "_get": "function emHeightDescent() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.TextMetrics.prototype",
      "propertyName": "hangingBaseline",
      "prevProperty": "emHeightDescent",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The TextMetrics.hangingBaseline getter can only be used on instances of TextMetrics",
        "_get": "function hangingBaseline() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.TextMetrics.prototype",
      "propertyName": "alphabeticBaseline",
      "prevProperty": "hangingBaseline",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The TextMetrics.alphabeticBaseline getter can only be used on instances of TextMetrics",
        "_get": "function alphabeticBaseline() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.TextMetrics.prototype",
      "propertyName": "ideographicBaseline",
      "prevProperty": "alphabeticBaseline",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The TextMetrics.ideographicBaseline getter can only be used on instances of TextMetrics",
        "_get": "function ideographicBaseline() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype",
      "propertyName": "webkitBackingStorePixelRatio",
      "prevProperty": "canvas",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The CanvasRenderingContext2D.webkitBackingStorePixelRatio getter can only be used on instances of CanvasRenderingContext2D",
        "_get": "function webkitBackingStorePixelRatio() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype",
      "propertyName": "webkitImageSmoothingEnabled",
      "prevProperty": "webkitBackingStorePixelRatio",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The CanvasRenderingContext2D.webkitImageSmoothingEnabled getter can only be used on instances of CanvasRenderingContext2D",
        "_get": "function webkitImageSmoothingEnabled() {\n    [native code]\n}",
        "_set": "function webkitImageSmoothingEnabled() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype",
      "propertyName": "webkitLineDash",
      "prevProperty": "webkitImageSmoothingEnabled",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The CanvasRenderingContext2D.webkitLineDash getter can only be used on instances of CanvasRenderingContext2D",
        "_get": "function webkitLineDash() {\n    [native code]\n}",
        "_set": "function webkitLineDash() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype",
      "propertyName": "webkitLineDashOffset",
      "prevProperty": "webkitLineDash",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The CanvasRenderingContext2D.webkitLineDashOffset getter can only be used on instances of CanvasRenderingContext2D",
        "_get": "function webkitLineDashOffset() {\n    [native code]\n}",
        "_set": "function webkitLineDashOffset() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype",
      "propertyName": "setAlpha",
      "prevProperty": "direction",
      "property": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "setAlpha"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "_function": "function setAlpha() {\n    [native code]\n}",
        "_flags": "cew"
      }
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype",
      "propertyName": "setCompositeOperation",
      "prevProperty": "setAlpha",
      "property": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "setCompositeOperation"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "_function": "function setCompositeOperation() {\n    [native code]\n}",
        "_flags": "cew"
      }
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype",
      "propertyName": "drawImageFromRect",
      "prevProperty": "setCompositeOperation",
      "property": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "drawImageFromRect"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "_function": "function drawImageFromRect() {\n    [native code]\n}",
        "_flags": "cew"
      }
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype",
      "propertyName": "setStrokeColor",
      "prevProperty": "drawImageFromRect",
      "property": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "setStrokeColor"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "_function": "function setStrokeColor() {\n    [native code]\n}",
        "_flags": "cew"
      }
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype",
      "propertyName": "setFillColor",
      "prevProperty": "setStrokeColor",
      "property": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "setFillColor"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "_function": "function setFillColor() {\n    [native code]\n}",
        "_flags": "cew"
      }
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype",
      "propertyName": "setLineWidth",
      "prevProperty": "setFillColor",
      "property": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "setLineWidth"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "_function": "function setLineWidth() {\n    [native code]\n}",
        "_flags": "cew"
      }
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype",
      "propertyName": "setLineCap",
      "prevProperty": "setLineWidth",
      "property": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "setLineCap"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "_function": "function setLineCap() {\n    [native code]\n}",
        "_flags": "cew"
      }
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype",
      "propertyName": "setLineJoin",
      "prevProperty": "setLineCap",
      "property": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "setLineJoin"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "_function": "function setLineJoin() {\n    [native code]\n}",
        "_flags": "cew"
      }
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype",
      "propertyName": "setMiterLimit",
      "prevProperty": "setLineJoin",
      "property": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "setMiterLimit"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "_function": "function setMiterLimit() {\n    [native code]\n}",
        "_flags": "cew"
      }
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype",
      "propertyName": "setShadow",
      "prevProperty": "setMiterLimit",
      "property": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "setShadow"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 3
        },
        "_function": "function setShadow() {\n    [native code]\n}",
        "_flags": "cew"
      }
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype",
      "propertyName": "clearShadow",
      "prevProperty": "setShadow",
      "property": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "clearShadow"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "_function": "function clearShadow() {\n    [native code]\n}",
        "_flags": "cew"
      }
    },
    {
      "path": "window.WebGLRenderingContext.prototype",
      "propertyName": "releaseShaderCompiler",
      "prevProperty": "readPixels",
      "property": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "releaseShaderCompiler"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "_function": "function releaseShaderCompiler() {\n    [native code]\n}",
        "_flags": "cew"
      }
    },
    {
      "path": "window.WebGLRenderingContext.prototype",
      "propertyName": "STENCIL_INDEX",
      "prevProperty": "DEPTH_COMPONENT16",
      "property": {
        "_type": "number",
        "_flags": "e",
        "_value": 6401
      }
    },
    {
      "path": "window.WebGLRenderingContext",
      "propertyName": "STENCIL_INDEX",
      "prevProperty": "DEPTH_COMPONENT16",
      "property": {
        "_type": "number",
        "_flags": "e",
        "_value": 6401
      }
    },
    {
      "path": "window",
      "propertyName": "AudioTrack",
      "prevProperty": "WebGLUniformLocation",
      "property": {
        "prototype": {
          "_protos": ["Object.prototype"],
          "id": {
            "_flags": "ce",
            "_accessException": "TypeError: The AudioTrack.id getter can only be used on instances of AudioTrack",
            "_get": "function id() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "kind": {
            "_flags": "ce",
            "_accessException": "TypeError: The AudioTrack.kind getter can only be used on instances of AudioTrack",
            "_get": "function kind() {\n    [native code]\n}",
            "_set": "function kind() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "label": {
            "_flags": "ce",
            "_accessException": "TypeError: The AudioTrack.label getter can only be used on instances of AudioTrack",
            "_get": "function label() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "language": {
            "_flags": "ce",
            "_accessException": "TypeError: The AudioTrack.language getter can only be used on instances of AudioTrack",
            "_get": "function language() {\n    [native code]\n}",
            "_set": "function language() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "enabled": {
            "_flags": "ce",
            "_accessException": "TypeError: The AudioTrack.enabled getter can only be used on instances of AudioTrack",
            "_get": "function enabled() {\n    [native code]\n}",
            "_set": "function enabled() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "sourceBuffer": {
            "_flags": "ce",
            "_accessException": "TypeError: The AudioTrack.sourceBuffer getter can only be used on instances of AudioTrack",
            "_get": "function sourceBuffer() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "AudioTrack"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function AudioTrack() {\n    [native code]\n}",
        "_flags": "cw"
      }
    },
    {
      "path": "window",
      "propertyName": "AudioTrackList",
      "prevProperty": "AudioTrack",
      "property": {
        "prototype": {
          "_protos": ["EventTarget.prototype", "Object.prototype"],
          "length": {
            "_flags": "ce",
            "_accessException": "TypeError: The AudioTrackList.length getter can only be used on instances of AudioTrackList",
            "_get": "function length() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onchange": {
            "_flags": "ce",
            "_accessException": "TypeError: The AudioTrackList.onchange getter can only be used on instances of AudioTrackList",
            "_get": "function onchange() {\n    [native code]\n}",
            "_set": "function onchange() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onaddtrack": {
            "_flags": "ce",
            "_accessException": "TypeError: The AudioTrackList.onaddtrack getter can only be used on instances of AudioTrackList",
            "_get": "function onaddtrack() {\n    [native code]\n}",
            "_set": "function onaddtrack() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onremovetrack": {
            "_flags": "ce",
            "_accessException": "TypeError: The AudioTrackList.onremovetrack getter can only be used on instances of AudioTrackList",
            "_get": "function onremovetrack() {\n    [native code]\n}",
            "_set": "function onremovetrack() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "item": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "item"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function item() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "getTrackById": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getTrackById"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function getTrackById() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "Symbol(Symbol.iterator)": "REF: window.DOMStringList.prototype.Symbol(Symbol.iterator)"
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "AudioTrackList"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function AudioTrackList() {\n    [native code]\n}",
        "_flags": "cw"
      }
    },
    {
      "path": "window",
      "propertyName": "DataCue",
      "prevProperty": "AudioTrackList",
      "property": {
        "prototype": {
          "_protos": ["TextTrackCue.prototype", "EventTarget.prototype", "Object.prototype"],
          "data": {
            "_flags": "ce",
            "_accessException": "TypeError: The DataCue.data getter can only be used on instances of DataCue",
            "_get": "function data() {\n    [native code]\n}",
            "_set": "function data() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "value": {
            "_flags": "ce",
            "_accessException": "TypeError: The DataCue.value getter can only be used on instances of DataCue",
            "_get": "function value() {\n    [native code]\n}",
            "_set": "function value() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "type": {
            "_flags": "ce",
            "_accessException": "TypeError: The DataCue.type getter can only be used on instances of DataCue",
            "_get": "function type() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "DataCue"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 3
        },
        "new()": "TypeError: Not enough arguments",
        "_function": "function DataCue() {\n    [native code]\n}",
        "_flags": "cw"
      }
    },
    {
      "path": "window.TextTrack.prototype.kind",
      "propertyName": "_set",
      "prevProperty": "_get",
      "property": "function kind() {\n    [native code]\n}"
    },
    {
      "path": "window.TextTrack.prototype.kind",
      "propertyName": "_setToStringToString",
      "prevProperty": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.TextTrack.prototype.language",
      "propertyName": "_set",
      "prevProperty": "_get",
      "property": "function language() {\n    [native code]\n}"
    },
    {
      "path": "window.TextTrack.prototype.language",
      "propertyName": "_setToStringToString",
      "prevProperty": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.TextTrack.prototype",
      "propertyName": "inBandMetadataTrackDispatchType",
      "prevProperty": "language",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The TextTrack.inBandMetadataTrackDispatchType getter can only be used on instances of TextTrack",
        "_get": "function inBandMetadataTrackDispatchType() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.TextTrack.prototype",
      "propertyName": "regions",
      "prevProperty": "oncuechange",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The TextTrack.regions getter can only be used on instances of TextTrack",
        "_get": "function regions() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.TextTrack.prototype",
      "propertyName": "sourceBuffer",
      "prevProperty": "regions",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The TextTrack.sourceBuffer getter can only be used on instances of TextTrack",
        "_get": "function sourceBuffer() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.TextTrack.prototype",
      "propertyName": "addRegion",
      "prevProperty": "removeCue",
      "property": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "addRegion"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "_function": "function addRegion() {\n    [native code]\n}",
        "_flags": "cew"
      }
    },
    {
      "path": "window.TextTrack.prototype",
      "propertyName": "removeRegion",
      "prevProperty": "addRegion",
      "property": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "removeRegion"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "_function": "function removeRegion() {\n    [native code]\n}",
        "_flags": "cew"
      }
    },
    {
      "path": "window.TextTrackCueList.prototype",
      "propertyName": "item",
      "prevProperty": "length",
      "property": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "item"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "_function": "function item() {\n    [native code]\n}",
        "_flags": "cew"
      }
    },
    {
      "path": "window.TextTrackList.prototype",
      "propertyName": "item",
      "prevProperty": "onremovetrack",
      "property": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "item"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "_function": "function item() {\n    [native code]\n}",
        "_flags": "cew"
      }
    },
    {
      "path": "window.VTTCue.prototype",
      "propertyName": "regionId",
      "prevProperty": "text",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The VTTCue.regionId getter can only be used on instances of VTTCue",
        "_get": "function regionId() {\n    [native code]\n}",
        "_set": "function regionId() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window",
      "propertyName": "VTTRegion",
      "prevProperty": "VTTCue",
      "property": {
        "prototype": {
          "_protos": ["Object.prototype"],
          "track": {
            "_flags": "ce",
            "_accessException": "TypeError: The VTTRegion.track getter can only be used on instances of VTTRegion",
            "_get": "function track() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "id": {
            "_flags": "ce",
            "_accessException": "TypeError: The VTTRegion.id getter can only be used on instances of VTTRegion",
            "_get": "function id() {\n    [native code]\n}",
            "_set": "function id() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "width": {
            "_flags": "ce",
            "_accessException": "TypeError: The VTTRegion.width getter can only be used on instances of VTTRegion",
            "_get": "function width() {\n    [native code]\n}",
            "_set": "function width() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "lines": {
            "_flags": "ce",
            "_accessException": "TypeError: The VTTRegion.lines getter can only be used on instances of VTTRegion",
            "_get": "function lines() {\n    [native code]\n}",
            "_set": "function lines() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "regionAnchorX": {
            "_flags": "ce",
            "_accessException": "TypeError: The VTTRegion.regionAnchorX getter can only be used on instances of VTTRegion",
            "_get": "function regionAnchorX() {\n    [native code]\n}",
            "_set": "function regionAnchorX() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "regionAnchorY": {
            "_flags": "ce",
            "_accessException": "TypeError: The VTTRegion.regionAnchorY getter can only be used on instances of VTTRegion",
            "_get": "function regionAnchorY() {\n    [native code]\n}",
            "_set": "function regionAnchorY() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "viewportAnchorX": {
            "_flags": "ce",
            "_accessException": "TypeError: The VTTRegion.viewportAnchorX getter can only be used on instances of VTTRegion",
            "_get": "function viewportAnchorX() {\n    [native code]\n}",
            "_set": "function viewportAnchorX() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "viewportAnchorY": {
            "_flags": "ce",
            "_accessException": "TypeError: The VTTRegion.viewportAnchorY getter can only be used on instances of VTTRegion",
            "_get": "function viewportAnchorY() {\n    [native code]\n}",
            "_set": "function viewportAnchorY() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "scroll": {
            "_flags": "ce",
            "_accessException": "TypeError: The VTTRegion.scroll getter can only be used on instances of VTTRegion",
            "_get": "function scroll() {\n    [native code]\n}",
            "_set": "function scroll() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "VTTRegion"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": {
          "_protos": ["VTTRegion.prototype", "Object.prototype"],
          "track": {
            "_type": "object",
            "_value": null
          },
          "id": {
            "_type": "string",
            "_value": ""
          },
          "width": {
            "_type": "number",
            "_value": 100
          },
          "lines": {
            "_type": "number",
            "_value": 3
          },
          "regionAnchorX": {
            "_type": "number",
            "_value": 0
          },
          "regionAnchorY": {
            "_type": "number",
            "_value": 100
          },
          "viewportAnchorX": {
            "_type": "number",
            "_value": 0
          },
          "viewportAnchorY": {
            "_type": "number",
            "_value": 100
          },
          "scroll": {
            "_type": "string",
            "_value": ""
          }
        },
        "_function": "function VTTRegion() {\n    [native code]\n}",
        "_flags": "cw"
      }
    },
    {
      "path": "window",
      "propertyName": "VideoTrack",
      "prevProperty": "VTTRegion",
      "property": {
        "prototype": {
          "_protos": ["Object.prototype"],
          "id": {
            "_flags": "ce",
            "_accessException": "TypeError: The VideoTrack.id getter can only be used on instances of VideoTrack",
            "_get": "function id() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "kind": {
            "_flags": "ce",
            "_accessException": "TypeError: The VideoTrack.kind getter can only be used on instances of VideoTrack",
            "_get": "function kind() {\n    [native code]\n}",
            "_set": "function kind() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "label": {
            "_flags": "ce",
            "_accessException": "TypeError: The VideoTrack.label getter can only be used on instances of VideoTrack",
            "_get": "function label() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "language": {
            "_flags": "ce",
            "_accessException": "TypeError: The VideoTrack.language getter can only be used on instances of VideoTrack",
            "_get": "function language() {\n    [native code]\n}",
            "_set": "function language() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "selected": {
            "_flags": "ce",
            "_accessException": "TypeError: The VideoTrack.selected getter can only be used on instances of VideoTrack",
            "_get": "function selected() {\n    [native code]\n}",
            "_set": "function selected() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "sourceBuffer": {
            "_flags": "ce",
            "_accessException": "TypeError: The VideoTrack.sourceBuffer getter can only be used on instances of VideoTrack",
            "_get": "function sourceBuffer() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "VideoTrack"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function VideoTrack() {\n    [native code]\n}",
        "_flags": "cw"
      }
    },
    {
      "path": "window",
      "propertyName": "VideoTrackList",
      "prevProperty": "VideoTrack",
      "property": {
        "prototype": {
          "_protos": ["EventTarget.prototype", "Object.prototype"],
          "length": {
            "_flags": "ce",
            "_accessException": "TypeError: The VideoTrackList.length getter can only be used on instances of VideoTrackList",
            "_get": "function length() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "selectedIndex": {
            "_flags": "ce",
            "_accessException": "TypeError: The VideoTrackList.selectedIndex getter can only be used on instances of VideoTrackList",
            "_get": "function selectedIndex() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onchange": {
            "_flags": "ce",
            "_accessException": "TypeError: The VideoTrackList.onchange getter can only be used on instances of VideoTrackList",
            "_get": "function onchange() {\n    [native code]\n}",
            "_set": "function onchange() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onaddtrack": {
            "_flags": "ce",
            "_accessException": "TypeError: The VideoTrackList.onaddtrack getter can only be used on instances of VideoTrackList",
            "_get": "function onaddtrack() {\n    [native code]\n}",
            "_set": "function onaddtrack() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onremovetrack": {
            "_flags": "ce",
            "_accessException": "TypeError: The VideoTrackList.onremovetrack getter can only be used on instances of VideoTrackList",
            "_get": "function onremovetrack() {\n    [native code]\n}",
            "_set": "function onremovetrack() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "item": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "item"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function item() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "getTrackById": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getTrackById"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function getTrackById() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "Symbol(Symbol.iterator)": "REF: window.DOMStringList.prototype.Symbol(Symbol.iterator)"
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "VideoTrackList"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function VideoTrackList() {\n    [native code]\n}",
        "_flags": "cw"
      }
    },
    {
      "path": "window.EventSource.prototype",
      "propertyName": "URL",
      "prevProperty": "_protos",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The EventSource.URL getter can only be used on instances of EventSource",
        "_get": "function URL() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.Navigator.prototype",
      "propertyName": "getStorageUpdates",
      "prevProperty": "javaEnabled",
      "property": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "getStorageUpdates"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "_function": "function getStorageUpdates() {\n    [native code]\n}",
        "_flags": "cew"
      }
    },
    {
      "path": "window.Navigator.prototype",
      "propertyName": "share",
      "prevProperty": "getGamepads",
      "property": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "share"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "_function": "function share() {\n    [native code]\n}",
        "_flags": "cew"
      }
    },
    {
      "path": "window",
      "propertyName": "UserMessageHandler",
      "prevProperty": "Screen",
      "property": {
        "prototype": {
          "_protos": ["Object.prototype"],
          "postMessage": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "postMessage"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function postMessage() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "UserMessageHandler"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function UserMessageHandler() {\n    [native code]\n}",
        "_flags": "cw"
      }
    },
    {
      "path": "window",
      "propertyName": "UserMessageHandlersNamespace",
      "prevProperty": "UserMessageHandler",
      "property": {
        "prototype": {
          "_protos": ["Object.prototype"],
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "UserMessageHandlersNamespace"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function UserMessageHandlersNamespace() {\n    [native code]\n}",
        "_flags": "cw"
      }
    },
    {
      "path": "window",
      "propertyName": "WebKitNamespace",
      "prevProperty": "UserMessageHandlersNamespace",
      "property": {
        "prototype": {
          "_protos": ["Object.prototype"],
          "messageHandlers": {
            "_flags": "ce",
            "_accessException": "TypeError: The WebKitNamespace.messageHandlers getter can only be used on instances of WebKitNamespace",
            "_get": "function messageHandlers() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "WebKitNamespace"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function WebKitNamespace() {\n    [native code]\n}",
        "_flags": "cw"
      }
    },
    {
      "path": "window",
      "propertyName": "WebKitPoint",
      "prevProperty": "WebKitNamespace",
      "property": {
        "prototype": {
          "_protos": ["Object.prototype"],
          "x": {
            "_flags": "ce",
            "_accessException": "TypeError: The WebKitPoint.x getter can only be used on instances of WebKitPoint",
            "_get": "function x() {\n    [native code]\n}",
            "_set": "function x() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "y": {
            "_flags": "ce",
            "_accessException": "TypeError: The WebKitPoint.y getter can only be used on instances of WebKitPoint",
            "_get": "function y() {\n    [native code]\n}",
            "_set": "function y() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "WebKitPoint"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": {
          "_protos": ["WebKitPoint.prototype", "Object.prototype"],
          "x": {
            "_type": "number",
            "_value": 0
          },
          "y": {
            "_type": "number",
            "_value": 0
          }
        },
        "_function": "function WebKitPoint() {\n    [native code]\n}",
        "_flags": "cw"
      }
    },
    {
      "path": "window.SVGAElement.prototype",
      "propertyName": "externalResourcesRequired",
      "prevProperty": "target",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The SVGAElement.externalResourcesRequired getter can only be used on instances of SVGAElement",
        "_get": "function externalResourcesRequired() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window",
      "propertyName": "SVGAltGlyphDefElement",
      "prevProperty": "SVGAElement",
      "property": {
        "prototype": {
          "_protos": [
            "SVGElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGAltGlyphDefElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGAltGlyphDefElement() {\n    [native code]\n}",
        "_flags": "cw"
      }
    },
    {
      "path": "window",
      "propertyName": "SVGAltGlyphElement",
      "prevProperty": "SVGAltGlyphDefElement",
      "property": {
        "prototype": {
          "_protos": [
            "SVGTextPositioningElement.prototype",
            "SVGTextContentElement.prototype",
            "SVGGraphicsElement.prototype",
            "SVGElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "glyphRef": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGAltGlyphElement.glyphRef getter can only be used on instances of SVGAltGlyphElement",
            "_get": "function glyphRef() {\n    [native code]\n}",
            "_set": "function glyphRef() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "format": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGAltGlyphElement.format getter can only be used on instances of SVGAltGlyphElement",
            "_get": "function format() {\n    [native code]\n}",
            "_set": "function format() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "href": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGAltGlyphElement.href getter can only be used on instances of SVGAltGlyphElement",
            "_get": "function href() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "LENGTHADJUST_UNKNOWN": {
            "_type": "number",
            "_value": 0
          },
          "LENGTHADJUST_SPACING": {
            "_type": "number",
            "_value": 1
          },
          "LENGTHADJUST_SPACINGANDGLYPHS": {
            "_type": "number",
            "_value": 2
          },
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGAltGlyphElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "LENGTHADJUST_UNKNOWN": {
          "_type": "number",
          "_value": 0
        },
        "LENGTHADJUST_SPACING": {
          "_type": "number",
          "_value": 1
        },
        "LENGTHADJUST_SPACINGANDGLYPHS": {
          "_type": "number",
          "_value": 2
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGAltGlyphElement() {\n    [native code]\n}",
        "_flags": "cw"
      }
    },
    {
      "path": "window",
      "propertyName": "SVGAltGlyphItemElement",
      "prevProperty": "SVGAltGlyphElement",
      "property": {
        "prototype": {
          "_protos": [
            "SVGElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGAltGlyphItemElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGAltGlyphItemElement() {\n    [native code]\n}",
        "_flags": "cw"
      }
    },
    {
      "path": "window",
      "propertyName": "SVGAnimateColorElement",
      "prevProperty": "SVGAngle",
      "property": {
        "prototype": {
          "_protos": [
            "SVGAnimationElement.prototype",
            "SVGElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGAnimateColorElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGAnimateColorElement() {\n    [native code]\n}",
        "_flags": "cw"
      }
    },
    {
      "path": "window.SVGAnimationElement.prototype",
      "propertyName": "externalResourcesRequired",
      "prevProperty": "targetElement",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The SVGAnimationElement.externalResourcesRequired getter can only be used on instances of SVGAnimationElement",
        "_get": "function externalResourcesRequired() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.SVGAnimationElement.prototype",
      "propertyName": "requiredFeatures",
      "prevProperty": "externalResourcesRequired",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The SVGAnimationElement.requiredFeatures getter can only be used on instances of SVGAnimationElement",
        "_get": "function requiredFeatures() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.SVGAnimationElement.prototype",
      "propertyName": "hasExtension",
      "prevProperty": "endElementAt",
      "property": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "hasExtension"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "_function": "function hasExtension() {\n    [native code]\n}",
        "_flags": "cew"
      }
    },
    {
      "path": "window.SVGCircleElement.prototype",
      "propertyName": "externalResourcesRequired",
      "prevProperty": "r",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The SVGCircleElement.externalResourcesRequired getter can only be used on instances of SVGCircleElement",
        "_get": "function externalResourcesRequired() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.SVGClipPathElement.prototype",
      "propertyName": "externalResourcesRequired",
      "prevProperty": "clipPathUnits",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The SVGClipPathElement.externalResourcesRequired getter can only be used on instances of SVGClipPathElement",
        "_get": "function externalResourcesRequired() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.SVGComponentTransferFunctionElement.prototype",
      "propertyName": "_type",
      "prevProperty": "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC",
      "property": "object"
    },
    {
      "path": "window.SVGComponentTransferFunctionElement.prototype",
      "propertyName": "_flags",
      "prevProperty": "_type",
      "property": ""
    },
    {
      "path": "window",
      "propertyName": "SVGCursorElement",
      "prevProperty": "SVGComponentTransferFunctionElement",
      "property": {
        "prototype": {
          "_protos": [
            "SVGElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "x": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGCursorElement.x getter can only be used on instances of SVGCursorElement",
            "_get": "function x() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "y": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGCursorElement.y getter can only be used on instances of SVGCursorElement",
            "_get": "function y() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "externalResourcesRequired": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGCursorElement.externalResourcesRequired getter can only be used on instances of SVGCursorElement",
            "_get": "function externalResourcesRequired() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "requiredFeatures": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGCursorElement.requiredFeatures getter can only be used on instances of SVGCursorElement",
            "_get": "function requiredFeatures() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "requiredExtensions": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGCursorElement.requiredExtensions getter can only be used on instances of SVGCursorElement",
            "_get": "function requiredExtensions() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "systemLanguage": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGCursorElement.systemLanguage getter can only be used on instances of SVGCursorElement",
            "_get": "function systemLanguage() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "href": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGCursorElement.href getter can only be used on instances of SVGCursorElement",
            "_get": "function href() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "hasExtension": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "hasExtension"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function hasExtension() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGCursorElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGCursorElement() {\n    [native code]\n}",
        "_flags": "cw"
      }
    },
    {
      "path": "window.SVGDefsElement.prototype",
      "propertyName": "externalResourcesRequired",
      "prevProperty": "_protos",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The SVGDefsElement.externalResourcesRequired getter can only be used on instances of SVGDefsElement",
        "_get": "function externalResourcesRequired() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.SVGElement.prototype",
      "propertyName": "xmllang",
      "prevProperty": "viewportElement",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The SVGElement.xmllang getter can only be used on instances of SVGElement",
        "_get": "function xmllang() {\n    [native code]\n}",
        "_set": "function xmllang() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.SVGElement.prototype",
      "propertyName": "xmlspace",
      "prevProperty": "xmllang",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The SVGElement.xmlspace getter can only be used on instances of SVGElement",
        "_get": "function xmlspace() {\n    [native code]\n}",
        "_set": "function xmlspace() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.SVGElement.prototype",
      "propertyName": "onrejectionhandled",
      "prevProperty": "onratechange",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The SVGElement.onrejectionhandled getter can only be used on instances of SVGElement",
        "_get": "function onrejectionhandled() {\n    [native code]\n}",
        "_set": "function onrejectionhandled() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.SVGElement.prototype",
      "propertyName": "onunhandledrejection",
      "prevProperty": "ontoggle",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The SVGElement.onunhandledrejection getter can only be used on instances of SVGElement",
        "_get": "function onunhandledrejection() {\n    [native code]\n}",
        "_set": "function onunhandledrejection() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.SVGElement.prototype",
      "propertyName": "ontransitionrun",
      "prevProperty": "ontransitionend",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The SVGElement.ontransitionrun getter can only be used on instances of SVGElement",
        "_get": "function ontransitionrun() {\n    [native code]\n}",
        "_set": "function ontransitionrun() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.SVGElement.prototype",
      "propertyName": "ontransitionstart",
      "prevProperty": "ontransitionrun",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The SVGElement.ontransitionstart getter can only be used on instances of SVGElement",
        "_get": "function ontransitionstart() {\n    [native code]\n}",
        "_set": "function ontransitionstart() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.SVGElement.prototype",
      "propertyName": "ontransitioncancel",
      "prevProperty": "ontransitionstart",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The SVGElement.ontransitioncancel getter can only be used on instances of SVGElement",
        "_get": "function ontransitioncancel() {\n    [native code]\n}",
        "_set": "function ontransitioncancel() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.SVGElement.prototype",
      "propertyName": "onanimationcancel",
      "prevProperty": "onanimationstart",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The SVGElement.onanimationcancel getter can only be used on instances of SVGElement",
        "_get": "function onanimationcancel() {\n    [native code]\n}",
        "_set": "function onanimationcancel() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.SVGElement.prototype",
      "propertyName": "onsearch",
      "prevProperty": "onpointerleave",
      "property": {
        "_flags": "c",
        "_accessException": "TypeError: The SVGElement.onsearch getter can only be used on instances of SVGElement",
        "_get": "function onsearch() {\n    [native code]\n}",
        "_set": "function onsearch() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.SVGElement.prototype",
      "propertyName": "onwebkitmouseforcechanged",
      "prevProperty": "onwheel",
      "property": {
        "_flags": "c",
        "_accessException": "TypeError: The SVGElement.onwebkitmouseforcechanged getter can only be used on instances of SVGElement",
        "_get": "function onwebkitmouseforcechanged() {\n    [native code]\n}",
        "_set": "function onwebkitmouseforcechanged() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.SVGElement.prototype",
      "propertyName": "onwebkitmouseforcedown",
      "prevProperty": "onwebkitmouseforcechanged",
      "property": {
        "_flags": "c",
        "_accessException": "TypeError: The SVGElement.onwebkitmouseforcedown getter can only be used on instances of SVGElement",
        "_get": "function onwebkitmouseforcedown() {\n    [native code]\n}",
        "_set": "function onwebkitmouseforcedown() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.SVGElement.prototype",
      "propertyName": "onwebkitmouseforcewillbegin",
      "prevProperty": "onwebkitmouseforcedown",
      "property": {
        "_flags": "c",
        "_accessException": "TypeError: The SVGElement.onwebkitmouseforcewillbegin getter can only be used on instances of SVGElement",
        "_get": "function onwebkitmouseforcewillbegin() {\n    [native code]\n}",
        "_set": "function onwebkitmouseforcewillbegin() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.SVGElement.prototype",
      "propertyName": "onwebkitmouseforceup",
      "prevProperty": "onwebkitmouseforcewillbegin",
      "property": {
        "_flags": "c",
        "_accessException": "TypeError: The SVGElement.onwebkitmouseforceup getter can only be used on instances of SVGElement",
        "_get": "function onwebkitmouseforceup() {\n    [native code]\n}",
        "_set": "function onwebkitmouseforceup() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.SVGElement.prototype",
      "propertyName": "getPresentationAttribute",
      "prevProperty": "onwebkitmouseforceup",
      "property": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "getPresentationAttribute"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "_function": "function getPresentationAttribute() {\n    [native code]\n}",
        "_flags": "cew"
      }
    },
    {
      "path": "window.SVGEllipseElement.prototype",
      "propertyName": "externalResourcesRequired",
      "prevProperty": "ry",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The SVGEllipseElement.externalResourcesRequired getter can only be used on instances of SVGEllipseElement",
        "_get": "function externalResourcesRequired() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.SVGFEGaussianBlurElement.prototype",
      "propertyName": "edgeMode",
      "prevProperty": "stdDeviationY",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The SVGFEGaussianBlurElement.edgeMode getter can only be used on instances of SVGFEGaussianBlurElement",
        "_get": "function edgeMode() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.SVGFEGaussianBlurElement.prototype",
      "propertyName": "SVG_EDGEMODE_UNKNOWN",
      "prevProperty": "setStdDeviation",
      "property": {
        "_type": "number",
        "_flags": "e",
        "_value": 0
      }
    },
    {
      "path": "window.SVGFEGaussianBlurElement.prototype",
      "propertyName": "SVG_EDGEMODE_DUPLICATE",
      "prevProperty": "SVG_EDGEMODE_UNKNOWN",
      "property": {
        "_type": "number",
        "_flags": "e",
        "_value": 1
      }
    },
    {
      "path": "window.SVGFEGaussianBlurElement.prototype",
      "propertyName": "SVG_EDGEMODE_WRAP",
      "prevProperty": "SVG_EDGEMODE_DUPLICATE",
      "property": {
        "_type": "number",
        "_flags": "e",
        "_value": 2
      }
    },
    {
      "path": "window.SVGFEGaussianBlurElement.prototype",
      "propertyName": "SVG_EDGEMODE_NONE",
      "prevProperty": "SVG_EDGEMODE_WRAP",
      "property": {
        "_type": "number",
        "_flags": "e",
        "_value": 3
      }
    },
    {
      "path": "window.SVGFEGaussianBlurElement",
      "propertyName": "SVG_EDGEMODE_UNKNOWN",
      "prevProperty": "length",
      "property": {
        "_type": "number",
        "_flags": "e",
        "_value": 0
      }
    },
    {
      "path": "window.SVGFEGaussianBlurElement",
      "propertyName": "SVG_EDGEMODE_DUPLICATE",
      "prevProperty": "SVG_EDGEMODE_UNKNOWN",
      "property": {
        "_type": "number",
        "_flags": "e",
        "_value": 1
      }
    },
    {
      "path": "window.SVGFEGaussianBlurElement",
      "propertyName": "SVG_EDGEMODE_WRAP",
      "prevProperty": "SVG_EDGEMODE_DUPLICATE",
      "property": {
        "_type": "number",
        "_flags": "e",
        "_value": 2
      }
    },
    {
      "path": "window.SVGFEGaussianBlurElement",
      "propertyName": "SVG_EDGEMODE_NONE",
      "prevProperty": "SVG_EDGEMODE_WRAP",
      "property": {
        "_type": "number",
        "_flags": "e",
        "_value": 3
      }
    },
    {
      "path": "window.SVGFEImageElement.prototype",
      "propertyName": "externalResourcesRequired",
      "prevProperty": "preserveAspectRatio",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The SVGFEImageElement.externalResourcesRequired getter can only be used on instances of SVGFEImageElement",
        "_get": "function externalResourcesRequired() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.SVGFEMorphologyElement.prototype",
      "propertyName": "setRadius",
      "prevProperty": "result",
      "property": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "setRadius"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "_function": "function setRadius() {\n    [native code]\n}",
        "_flags": "cew"
      }
    },
    {
      "path": "window.SVGFilterElement.prototype",
      "propertyName": "externalResourcesRequired",
      "prevProperty": "height",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The SVGFilterElement.externalResourcesRequired getter can only be used on instances of SVGFilterElement",
        "_get": "function externalResourcesRequired() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window",
      "propertyName": "SVGFontElement",
      "prevProperty": "SVGFilterElement",
      "property": {
        "prototype": {
          "_protos": [
            "SVGElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGFontElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGFontElement() {\n    [native code]\n}",
        "_flags": "cw"
      }
    },
    {
      "path": "window",
      "propertyName": "SVGFontFaceElement",
      "prevProperty": "SVGFontElement",
      "property": {
        "prototype": {
          "_protos": [
            "SVGElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGFontFaceElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGFontFaceElement() {\n    [native code]\n}",
        "_flags": "cw"
      }
    },
    {
      "path": "window",
      "propertyName": "SVGFontFaceFormatElement",
      "prevProperty": "SVGFontFaceElement",
      "property": {
        "prototype": {
          "_protos": [
            "SVGElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGFontFaceFormatElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGFontFaceFormatElement() {\n    [native code]\n}",
        "_flags": "cw"
      }
    },
    {
      "path": "window",
      "propertyName": "SVGFontFaceNameElement",
      "prevProperty": "SVGFontFaceFormatElement",
      "property": {
        "prototype": {
          "_protos": [
            "SVGElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGFontFaceNameElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGFontFaceNameElement() {\n    [native code]\n}",
        "_flags": "cw"
      }
    },
    {
      "path": "window",
      "propertyName": "SVGFontFaceSrcElement",
      "prevProperty": "SVGFontFaceNameElement",
      "property": {
        "prototype": {
          "_protos": [
            "SVGElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGFontFaceSrcElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGFontFaceSrcElement() {\n    [native code]\n}",
        "_flags": "cw"
      }
    },
    {
      "path": "window",
      "propertyName": "SVGFontFaceUriElement",
      "prevProperty": "SVGFontFaceSrcElement",
      "property": {
        "prototype": {
          "_protos": [
            "SVGElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGFontFaceUriElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGFontFaceUriElement() {\n    [native code]\n}",
        "_flags": "cw"
      }
    },
    {
      "path": "window.SVGForeignObjectElement.prototype",
      "propertyName": "externalResourcesRequired",
      "prevProperty": "height",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The SVGForeignObjectElement.externalResourcesRequired getter can only be used on instances of SVGForeignObjectElement",
        "_get": "function externalResourcesRequired() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.SVGGElement.prototype",
      "propertyName": "externalResourcesRequired",
      "prevProperty": "_protos",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The SVGGElement.externalResourcesRequired getter can only be used on instances of SVGGElement",
        "_get": "function externalResourcesRequired() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window",
      "propertyName": "SVGGlyphElement",
      "prevProperty": "SVGGeometryElement",
      "property": {
        "prototype": {
          "_protos": [
            "SVGElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGGlyphElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGGlyphElement() {\n    [native code]\n}",
        "_flags": "cw"
      }
    },
    {
      "path": "window",
      "propertyName": "SVGGlyphRefElement",
      "prevProperty": "SVGGlyphElement",
      "property": {
        "prototype": {
          "_protos": [
            "SVGElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "glyphRef": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGGlyphRefElement.glyphRef getter can only be used on instances of SVGGlyphRefElement",
            "_get": "function glyphRef() {\n    [native code]\n}",
            "_set": "function glyphRef() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "format": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGGlyphRefElement.format getter can only be used on instances of SVGGlyphRefElement",
            "_get": "function format() {\n    [native code]\n}",
            "_set": "function format() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "x": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGGlyphRefElement.x getter can only be used on instances of SVGGlyphRefElement",
            "_get": "function x() {\n    [native code]\n}",
            "_set": "function x() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "y": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGGlyphRefElement.y getter can only be used on instances of SVGGlyphRefElement",
            "_get": "function y() {\n    [native code]\n}",
            "_set": "function y() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "dx": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGGlyphRefElement.dx getter can only be used on instances of SVGGlyphRefElement",
            "_get": "function dx() {\n    [native code]\n}",
            "_set": "function dx() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "dy": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGGlyphRefElement.dy getter can only be used on instances of SVGGlyphRefElement",
            "_get": "function dy() {\n    [native code]\n}",
            "_set": "function dy() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "href": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGGlyphRefElement.href getter can only be used on instances of SVGGlyphRefElement",
            "_get": "function href() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGGlyphRefElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGGlyphRefElement() {\n    [native code]\n}",
        "_flags": "cw"
      }
    },
    {
      "path": "window.SVGGradientElement.prototype",
      "propertyName": "externalResourcesRequired",
      "prevProperty": "spreadMethod",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The SVGGradientElement.externalResourcesRequired getter can only be used on instances of SVGGradientElement",
        "_get": "function externalResourcesRequired() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.SVGGradientElement.prototype",
      "propertyName": "_type",
      "prevProperty": "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC",
      "property": "object"
    },
    {
      "path": "window.SVGGradientElement.prototype",
      "propertyName": "_flags",
      "prevProperty": "_type",
      "property": ""
    },
    {
      "path": "window.SVGGraphicsElement.prototype",
      "propertyName": "requiredFeatures",
      "prevProperty": "farthestViewportElement",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The SVGGraphicsElement.requiredFeatures getter can only be used on instances of SVGGraphicsElement",
        "_get": "function requiredFeatures() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.SVGGraphicsElement.prototype",
      "propertyName": "getTransformToElement",
      "prevProperty": "getScreenCTM",
      "property": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "getTransformToElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "_function": "function getTransformToElement() {\n    [native code]\n}",
        "_flags": "cew"
      }
    },
    {
      "path": "window.SVGGraphicsElement.prototype",
      "propertyName": "hasExtension",
      "prevProperty": "getTransformToElement",
      "property": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "hasExtension"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "_function": "function hasExtension() {\n    [native code]\n}",
        "_flags": "cew"
      }
    },
    {
      "path": "window",
      "propertyName": "SVGHKernElement",
      "prevProperty": "SVGGraphicsElement",
      "property": {
        "prototype": {
          "_protos": [
            "SVGElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGHKernElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGHKernElement() {\n    [native code]\n}",
        "_flags": "cw"
      }
    },
    {
      "path": "window.SVGImageElement.prototype",
      "propertyName": "externalResourcesRequired",
      "prevProperty": "preserveAspectRatio",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The SVGImageElement.externalResourcesRequired getter can only be used on instances of SVGImageElement",
        "_get": "function externalResourcesRequired() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.SVGLineElement.prototype",
      "propertyName": "externalResourcesRequired",
      "prevProperty": "y2",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The SVGLineElement.externalResourcesRequired getter can only be used on instances of SVGLineElement",
        "_get": "function externalResourcesRequired() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.SVGMPathElement.prototype",
      "propertyName": "externalResourcesRequired",
      "prevProperty": "_protos",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The SVGMPathElement.externalResourcesRequired getter can only be used on instances of SVGMPathElement",
        "_get": "function externalResourcesRequired() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.SVGMarkerElement.prototype",
      "propertyName": "externalResourcesRequired",
      "prevProperty": "orientAngle",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The SVGMarkerElement.externalResourcesRequired getter can only be used on instances of SVGMarkerElement",
        "_get": "function externalResourcesRequired() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.SVGMaskElement.prototype",
      "propertyName": "externalResourcesRequired",
      "prevProperty": "height",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The SVGMaskElement.externalResourcesRequired getter can only be used on instances of SVGMaskElement",
        "_get": "function externalResourcesRequired() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.SVGMaskElement.prototype",
      "propertyName": "requiredFeatures",
      "prevProperty": "externalResourcesRequired",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The SVGMaskElement.requiredFeatures getter can only be used on instances of SVGMaskElement",
        "_get": "function requiredFeatures() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.SVGMaskElement.prototype",
      "propertyName": "hasExtension",
      "prevProperty": "systemLanguage",
      "property": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "hasExtension"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "_function": "function hasExtension() {\n    [native code]\n}",
        "_flags": "cew"
      }
    },
    {
      "path": "window",
      "propertyName": "SVGMissingGlyphElement",
      "prevProperty": "SVGMetadataElement",
      "property": {
        "prototype": {
          "_protos": [
            "SVGElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGMissingGlyphElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGMissingGlyphElement() {\n    [native code]\n}",
        "_flags": "cw"
      }
    },
    {
      "path": "window.SVGPathElement.prototype",
      "propertyName": "pathSegList",
      "prevProperty": "_protos",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The SVGPathElement.pathSegList getter can only be used on instances of SVGPathElement",
        "_get": "function pathSegList() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.SVGPathElement.prototype",
      "propertyName": "normalizedPathSegList",
      "prevProperty": "pathSegList",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The SVGPathElement.normalizedPathSegList getter can only be used on instances of SVGPathElement",
        "_get": "function normalizedPathSegList() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.SVGPathElement.prototype",
      "propertyName": "animatedPathSegList",
      "prevProperty": "normalizedPathSegList",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The SVGPathElement.animatedPathSegList getter can only be used on instances of SVGPathElement",
        "_get": "function animatedPathSegList() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.SVGPathElement.prototype",
      "propertyName": "animatedNormalizedPathSegList",
      "prevProperty": "animatedPathSegList",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The SVGPathElement.animatedNormalizedPathSegList getter can only be used on instances of SVGPathElement",
        "_get": "function animatedNormalizedPathSegList() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.SVGPathElement.prototype",
      "propertyName": "externalResourcesRequired",
      "prevProperty": "animatedNormalizedPathSegList",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The SVGPathElement.externalResourcesRequired getter can only be used on instances of SVGPathElement",
        "_get": "function externalResourcesRequired() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.SVGPathElement.prototype",
      "propertyName": "getPathSegAtLength",
      "prevProperty": "externalResourcesRequired",
      "property": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "getPathSegAtLength"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "_function": "function getPathSegAtLength() {\n    [native code]\n}",
        "_flags": "cew"
      }
    },
    {
      "path": "window.SVGPathElement.prototype",
      "propertyName": "createSVGPathSegClosePath",
      "prevProperty": "getPathSegAtLength",
      "property": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "createSVGPathSegClosePath"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "_function": "function createSVGPathSegClosePath() {\n    [native code]\n}",
        "_flags": "cew"
      }
    },
    {
      "path": "window.SVGPathElement.prototype",
      "propertyName": "createSVGPathSegMovetoAbs",
      "prevProperty": "createSVGPathSegClosePath",
      "property": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "createSVGPathSegMovetoAbs"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "_function": "function createSVGPathSegMovetoAbs() {\n    [native code]\n}",
        "_flags": "cew"
      }
    },
    {
      "path": "window.SVGPathElement.prototype",
      "propertyName": "createSVGPathSegMovetoRel",
      "prevProperty": "createSVGPathSegMovetoAbs",
      "property": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "createSVGPathSegMovetoRel"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "_function": "function createSVGPathSegMovetoRel() {\n    [native code]\n}",
        "_flags": "cew"
      }
    },
    {
      "path": "window.SVGPathElement.prototype",
      "propertyName": "createSVGPathSegLinetoAbs",
      "prevProperty": "createSVGPathSegMovetoRel",
      "property": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "createSVGPathSegLinetoAbs"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "_function": "function createSVGPathSegLinetoAbs() {\n    [native code]\n}",
        "_flags": "cew"
      }
    },
    {
      "path": "window.SVGPathElement.prototype",
      "propertyName": "createSVGPathSegLinetoRel",
      "prevProperty": "createSVGPathSegLinetoAbs",
      "property": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "createSVGPathSegLinetoRel"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "_function": "function createSVGPathSegLinetoRel() {\n    [native code]\n}",
        "_flags": "cew"
      }
    },
    {
      "path": "window.SVGPathElement.prototype",
      "propertyName": "createSVGPathSegCurvetoCubicAbs",
      "prevProperty": "createSVGPathSegLinetoRel",
      "property": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "createSVGPathSegCurvetoCubicAbs"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "_function": "function createSVGPathSegCurvetoCubicAbs() {\n    [native code]\n}",
        "_flags": "cew"
      }
    },
    {
      "path": "window.SVGPathElement.prototype",
      "propertyName": "createSVGPathSegCurvetoCubicRel",
      "prevProperty": "createSVGPathSegCurvetoCubicAbs",
      "property": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "createSVGPathSegCurvetoCubicRel"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "_function": "function createSVGPathSegCurvetoCubicRel() {\n    [native code]\n}",
        "_flags": "cew"
      }
    },
    {
      "path": "window.SVGPathElement.prototype",
      "propertyName": "createSVGPathSegCurvetoQuadraticAbs",
      "prevProperty": "createSVGPathSegCurvetoCubicRel",
      "property": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "createSVGPathSegCurvetoQuadraticAbs"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "_function": "function createSVGPathSegCurvetoQuadraticAbs() {\n    [native code]\n}",
        "_flags": "cew"
      }
    },
    {
      "path": "window.SVGPathElement.prototype",
      "propertyName": "createSVGPathSegCurvetoQuadraticRel",
      "prevProperty": "createSVGPathSegCurvetoQuadraticAbs",
      "property": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "createSVGPathSegCurvetoQuadraticRel"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "_function": "function createSVGPathSegCurvetoQuadraticRel() {\n    [native code]\n}",
        "_flags": "cew"
      }
    },
    {
      "path": "window.SVGPathElement.prototype",
      "propertyName": "createSVGPathSegArcAbs",
      "prevProperty": "createSVGPathSegCurvetoQuadraticRel",
      "property": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "createSVGPathSegArcAbs"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "_function": "function createSVGPathSegArcAbs() {\n    [native code]\n}",
        "_flags": "cew"
      }
    },
    {
      "path": "window.SVGPathElement.prototype",
      "propertyName": "createSVGPathSegArcRel",
      "prevProperty": "createSVGPathSegArcAbs",
      "property": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "createSVGPathSegArcRel"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "_function": "function createSVGPathSegArcRel() {\n    [native code]\n}",
        "_flags": "cew"
      }
    },
    {
      "path": "window.SVGPathElement.prototype",
      "propertyName": "createSVGPathSegLinetoHorizontalAbs",
      "prevProperty": "createSVGPathSegArcRel",
      "property": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "createSVGPathSegLinetoHorizontalAbs"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "_function": "function createSVGPathSegLinetoHorizontalAbs() {\n    [native code]\n}",
        "_flags": "cew"
      }
    },
    {
      "path": "window.SVGPathElement.prototype",
      "propertyName": "createSVGPathSegLinetoHorizontalRel",
      "prevProperty": "createSVGPathSegLinetoHorizontalAbs",
      "property": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "createSVGPathSegLinetoHorizontalRel"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "_function": "function createSVGPathSegLinetoHorizontalRel() {\n    [native code]\n}",
        "_flags": "cew"
      }
    },
    {
      "path": "window.SVGPathElement.prototype",
      "propertyName": "createSVGPathSegLinetoVerticalAbs",
      "prevProperty": "createSVGPathSegLinetoHorizontalRel",
      "property": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "createSVGPathSegLinetoVerticalAbs"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "_function": "function createSVGPathSegLinetoVerticalAbs() {\n    [native code]\n}",
        "_flags": "cew"
      }
    },
    {
      "path": "window.SVGPathElement.prototype",
      "propertyName": "createSVGPathSegLinetoVerticalRel",
      "prevProperty": "createSVGPathSegLinetoVerticalAbs",
      "property": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "createSVGPathSegLinetoVerticalRel"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "_function": "function createSVGPathSegLinetoVerticalRel() {\n    [native code]\n}",
        "_flags": "cew"
      }
    },
    {
      "path": "window.SVGPathElement.prototype",
      "propertyName": "createSVGPathSegCurvetoCubicSmoothAbs",
      "prevProperty": "createSVGPathSegLinetoVerticalRel",
      "property": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "createSVGPathSegCurvetoCubicSmoothAbs"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "_function": "function createSVGPathSegCurvetoCubicSmoothAbs() {\n    [native code]\n}",
        "_flags": "cew"
      }
    },
    {
      "path": "window.SVGPathElement.prototype",
      "propertyName": "createSVGPathSegCurvetoCubicSmoothRel",
      "prevProperty": "createSVGPathSegCurvetoCubicSmoothAbs",
      "property": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "createSVGPathSegCurvetoCubicSmoothRel"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "_function": "function createSVGPathSegCurvetoCubicSmoothRel() {\n    [native code]\n}",
        "_flags": "cew"
      }
    },
    {
      "path": "window.SVGPathElement.prototype",
      "propertyName": "createSVGPathSegCurvetoQuadraticSmoothAbs",
      "prevProperty": "createSVGPathSegCurvetoCubicSmoothRel",
      "property": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "createSVGPathSegCurvetoQuadraticSmoothAbs"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "_function": "function createSVGPathSegCurvetoQuadraticSmoothAbs() {\n    [native code]\n}",
        "_flags": "cew"
      }
    },
    {
      "path": "window.SVGPathElement.prototype",
      "propertyName": "createSVGPathSegCurvetoQuadraticSmoothRel",
      "prevProperty": "createSVGPathSegCurvetoQuadraticSmoothAbs",
      "property": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "createSVGPathSegCurvetoQuadraticSmoothRel"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "_function": "function createSVGPathSegCurvetoQuadraticSmoothRel() {\n    [native code]\n}",
        "_flags": "cew"
      }
    },
    {
      "path": "window",
      "propertyName": "SVGPathSeg",
      "prevProperty": "SVGPathElement",
      "property": {
        "prototype": {
          "_protos": ["Object.prototype"],
          "pathSegType": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGPathSeg.pathSegType getter can only be used on instances of SVGPathSeg",
            "_get": "function pathSegType() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "pathSegTypeAsLetter": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGPathSeg.pathSegTypeAsLetter getter can only be used on instances of SVGPathSeg",
            "_get": "function pathSegTypeAsLetter() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "PATHSEG_UNKNOWN": {
            "_type": "number",
            "_flags": "e",
            "_value": 0
          },
          "PATHSEG_CLOSEPATH": {
            "_type": "number",
            "_flags": "e",
            "_value": 1
          },
          "PATHSEG_MOVETO_ABS": {
            "_type": "number",
            "_flags": "e",
            "_value": 2
          },
          "PATHSEG_MOVETO_REL": {
            "_type": "number",
            "_flags": "e",
            "_value": 3
          },
          "PATHSEG_LINETO_ABS": {
            "_type": "number",
            "_flags": "e",
            "_value": 4
          },
          "PATHSEG_LINETO_REL": {
            "_type": "number",
            "_flags": "e",
            "_value": 5
          },
          "PATHSEG_CURVETO_CUBIC_ABS": {
            "_type": "number",
            "_flags": "e",
            "_value": 6
          },
          "PATHSEG_CURVETO_CUBIC_REL": {
            "_type": "number",
            "_flags": "e",
            "_value": 7
          },
          "PATHSEG_CURVETO_QUADRATIC_ABS": {
            "_type": "number",
            "_flags": "e",
            "_value": 8
          },
          "PATHSEG_CURVETO_QUADRATIC_REL": {
            "_type": "number",
            "_flags": "e",
            "_value": 9
          },
          "PATHSEG_ARC_ABS": {
            "_type": "number",
            "_flags": "e",
            "_value": 10
          },
          "PATHSEG_ARC_REL": {
            "_type": "number",
            "_flags": "e",
            "_value": 11
          },
          "PATHSEG_LINETO_HORIZONTAL_ABS": {
            "_type": "number",
            "_flags": "e",
            "_value": 12
          },
          "PATHSEG_LINETO_HORIZONTAL_REL": {
            "_type": "number",
            "_flags": "e",
            "_value": 13
          },
          "PATHSEG_LINETO_VERTICAL_ABS": {
            "_type": "number",
            "_flags": "e",
            "_value": 14
          },
          "PATHSEG_LINETO_VERTICAL_REL": {
            "_type": "number",
            "_flags": "e",
            "_value": 15
          },
          "PATHSEG_CURVETO_CUBIC_SMOOTH_ABS": {
            "_type": "number",
            "_flags": "e",
            "_value": 16
          },
          "PATHSEG_CURVETO_CUBIC_SMOOTH_REL": {
            "_type": "number",
            "_flags": "e",
            "_value": 17
          },
          "PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS": {
            "_type": "number",
            "_flags": "e",
            "_value": 18
          },
          "PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL": {
            "_type": "number",
            "_flags": "e",
            "_value": 19
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGPathSeg"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "PATHSEG_UNKNOWN": {
          "_type": "number",
          "_flags": "e",
          "_value": 0
        },
        "PATHSEG_CLOSEPATH": {
          "_type": "number",
          "_flags": "e",
          "_value": 1
        },
        "PATHSEG_MOVETO_ABS": {
          "_type": "number",
          "_flags": "e",
          "_value": 2
        },
        "PATHSEG_MOVETO_REL": {
          "_type": "number",
          "_flags": "e",
          "_value": 3
        },
        "PATHSEG_LINETO_ABS": {
          "_type": "number",
          "_flags": "e",
          "_value": 4
        },
        "PATHSEG_LINETO_REL": {
          "_type": "number",
          "_flags": "e",
          "_value": 5
        },
        "PATHSEG_CURVETO_CUBIC_ABS": {
          "_type": "number",
          "_flags": "e",
          "_value": 6
        },
        "PATHSEG_CURVETO_CUBIC_REL": {
          "_type": "number",
          "_flags": "e",
          "_value": 7
        },
        "PATHSEG_CURVETO_QUADRATIC_ABS": {
          "_type": "number",
          "_flags": "e",
          "_value": 8
        },
        "PATHSEG_CURVETO_QUADRATIC_REL": {
          "_type": "number",
          "_flags": "e",
          "_value": 9
        },
        "PATHSEG_ARC_ABS": {
          "_type": "number",
          "_flags": "e",
          "_value": 10
        },
        "PATHSEG_ARC_REL": {
          "_type": "number",
          "_flags": "e",
          "_value": 11
        },
        "PATHSEG_LINETO_HORIZONTAL_ABS": {
          "_type": "number",
          "_flags": "e",
          "_value": 12
        },
        "PATHSEG_LINETO_HORIZONTAL_REL": {
          "_type": "number",
          "_flags": "e",
          "_value": 13
        },
        "PATHSEG_LINETO_VERTICAL_ABS": {
          "_type": "number",
          "_flags": "e",
          "_value": 14
        },
        "PATHSEG_LINETO_VERTICAL_REL": {
          "_type": "number",
          "_flags": "e",
          "_value": 15
        },
        "PATHSEG_CURVETO_CUBIC_SMOOTH_ABS": {
          "_type": "number",
          "_flags": "e",
          "_value": 16
        },
        "PATHSEG_CURVETO_CUBIC_SMOOTH_REL": {
          "_type": "number",
          "_flags": "e",
          "_value": 17
        },
        "PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS": {
          "_type": "number",
          "_flags": "e",
          "_value": 18
        },
        "PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL": {
          "_type": "number",
          "_flags": "e",
          "_value": 19
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGPathSeg() {\n    [native code]\n}",
        "_flags": "cw"
      }
    },
    {
      "path": "window",
      "propertyName": "SVGPathSegArcAbs",
      "prevProperty": "SVGPathSeg",
      "property": {
        "prototype": {
          "_protos": ["SVGPathSeg.prototype", "Object.prototype"],
          "x": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGPathSegArcAbs.x getter can only be used on instances of SVGPathSegArcAbs",
            "_get": "function x() {\n    [native code]\n}",
            "_set": "function x() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "y": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGPathSegArcAbs.y getter can only be used on instances of SVGPathSegArcAbs",
            "_get": "function y() {\n    [native code]\n}",
            "_set": "function y() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "r1": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGPathSegArcAbs.r1 getter can only be used on instances of SVGPathSegArcAbs",
            "_get": "function r1() {\n    [native code]\n}",
            "_set": "function r1() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "r2": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGPathSegArcAbs.r2 getter can only be used on instances of SVGPathSegArcAbs",
            "_get": "function r2() {\n    [native code]\n}",
            "_set": "function r2() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "angle": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGPathSegArcAbs.angle getter can only be used on instances of SVGPathSegArcAbs",
            "_get": "function angle() {\n    [native code]\n}",
            "_set": "function angle() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "largeArcFlag": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGPathSegArcAbs.largeArcFlag getter can only be used on instances of SVGPathSegArcAbs",
            "_get": "function largeArcFlag() {\n    [native code]\n}",
            "_set": "function largeArcFlag() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "sweepFlag": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGPathSegArcAbs.sweepFlag getter can only be used on instances of SVGPathSegArcAbs",
            "_get": "function sweepFlag() {\n    [native code]\n}",
            "_set": "function sweepFlag() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "PATHSEG_UNKNOWN": {
            "_type": "number",
            "_value": 0
          },
          "PATHSEG_CLOSEPATH": {
            "_type": "number",
            "_value": 1
          },
          "PATHSEG_MOVETO_ABS": {
            "_type": "number",
            "_value": 2
          },
          "PATHSEG_MOVETO_REL": {
            "_type": "number",
            "_value": 3
          },
          "PATHSEG_LINETO_ABS": {
            "_type": "number",
            "_value": 4
          },
          "PATHSEG_LINETO_REL": {
            "_type": "number",
            "_value": 5
          },
          "PATHSEG_CURVETO_CUBIC_ABS": {
            "_type": "number",
            "_value": 6
          },
          "PATHSEG_CURVETO_CUBIC_REL": {
            "_type": "number",
            "_value": 7
          },
          "PATHSEG_CURVETO_QUADRATIC_ABS": {
            "_type": "number",
            "_value": 8
          },
          "PATHSEG_CURVETO_QUADRATIC_REL": {
            "_type": "number",
            "_value": 9
          },
          "PATHSEG_ARC_ABS": {
            "_type": "number",
            "_value": 10
          },
          "PATHSEG_ARC_REL": {
            "_type": "number",
            "_value": 11
          },
          "PATHSEG_LINETO_HORIZONTAL_ABS": {
            "_type": "number",
            "_value": 12
          },
          "PATHSEG_LINETO_HORIZONTAL_REL": {
            "_type": "number",
            "_value": 13
          },
          "PATHSEG_LINETO_VERTICAL_ABS": {
            "_type": "number",
            "_value": 14
          },
          "PATHSEG_LINETO_VERTICAL_REL": {
            "_type": "number",
            "_value": 15
          },
          "PATHSEG_CURVETO_CUBIC_SMOOTH_ABS": {
            "_type": "number",
            "_value": 16
          },
          "PATHSEG_CURVETO_CUBIC_SMOOTH_REL": {
            "_type": "number",
            "_value": 17
          },
          "PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS": {
            "_type": "number",
            "_value": 18
          },
          "PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL": {
            "_type": "number",
            "_value": 19
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGPathSegArcAbs"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "PATHSEG_UNKNOWN": {
          "_type": "number",
          "_value": 0
        },
        "PATHSEG_CLOSEPATH": {
          "_type": "number",
          "_value": 1
        },
        "PATHSEG_MOVETO_ABS": {
          "_type": "number",
          "_value": 2
        },
        "PATHSEG_MOVETO_REL": {
          "_type": "number",
          "_value": 3
        },
        "PATHSEG_LINETO_ABS": {
          "_type": "number",
          "_value": 4
        },
        "PATHSEG_LINETO_REL": {
          "_type": "number",
          "_value": 5
        },
        "PATHSEG_CURVETO_CUBIC_ABS": {
          "_type": "number",
          "_value": 6
        },
        "PATHSEG_CURVETO_CUBIC_REL": {
          "_type": "number",
          "_value": 7
        },
        "PATHSEG_CURVETO_QUADRATIC_ABS": {
          "_type": "number",
          "_value": 8
        },
        "PATHSEG_CURVETO_QUADRATIC_REL": {
          "_type": "number",
          "_value": 9
        },
        "PATHSEG_ARC_ABS": {
          "_type": "number",
          "_value": 10
        },
        "PATHSEG_ARC_REL": {
          "_type": "number",
          "_value": 11
        },
        "PATHSEG_LINETO_HORIZONTAL_ABS": {
          "_type": "number",
          "_value": 12
        },
        "PATHSEG_LINETO_HORIZONTAL_REL": {
          "_type": "number",
          "_value": 13
        },
        "PATHSEG_LINETO_VERTICAL_ABS": {
          "_type": "number",
          "_value": 14
        },
        "PATHSEG_LINETO_VERTICAL_REL": {
          "_type": "number",
          "_value": 15
        },
        "PATHSEG_CURVETO_CUBIC_SMOOTH_ABS": {
          "_type": "number",
          "_value": 16
        },
        "PATHSEG_CURVETO_CUBIC_SMOOTH_REL": {
          "_type": "number",
          "_value": 17
        },
        "PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS": {
          "_type": "number",
          "_value": 18
        },
        "PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL": {
          "_type": "number",
          "_value": 19
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGPathSegArcAbs() {\n    [native code]\n}",
        "_flags": "cw"
      }
    },
    {
      "path": "window",
      "propertyName": "SVGPathSegArcRel",
      "prevProperty": "SVGPathSegArcAbs",
      "property": {
        "prototype": {
          "_protos": ["SVGPathSeg.prototype", "Object.prototype"],
          "x": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGPathSegArcRel.x getter can only be used on instances of SVGPathSegArcRel",
            "_get": "function x() {\n    [native code]\n}",
            "_set": "function x() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "y": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGPathSegArcRel.y getter can only be used on instances of SVGPathSegArcRel",
            "_get": "function y() {\n    [native code]\n}",
            "_set": "function y() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "r1": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGPathSegArcRel.r1 getter can only be used on instances of SVGPathSegArcRel",
            "_get": "function r1() {\n    [native code]\n}",
            "_set": "function r1() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "r2": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGPathSegArcRel.r2 getter can only be used on instances of SVGPathSegArcRel",
            "_get": "function r2() {\n    [native code]\n}",
            "_set": "function r2() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "angle": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGPathSegArcRel.angle getter can only be used on instances of SVGPathSegArcRel",
            "_get": "function angle() {\n    [native code]\n}",
            "_set": "function angle() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "largeArcFlag": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGPathSegArcRel.largeArcFlag getter can only be used on instances of SVGPathSegArcRel",
            "_get": "function largeArcFlag() {\n    [native code]\n}",
            "_set": "function largeArcFlag() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "sweepFlag": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGPathSegArcRel.sweepFlag getter can only be used on instances of SVGPathSegArcRel",
            "_get": "function sweepFlag() {\n    [native code]\n}",
            "_set": "function sweepFlag() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "PATHSEG_UNKNOWN": {
            "_type": "number",
            "_value": 0
          },
          "PATHSEG_CLOSEPATH": {
            "_type": "number",
            "_value": 1
          },
          "PATHSEG_MOVETO_ABS": {
            "_type": "number",
            "_value": 2
          },
          "PATHSEG_MOVETO_REL": {
            "_type": "number",
            "_value": 3
          },
          "PATHSEG_LINETO_ABS": {
            "_type": "number",
            "_value": 4
          },
          "PATHSEG_LINETO_REL": {
            "_type": "number",
            "_value": 5
          },
          "PATHSEG_CURVETO_CUBIC_ABS": {
            "_type": "number",
            "_value": 6
          },
          "PATHSEG_CURVETO_CUBIC_REL": {
            "_type": "number",
            "_value": 7
          },
          "PATHSEG_CURVETO_QUADRATIC_ABS": {
            "_type": "number",
            "_value": 8
          },
          "PATHSEG_CURVETO_QUADRATIC_REL": {
            "_type": "number",
            "_value": 9
          },
          "PATHSEG_ARC_ABS": {
            "_type": "number",
            "_value": 10
          },
          "PATHSEG_ARC_REL": {
            "_type": "number",
            "_value": 11
          },
          "PATHSEG_LINETO_HORIZONTAL_ABS": {
            "_type": "number",
            "_value": 12
          },
          "PATHSEG_LINETO_HORIZONTAL_REL": {
            "_type": "number",
            "_value": 13
          },
          "PATHSEG_LINETO_VERTICAL_ABS": {
            "_type": "number",
            "_value": 14
          },
          "PATHSEG_LINETO_VERTICAL_REL": {
            "_type": "number",
            "_value": 15
          },
          "PATHSEG_CURVETO_CUBIC_SMOOTH_ABS": {
            "_type": "number",
            "_value": 16
          },
          "PATHSEG_CURVETO_CUBIC_SMOOTH_REL": {
            "_type": "number",
            "_value": 17
          },
          "PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS": {
            "_type": "number",
            "_value": 18
          },
          "PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL": {
            "_type": "number",
            "_value": 19
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGPathSegArcRel"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "PATHSEG_UNKNOWN": {
          "_type": "number",
          "_value": 0
        },
        "PATHSEG_CLOSEPATH": {
          "_type": "number",
          "_value": 1
        },
        "PATHSEG_MOVETO_ABS": {
          "_type": "number",
          "_value": 2
        },
        "PATHSEG_MOVETO_REL": {
          "_type": "number",
          "_value": 3
        },
        "PATHSEG_LINETO_ABS": {
          "_type": "number",
          "_value": 4
        },
        "PATHSEG_LINETO_REL": {
          "_type": "number",
          "_value": 5
        },
        "PATHSEG_CURVETO_CUBIC_ABS": {
          "_type": "number",
          "_value": 6
        },
        "PATHSEG_CURVETO_CUBIC_REL": {
          "_type": "number",
          "_value": 7
        },
        "PATHSEG_CURVETO_QUADRATIC_ABS": {
          "_type": "number",
          "_value": 8
        },
        "PATHSEG_CURVETO_QUADRATIC_REL": {
          "_type": "number",
          "_value": 9
        },
        "PATHSEG_ARC_ABS": {
          "_type": "number",
          "_value": 10
        },
        "PATHSEG_ARC_REL": {
          "_type": "number",
          "_value": 11
        },
        "PATHSEG_LINETO_HORIZONTAL_ABS": {
          "_type": "number",
          "_value": 12
        },
        "PATHSEG_LINETO_HORIZONTAL_REL": {
          "_type": "number",
          "_value": 13
        },
        "PATHSEG_LINETO_VERTICAL_ABS": {
          "_type": "number",
          "_value": 14
        },
        "PATHSEG_LINETO_VERTICAL_REL": {
          "_type": "number",
          "_value": 15
        },
        "PATHSEG_CURVETO_CUBIC_SMOOTH_ABS": {
          "_type": "number",
          "_value": 16
        },
        "PATHSEG_CURVETO_CUBIC_SMOOTH_REL": {
          "_type": "number",
          "_value": 17
        },
        "PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS": {
          "_type": "number",
          "_value": 18
        },
        "PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL": {
          "_type": "number",
          "_value": 19
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGPathSegArcRel() {\n    [native code]\n}",
        "_flags": "cw"
      }
    },
    {
      "path": "window",
      "propertyName": "SVGPathSegClosePath",
      "prevProperty": "SVGPathSegArcRel",
      "property": {
        "prototype": {
          "_protos": ["SVGPathSeg.prototype", "Object.prototype"],
          "PATHSEG_UNKNOWN": {
            "_type": "number",
            "_value": 0
          },
          "PATHSEG_CLOSEPATH": {
            "_type": "number",
            "_value": 1
          },
          "PATHSEG_MOVETO_ABS": {
            "_type": "number",
            "_value": 2
          },
          "PATHSEG_MOVETO_REL": {
            "_type": "number",
            "_value": 3
          },
          "PATHSEG_LINETO_ABS": {
            "_type": "number",
            "_value": 4
          },
          "PATHSEG_LINETO_REL": {
            "_type": "number",
            "_value": 5
          },
          "PATHSEG_CURVETO_CUBIC_ABS": {
            "_type": "number",
            "_value": 6
          },
          "PATHSEG_CURVETO_CUBIC_REL": {
            "_type": "number",
            "_value": 7
          },
          "PATHSEG_CURVETO_QUADRATIC_ABS": {
            "_type": "number",
            "_value": 8
          },
          "PATHSEG_CURVETO_QUADRATIC_REL": {
            "_type": "number",
            "_value": 9
          },
          "PATHSEG_ARC_ABS": {
            "_type": "number",
            "_value": 10
          },
          "PATHSEG_ARC_REL": {
            "_type": "number",
            "_value": 11
          },
          "PATHSEG_LINETO_HORIZONTAL_ABS": {
            "_type": "number",
            "_value": 12
          },
          "PATHSEG_LINETO_HORIZONTAL_REL": {
            "_type": "number",
            "_value": 13
          },
          "PATHSEG_LINETO_VERTICAL_ABS": {
            "_type": "number",
            "_value": 14
          },
          "PATHSEG_LINETO_VERTICAL_REL": {
            "_type": "number",
            "_value": 15
          },
          "PATHSEG_CURVETO_CUBIC_SMOOTH_ABS": {
            "_type": "number",
            "_value": 16
          },
          "PATHSEG_CURVETO_CUBIC_SMOOTH_REL": {
            "_type": "number",
            "_value": 17
          },
          "PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS": {
            "_type": "number",
            "_value": 18
          },
          "PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL": {
            "_type": "number",
            "_value": 19
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGPathSegClosePath"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "PATHSEG_UNKNOWN": {
          "_type": "number",
          "_value": 0
        },
        "PATHSEG_CLOSEPATH": {
          "_type": "number",
          "_value": 1
        },
        "PATHSEG_MOVETO_ABS": {
          "_type": "number",
          "_value": 2
        },
        "PATHSEG_MOVETO_REL": {
          "_type": "number",
          "_value": 3
        },
        "PATHSEG_LINETO_ABS": {
          "_type": "number",
          "_value": 4
        },
        "PATHSEG_LINETO_REL": {
          "_type": "number",
          "_value": 5
        },
        "PATHSEG_CURVETO_CUBIC_ABS": {
          "_type": "number",
          "_value": 6
        },
        "PATHSEG_CURVETO_CUBIC_REL": {
          "_type": "number",
          "_value": 7
        },
        "PATHSEG_CURVETO_QUADRATIC_ABS": {
          "_type": "number",
          "_value": 8
        },
        "PATHSEG_CURVETO_QUADRATIC_REL": {
          "_type": "number",
          "_value": 9
        },
        "PATHSEG_ARC_ABS": {
          "_type": "number",
          "_value": 10
        },
        "PATHSEG_ARC_REL": {
          "_type": "number",
          "_value": 11
        },
        "PATHSEG_LINETO_HORIZONTAL_ABS": {
          "_type": "number",
          "_value": 12
        },
        "PATHSEG_LINETO_HORIZONTAL_REL": {
          "_type": "number",
          "_value": 13
        },
        "PATHSEG_LINETO_VERTICAL_ABS": {
          "_type": "number",
          "_value": 14
        },
        "PATHSEG_LINETO_VERTICAL_REL": {
          "_type": "number",
          "_value": 15
        },
        "PATHSEG_CURVETO_CUBIC_SMOOTH_ABS": {
          "_type": "number",
          "_value": 16
        },
        "PATHSEG_CURVETO_CUBIC_SMOOTH_REL": {
          "_type": "number",
          "_value": 17
        },
        "PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS": {
          "_type": "number",
          "_value": 18
        },
        "PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL": {
          "_type": "number",
          "_value": 19
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGPathSegClosePath() {\n    [native code]\n}",
        "_flags": "cw"
      }
    },
    {
      "path": "window",
      "propertyName": "SVGPathSegCurvetoCubicAbs",
      "prevProperty": "SVGPathSegClosePath",
      "property": {
        "prototype": {
          "_protos": ["SVGPathSeg.prototype", "Object.prototype"],
          "x": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGPathSegCurvetoCubicAbs.x getter can only be used on instances of SVGPathSegCurvetoCubicAbs",
            "_get": "function x() {\n    [native code]\n}",
            "_set": "function x() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "y": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGPathSegCurvetoCubicAbs.y getter can only be used on instances of SVGPathSegCurvetoCubicAbs",
            "_get": "function y() {\n    [native code]\n}",
            "_set": "function y() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "x1": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGPathSegCurvetoCubicAbs.x1 getter can only be used on instances of SVGPathSegCurvetoCubicAbs",
            "_get": "function x1() {\n    [native code]\n}",
            "_set": "function x1() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "y1": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGPathSegCurvetoCubicAbs.y1 getter can only be used on instances of SVGPathSegCurvetoCubicAbs",
            "_get": "function y1() {\n    [native code]\n}",
            "_set": "function y1() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "x2": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGPathSegCurvetoCubicAbs.x2 getter can only be used on instances of SVGPathSegCurvetoCubicAbs",
            "_get": "function x2() {\n    [native code]\n}",
            "_set": "function x2() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "y2": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGPathSegCurvetoCubicAbs.y2 getter can only be used on instances of SVGPathSegCurvetoCubicAbs",
            "_get": "function y2() {\n    [native code]\n}",
            "_set": "function y2() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "PATHSEG_UNKNOWN": {
            "_type": "number",
            "_value": 0
          },
          "PATHSEG_CLOSEPATH": {
            "_type": "number",
            "_value": 1
          },
          "PATHSEG_MOVETO_ABS": {
            "_type": "number",
            "_value": 2
          },
          "PATHSEG_MOVETO_REL": {
            "_type": "number",
            "_value": 3
          },
          "PATHSEG_LINETO_ABS": {
            "_type": "number",
            "_value": 4
          },
          "PATHSEG_LINETO_REL": {
            "_type": "number",
            "_value": 5
          },
          "PATHSEG_CURVETO_CUBIC_ABS": {
            "_type": "number",
            "_value": 6
          },
          "PATHSEG_CURVETO_CUBIC_REL": {
            "_type": "number",
            "_value": 7
          },
          "PATHSEG_CURVETO_QUADRATIC_ABS": {
            "_type": "number",
            "_value": 8
          },
          "PATHSEG_CURVETO_QUADRATIC_REL": {
            "_type": "number",
            "_value": 9
          },
          "PATHSEG_ARC_ABS": {
            "_type": "number",
            "_value": 10
          },
          "PATHSEG_ARC_REL": {
            "_type": "number",
            "_value": 11
          },
          "PATHSEG_LINETO_HORIZONTAL_ABS": {
            "_type": "number",
            "_value": 12
          },
          "PATHSEG_LINETO_HORIZONTAL_REL": {
            "_type": "number",
            "_value": 13
          },
          "PATHSEG_LINETO_VERTICAL_ABS": {
            "_type": "number",
            "_value": 14
          },
          "PATHSEG_LINETO_VERTICAL_REL": {
            "_type": "number",
            "_value": 15
          },
          "PATHSEG_CURVETO_CUBIC_SMOOTH_ABS": {
            "_type": "number",
            "_value": 16
          },
          "PATHSEG_CURVETO_CUBIC_SMOOTH_REL": {
            "_type": "number",
            "_value": 17
          },
          "PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS": {
            "_type": "number",
            "_value": 18
          },
          "PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL": {
            "_type": "number",
            "_value": 19
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGPathSegCurvetoCubicAbs"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "PATHSEG_UNKNOWN": {
          "_type": "number",
          "_value": 0
        },
        "PATHSEG_CLOSEPATH": {
          "_type": "number",
          "_value": 1
        },
        "PATHSEG_MOVETO_ABS": {
          "_type": "number",
          "_value": 2
        },
        "PATHSEG_MOVETO_REL": {
          "_type": "number",
          "_value": 3
        },
        "PATHSEG_LINETO_ABS": {
          "_type": "number",
          "_value": 4
        },
        "PATHSEG_LINETO_REL": {
          "_type": "number",
          "_value": 5
        },
        "PATHSEG_CURVETO_CUBIC_ABS": {
          "_type": "number",
          "_value": 6
        },
        "PATHSEG_CURVETO_CUBIC_REL": {
          "_type": "number",
          "_value": 7
        },
        "PATHSEG_CURVETO_QUADRATIC_ABS": {
          "_type": "number",
          "_value": 8
        },
        "PATHSEG_CURVETO_QUADRATIC_REL": {
          "_type": "number",
          "_value": 9
        },
        "PATHSEG_ARC_ABS": {
          "_type": "number",
          "_value": 10
        },
        "PATHSEG_ARC_REL": {
          "_type": "number",
          "_value": 11
        },
        "PATHSEG_LINETO_HORIZONTAL_ABS": {
          "_type": "number",
          "_value": 12
        },
        "PATHSEG_LINETO_HORIZONTAL_REL": {
          "_type": "number",
          "_value": 13
        },
        "PATHSEG_LINETO_VERTICAL_ABS": {
          "_type": "number",
          "_value": 14
        },
        "PATHSEG_LINETO_VERTICAL_REL": {
          "_type": "number",
          "_value": 15
        },
        "PATHSEG_CURVETO_CUBIC_SMOOTH_ABS": {
          "_type": "number",
          "_value": 16
        },
        "PATHSEG_CURVETO_CUBIC_SMOOTH_REL": {
          "_type": "number",
          "_value": 17
        },
        "PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS": {
          "_type": "number",
          "_value": 18
        },
        "PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL": {
          "_type": "number",
          "_value": 19
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGPathSegCurvetoCubicAbs() {\n    [native code]\n}",
        "_flags": "cw"
      }
    },
    {
      "path": "window",
      "propertyName": "SVGPathSegCurvetoCubicRel",
      "prevProperty": "SVGPathSegCurvetoCubicAbs",
      "property": {
        "prototype": {
          "_protos": ["SVGPathSeg.prototype", "Object.prototype"],
          "x": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGPathSegCurvetoCubicRel.x getter can only be used on instances of SVGPathSegCurvetoCubicRel",
            "_get": "function x() {\n    [native code]\n}",
            "_set": "function x() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "y": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGPathSegCurvetoCubicRel.y getter can only be used on instances of SVGPathSegCurvetoCubicRel",
            "_get": "function y() {\n    [native code]\n}",
            "_set": "function y() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "x1": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGPathSegCurvetoCubicRel.x1 getter can only be used on instances of SVGPathSegCurvetoCubicRel",
            "_get": "function x1() {\n    [native code]\n}",
            "_set": "function x1() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "y1": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGPathSegCurvetoCubicRel.y1 getter can only be used on instances of SVGPathSegCurvetoCubicRel",
            "_get": "function y1() {\n    [native code]\n}",
            "_set": "function y1() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "x2": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGPathSegCurvetoCubicRel.x2 getter can only be used on instances of SVGPathSegCurvetoCubicRel",
            "_get": "function x2() {\n    [native code]\n}",
            "_set": "function x2() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "y2": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGPathSegCurvetoCubicRel.y2 getter can only be used on instances of SVGPathSegCurvetoCubicRel",
            "_get": "function y2() {\n    [native code]\n}",
            "_set": "function y2() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "PATHSEG_UNKNOWN": {
            "_type": "number",
            "_value": 0
          },
          "PATHSEG_CLOSEPATH": {
            "_type": "number",
            "_value": 1
          },
          "PATHSEG_MOVETO_ABS": {
            "_type": "number",
            "_value": 2
          },
          "PATHSEG_MOVETO_REL": {
            "_type": "number",
            "_value": 3
          },
          "PATHSEG_LINETO_ABS": {
            "_type": "number",
            "_value": 4
          },
          "PATHSEG_LINETO_REL": {
            "_type": "number",
            "_value": 5
          },
          "PATHSEG_CURVETO_CUBIC_ABS": {
            "_type": "number",
            "_value": 6
          },
          "PATHSEG_CURVETO_CUBIC_REL": {
            "_type": "number",
            "_value": 7
          },
          "PATHSEG_CURVETO_QUADRATIC_ABS": {
            "_type": "number",
            "_value": 8
          },
          "PATHSEG_CURVETO_QUADRATIC_REL": {
            "_type": "number",
            "_value": 9
          },
          "PATHSEG_ARC_ABS": {
            "_type": "number",
            "_value": 10
          },
          "PATHSEG_ARC_REL": {
            "_type": "number",
            "_value": 11
          },
          "PATHSEG_LINETO_HORIZONTAL_ABS": {
            "_type": "number",
            "_value": 12
          },
          "PATHSEG_LINETO_HORIZONTAL_REL": {
            "_type": "number",
            "_value": 13
          },
          "PATHSEG_LINETO_VERTICAL_ABS": {
            "_type": "number",
            "_value": 14
          },
          "PATHSEG_LINETO_VERTICAL_REL": {
            "_type": "number",
            "_value": 15
          },
          "PATHSEG_CURVETO_CUBIC_SMOOTH_ABS": {
            "_type": "number",
            "_value": 16
          },
          "PATHSEG_CURVETO_CUBIC_SMOOTH_REL": {
            "_type": "number",
            "_value": 17
          },
          "PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS": {
            "_type": "number",
            "_value": 18
          },
          "PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL": {
            "_type": "number",
            "_value": 19
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGPathSegCurvetoCubicRel"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "PATHSEG_UNKNOWN": {
          "_type": "number",
          "_value": 0
        },
        "PATHSEG_CLOSEPATH": {
          "_type": "number",
          "_value": 1
        },
        "PATHSEG_MOVETO_ABS": {
          "_type": "number",
          "_value": 2
        },
        "PATHSEG_MOVETO_REL": {
          "_type": "number",
          "_value": 3
        },
        "PATHSEG_LINETO_ABS": {
          "_type": "number",
          "_value": 4
        },
        "PATHSEG_LINETO_REL": {
          "_type": "number",
          "_value": 5
        },
        "PATHSEG_CURVETO_CUBIC_ABS": {
          "_type": "number",
          "_value": 6
        },
        "PATHSEG_CURVETO_CUBIC_REL": {
          "_type": "number",
          "_value": 7
        },
        "PATHSEG_CURVETO_QUADRATIC_ABS": {
          "_type": "number",
          "_value": 8
        },
        "PATHSEG_CURVETO_QUADRATIC_REL": {
          "_type": "number",
          "_value": 9
        },
        "PATHSEG_ARC_ABS": {
          "_type": "number",
          "_value": 10
        },
        "PATHSEG_ARC_REL": {
          "_type": "number",
          "_value": 11
        },
        "PATHSEG_LINETO_HORIZONTAL_ABS": {
          "_type": "number",
          "_value": 12
        },
        "PATHSEG_LINETO_HORIZONTAL_REL": {
          "_type": "number",
          "_value": 13
        },
        "PATHSEG_LINETO_VERTICAL_ABS": {
          "_type": "number",
          "_value": 14
        },
        "PATHSEG_LINETO_VERTICAL_REL": {
          "_type": "number",
          "_value": 15
        },
        "PATHSEG_CURVETO_CUBIC_SMOOTH_ABS": {
          "_type": "number",
          "_value": 16
        },
        "PATHSEG_CURVETO_CUBIC_SMOOTH_REL": {
          "_type": "number",
          "_value": 17
        },
        "PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS": {
          "_type": "number",
          "_value": 18
        },
        "PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL": {
          "_type": "number",
          "_value": 19
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGPathSegCurvetoCubicRel() {\n    [native code]\n}",
        "_flags": "cw"
      }
    },
    {
      "path": "window",
      "propertyName": "SVGPathSegCurvetoCubicSmoothAbs",
      "prevProperty": "SVGPathSegCurvetoCubicRel",
      "property": {
        "prototype": {
          "_protos": ["SVGPathSeg.prototype", "Object.prototype"],
          "x": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGPathSegCurvetoCubicSmoothAbs.x getter can only be used on instances of SVGPathSegCurvetoCubicSmoothAbs",
            "_get": "function x() {\n    [native code]\n}",
            "_set": "function x() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "y": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGPathSegCurvetoCubicSmoothAbs.y getter can only be used on instances of SVGPathSegCurvetoCubicSmoothAbs",
            "_get": "function y() {\n    [native code]\n}",
            "_set": "function y() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "x2": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGPathSegCurvetoCubicSmoothAbs.x2 getter can only be used on instances of SVGPathSegCurvetoCubicSmoothAbs",
            "_get": "function x2() {\n    [native code]\n}",
            "_set": "function x2() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "y2": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGPathSegCurvetoCubicSmoothAbs.y2 getter can only be used on instances of SVGPathSegCurvetoCubicSmoothAbs",
            "_get": "function y2() {\n    [native code]\n}",
            "_set": "function y2() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "PATHSEG_UNKNOWN": {
            "_type": "number",
            "_value": 0
          },
          "PATHSEG_CLOSEPATH": {
            "_type": "number",
            "_value": 1
          },
          "PATHSEG_MOVETO_ABS": {
            "_type": "number",
            "_value": 2
          },
          "PATHSEG_MOVETO_REL": {
            "_type": "number",
            "_value": 3
          },
          "PATHSEG_LINETO_ABS": {
            "_type": "number",
            "_value": 4
          },
          "PATHSEG_LINETO_REL": {
            "_type": "number",
            "_value": 5
          },
          "PATHSEG_CURVETO_CUBIC_ABS": {
            "_type": "number",
            "_value": 6
          },
          "PATHSEG_CURVETO_CUBIC_REL": {
            "_type": "number",
            "_value": 7
          },
          "PATHSEG_CURVETO_QUADRATIC_ABS": {
            "_type": "number",
            "_value": 8
          },
          "PATHSEG_CURVETO_QUADRATIC_REL": {
            "_type": "number",
            "_value": 9
          },
          "PATHSEG_ARC_ABS": {
            "_type": "number",
            "_value": 10
          },
          "PATHSEG_ARC_REL": {
            "_type": "number",
            "_value": 11
          },
          "PATHSEG_LINETO_HORIZONTAL_ABS": {
            "_type": "number",
            "_value": 12
          },
          "PATHSEG_LINETO_HORIZONTAL_REL": {
            "_type": "number",
            "_value": 13
          },
          "PATHSEG_LINETO_VERTICAL_ABS": {
            "_type": "number",
            "_value": 14
          },
          "PATHSEG_LINETO_VERTICAL_REL": {
            "_type": "number",
            "_value": 15
          },
          "PATHSEG_CURVETO_CUBIC_SMOOTH_ABS": {
            "_type": "number",
            "_value": 16
          },
          "PATHSEG_CURVETO_CUBIC_SMOOTH_REL": {
            "_type": "number",
            "_value": 17
          },
          "PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS": {
            "_type": "number",
            "_value": 18
          },
          "PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL": {
            "_type": "number",
            "_value": 19
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGPathSegCurvetoCubicSmoothAbs"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "PATHSEG_UNKNOWN": {
          "_type": "number",
          "_value": 0
        },
        "PATHSEG_CLOSEPATH": {
          "_type": "number",
          "_value": 1
        },
        "PATHSEG_MOVETO_ABS": {
          "_type": "number",
          "_value": 2
        },
        "PATHSEG_MOVETO_REL": {
          "_type": "number",
          "_value": 3
        },
        "PATHSEG_LINETO_ABS": {
          "_type": "number",
          "_value": 4
        },
        "PATHSEG_LINETO_REL": {
          "_type": "number",
          "_value": 5
        },
        "PATHSEG_CURVETO_CUBIC_ABS": {
          "_type": "number",
          "_value": 6
        },
        "PATHSEG_CURVETO_CUBIC_REL": {
          "_type": "number",
          "_value": 7
        },
        "PATHSEG_CURVETO_QUADRATIC_ABS": {
          "_type": "number",
          "_value": 8
        },
        "PATHSEG_CURVETO_QUADRATIC_REL": {
          "_type": "number",
          "_value": 9
        },
        "PATHSEG_ARC_ABS": {
          "_type": "number",
          "_value": 10
        },
        "PATHSEG_ARC_REL": {
          "_type": "number",
          "_value": 11
        },
        "PATHSEG_LINETO_HORIZONTAL_ABS": {
          "_type": "number",
          "_value": 12
        },
        "PATHSEG_LINETO_HORIZONTAL_REL": {
          "_type": "number",
          "_value": 13
        },
        "PATHSEG_LINETO_VERTICAL_ABS": {
          "_type": "number",
          "_value": 14
        },
        "PATHSEG_LINETO_VERTICAL_REL": {
          "_type": "number",
          "_value": 15
        },
        "PATHSEG_CURVETO_CUBIC_SMOOTH_ABS": {
          "_type": "number",
          "_value": 16
        },
        "PATHSEG_CURVETO_CUBIC_SMOOTH_REL": {
          "_type": "number",
          "_value": 17
        },
        "PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS": {
          "_type": "number",
          "_value": 18
        },
        "PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL": {
          "_type": "number",
          "_value": 19
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGPathSegCurvetoCubicSmoothAbs() {\n    [native code]\n}",
        "_flags": "cw"
      }
    },
    {
      "path": "window",
      "propertyName": "SVGPathSegCurvetoCubicSmoothRel",
      "prevProperty": "SVGPathSegCurvetoCubicSmoothAbs",
      "property": {
        "prototype": {
          "_protos": ["SVGPathSeg.prototype", "Object.prototype"],
          "x": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGPathSegCurvetoCubicSmoothRel.x getter can only be used on instances of SVGPathSegCurvetoCubicSmoothRel",
            "_get": "function x() {\n    [native code]\n}",
            "_set": "function x() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "y": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGPathSegCurvetoCubicSmoothRel.y getter can only be used on instances of SVGPathSegCurvetoCubicSmoothRel",
            "_get": "function y() {\n    [native code]\n}",
            "_set": "function y() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "x2": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGPathSegCurvetoCubicSmoothRel.x2 getter can only be used on instances of SVGPathSegCurvetoCubicSmoothRel",
            "_get": "function x2() {\n    [native code]\n}",
            "_set": "function x2() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "y2": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGPathSegCurvetoCubicSmoothRel.y2 getter can only be used on instances of SVGPathSegCurvetoCubicSmoothRel",
            "_get": "function y2() {\n    [native code]\n}",
            "_set": "function y2() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "PATHSEG_UNKNOWN": {
            "_type": "number",
            "_value": 0
          },
          "PATHSEG_CLOSEPATH": {
            "_type": "number",
            "_value": 1
          },
          "PATHSEG_MOVETO_ABS": {
            "_type": "number",
            "_value": 2
          },
          "PATHSEG_MOVETO_REL": {
            "_type": "number",
            "_value": 3
          },
          "PATHSEG_LINETO_ABS": {
            "_type": "number",
            "_value": 4
          },
          "PATHSEG_LINETO_REL": {
            "_type": "number",
            "_value": 5
          },
          "PATHSEG_CURVETO_CUBIC_ABS": {
            "_type": "number",
            "_value": 6
          },
          "PATHSEG_CURVETO_CUBIC_REL": {
            "_type": "number",
            "_value": 7
          },
          "PATHSEG_CURVETO_QUADRATIC_ABS": {
            "_type": "number",
            "_value": 8
          },
          "PATHSEG_CURVETO_QUADRATIC_REL": {
            "_type": "number",
            "_value": 9
          },
          "PATHSEG_ARC_ABS": {
            "_type": "number",
            "_value": 10
          },
          "PATHSEG_ARC_REL": {
            "_type": "number",
            "_value": 11
          },
          "PATHSEG_LINETO_HORIZONTAL_ABS": {
            "_type": "number",
            "_value": 12
          },
          "PATHSEG_LINETO_HORIZONTAL_REL": {
            "_type": "number",
            "_value": 13
          },
          "PATHSEG_LINETO_VERTICAL_ABS": {
            "_type": "number",
            "_value": 14
          },
          "PATHSEG_LINETO_VERTICAL_REL": {
            "_type": "number",
            "_value": 15
          },
          "PATHSEG_CURVETO_CUBIC_SMOOTH_ABS": {
            "_type": "number",
            "_value": 16
          },
          "PATHSEG_CURVETO_CUBIC_SMOOTH_REL": {
            "_type": "number",
            "_value": 17
          },
          "PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS": {
            "_type": "number",
            "_value": 18
          },
          "PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL": {
            "_type": "number",
            "_value": 19
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGPathSegCurvetoCubicSmoothRel"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "PATHSEG_UNKNOWN": {
          "_type": "number",
          "_value": 0
        },
        "PATHSEG_CLOSEPATH": {
          "_type": "number",
          "_value": 1
        },
        "PATHSEG_MOVETO_ABS": {
          "_type": "number",
          "_value": 2
        },
        "PATHSEG_MOVETO_REL": {
          "_type": "number",
          "_value": 3
        },
        "PATHSEG_LINETO_ABS": {
          "_type": "number",
          "_value": 4
        },
        "PATHSEG_LINETO_REL": {
          "_type": "number",
          "_value": 5
        },
        "PATHSEG_CURVETO_CUBIC_ABS": {
          "_type": "number",
          "_value": 6
        },
        "PATHSEG_CURVETO_CUBIC_REL": {
          "_type": "number",
          "_value": 7
        },
        "PATHSEG_CURVETO_QUADRATIC_ABS": {
          "_type": "number",
          "_value": 8
        },
        "PATHSEG_CURVETO_QUADRATIC_REL": {
          "_type": "number",
          "_value": 9
        },
        "PATHSEG_ARC_ABS": {
          "_type": "number",
          "_value": 10
        },
        "PATHSEG_ARC_REL": {
          "_type": "number",
          "_value": 11
        },
        "PATHSEG_LINETO_HORIZONTAL_ABS": {
          "_type": "number",
          "_value": 12
        },
        "PATHSEG_LINETO_HORIZONTAL_REL": {
          "_type": "number",
          "_value": 13
        },
        "PATHSEG_LINETO_VERTICAL_ABS": {
          "_type": "number",
          "_value": 14
        },
        "PATHSEG_LINETO_VERTICAL_REL": {
          "_type": "number",
          "_value": 15
        },
        "PATHSEG_CURVETO_CUBIC_SMOOTH_ABS": {
          "_type": "number",
          "_value": 16
        },
        "PATHSEG_CURVETO_CUBIC_SMOOTH_REL": {
          "_type": "number",
          "_value": 17
        },
        "PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS": {
          "_type": "number",
          "_value": 18
        },
        "PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL": {
          "_type": "number",
          "_value": 19
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGPathSegCurvetoCubicSmoothRel() {\n    [native code]\n}",
        "_flags": "cw"
      }
    },
    {
      "path": "window",
      "propertyName": "SVGPathSegCurvetoQuadraticAbs",
      "prevProperty": "SVGPathSegCurvetoCubicSmoothRel",
      "property": {
        "prototype": {
          "_protos": ["SVGPathSeg.prototype", "Object.prototype"],
          "x": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGPathSegCurvetoQuadraticAbs.x getter can only be used on instances of SVGPathSegCurvetoQuadraticAbs",
            "_get": "function x() {\n    [native code]\n}",
            "_set": "function x() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "y": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGPathSegCurvetoQuadraticAbs.y getter can only be used on instances of SVGPathSegCurvetoQuadraticAbs",
            "_get": "function y() {\n    [native code]\n}",
            "_set": "function y() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "x1": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGPathSegCurvetoQuadraticAbs.x1 getter can only be used on instances of SVGPathSegCurvetoQuadraticAbs",
            "_get": "function x1() {\n    [native code]\n}",
            "_set": "function x1() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "y1": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGPathSegCurvetoQuadraticAbs.y1 getter can only be used on instances of SVGPathSegCurvetoQuadraticAbs",
            "_get": "function y1() {\n    [native code]\n}",
            "_set": "function y1() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "PATHSEG_UNKNOWN": {
            "_type": "number",
            "_value": 0
          },
          "PATHSEG_CLOSEPATH": {
            "_type": "number",
            "_value": 1
          },
          "PATHSEG_MOVETO_ABS": {
            "_type": "number",
            "_value": 2
          },
          "PATHSEG_MOVETO_REL": {
            "_type": "number",
            "_value": 3
          },
          "PATHSEG_LINETO_ABS": {
            "_type": "number",
            "_value": 4
          },
          "PATHSEG_LINETO_REL": {
            "_type": "number",
            "_value": 5
          },
          "PATHSEG_CURVETO_CUBIC_ABS": {
            "_type": "number",
            "_value": 6
          },
          "PATHSEG_CURVETO_CUBIC_REL": {
            "_type": "number",
            "_value": 7
          },
          "PATHSEG_CURVETO_QUADRATIC_ABS": {
            "_type": "number",
            "_value": 8
          },
          "PATHSEG_CURVETO_QUADRATIC_REL": {
            "_type": "number",
            "_value": 9
          },
          "PATHSEG_ARC_ABS": {
            "_type": "number",
            "_value": 10
          },
          "PATHSEG_ARC_REL": {
            "_type": "number",
            "_value": 11
          },
          "PATHSEG_LINETO_HORIZONTAL_ABS": {
            "_type": "number",
            "_value": 12
          },
          "PATHSEG_LINETO_HORIZONTAL_REL": {
            "_type": "number",
            "_value": 13
          },
          "PATHSEG_LINETO_VERTICAL_ABS": {
            "_type": "number",
            "_value": 14
          },
          "PATHSEG_LINETO_VERTICAL_REL": {
            "_type": "number",
            "_value": 15
          },
          "PATHSEG_CURVETO_CUBIC_SMOOTH_ABS": {
            "_type": "number",
            "_value": 16
          },
          "PATHSEG_CURVETO_CUBIC_SMOOTH_REL": {
            "_type": "number",
            "_value": 17
          },
          "PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS": {
            "_type": "number",
            "_value": 18
          },
          "PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL": {
            "_type": "number",
            "_value": 19
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGPathSegCurvetoQuadraticAbs"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "PATHSEG_UNKNOWN": {
          "_type": "number",
          "_value": 0
        },
        "PATHSEG_CLOSEPATH": {
          "_type": "number",
          "_value": 1
        },
        "PATHSEG_MOVETO_ABS": {
          "_type": "number",
          "_value": 2
        },
        "PATHSEG_MOVETO_REL": {
          "_type": "number",
          "_value": 3
        },
        "PATHSEG_LINETO_ABS": {
          "_type": "number",
          "_value": 4
        },
        "PATHSEG_LINETO_REL": {
          "_type": "number",
          "_value": 5
        },
        "PATHSEG_CURVETO_CUBIC_ABS": {
          "_type": "number",
          "_value": 6
        },
        "PATHSEG_CURVETO_CUBIC_REL": {
          "_type": "number",
          "_value": 7
        },
        "PATHSEG_CURVETO_QUADRATIC_ABS": {
          "_type": "number",
          "_value": 8
        },
        "PATHSEG_CURVETO_QUADRATIC_REL": {
          "_type": "number",
          "_value": 9
        },
        "PATHSEG_ARC_ABS": {
          "_type": "number",
          "_value": 10
        },
        "PATHSEG_ARC_REL": {
          "_type": "number",
          "_value": 11
        },
        "PATHSEG_LINETO_HORIZONTAL_ABS": {
          "_type": "number",
          "_value": 12
        },
        "PATHSEG_LINETO_HORIZONTAL_REL": {
          "_type": "number",
          "_value": 13
        },
        "PATHSEG_LINETO_VERTICAL_ABS": {
          "_type": "number",
          "_value": 14
        },
        "PATHSEG_LINETO_VERTICAL_REL": {
          "_type": "number",
          "_value": 15
        },
        "PATHSEG_CURVETO_CUBIC_SMOOTH_ABS": {
          "_type": "number",
          "_value": 16
        },
        "PATHSEG_CURVETO_CUBIC_SMOOTH_REL": {
          "_type": "number",
          "_value": 17
        },
        "PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS": {
          "_type": "number",
          "_value": 18
        },
        "PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL": {
          "_type": "number",
          "_value": 19
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGPathSegCurvetoQuadraticAbs() {\n    [native code]\n}",
        "_flags": "cw"
      }
    },
    {
      "path": "window",
      "propertyName": "SVGPathSegCurvetoQuadraticRel",
      "prevProperty": "SVGPathSegCurvetoQuadraticAbs",
      "property": {
        "prototype": {
          "_protos": ["SVGPathSeg.prototype", "Object.prototype"],
          "x": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGPathSegCurvetoQuadraticRel.x getter can only be used on instances of SVGPathSegCurvetoQuadraticRel",
            "_get": "function x() {\n    [native code]\n}",
            "_set": "function x() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "y": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGPathSegCurvetoQuadraticRel.y getter can only be used on instances of SVGPathSegCurvetoQuadraticRel",
            "_get": "function y() {\n    [native code]\n}",
            "_set": "function y() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "x1": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGPathSegCurvetoQuadraticRel.x1 getter can only be used on instances of SVGPathSegCurvetoQuadraticRel",
            "_get": "function x1() {\n    [native code]\n}",
            "_set": "function x1() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "y1": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGPathSegCurvetoQuadraticRel.y1 getter can only be used on instances of SVGPathSegCurvetoQuadraticRel",
            "_get": "function y1() {\n    [native code]\n}",
            "_set": "function y1() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "PATHSEG_UNKNOWN": {
            "_type": "number",
            "_value": 0
          },
          "PATHSEG_CLOSEPATH": {
            "_type": "number",
            "_value": 1
          },
          "PATHSEG_MOVETO_ABS": {
            "_type": "number",
            "_value": 2
          },
          "PATHSEG_MOVETO_REL": {
            "_type": "number",
            "_value": 3
          },
          "PATHSEG_LINETO_ABS": {
            "_type": "number",
            "_value": 4
          },
          "PATHSEG_LINETO_REL": {
            "_type": "number",
            "_value": 5
          },
          "PATHSEG_CURVETO_CUBIC_ABS": {
            "_type": "number",
            "_value": 6
          },
          "PATHSEG_CURVETO_CUBIC_REL": {
            "_type": "number",
            "_value": 7
          },
          "PATHSEG_CURVETO_QUADRATIC_ABS": {
            "_type": "number",
            "_value": 8
          },
          "PATHSEG_CURVETO_QUADRATIC_REL": {
            "_type": "number",
            "_value": 9
          },
          "PATHSEG_ARC_ABS": {
            "_type": "number",
            "_value": 10
          },
          "PATHSEG_ARC_REL": {
            "_type": "number",
            "_value": 11
          },
          "PATHSEG_LINETO_HORIZONTAL_ABS": {
            "_type": "number",
            "_value": 12
          },
          "PATHSEG_LINETO_HORIZONTAL_REL": {
            "_type": "number",
            "_value": 13
          },
          "PATHSEG_LINETO_VERTICAL_ABS": {
            "_type": "number",
            "_value": 14
          },
          "PATHSEG_LINETO_VERTICAL_REL": {
            "_type": "number",
            "_value": 15
          },
          "PATHSEG_CURVETO_CUBIC_SMOOTH_ABS": {
            "_type": "number",
            "_value": 16
          },
          "PATHSEG_CURVETO_CUBIC_SMOOTH_REL": {
            "_type": "number",
            "_value": 17
          },
          "PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS": {
            "_type": "number",
            "_value": 18
          },
          "PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL": {
            "_type": "number",
            "_value": 19
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGPathSegCurvetoQuadraticRel"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "PATHSEG_UNKNOWN": {
          "_type": "number",
          "_value": 0
        },
        "PATHSEG_CLOSEPATH": {
          "_type": "number",
          "_value": 1
        },
        "PATHSEG_MOVETO_ABS": {
          "_type": "number",
          "_value": 2
        },
        "PATHSEG_MOVETO_REL": {
          "_type": "number",
          "_value": 3
        },
        "PATHSEG_LINETO_ABS": {
          "_type": "number",
          "_value": 4
        },
        "PATHSEG_LINETO_REL": {
          "_type": "number",
          "_value": 5
        },
        "PATHSEG_CURVETO_CUBIC_ABS": {
          "_type": "number",
          "_value": 6
        },
        "PATHSEG_CURVETO_CUBIC_REL": {
          "_type": "number",
          "_value": 7
        },
        "PATHSEG_CURVETO_QUADRATIC_ABS": {
          "_type": "number",
          "_value": 8
        },
        "PATHSEG_CURVETO_QUADRATIC_REL": {
          "_type": "number",
          "_value": 9
        },
        "PATHSEG_ARC_ABS": {
          "_type": "number",
          "_value": 10
        },
        "PATHSEG_ARC_REL": {
          "_type": "number",
          "_value": 11
        },
        "PATHSEG_LINETO_HORIZONTAL_ABS": {
          "_type": "number",
          "_value": 12
        },
        "PATHSEG_LINETO_HORIZONTAL_REL": {
          "_type": "number",
          "_value": 13
        },
        "PATHSEG_LINETO_VERTICAL_ABS": {
          "_type": "number",
          "_value": 14
        },
        "PATHSEG_LINETO_VERTICAL_REL": {
          "_type": "number",
          "_value": 15
        },
        "PATHSEG_CURVETO_CUBIC_SMOOTH_ABS": {
          "_type": "number",
          "_value": 16
        },
        "PATHSEG_CURVETO_CUBIC_SMOOTH_REL": {
          "_type": "number",
          "_value": 17
        },
        "PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS": {
          "_type": "number",
          "_value": 18
        },
        "PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL": {
          "_type": "number",
          "_value": 19
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGPathSegCurvetoQuadraticRel() {\n    [native code]\n}",
        "_flags": "cw"
      }
    },
    {
      "path": "window",
      "propertyName": "SVGPathSegCurvetoQuadraticSmoothAbs",
      "prevProperty": "SVGPathSegCurvetoQuadraticRel",
      "property": {
        "prototype": {
          "_protos": ["SVGPathSeg.prototype", "Object.prototype"],
          "x": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGPathSegCurvetoQuadraticSmoothAbs.x getter can only be used on instances of SVGPathSegCurvetoQuadraticSmoothAbs",
            "_get": "function x() {\n    [native code]\n}",
            "_set": "function x() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "y": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGPathSegCurvetoQuadraticSmoothAbs.y getter can only be used on instances of SVGPathSegCurvetoQuadraticSmoothAbs",
            "_get": "function y() {\n    [native code]\n}",
            "_set": "function y() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "PATHSEG_UNKNOWN": {
            "_type": "number",
            "_value": 0
          },
          "PATHSEG_CLOSEPATH": {
            "_type": "number",
            "_value": 1
          },
          "PATHSEG_MOVETO_ABS": {
            "_type": "number",
            "_value": 2
          },
          "PATHSEG_MOVETO_REL": {
            "_type": "number",
            "_value": 3
          },
          "PATHSEG_LINETO_ABS": {
            "_type": "number",
            "_value": 4
          },
          "PATHSEG_LINETO_REL": {
            "_type": "number",
            "_value": 5
          },
          "PATHSEG_CURVETO_CUBIC_ABS": {
            "_type": "number",
            "_value": 6
          },
          "PATHSEG_CURVETO_CUBIC_REL": {
            "_type": "number",
            "_value": 7
          },
          "PATHSEG_CURVETO_QUADRATIC_ABS": {
            "_type": "number",
            "_value": 8
          },
          "PATHSEG_CURVETO_QUADRATIC_REL": {
            "_type": "number",
            "_value": 9
          },
          "PATHSEG_ARC_ABS": {
            "_type": "number",
            "_value": 10
          },
          "PATHSEG_ARC_REL": {
            "_type": "number",
            "_value": 11
          },
          "PATHSEG_LINETO_HORIZONTAL_ABS": {
            "_type": "number",
            "_value": 12
          },
          "PATHSEG_LINETO_HORIZONTAL_REL": {
            "_type": "number",
            "_value": 13
          },
          "PATHSEG_LINETO_VERTICAL_ABS": {
            "_type": "number",
            "_value": 14
          },
          "PATHSEG_LINETO_VERTICAL_REL": {
            "_type": "number",
            "_value": 15
          },
          "PATHSEG_CURVETO_CUBIC_SMOOTH_ABS": {
            "_type": "number",
            "_value": 16
          },
          "PATHSEG_CURVETO_CUBIC_SMOOTH_REL": {
            "_type": "number",
            "_value": 17
          },
          "PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS": {
            "_type": "number",
            "_value": 18
          },
          "PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL": {
            "_type": "number",
            "_value": 19
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGPathSegCurvetoQuadraticSmoothAbs"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "PATHSEG_UNKNOWN": {
          "_type": "number",
          "_value": 0
        },
        "PATHSEG_CLOSEPATH": {
          "_type": "number",
          "_value": 1
        },
        "PATHSEG_MOVETO_ABS": {
          "_type": "number",
          "_value": 2
        },
        "PATHSEG_MOVETO_REL": {
          "_type": "number",
          "_value": 3
        },
        "PATHSEG_LINETO_ABS": {
          "_type": "number",
          "_value": 4
        },
        "PATHSEG_LINETO_REL": {
          "_type": "number",
          "_value": 5
        },
        "PATHSEG_CURVETO_CUBIC_ABS": {
          "_type": "number",
          "_value": 6
        },
        "PATHSEG_CURVETO_CUBIC_REL": {
          "_type": "number",
          "_value": 7
        },
        "PATHSEG_CURVETO_QUADRATIC_ABS": {
          "_type": "number",
          "_value": 8
        },
        "PATHSEG_CURVETO_QUADRATIC_REL": {
          "_type": "number",
          "_value": 9
        },
        "PATHSEG_ARC_ABS": {
          "_type": "number",
          "_value": 10
        },
        "PATHSEG_ARC_REL": {
          "_type": "number",
          "_value": 11
        },
        "PATHSEG_LINETO_HORIZONTAL_ABS": {
          "_type": "number",
          "_value": 12
        },
        "PATHSEG_LINETO_HORIZONTAL_REL": {
          "_type": "number",
          "_value": 13
        },
        "PATHSEG_LINETO_VERTICAL_ABS": {
          "_type": "number",
          "_value": 14
        },
        "PATHSEG_LINETO_VERTICAL_REL": {
          "_type": "number",
          "_value": 15
        },
        "PATHSEG_CURVETO_CUBIC_SMOOTH_ABS": {
          "_type": "number",
          "_value": 16
        },
        "PATHSEG_CURVETO_CUBIC_SMOOTH_REL": {
          "_type": "number",
          "_value": 17
        },
        "PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS": {
          "_type": "number",
          "_value": 18
        },
        "PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL": {
          "_type": "number",
          "_value": 19
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGPathSegCurvetoQuadraticSmoothAbs() {\n    [native code]\n}",
        "_flags": "cw"
      }
    },
    {
      "path": "window",
      "propertyName": "SVGPathSegCurvetoQuadraticSmoothRel",
      "prevProperty": "SVGPathSegCurvetoQuadraticSmoothAbs",
      "property": {
        "prototype": {
          "_protos": ["SVGPathSeg.prototype", "Object.prototype"],
          "x": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGPathSegCurvetoQuadraticSmoothRel.x getter can only be used on instances of SVGPathSegCurvetoQuadraticSmoothRel",
            "_get": "function x() {\n    [native code]\n}",
            "_set": "function x() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "y": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGPathSegCurvetoQuadraticSmoothRel.y getter can only be used on instances of SVGPathSegCurvetoQuadraticSmoothRel",
            "_get": "function y() {\n    [native code]\n}",
            "_set": "function y() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "PATHSEG_UNKNOWN": {
            "_type": "number",
            "_value": 0
          },
          "PATHSEG_CLOSEPATH": {
            "_type": "number",
            "_value": 1
          },
          "PATHSEG_MOVETO_ABS": {
            "_type": "number",
            "_value": 2
          },
          "PATHSEG_MOVETO_REL": {
            "_type": "number",
            "_value": 3
          },
          "PATHSEG_LINETO_ABS": {
            "_type": "number",
            "_value": 4
          },
          "PATHSEG_LINETO_REL": {
            "_type": "number",
            "_value": 5
          },
          "PATHSEG_CURVETO_CUBIC_ABS": {
            "_type": "number",
            "_value": 6
          },
          "PATHSEG_CURVETO_CUBIC_REL": {
            "_type": "number",
            "_value": 7
          },
          "PATHSEG_CURVETO_QUADRATIC_ABS": {
            "_type": "number",
            "_value": 8
          },
          "PATHSEG_CURVETO_QUADRATIC_REL": {
            "_type": "number",
            "_value": 9
          },
          "PATHSEG_ARC_ABS": {
            "_type": "number",
            "_value": 10
          },
          "PATHSEG_ARC_REL": {
            "_type": "number",
            "_value": 11
          },
          "PATHSEG_LINETO_HORIZONTAL_ABS": {
            "_type": "number",
            "_value": 12
          },
          "PATHSEG_LINETO_HORIZONTAL_REL": {
            "_type": "number",
            "_value": 13
          },
          "PATHSEG_LINETO_VERTICAL_ABS": {
            "_type": "number",
            "_value": 14
          },
          "PATHSEG_LINETO_VERTICAL_REL": {
            "_type": "number",
            "_value": 15
          },
          "PATHSEG_CURVETO_CUBIC_SMOOTH_ABS": {
            "_type": "number",
            "_value": 16
          },
          "PATHSEG_CURVETO_CUBIC_SMOOTH_REL": {
            "_type": "number",
            "_value": 17
          },
          "PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS": {
            "_type": "number",
            "_value": 18
          },
          "PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL": {
            "_type": "number",
            "_value": 19
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGPathSegCurvetoQuadraticSmoothRel"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "PATHSEG_UNKNOWN": {
          "_type": "number",
          "_value": 0
        },
        "PATHSEG_CLOSEPATH": {
          "_type": "number",
          "_value": 1
        },
        "PATHSEG_MOVETO_ABS": {
          "_type": "number",
          "_value": 2
        },
        "PATHSEG_MOVETO_REL": {
          "_type": "number",
          "_value": 3
        },
        "PATHSEG_LINETO_ABS": {
          "_type": "number",
          "_value": 4
        },
        "PATHSEG_LINETO_REL": {
          "_type": "number",
          "_value": 5
        },
        "PATHSEG_CURVETO_CUBIC_ABS": {
          "_type": "number",
          "_value": 6
        },
        "PATHSEG_CURVETO_CUBIC_REL": {
          "_type": "number",
          "_value": 7
        },
        "PATHSEG_CURVETO_QUADRATIC_ABS": {
          "_type": "number",
          "_value": 8
        },
        "PATHSEG_CURVETO_QUADRATIC_REL": {
          "_type": "number",
          "_value": 9
        },
        "PATHSEG_ARC_ABS": {
          "_type": "number",
          "_value": 10
        },
        "PATHSEG_ARC_REL": {
          "_type": "number",
          "_value": 11
        },
        "PATHSEG_LINETO_HORIZONTAL_ABS": {
          "_type": "number",
          "_value": 12
        },
        "PATHSEG_LINETO_HORIZONTAL_REL": {
          "_type": "number",
          "_value": 13
        },
        "PATHSEG_LINETO_VERTICAL_ABS": {
          "_type": "number",
          "_value": 14
        },
        "PATHSEG_LINETO_VERTICAL_REL": {
          "_type": "number",
          "_value": 15
        },
        "PATHSEG_CURVETO_CUBIC_SMOOTH_ABS": {
          "_type": "number",
          "_value": 16
        },
        "PATHSEG_CURVETO_CUBIC_SMOOTH_REL": {
          "_type": "number",
          "_value": 17
        },
        "PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS": {
          "_type": "number",
          "_value": 18
        },
        "PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL": {
          "_type": "number",
          "_value": 19
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGPathSegCurvetoQuadraticSmoothRel() {\n    [native code]\n}",
        "_flags": "cw"
      }
    },
    {
      "path": "window",
      "propertyName": "SVGPathSegLinetoAbs",
      "prevProperty": "SVGPathSegCurvetoQuadraticSmoothRel",
      "property": {
        "prototype": {
          "_protos": ["SVGPathSeg.prototype", "Object.prototype"],
          "x": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGPathSegLinetoAbs.x getter can only be used on instances of SVGPathSegLinetoAbs",
            "_get": "function x() {\n    [native code]\n}",
            "_set": "function x() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "y": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGPathSegLinetoAbs.y getter can only be used on instances of SVGPathSegLinetoAbs",
            "_get": "function y() {\n    [native code]\n}",
            "_set": "function y() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "PATHSEG_UNKNOWN": {
            "_type": "number",
            "_value": 0
          },
          "PATHSEG_CLOSEPATH": {
            "_type": "number",
            "_value": 1
          },
          "PATHSEG_MOVETO_ABS": {
            "_type": "number",
            "_value": 2
          },
          "PATHSEG_MOVETO_REL": {
            "_type": "number",
            "_value": 3
          },
          "PATHSEG_LINETO_ABS": {
            "_type": "number",
            "_value": 4
          },
          "PATHSEG_LINETO_REL": {
            "_type": "number",
            "_value": 5
          },
          "PATHSEG_CURVETO_CUBIC_ABS": {
            "_type": "number",
            "_value": 6
          },
          "PATHSEG_CURVETO_CUBIC_REL": {
            "_type": "number",
            "_value": 7
          },
          "PATHSEG_CURVETO_QUADRATIC_ABS": {
            "_type": "number",
            "_value": 8
          },
          "PATHSEG_CURVETO_QUADRATIC_REL": {
            "_type": "number",
            "_value": 9
          },
          "PATHSEG_ARC_ABS": {
            "_type": "number",
            "_value": 10
          },
          "PATHSEG_ARC_REL": {
            "_type": "number",
            "_value": 11
          },
          "PATHSEG_LINETO_HORIZONTAL_ABS": {
            "_type": "number",
            "_value": 12
          },
          "PATHSEG_LINETO_HORIZONTAL_REL": {
            "_type": "number",
            "_value": 13
          },
          "PATHSEG_LINETO_VERTICAL_ABS": {
            "_type": "number",
            "_value": 14
          },
          "PATHSEG_LINETO_VERTICAL_REL": {
            "_type": "number",
            "_value": 15
          },
          "PATHSEG_CURVETO_CUBIC_SMOOTH_ABS": {
            "_type": "number",
            "_value": 16
          },
          "PATHSEG_CURVETO_CUBIC_SMOOTH_REL": {
            "_type": "number",
            "_value": 17
          },
          "PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS": {
            "_type": "number",
            "_value": 18
          },
          "PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL": {
            "_type": "number",
            "_value": 19
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGPathSegLinetoAbs"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "PATHSEG_UNKNOWN": {
          "_type": "number",
          "_value": 0
        },
        "PATHSEG_CLOSEPATH": {
          "_type": "number",
          "_value": 1
        },
        "PATHSEG_MOVETO_ABS": {
          "_type": "number",
          "_value": 2
        },
        "PATHSEG_MOVETO_REL": {
          "_type": "number",
          "_value": 3
        },
        "PATHSEG_LINETO_ABS": {
          "_type": "number",
          "_value": 4
        },
        "PATHSEG_LINETO_REL": {
          "_type": "number",
          "_value": 5
        },
        "PATHSEG_CURVETO_CUBIC_ABS": {
          "_type": "number",
          "_value": 6
        },
        "PATHSEG_CURVETO_CUBIC_REL": {
          "_type": "number",
          "_value": 7
        },
        "PATHSEG_CURVETO_QUADRATIC_ABS": {
          "_type": "number",
          "_value": 8
        },
        "PATHSEG_CURVETO_QUADRATIC_REL": {
          "_type": "number",
          "_value": 9
        },
        "PATHSEG_ARC_ABS": {
          "_type": "number",
          "_value": 10
        },
        "PATHSEG_ARC_REL": {
          "_type": "number",
          "_value": 11
        },
        "PATHSEG_LINETO_HORIZONTAL_ABS": {
          "_type": "number",
          "_value": 12
        },
        "PATHSEG_LINETO_HORIZONTAL_REL": {
          "_type": "number",
          "_value": 13
        },
        "PATHSEG_LINETO_VERTICAL_ABS": {
          "_type": "number",
          "_value": 14
        },
        "PATHSEG_LINETO_VERTICAL_REL": {
          "_type": "number",
          "_value": 15
        },
        "PATHSEG_CURVETO_CUBIC_SMOOTH_ABS": {
          "_type": "number",
          "_value": 16
        },
        "PATHSEG_CURVETO_CUBIC_SMOOTH_REL": {
          "_type": "number",
          "_value": 17
        },
        "PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS": {
          "_type": "number",
          "_value": 18
        },
        "PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL": {
          "_type": "number",
          "_value": 19
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGPathSegLinetoAbs() {\n    [native code]\n}",
        "_flags": "cw"
      }
    },
    {
      "path": "window",
      "propertyName": "SVGPathSegLinetoHorizontalAbs",
      "prevProperty": "SVGPathSegLinetoAbs",
      "property": {
        "prototype": {
          "_protos": ["SVGPathSeg.prototype", "Object.prototype"],
          "x": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGPathSegLinetoHorizontalAbs.x getter can only be used on instances of SVGPathSegLinetoHorizontalAbs",
            "_get": "function x() {\n    [native code]\n}",
            "_set": "function x() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "PATHSEG_UNKNOWN": {
            "_type": "number",
            "_value": 0
          },
          "PATHSEG_CLOSEPATH": {
            "_type": "number",
            "_value": 1
          },
          "PATHSEG_MOVETO_ABS": {
            "_type": "number",
            "_value": 2
          },
          "PATHSEG_MOVETO_REL": {
            "_type": "number",
            "_value": 3
          },
          "PATHSEG_LINETO_ABS": {
            "_type": "number",
            "_value": 4
          },
          "PATHSEG_LINETO_REL": {
            "_type": "number",
            "_value": 5
          },
          "PATHSEG_CURVETO_CUBIC_ABS": {
            "_type": "number",
            "_value": 6
          },
          "PATHSEG_CURVETO_CUBIC_REL": {
            "_type": "number",
            "_value": 7
          },
          "PATHSEG_CURVETO_QUADRATIC_ABS": {
            "_type": "number",
            "_value": 8
          },
          "PATHSEG_CURVETO_QUADRATIC_REL": {
            "_type": "number",
            "_value": 9
          },
          "PATHSEG_ARC_ABS": {
            "_type": "number",
            "_value": 10
          },
          "PATHSEG_ARC_REL": {
            "_type": "number",
            "_value": 11
          },
          "PATHSEG_LINETO_HORIZONTAL_ABS": {
            "_type": "number",
            "_value": 12
          },
          "PATHSEG_LINETO_HORIZONTAL_REL": {
            "_type": "number",
            "_value": 13
          },
          "PATHSEG_LINETO_VERTICAL_ABS": {
            "_type": "number",
            "_value": 14
          },
          "PATHSEG_LINETO_VERTICAL_REL": {
            "_type": "number",
            "_value": 15
          },
          "PATHSEG_CURVETO_CUBIC_SMOOTH_ABS": {
            "_type": "number",
            "_value": 16
          },
          "PATHSEG_CURVETO_CUBIC_SMOOTH_REL": {
            "_type": "number",
            "_value": 17
          },
          "PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS": {
            "_type": "number",
            "_value": 18
          },
          "PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL": {
            "_type": "number",
            "_value": 19
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGPathSegLinetoHorizontalAbs"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "PATHSEG_UNKNOWN": {
          "_type": "number",
          "_value": 0
        },
        "PATHSEG_CLOSEPATH": {
          "_type": "number",
          "_value": 1
        },
        "PATHSEG_MOVETO_ABS": {
          "_type": "number",
          "_value": 2
        },
        "PATHSEG_MOVETO_REL": {
          "_type": "number",
          "_value": 3
        },
        "PATHSEG_LINETO_ABS": {
          "_type": "number",
          "_value": 4
        },
        "PATHSEG_LINETO_REL": {
          "_type": "number",
          "_value": 5
        },
        "PATHSEG_CURVETO_CUBIC_ABS": {
          "_type": "number",
          "_value": 6
        },
        "PATHSEG_CURVETO_CUBIC_REL": {
          "_type": "number",
          "_value": 7
        },
        "PATHSEG_CURVETO_QUADRATIC_ABS": {
          "_type": "number",
          "_value": 8
        },
        "PATHSEG_CURVETO_QUADRATIC_REL": {
          "_type": "number",
          "_value": 9
        },
        "PATHSEG_ARC_ABS": {
          "_type": "number",
          "_value": 10
        },
        "PATHSEG_ARC_REL": {
          "_type": "number",
          "_value": 11
        },
        "PATHSEG_LINETO_HORIZONTAL_ABS": {
          "_type": "number",
          "_value": 12
        },
        "PATHSEG_LINETO_HORIZONTAL_REL": {
          "_type": "number",
          "_value": 13
        },
        "PATHSEG_LINETO_VERTICAL_ABS": {
          "_type": "number",
          "_value": 14
        },
        "PATHSEG_LINETO_VERTICAL_REL": {
          "_type": "number",
          "_value": 15
        },
        "PATHSEG_CURVETO_CUBIC_SMOOTH_ABS": {
          "_type": "number",
          "_value": 16
        },
        "PATHSEG_CURVETO_CUBIC_SMOOTH_REL": {
          "_type": "number",
          "_value": 17
        },
        "PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS": {
          "_type": "number",
          "_value": 18
        },
        "PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL": {
          "_type": "number",
          "_value": 19
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGPathSegLinetoHorizontalAbs() {\n    [native code]\n}",
        "_flags": "cw"
      }
    },
    {
      "path": "window",
      "propertyName": "SVGPathSegLinetoHorizontalRel",
      "prevProperty": "SVGPathSegLinetoHorizontalAbs",
      "property": {
        "prototype": {
          "_protos": ["SVGPathSeg.prototype", "Object.prototype"],
          "x": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGPathSegLinetoHorizontalRel.x getter can only be used on instances of SVGPathSegLinetoHorizontalRel",
            "_get": "function x() {\n    [native code]\n}",
            "_set": "function x() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "PATHSEG_UNKNOWN": {
            "_type": "number",
            "_value": 0
          },
          "PATHSEG_CLOSEPATH": {
            "_type": "number",
            "_value": 1
          },
          "PATHSEG_MOVETO_ABS": {
            "_type": "number",
            "_value": 2
          },
          "PATHSEG_MOVETO_REL": {
            "_type": "number",
            "_value": 3
          },
          "PATHSEG_LINETO_ABS": {
            "_type": "number",
            "_value": 4
          },
          "PATHSEG_LINETO_REL": {
            "_type": "number",
            "_value": 5
          },
          "PATHSEG_CURVETO_CUBIC_ABS": {
            "_type": "number",
            "_value": 6
          },
          "PATHSEG_CURVETO_CUBIC_REL": {
            "_type": "number",
            "_value": 7
          },
          "PATHSEG_CURVETO_QUADRATIC_ABS": {
            "_type": "number",
            "_value": 8
          },
          "PATHSEG_CURVETO_QUADRATIC_REL": {
            "_type": "number",
            "_value": 9
          },
          "PATHSEG_ARC_ABS": {
            "_type": "number",
            "_value": 10
          },
          "PATHSEG_ARC_REL": {
            "_type": "number",
            "_value": 11
          },
          "PATHSEG_LINETO_HORIZONTAL_ABS": {
            "_type": "number",
            "_value": 12
          },
          "PATHSEG_LINETO_HORIZONTAL_REL": {
            "_type": "number",
            "_value": 13
          },
          "PATHSEG_LINETO_VERTICAL_ABS": {
            "_type": "number",
            "_value": 14
          },
          "PATHSEG_LINETO_VERTICAL_REL": {
            "_type": "number",
            "_value": 15
          },
          "PATHSEG_CURVETO_CUBIC_SMOOTH_ABS": {
            "_type": "number",
            "_value": 16
          },
          "PATHSEG_CURVETO_CUBIC_SMOOTH_REL": {
            "_type": "number",
            "_value": 17
          },
          "PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS": {
            "_type": "number",
            "_value": 18
          },
          "PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL": {
            "_type": "number",
            "_value": 19
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGPathSegLinetoHorizontalRel"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "PATHSEG_UNKNOWN": {
          "_type": "number",
          "_value": 0
        },
        "PATHSEG_CLOSEPATH": {
          "_type": "number",
          "_value": 1
        },
        "PATHSEG_MOVETO_ABS": {
          "_type": "number",
          "_value": 2
        },
        "PATHSEG_MOVETO_REL": {
          "_type": "number",
          "_value": 3
        },
        "PATHSEG_LINETO_ABS": {
          "_type": "number",
          "_value": 4
        },
        "PATHSEG_LINETO_REL": {
          "_type": "number",
          "_value": 5
        },
        "PATHSEG_CURVETO_CUBIC_ABS": {
          "_type": "number",
          "_value": 6
        },
        "PATHSEG_CURVETO_CUBIC_REL": {
          "_type": "number",
          "_value": 7
        },
        "PATHSEG_CURVETO_QUADRATIC_ABS": {
          "_type": "number",
          "_value": 8
        },
        "PATHSEG_CURVETO_QUADRATIC_REL": {
          "_type": "number",
          "_value": 9
        },
        "PATHSEG_ARC_ABS": {
          "_type": "number",
          "_value": 10
        },
        "PATHSEG_ARC_REL": {
          "_type": "number",
          "_value": 11
        },
        "PATHSEG_LINETO_HORIZONTAL_ABS": {
          "_type": "number",
          "_value": 12
        },
        "PATHSEG_LINETO_HORIZONTAL_REL": {
          "_type": "number",
          "_value": 13
        },
        "PATHSEG_LINETO_VERTICAL_ABS": {
          "_type": "number",
          "_value": 14
        },
        "PATHSEG_LINETO_VERTICAL_REL": {
          "_type": "number",
          "_value": 15
        },
        "PATHSEG_CURVETO_CUBIC_SMOOTH_ABS": {
          "_type": "number",
          "_value": 16
        },
        "PATHSEG_CURVETO_CUBIC_SMOOTH_REL": {
          "_type": "number",
          "_value": 17
        },
        "PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS": {
          "_type": "number",
          "_value": 18
        },
        "PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL": {
          "_type": "number",
          "_value": 19
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGPathSegLinetoHorizontalRel() {\n    [native code]\n}",
        "_flags": "cw"
      }
    },
    {
      "path": "window",
      "propertyName": "SVGPathSegLinetoRel",
      "prevProperty": "SVGPathSegLinetoHorizontalRel",
      "property": {
        "prototype": {
          "_protos": ["SVGPathSeg.prototype", "Object.prototype"],
          "x": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGPathSegLinetoRel.x getter can only be used on instances of SVGPathSegLinetoRel",
            "_get": "function x() {\n    [native code]\n}",
            "_set": "function x() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "y": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGPathSegLinetoRel.y getter can only be used on instances of SVGPathSegLinetoRel",
            "_get": "function y() {\n    [native code]\n}",
            "_set": "function y() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "PATHSEG_UNKNOWN": {
            "_type": "number",
            "_value": 0
          },
          "PATHSEG_CLOSEPATH": {
            "_type": "number",
            "_value": 1
          },
          "PATHSEG_MOVETO_ABS": {
            "_type": "number",
            "_value": 2
          },
          "PATHSEG_MOVETO_REL": {
            "_type": "number",
            "_value": 3
          },
          "PATHSEG_LINETO_ABS": {
            "_type": "number",
            "_value": 4
          },
          "PATHSEG_LINETO_REL": {
            "_type": "number",
            "_value": 5
          },
          "PATHSEG_CURVETO_CUBIC_ABS": {
            "_type": "number",
            "_value": 6
          },
          "PATHSEG_CURVETO_CUBIC_REL": {
            "_type": "number",
            "_value": 7
          },
          "PATHSEG_CURVETO_QUADRATIC_ABS": {
            "_type": "number",
            "_value": 8
          },
          "PATHSEG_CURVETO_QUADRATIC_REL": {
            "_type": "number",
            "_value": 9
          },
          "PATHSEG_ARC_ABS": {
            "_type": "number",
            "_value": 10
          },
          "PATHSEG_ARC_REL": {
            "_type": "number",
            "_value": 11
          },
          "PATHSEG_LINETO_HORIZONTAL_ABS": {
            "_type": "number",
            "_value": 12
          },
          "PATHSEG_LINETO_HORIZONTAL_REL": {
            "_type": "number",
            "_value": 13
          },
          "PATHSEG_LINETO_VERTICAL_ABS": {
            "_type": "number",
            "_value": 14
          },
          "PATHSEG_LINETO_VERTICAL_REL": {
            "_type": "number",
            "_value": 15
          },
          "PATHSEG_CURVETO_CUBIC_SMOOTH_ABS": {
            "_type": "number",
            "_value": 16
          },
          "PATHSEG_CURVETO_CUBIC_SMOOTH_REL": {
            "_type": "number",
            "_value": 17
          },
          "PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS": {
            "_type": "number",
            "_value": 18
          },
          "PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL": {
            "_type": "number",
            "_value": 19
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGPathSegLinetoRel"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "PATHSEG_UNKNOWN": {
          "_type": "number",
          "_value": 0
        },
        "PATHSEG_CLOSEPATH": {
          "_type": "number",
          "_value": 1
        },
        "PATHSEG_MOVETO_ABS": {
          "_type": "number",
          "_value": 2
        },
        "PATHSEG_MOVETO_REL": {
          "_type": "number",
          "_value": 3
        },
        "PATHSEG_LINETO_ABS": {
          "_type": "number",
          "_value": 4
        },
        "PATHSEG_LINETO_REL": {
          "_type": "number",
          "_value": 5
        },
        "PATHSEG_CURVETO_CUBIC_ABS": {
          "_type": "number",
          "_value": 6
        },
        "PATHSEG_CURVETO_CUBIC_REL": {
          "_type": "number",
          "_value": 7
        },
        "PATHSEG_CURVETO_QUADRATIC_ABS": {
          "_type": "number",
          "_value": 8
        },
        "PATHSEG_CURVETO_QUADRATIC_REL": {
          "_type": "number",
          "_value": 9
        },
        "PATHSEG_ARC_ABS": {
          "_type": "number",
          "_value": 10
        },
        "PATHSEG_ARC_REL": {
          "_type": "number",
          "_value": 11
        },
        "PATHSEG_LINETO_HORIZONTAL_ABS": {
          "_type": "number",
          "_value": 12
        },
        "PATHSEG_LINETO_HORIZONTAL_REL": {
          "_type": "number",
          "_value": 13
        },
        "PATHSEG_LINETO_VERTICAL_ABS": {
          "_type": "number",
          "_value": 14
        },
        "PATHSEG_LINETO_VERTICAL_REL": {
          "_type": "number",
          "_value": 15
        },
        "PATHSEG_CURVETO_CUBIC_SMOOTH_ABS": {
          "_type": "number",
          "_value": 16
        },
        "PATHSEG_CURVETO_CUBIC_SMOOTH_REL": {
          "_type": "number",
          "_value": 17
        },
        "PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS": {
          "_type": "number",
          "_value": 18
        },
        "PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL": {
          "_type": "number",
          "_value": 19
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGPathSegLinetoRel() {\n    [native code]\n}",
        "_flags": "cw"
      }
    },
    {
      "path": "window",
      "propertyName": "SVGPathSegLinetoVerticalAbs",
      "prevProperty": "SVGPathSegLinetoRel",
      "property": {
        "prototype": {
          "_protos": ["SVGPathSeg.prototype", "Object.prototype"],
          "y": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGPathSegLinetoVerticalAbs.y getter can only be used on instances of SVGPathSegLinetoVerticalAbs",
            "_get": "function y() {\n    [native code]\n}",
            "_set": "function y() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "PATHSEG_UNKNOWN": {
            "_type": "number",
            "_value": 0
          },
          "PATHSEG_CLOSEPATH": {
            "_type": "number",
            "_value": 1
          },
          "PATHSEG_MOVETO_ABS": {
            "_type": "number",
            "_value": 2
          },
          "PATHSEG_MOVETO_REL": {
            "_type": "number",
            "_value": 3
          },
          "PATHSEG_LINETO_ABS": {
            "_type": "number",
            "_value": 4
          },
          "PATHSEG_LINETO_REL": {
            "_type": "number",
            "_value": 5
          },
          "PATHSEG_CURVETO_CUBIC_ABS": {
            "_type": "number",
            "_value": 6
          },
          "PATHSEG_CURVETO_CUBIC_REL": {
            "_type": "number",
            "_value": 7
          },
          "PATHSEG_CURVETO_QUADRATIC_ABS": {
            "_type": "number",
            "_value": 8
          },
          "PATHSEG_CURVETO_QUADRATIC_REL": {
            "_type": "number",
            "_value": 9
          },
          "PATHSEG_ARC_ABS": {
            "_type": "number",
            "_value": 10
          },
          "PATHSEG_ARC_REL": {
            "_type": "number",
            "_value": 11
          },
          "PATHSEG_LINETO_HORIZONTAL_ABS": {
            "_type": "number",
            "_value": 12
          },
          "PATHSEG_LINETO_HORIZONTAL_REL": {
            "_type": "number",
            "_value": 13
          },
          "PATHSEG_LINETO_VERTICAL_ABS": {
            "_type": "number",
            "_value": 14
          },
          "PATHSEG_LINETO_VERTICAL_REL": {
            "_type": "number",
            "_value": 15
          },
          "PATHSEG_CURVETO_CUBIC_SMOOTH_ABS": {
            "_type": "number",
            "_value": 16
          },
          "PATHSEG_CURVETO_CUBIC_SMOOTH_REL": {
            "_type": "number",
            "_value": 17
          },
          "PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS": {
            "_type": "number",
            "_value": 18
          },
          "PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL": {
            "_type": "number",
            "_value": 19
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGPathSegLinetoVerticalAbs"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "PATHSEG_UNKNOWN": {
          "_type": "number",
          "_value": 0
        },
        "PATHSEG_CLOSEPATH": {
          "_type": "number",
          "_value": 1
        },
        "PATHSEG_MOVETO_ABS": {
          "_type": "number",
          "_value": 2
        },
        "PATHSEG_MOVETO_REL": {
          "_type": "number",
          "_value": 3
        },
        "PATHSEG_LINETO_ABS": {
          "_type": "number",
          "_value": 4
        },
        "PATHSEG_LINETO_REL": {
          "_type": "number",
          "_value": 5
        },
        "PATHSEG_CURVETO_CUBIC_ABS": {
          "_type": "number",
          "_value": 6
        },
        "PATHSEG_CURVETO_CUBIC_REL": {
          "_type": "number",
          "_value": 7
        },
        "PATHSEG_CURVETO_QUADRATIC_ABS": {
          "_type": "number",
          "_value": 8
        },
        "PATHSEG_CURVETO_QUADRATIC_REL": {
          "_type": "number",
          "_value": 9
        },
        "PATHSEG_ARC_ABS": {
          "_type": "number",
          "_value": 10
        },
        "PATHSEG_ARC_REL": {
          "_type": "number",
          "_value": 11
        },
        "PATHSEG_LINETO_HORIZONTAL_ABS": {
          "_type": "number",
          "_value": 12
        },
        "PATHSEG_LINETO_HORIZONTAL_REL": {
          "_type": "number",
          "_value": 13
        },
        "PATHSEG_LINETO_VERTICAL_ABS": {
          "_type": "number",
          "_value": 14
        },
        "PATHSEG_LINETO_VERTICAL_REL": {
          "_type": "number",
          "_value": 15
        },
        "PATHSEG_CURVETO_CUBIC_SMOOTH_ABS": {
          "_type": "number",
          "_value": 16
        },
        "PATHSEG_CURVETO_CUBIC_SMOOTH_REL": {
          "_type": "number",
          "_value": 17
        },
        "PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS": {
          "_type": "number",
          "_value": 18
        },
        "PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL": {
          "_type": "number",
          "_value": 19
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGPathSegLinetoVerticalAbs() {\n    [native code]\n}",
        "_flags": "cw"
      }
    },
    {
      "path": "window",
      "propertyName": "SVGPathSegLinetoVerticalRel",
      "prevProperty": "SVGPathSegLinetoVerticalAbs",
      "property": {
        "prototype": {
          "_protos": ["SVGPathSeg.prototype", "Object.prototype"],
          "y": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGPathSegLinetoVerticalRel.y getter can only be used on instances of SVGPathSegLinetoVerticalRel",
            "_get": "function y() {\n    [native code]\n}",
            "_set": "function y() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "PATHSEG_UNKNOWN": {
            "_type": "number",
            "_value": 0
          },
          "PATHSEG_CLOSEPATH": {
            "_type": "number",
            "_value": 1
          },
          "PATHSEG_MOVETO_ABS": {
            "_type": "number",
            "_value": 2
          },
          "PATHSEG_MOVETO_REL": {
            "_type": "number",
            "_value": 3
          },
          "PATHSEG_LINETO_ABS": {
            "_type": "number",
            "_value": 4
          },
          "PATHSEG_LINETO_REL": {
            "_type": "number",
            "_value": 5
          },
          "PATHSEG_CURVETO_CUBIC_ABS": {
            "_type": "number",
            "_value": 6
          },
          "PATHSEG_CURVETO_CUBIC_REL": {
            "_type": "number",
            "_value": 7
          },
          "PATHSEG_CURVETO_QUADRATIC_ABS": {
            "_type": "number",
            "_value": 8
          },
          "PATHSEG_CURVETO_QUADRATIC_REL": {
            "_type": "number",
            "_value": 9
          },
          "PATHSEG_ARC_ABS": {
            "_type": "number",
            "_value": 10
          },
          "PATHSEG_ARC_REL": {
            "_type": "number",
            "_value": 11
          },
          "PATHSEG_LINETO_HORIZONTAL_ABS": {
            "_type": "number",
            "_value": 12
          },
          "PATHSEG_LINETO_HORIZONTAL_REL": {
            "_type": "number",
            "_value": 13
          },
          "PATHSEG_LINETO_VERTICAL_ABS": {
            "_type": "number",
            "_value": 14
          },
          "PATHSEG_LINETO_VERTICAL_REL": {
            "_type": "number",
            "_value": 15
          },
          "PATHSEG_CURVETO_CUBIC_SMOOTH_ABS": {
            "_type": "number",
            "_value": 16
          },
          "PATHSEG_CURVETO_CUBIC_SMOOTH_REL": {
            "_type": "number",
            "_value": 17
          },
          "PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS": {
            "_type": "number",
            "_value": 18
          },
          "PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL": {
            "_type": "number",
            "_value": 19
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGPathSegLinetoVerticalRel"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "PATHSEG_UNKNOWN": {
          "_type": "number",
          "_value": 0
        },
        "PATHSEG_CLOSEPATH": {
          "_type": "number",
          "_value": 1
        },
        "PATHSEG_MOVETO_ABS": {
          "_type": "number",
          "_value": 2
        },
        "PATHSEG_MOVETO_REL": {
          "_type": "number",
          "_value": 3
        },
        "PATHSEG_LINETO_ABS": {
          "_type": "number",
          "_value": 4
        },
        "PATHSEG_LINETO_REL": {
          "_type": "number",
          "_value": 5
        },
        "PATHSEG_CURVETO_CUBIC_ABS": {
          "_type": "number",
          "_value": 6
        },
        "PATHSEG_CURVETO_CUBIC_REL": {
          "_type": "number",
          "_value": 7
        },
        "PATHSEG_CURVETO_QUADRATIC_ABS": {
          "_type": "number",
          "_value": 8
        },
        "PATHSEG_CURVETO_QUADRATIC_REL": {
          "_type": "number",
          "_value": 9
        },
        "PATHSEG_ARC_ABS": {
          "_type": "number",
          "_value": 10
        },
        "PATHSEG_ARC_REL": {
          "_type": "number",
          "_value": 11
        },
        "PATHSEG_LINETO_HORIZONTAL_ABS": {
          "_type": "number",
          "_value": 12
        },
        "PATHSEG_LINETO_HORIZONTAL_REL": {
          "_type": "number",
          "_value": 13
        },
        "PATHSEG_LINETO_VERTICAL_ABS": {
          "_type": "number",
          "_value": 14
        },
        "PATHSEG_LINETO_VERTICAL_REL": {
          "_type": "number",
          "_value": 15
        },
        "PATHSEG_CURVETO_CUBIC_SMOOTH_ABS": {
          "_type": "number",
          "_value": 16
        },
        "PATHSEG_CURVETO_CUBIC_SMOOTH_REL": {
          "_type": "number",
          "_value": 17
        },
        "PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS": {
          "_type": "number",
          "_value": 18
        },
        "PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL": {
          "_type": "number",
          "_value": 19
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGPathSegLinetoVerticalRel() {\n    [native code]\n}",
        "_flags": "cw"
      }
    },
    {
      "path": "window",
      "propertyName": "SVGPathSegList",
      "prevProperty": "SVGPathSegLinetoVerticalRel",
      "property": {
        "prototype": {
          "_protos": ["Object.prototype"],
          "numberOfItems": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGPathSegList.numberOfItems getter can only be used on instances of SVGPathSegList",
            "_get": "function numberOfItems() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "clear": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "clear"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function clear() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "initialize": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "initialize"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function initialize() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "getItem": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getItem"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function getItem() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "insertItemBefore": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "insertItemBefore"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function insertItemBefore() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "replaceItem": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "replaceItem"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function replaceItem() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "removeItem": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "removeItem"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function removeItem() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "appendItem": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "appendItem"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function appendItem() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGPathSegList"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGPathSegList() {\n    [native code]\n}",
        "_flags": "cw"
      }
    },
    {
      "path": "window",
      "propertyName": "SVGPathSegMovetoAbs",
      "prevProperty": "SVGPathSegList",
      "property": {
        "prototype": {
          "_protos": ["SVGPathSeg.prototype", "Object.prototype"],
          "x": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGPathSegMovetoAbs.x getter can only be used on instances of SVGPathSegMovetoAbs",
            "_get": "function x() {\n    [native code]\n}",
            "_set": "function x() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "y": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGPathSegMovetoAbs.y getter can only be used on instances of SVGPathSegMovetoAbs",
            "_get": "function y() {\n    [native code]\n}",
            "_set": "function y() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "PATHSEG_UNKNOWN": {
            "_type": "number",
            "_value": 0
          },
          "PATHSEG_CLOSEPATH": {
            "_type": "number",
            "_value": 1
          },
          "PATHSEG_MOVETO_ABS": {
            "_type": "number",
            "_value": 2
          },
          "PATHSEG_MOVETO_REL": {
            "_type": "number",
            "_value": 3
          },
          "PATHSEG_LINETO_ABS": {
            "_type": "number",
            "_value": 4
          },
          "PATHSEG_LINETO_REL": {
            "_type": "number",
            "_value": 5
          },
          "PATHSEG_CURVETO_CUBIC_ABS": {
            "_type": "number",
            "_value": 6
          },
          "PATHSEG_CURVETO_CUBIC_REL": {
            "_type": "number",
            "_value": 7
          },
          "PATHSEG_CURVETO_QUADRATIC_ABS": {
            "_type": "number",
            "_value": 8
          },
          "PATHSEG_CURVETO_QUADRATIC_REL": {
            "_type": "number",
            "_value": 9
          },
          "PATHSEG_ARC_ABS": {
            "_type": "number",
            "_value": 10
          },
          "PATHSEG_ARC_REL": {
            "_type": "number",
            "_value": 11
          },
          "PATHSEG_LINETO_HORIZONTAL_ABS": {
            "_type": "number",
            "_value": 12
          },
          "PATHSEG_LINETO_HORIZONTAL_REL": {
            "_type": "number",
            "_value": 13
          },
          "PATHSEG_LINETO_VERTICAL_ABS": {
            "_type": "number",
            "_value": 14
          },
          "PATHSEG_LINETO_VERTICAL_REL": {
            "_type": "number",
            "_value": 15
          },
          "PATHSEG_CURVETO_CUBIC_SMOOTH_ABS": {
            "_type": "number",
            "_value": 16
          },
          "PATHSEG_CURVETO_CUBIC_SMOOTH_REL": {
            "_type": "number",
            "_value": 17
          },
          "PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS": {
            "_type": "number",
            "_value": 18
          },
          "PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL": {
            "_type": "number",
            "_value": 19
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGPathSegMovetoAbs"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "PATHSEG_UNKNOWN": {
          "_type": "number",
          "_value": 0
        },
        "PATHSEG_CLOSEPATH": {
          "_type": "number",
          "_value": 1
        },
        "PATHSEG_MOVETO_ABS": {
          "_type": "number",
          "_value": 2
        },
        "PATHSEG_MOVETO_REL": {
          "_type": "number",
          "_value": 3
        },
        "PATHSEG_LINETO_ABS": {
          "_type": "number",
          "_value": 4
        },
        "PATHSEG_LINETO_REL": {
          "_type": "number",
          "_value": 5
        },
        "PATHSEG_CURVETO_CUBIC_ABS": {
          "_type": "number",
          "_value": 6
        },
        "PATHSEG_CURVETO_CUBIC_REL": {
          "_type": "number",
          "_value": 7
        },
        "PATHSEG_CURVETO_QUADRATIC_ABS": {
          "_type": "number",
          "_value": 8
        },
        "PATHSEG_CURVETO_QUADRATIC_REL": {
          "_type": "number",
          "_value": 9
        },
        "PATHSEG_ARC_ABS": {
          "_type": "number",
          "_value": 10
        },
        "PATHSEG_ARC_REL": {
          "_type": "number",
          "_value": 11
        },
        "PATHSEG_LINETO_HORIZONTAL_ABS": {
          "_type": "number",
          "_value": 12
        },
        "PATHSEG_LINETO_HORIZONTAL_REL": {
          "_type": "number",
          "_value": 13
        },
        "PATHSEG_LINETO_VERTICAL_ABS": {
          "_type": "number",
          "_value": 14
        },
        "PATHSEG_LINETO_VERTICAL_REL": {
          "_type": "number",
          "_value": 15
        },
        "PATHSEG_CURVETO_CUBIC_SMOOTH_ABS": {
          "_type": "number",
          "_value": 16
        },
        "PATHSEG_CURVETO_CUBIC_SMOOTH_REL": {
          "_type": "number",
          "_value": 17
        },
        "PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS": {
          "_type": "number",
          "_value": 18
        },
        "PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL": {
          "_type": "number",
          "_value": 19
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGPathSegMovetoAbs() {\n    [native code]\n}",
        "_flags": "cw"
      }
    },
    {
      "path": "window",
      "propertyName": "SVGPathSegMovetoRel",
      "prevProperty": "SVGPathSegMovetoAbs",
      "property": {
        "prototype": {
          "_protos": ["SVGPathSeg.prototype", "Object.prototype"],
          "x": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGPathSegMovetoRel.x getter can only be used on instances of SVGPathSegMovetoRel",
            "_get": "function x() {\n    [native code]\n}",
            "_set": "function x() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "y": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGPathSegMovetoRel.y getter can only be used on instances of SVGPathSegMovetoRel",
            "_get": "function y() {\n    [native code]\n}",
            "_set": "function y() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "PATHSEG_UNKNOWN": {
            "_type": "number",
            "_value": 0
          },
          "PATHSEG_CLOSEPATH": {
            "_type": "number",
            "_value": 1
          },
          "PATHSEG_MOVETO_ABS": {
            "_type": "number",
            "_value": 2
          },
          "PATHSEG_MOVETO_REL": {
            "_type": "number",
            "_value": 3
          },
          "PATHSEG_LINETO_ABS": {
            "_type": "number",
            "_value": 4
          },
          "PATHSEG_LINETO_REL": {
            "_type": "number",
            "_value": 5
          },
          "PATHSEG_CURVETO_CUBIC_ABS": {
            "_type": "number",
            "_value": 6
          },
          "PATHSEG_CURVETO_CUBIC_REL": {
            "_type": "number",
            "_value": 7
          },
          "PATHSEG_CURVETO_QUADRATIC_ABS": {
            "_type": "number",
            "_value": 8
          },
          "PATHSEG_CURVETO_QUADRATIC_REL": {
            "_type": "number",
            "_value": 9
          },
          "PATHSEG_ARC_ABS": {
            "_type": "number",
            "_value": 10
          },
          "PATHSEG_ARC_REL": {
            "_type": "number",
            "_value": 11
          },
          "PATHSEG_LINETO_HORIZONTAL_ABS": {
            "_type": "number",
            "_value": 12
          },
          "PATHSEG_LINETO_HORIZONTAL_REL": {
            "_type": "number",
            "_value": 13
          },
          "PATHSEG_LINETO_VERTICAL_ABS": {
            "_type": "number",
            "_value": 14
          },
          "PATHSEG_LINETO_VERTICAL_REL": {
            "_type": "number",
            "_value": 15
          },
          "PATHSEG_CURVETO_CUBIC_SMOOTH_ABS": {
            "_type": "number",
            "_value": 16
          },
          "PATHSEG_CURVETO_CUBIC_SMOOTH_REL": {
            "_type": "number",
            "_value": 17
          },
          "PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS": {
            "_type": "number",
            "_value": 18
          },
          "PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL": {
            "_type": "number",
            "_value": 19
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGPathSegMovetoRel"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "PATHSEG_UNKNOWN": {
          "_type": "number",
          "_value": 0
        },
        "PATHSEG_CLOSEPATH": {
          "_type": "number",
          "_value": 1
        },
        "PATHSEG_MOVETO_ABS": {
          "_type": "number",
          "_value": 2
        },
        "PATHSEG_MOVETO_REL": {
          "_type": "number",
          "_value": 3
        },
        "PATHSEG_LINETO_ABS": {
          "_type": "number",
          "_value": 4
        },
        "PATHSEG_LINETO_REL": {
          "_type": "number",
          "_value": 5
        },
        "PATHSEG_CURVETO_CUBIC_ABS": {
          "_type": "number",
          "_value": 6
        },
        "PATHSEG_CURVETO_CUBIC_REL": {
          "_type": "number",
          "_value": 7
        },
        "PATHSEG_CURVETO_QUADRATIC_ABS": {
          "_type": "number",
          "_value": 8
        },
        "PATHSEG_CURVETO_QUADRATIC_REL": {
          "_type": "number",
          "_value": 9
        },
        "PATHSEG_ARC_ABS": {
          "_type": "number",
          "_value": 10
        },
        "PATHSEG_ARC_REL": {
          "_type": "number",
          "_value": 11
        },
        "PATHSEG_LINETO_HORIZONTAL_ABS": {
          "_type": "number",
          "_value": 12
        },
        "PATHSEG_LINETO_HORIZONTAL_REL": {
          "_type": "number",
          "_value": 13
        },
        "PATHSEG_LINETO_VERTICAL_ABS": {
          "_type": "number",
          "_value": 14
        },
        "PATHSEG_LINETO_VERTICAL_REL": {
          "_type": "number",
          "_value": 15
        },
        "PATHSEG_CURVETO_CUBIC_SMOOTH_ABS": {
          "_type": "number",
          "_value": 16
        },
        "PATHSEG_CURVETO_CUBIC_SMOOTH_REL": {
          "_type": "number",
          "_value": 17
        },
        "PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS": {
          "_type": "number",
          "_value": 18
        },
        "PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL": {
          "_type": "number",
          "_value": 19
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGPathSegMovetoRel() {\n    [native code]\n}",
        "_flags": "cw"
      }
    },
    {
      "path": "window.SVGPatternElement.prototype",
      "propertyName": "externalResourcesRequired",
      "prevProperty": "height",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The SVGPatternElement.externalResourcesRequired getter can only be used on instances of SVGPatternElement",
        "_get": "function externalResourcesRequired() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.SVGPatternElement.prototype",
      "propertyName": "requiredFeatures",
      "prevProperty": "preserveAspectRatio",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The SVGPatternElement.requiredFeatures getter can only be used on instances of SVGPatternElement",
        "_get": "function requiredFeatures() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.SVGPatternElement.prototype",
      "propertyName": "hasExtension",
      "prevProperty": "href",
      "property": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "hasExtension"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "_function": "function hasExtension() {\n    [native code]\n}",
        "_flags": "cew"
      }
    },
    {
      "path": "window.SVGPolygonElement.prototype",
      "propertyName": "externalResourcesRequired",
      "prevProperty": "animatedPoints",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The SVGPolygonElement.externalResourcesRequired getter can only be used on instances of SVGPolygonElement",
        "_get": "function externalResourcesRequired() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.SVGPolylineElement.prototype",
      "propertyName": "externalResourcesRequired",
      "prevProperty": "animatedPoints",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The SVGPolylineElement.externalResourcesRequired getter can only be used on instances of SVGPolylineElement",
        "_get": "function externalResourcesRequired() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.SVGRectElement.prototype",
      "propertyName": "externalResourcesRequired",
      "prevProperty": "ry",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The SVGRectElement.externalResourcesRequired getter can only be used on instances of SVGRectElement",
        "_get": "function externalResourcesRequired() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window",
      "propertyName": "SVGRenderingIntent",
      "prevProperty": "SVGRectElement",
      "property": {
        "prototype": {
          "_protos": ["Object.prototype"],
          "RENDERING_INTENT_UNKNOWN": {
            "_type": "number",
            "_flags": "e",
            "_value": 0
          },
          "RENDERING_INTENT_AUTO": {
            "_type": "number",
            "_flags": "e",
            "_value": 1
          },
          "RENDERING_INTENT_PERCEPTUAL": {
            "_type": "number",
            "_flags": "e",
            "_value": 2
          },
          "RENDERING_INTENT_RELATIVE_COLORIMETRIC": {
            "_type": "number",
            "_flags": "e",
            "_value": 3
          },
          "RENDERING_INTENT_SATURATION": {
            "_type": "number",
            "_flags": "e",
            "_value": 4
          },
          "RENDERING_INTENT_ABSOLUTE_COLORIMETRIC": {
            "_type": "number",
            "_flags": "e",
            "_value": 5
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGRenderingIntent"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "RENDERING_INTENT_UNKNOWN": {
          "_type": "number",
          "_flags": "e",
          "_value": 0
        },
        "RENDERING_INTENT_AUTO": {
          "_type": "number",
          "_flags": "e",
          "_value": 1
        },
        "RENDERING_INTENT_PERCEPTUAL": {
          "_type": "number",
          "_flags": "e",
          "_value": 2
        },
        "RENDERING_INTENT_RELATIVE_COLORIMETRIC": {
          "_type": "number",
          "_flags": "e",
          "_value": 3
        },
        "RENDERING_INTENT_SATURATION": {
          "_type": "number",
          "_flags": "e",
          "_value": 4
        },
        "RENDERING_INTENT_ABSOLUTE_COLORIMETRIC": {
          "_type": "number",
          "_flags": "e",
          "_value": 5
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGRenderingIntent() {\n    [native code]\n}",
        "_flags": "cw"
      }
    },
    {
      "path": "window.SVGSVGElement.prototype",
      "propertyName": "contentScriptType",
      "prevProperty": "height",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The SVGSVGElement.contentScriptType getter can only be used on instances of SVGSVGElement",
        "_get": "function contentScriptType() {\n    [native code]\n}",
        "_set": "function contentScriptType() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.SVGSVGElement.prototype",
      "propertyName": "contentStyleType",
      "prevProperty": "contentScriptType",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The SVGSVGElement.contentStyleType getter can only be used on instances of SVGSVGElement",
        "_get": "function contentStyleType() {\n    [native code]\n}",
        "_set": "function contentStyleType() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.SVGSVGElement.prototype",
      "propertyName": "viewport",
      "prevProperty": "contentStyleType",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The SVGSVGElement.viewport getter can only be used on instances of SVGSVGElement",
        "_get": "function viewport() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.SVGSVGElement.prototype",
      "propertyName": "pixelUnitToMillimeterX",
      "prevProperty": "viewport",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The SVGSVGElement.pixelUnitToMillimeterX getter can only be used on instances of SVGSVGElement",
        "_get": "function pixelUnitToMillimeterX() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.SVGSVGElement.prototype",
      "propertyName": "pixelUnitToMillimeterY",
      "prevProperty": "pixelUnitToMillimeterX",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The SVGSVGElement.pixelUnitToMillimeterY getter can only be used on instances of SVGSVGElement",
        "_get": "function pixelUnitToMillimeterY() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.SVGSVGElement.prototype",
      "propertyName": "screenPixelToMillimeterX",
      "prevProperty": "pixelUnitToMillimeterY",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The SVGSVGElement.screenPixelToMillimeterX getter can only be used on instances of SVGSVGElement",
        "_get": "function screenPixelToMillimeterX() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.SVGSVGElement.prototype",
      "propertyName": "screenPixelToMillimeterY",
      "prevProperty": "screenPixelToMillimeterX",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The SVGSVGElement.screenPixelToMillimeterY getter can only be used on instances of SVGSVGElement",
        "_get": "function screenPixelToMillimeterY() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.SVGSVGElement.prototype",
      "propertyName": "useCurrentView",
      "prevProperty": "screenPixelToMillimeterY",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The SVGSVGElement.useCurrentView getter can only be used on instances of SVGSVGElement",
        "_get": "function useCurrentView() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.SVGSVGElement.prototype",
      "propertyName": "currentView",
      "prevProperty": "useCurrentView",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The SVGSVGElement.currentView getter can only be used on instances of SVGSVGElement",
        "_get": "function currentView() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.SVGSVGElement.prototype",
      "propertyName": "externalResourcesRequired",
      "prevProperty": "currentTranslate",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The SVGSVGElement.externalResourcesRequired getter can only be used on instances of SVGSVGElement",
        "_get": "function externalResourcesRequired() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.SVGScriptElement.prototype",
      "propertyName": "externalResourcesRequired",
      "prevProperty": "type",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The SVGScriptElement.externalResourcesRequired getter can only be used on instances of SVGScriptElement",
        "_get": "function externalResourcesRequired() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.SVGSwitchElement.prototype",
      "propertyName": "externalResourcesRequired",
      "prevProperty": "_protos",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The SVGSwitchElement.externalResourcesRequired getter can only be used on instances of SVGSwitchElement",
        "_get": "function externalResourcesRequired() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.SVGSymbolElement.prototype",
      "propertyName": "externalResourcesRequired",
      "prevProperty": "_protos",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The SVGSymbolElement.externalResourcesRequired getter can only be used on instances of SVGSymbolElement",
        "_get": "function externalResourcesRequired() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window",
      "propertyName": "SVGTRefElement",
      "prevProperty": "SVGSymbolElement",
      "property": {
        "prototype": {
          "_protos": [
            "SVGTextPositioningElement.prototype",
            "SVGTextContentElement.prototype",
            "SVGGraphicsElement.prototype",
            "SVGElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "href": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGTRefElement.href getter can only be used on instances of SVGTRefElement",
            "_get": "function href() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "LENGTHADJUST_UNKNOWN": {
            "_type": "number",
            "_value": 0
          },
          "LENGTHADJUST_SPACING": {
            "_type": "number",
            "_value": 1
          },
          "LENGTHADJUST_SPACINGANDGLYPHS": {
            "_type": "number",
            "_value": 2
          },
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGTRefElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "LENGTHADJUST_UNKNOWN": {
          "_type": "number",
          "_value": 0
        },
        "LENGTHADJUST_SPACING": {
          "_type": "number",
          "_value": 1
        },
        "LENGTHADJUST_SPACINGANDGLYPHS": {
          "_type": "number",
          "_value": 2
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGTRefElement() {\n    [native code]\n}",
        "_flags": "cw"
      }
    },
    {
      "path": "window.SVGTextContentElement.prototype",
      "propertyName": "externalResourcesRequired",
      "prevProperty": "lengthAdjust",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The SVGTextContentElement.externalResourcesRequired getter can only be used on instances of SVGTextContentElement",
        "_get": "function externalResourcesRequired() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.SVGUseElement.prototype",
      "propertyName": "externalResourcesRequired",
      "prevProperty": "height",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The SVGUseElement.externalResourcesRequired getter can only be used on instances of SVGUseElement",
        "_get": "function externalResourcesRequired() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window",
      "propertyName": "SVGVKernElement",
      "prevProperty": "SVGUseElement",
      "property": {
        "prototype": {
          "_protos": [
            "SVGElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGVKernElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGVKernElement() {\n    [native code]\n}",
        "_flags": "cw"
      }
    },
    {
      "path": "window.SVGViewElement.prototype",
      "propertyName": "viewTarget",
      "prevProperty": "_protos",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The SVGViewElement.viewTarget getter can only be used on instances of SVGViewElement",
        "_get": "function viewTarget() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.SVGViewElement.prototype",
      "propertyName": "externalResourcesRequired",
      "prevProperty": "viewTarget",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The SVGViewElement.externalResourcesRequired getter can only be used on instances of SVGViewElement",
        "_get": "function externalResourcesRequired() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window",
      "propertyName": "SVGViewSpec",
      "prevProperty": "SVGViewElement",
      "property": {
        "prototype": {
          "_protos": ["Object.prototype"],
          "transform": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGViewSpec.transform getter can only be used on instances of SVGViewSpec",
            "_get": "function transform() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "viewTarget": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGViewSpec.viewTarget getter can only be used on instances of SVGViewSpec",
            "_get": "function viewTarget() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "viewBoxString": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGViewSpec.viewBoxString getter can only be used on instances of SVGViewSpec",
            "_get": "function viewBoxString() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "preserveAspectRatioString": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGViewSpec.preserveAspectRatioString getter can only be used on instances of SVGViewSpec",
            "_get": "function preserveAspectRatioString() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "transformString": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGViewSpec.transformString getter can only be used on instances of SVGViewSpec",
            "_get": "function transformString() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "viewTargetString": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGViewSpec.viewTargetString getter can only be used on instances of SVGViewSpec",
            "_get": "function viewTargetString() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "viewBox": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGViewSpec.viewBox getter can only be used on instances of SVGViewSpec",
            "_get": "function viewBox() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "preserveAspectRatio": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGViewSpec.preserveAspectRatio getter can only be used on instances of SVGViewSpec",
            "_get": "function preserveAspectRatio() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "zoomAndPan": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGViewSpec.zoomAndPan getter can only be used on instances of SVGViewSpec",
            "_get": "function zoomAndPan() {\n    [native code]\n}",
            "_set": "function zoomAndPan() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "SVG_ZOOMANDPAN_UNKNOWN": {
            "_type": "number",
            "_flags": "e",
            "_value": 0
          },
          "SVG_ZOOMANDPAN_DISABLE": {
            "_type": "number",
            "_flags": "e",
            "_value": 1
          },
          "SVG_ZOOMANDPAN_MAGNIFY": {
            "_type": "number",
            "_flags": "e",
            "_value": 2
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGViewSpec"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "SVG_ZOOMANDPAN_UNKNOWN": {
          "_type": "number",
          "_flags": "e",
          "_value": 0
        },
        "SVG_ZOOMANDPAN_DISABLE": {
          "_type": "number",
          "_flags": "e",
          "_value": 1
        },
        "SVG_ZOOMANDPAN_MAGNIFY": {
          "_type": "number",
          "_flags": "e",
          "_value": 2
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGViewSpec() {\n    [native code]\n}",
        "_flags": "cw"
      }
    },
    {
      "path": "window",
      "propertyName": "SVGZoomEvent",
      "prevProperty": "SVGViewSpec",
      "property": {
        "prototype": {
          "_protos": ["UIEvent.prototype", "Event.prototype", "Object.prototype"],
          "zoomRectScreen": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGZoomEvent.zoomRectScreen getter can only be used on instances of SVGZoomEvent",
            "_get": "function zoomRectScreen() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "previousScale": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGZoomEvent.previousScale getter can only be used on instances of SVGZoomEvent",
            "_get": "function previousScale() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "previousTranslate": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGZoomEvent.previousTranslate getter can only be used on instances of SVGZoomEvent",
            "_get": "function previousTranslate() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "newScale": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGZoomEvent.newScale getter can only be used on instances of SVGZoomEvent",
            "_get": "function newScale() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "newTranslate": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGZoomEvent.newTranslate getter can only be used on instances of SVGZoomEvent",
            "_get": "function newTranslate() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "NONE": {
            "_type": "number",
            "_value": 0
          },
          "CAPTURING_PHASE": {
            "_type": "number",
            "_value": 1
          },
          "AT_TARGET": {
            "_type": "number",
            "_value": 2
          },
          "BUBBLING_PHASE": {
            "_type": "number",
            "_value": 3
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGZoomEvent"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "NONE": {
          "_type": "number",
          "_value": 0
        },
        "CAPTURING_PHASE": {
          "_type": "number",
          "_value": 1
        },
        "AT_TARGET": {
          "_type": "number",
          "_value": 2
        },
        "BUBBLING_PHASE": {
          "_type": "number",
          "_value": 3
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGZoomEvent() {\n    [native code]\n}",
        "_flags": "cw"
      }
    },
    {
      "path": "window",
      "propertyName": "XMLHttpRequestProgressEvent",
      "prevProperty": "XMLHttpRequestEventTarget",
      "property": {
        "prototype": {
          "_protos": ["ProgressEvent.prototype", "Event.prototype", "Object.prototype"],
          "position": {
            "_flags": "ce",
            "_accessException": "TypeError: The XMLHttpRequestProgressEvent.position getter can only be used on instances of XMLHttpRequestProgressEvent",
            "_get": "function position() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "totalSize": {
            "_flags": "ce",
            "_accessException": "TypeError: The XMLHttpRequestProgressEvent.totalSize getter can only be used on instances of XMLHttpRequestProgressEvent",
            "_get": "function totalSize() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "NONE": {
            "_type": "number",
            "_value": 0
          },
          "CAPTURING_PHASE": {
            "_type": "number",
            "_value": 1
          },
          "AT_TARGET": {
            "_type": "number",
            "_value": 2
          },
          "BUBBLING_PHASE": {
            "_type": "number",
            "_value": 3
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "XMLHttpRequestProgressEvent"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "NONE": {
          "_type": "number",
          "_value": 0
        },
        "CAPTURING_PHASE": {
          "_type": "number",
          "_value": 1
        },
        "AT_TARGET": {
          "_type": "number",
          "_value": 2
        },
        "BUBBLING_PHASE": {
          "_type": "number",
          "_value": 3
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function XMLHttpRequestProgressEvent() {\n    [native code]\n}",
        "_flags": "cw"
      }
    },
    {
      "path": "window",
      "propertyName": "webkitIndexedDB",
      "prevProperty": "indexedDB",
      "property": "REF: window.indexedDB"
    },
    {
      "path": "window.speechSynthesis",
      "propertyName": "speak",
      "prevProperty": "paused",
      "property": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "speak"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "_func": "function speak() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.speechSynthesis",
      "propertyName": "cancel",
      "prevProperty": "speak",
      "property": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "cancel"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "_func": "function cancel() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.speechSynthesis",
      "propertyName": "pause",
      "prevProperty": "cancel",
      "property": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "pause"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "_func": "function pause() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.speechSynthesis",
      "propertyName": "resume",
      "prevProperty": "pause",
      "property": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "resume"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "_func": "function resume() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.speechSynthesis",
      "propertyName": "getVoices",
      "prevProperty": "resume",
      "property": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "getVoices"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "_func": "function getVoices() {\n    [native code]\n}",
        "_invocation": ""
      }
    },
    {
      "path": "window.openDatabase",
      "propertyName": "_get",
      "prevProperty": "_flags",
      "property": "function openDatabase() {\n    [native code]\n}"
    },
    {
      "path": "window.openDatabase",
      "propertyName": "_set",
      "prevProperty": "_get",
      "property": "function openDatabase() {\n    [native code]\n}"
    },
    {
      "path": "window.openDatabase",
      "propertyName": "_getToStringToString",
      "prevProperty": "_set",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.openDatabase",
      "propertyName": "_setToStringToString",
      "prevProperty": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window",
      "propertyName": "ontransitionrun",
      "prevProperty": "ontransitionend",
      "property": {
        "_type": "object",
        "_flags": "ce",
        "_value": null,
        "_get": "function ontransitionrun() {\n    [native code]\n}",
        "_set": "function ontransitionrun() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window",
      "propertyName": "ontransitionstart",
      "prevProperty": "ontransitionrun",
      "property": {
        "_type": "object",
        "_flags": "ce",
        "_value": null,
        "_get": "function ontransitionstart() {\n    [native code]\n}",
        "_set": "function ontransitionstart() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window",
      "propertyName": "ontransitioncancel",
      "prevProperty": "ontransitionstart",
      "property": {
        "_type": "object",
        "_flags": "ce",
        "_value": null,
        "_get": "function ontransitioncancel() {\n    [native code]\n}",
        "_set": "function ontransitioncancel() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window",
      "propertyName": "onanimationcancel",
      "prevProperty": "onanimationstart",
      "property": {
        "_type": "object",
        "_flags": "ce",
        "_value": null,
        "_get": "function onanimationcancel() {\n    [native code]\n}",
        "_set": "function onanimationcancel() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window",
      "propertyName": "onwebkitmouseforcechanged",
      "prevProperty": "onwheel",
      "property": {
        "_type": "object",
        "_flags": "c",
        "_value": null,
        "_get": "function onwebkitmouseforcechanged() {\n    [native code]\n}",
        "_set": "function onwebkitmouseforcechanged() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window",
      "propertyName": "onwebkitmouseforcedown",
      "prevProperty": "onwebkitmouseforcechanged",
      "property": {
        "_type": "object",
        "_flags": "c",
        "_value": null,
        "_get": "function onwebkitmouseforcedown() {\n    [native code]\n}",
        "_set": "function onwebkitmouseforcedown() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window",
      "propertyName": "onwebkitmouseforcewillbegin",
      "prevProperty": "onwebkitmouseforcedown",
      "property": {
        "_type": "object",
        "_flags": "c",
        "_value": null,
        "_get": "function onwebkitmouseforcewillbegin() {\n    [native code]\n}",
        "_set": "function onwebkitmouseforcewillbegin() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window",
      "propertyName": "onwebkitmouseforceup",
      "prevProperty": "onwebkitmouseforcewillbegin",
      "property": {
        "_type": "object",
        "_flags": "c",
        "_value": null,
        "_get": "function onwebkitmouseforceup() {\n    [native code]\n}",
        "_set": "function onwebkitmouseforceup() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window",
      "propertyName": "webkitCancelRequestAnimationFrame",
      "prevProperty": "webkitCancelAnimationFrame",
      "property": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "webkitCancelRequestAnimationFrame"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "_function": "function webkitCancelRequestAnimationFrame() {\n    [native code]\n}",
        "_flags": "cew"
      }
    },
    {
      "path": "window",
      "propertyName": "getMatchedCSSRules",
      "prevProperty": "webkitCancelRequestAnimationFrame",
      "property": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "getMatchedCSSRules"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "_function": "function getMatchedCSSRules() {\n    [native code]\n}",
        "_invocation": null,
        "_flags": "cew"
      }
    },
    {
      "path": "window",
      "propertyName": "showModalDialog",
      "prevProperty": "getMatchedCSSRules",
      "property": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "showModalDialog"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "_function": "function showModalDialog() {\n    [native code]\n}",
        "_flags": "cew"
      }
    },
    {
      "path": "window",
      "propertyName": "webkitConvertPointFromPageToNode",
      "prevProperty": "showModalDialog",
      "property": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "webkitConvertPointFromPageToNode"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "_function": "function webkitConvertPointFromPageToNode() {\n    [native code]\n}",
        "_invocation": null,
        "_flags": "cew"
      }
    },
    {
      "path": "window",
      "propertyName": "webkitConvertPointFromNodeToPage",
      "prevProperty": "webkitConvertPointFromPageToNode",
      "property": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "webkitConvertPointFromNodeToPage"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "_function": "function webkitConvertPointFromNodeToPage() {\n    [native code]\n}",
        "_invocation": null,
        "_flags": "cew"
      }
    },
    {
      "path": "window.EvalError.new()",
      "propertyName": "line",
      "prevProperty": "_protos",
      "property": {
        "_type": "number",
        "_flags": "cew",
        "_value": 2034
      }
    },
    {
      "path": "window.EvalError.new()",
      "propertyName": "column",
      "prevProperty": "line",
      "property": {
        "_type": "number",
        "_flags": "cew",
        "_value": 41
      }
    },
    {
      "path": "window.EvalError.new()",
      "propertyName": "sourceURL",
      "prevProperty": "column",
      "property": {
        "_type": "string",
        "_flags": "cew",
        "_value": "<url>"
      }
    },
    {
      "path": "window.RangeError.new()",
      "propertyName": "line",
      "prevProperty": "_protos",
      "property": {
        "_type": "number",
        "_flags": "cew",
        "_value": 2034
      }
    },
    {
      "path": "window.RangeError.new()",
      "propertyName": "column",
      "prevProperty": "line",
      "property": {
        "_type": "number",
        "_flags": "cew",
        "_value": 41
      }
    },
    {
      "path": "window.RangeError.new()",
      "propertyName": "sourceURL",
      "prevProperty": "column",
      "property": {
        "_type": "string",
        "_flags": "cew",
        "_value": "<url>"
      }
    },
    {
      "path": "window.ReferenceError.new()",
      "propertyName": "line",
      "prevProperty": "_protos",
      "property": {
        "_type": "number",
        "_flags": "cew",
        "_value": 2034
      }
    },
    {
      "path": "window.ReferenceError.new()",
      "propertyName": "column",
      "prevProperty": "line",
      "property": {
        "_type": "number",
        "_flags": "cew",
        "_value": 41
      }
    },
    {
      "path": "window.ReferenceError.new()",
      "propertyName": "sourceURL",
      "prevProperty": "column",
      "property": {
        "_type": "string",
        "_flags": "cew",
        "_value": "<url>"
      }
    },
    {
      "path": "window.SyntaxError.new()",
      "propertyName": "line",
      "prevProperty": "_protos",
      "property": {
        "_type": "number",
        "_flags": "cew",
        "_value": 2034
      }
    },
    {
      "path": "window.SyntaxError.new()",
      "propertyName": "column",
      "prevProperty": "line",
      "property": {
        "_type": "number",
        "_flags": "cew",
        "_value": 41
      }
    },
    {
      "path": "window.SyntaxError.new()",
      "propertyName": "sourceURL",
      "prevProperty": "column",
      "property": {
        "_type": "string",
        "_flags": "cew",
        "_value": "<url>"
      }
    },
    {
      "path": "window.TypeError.new()",
      "propertyName": "line",
      "prevProperty": "_protos",
      "property": {
        "_type": "number",
        "_flags": "cew",
        "_value": 2034
      }
    },
    {
      "path": "window.TypeError.new()",
      "propertyName": "column",
      "prevProperty": "line",
      "property": {
        "_type": "number",
        "_flags": "cew",
        "_value": 41
      }
    },
    {
      "path": "window.TypeError.new()",
      "propertyName": "sourceURL",
      "prevProperty": "column",
      "property": {
        "_type": "string",
        "_flags": "cew",
        "_value": "<url>"
      }
    },
    {
      "path": "window.URIError.new()",
      "propertyName": "line",
      "prevProperty": "_protos",
      "property": {
        "_type": "number",
        "_flags": "cew",
        "_value": 2034
      }
    },
    {
      "path": "window.URIError.new()",
      "propertyName": "column",
      "prevProperty": "line",
      "property": {
        "_type": "number",
        "_flags": "cew",
        "_value": 41
      }
    },
    {
      "path": "window.URIError.new()",
      "propertyName": "sourceURL",
      "prevProperty": "column",
      "property": {
        "_type": "string",
        "_flags": "cew",
        "_value": "<url>"
      }
    },
    {
      "path": "window.console",
      "propertyName": "takeHeapSnapshot",
      "prevProperty": "timeStamp",
      "property": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "takeHeapSnapshot"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "_function": "function takeHeapSnapshot() {\n    [native code]\n}",
        "_flags": "cew"
      }
    },
    {
      "path": "window.console",
      "propertyName": "record",
      "prevProperty": "groupEnd",
      "property": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "record"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "_function": "function record() {\n    [native code]\n}",
        "_flags": "cew"
      }
    },
    {
      "path": "window.console",
      "propertyName": "recordEnd",
      "prevProperty": "record",
      "property": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "recordEnd"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "_function": "function recordEnd() {\n    [native code]\n}",
        "_flags": "cew"
      }
    },
    {
      "path": "window.console",
      "propertyName": "screenshot",
      "prevProperty": "recordEnd",
      "property": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "screenshot"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "_function": "function screenshot() {\n    [native code]\n}",
        "_flags": "cew"
      }
    },
    {
      "path": "window.DataView",
      "propertyName": "BYTES_PER_ELEMENT",
      "prevProperty": "length",
      "property": {
        "_type": "number",
        "_flags": "",
        "_value": 1
      }
    },
    {
      "path": "window.Error.new()",
      "propertyName": "line",
      "prevProperty": "_protos",
      "property": {
        "_type": "number",
        "_flags": "cew",
        "_value": 2034
      }
    },
    {
      "path": "window.Error.new()",
      "propertyName": "column",
      "prevProperty": "line",
      "property": {
        "_type": "number",
        "_flags": "cew",
        "_value": 41
      }
    },
    {
      "path": "window.Error.new()",
      "propertyName": "sourceURL",
      "prevProperty": "column",
      "property": {
        "_type": "string",
        "_flags": "cew",
        "_value": "<url>"
      }
    },
    {
      "path": "window.RegExp",
      "propertyName": "multiline",
      "prevProperty": "$_",
      "property": {
        "_type": "boolean",
        "_flags": "cew",
        "_value": false
      }
    },
    {
      "path": "window.RegExp",
      "propertyName": "$*",
      "prevProperty": "multiline",
      "property": {
        "_type": "boolean",
        "_flags": "cw",
        "_value": false
      }
    },
    {
      "path": "window.WebAssembly._protos",
      "propertyName": "1",
      "prevProperty": "0",
      "property": "Object.prototype"
    },
    {
      "path": "window.WebAssembly.CompileError.new()",
      "propertyName": "line",
      "prevProperty": "_protos",
      "property": {
        "_type": "number",
        "_flags": "cew",
        "_value": 2034
      }
    },
    {
      "path": "window.WebAssembly.CompileError.new()",
      "propertyName": "column",
      "prevProperty": "line",
      "property": {
        "_type": "number",
        "_flags": "cew",
        "_value": 41
      }
    },
    {
      "path": "window.WebAssembly.CompileError.new()",
      "propertyName": "sourceURL",
      "prevProperty": "column",
      "property": {
        "_type": "string",
        "_flags": "cew",
        "_value": "<url>"
      }
    },
    {
      "path": "window.WebAssembly.LinkError.new()",
      "propertyName": "line",
      "prevProperty": "_protos",
      "property": {
        "_type": "number",
        "_flags": "cew",
        "_value": 2034
      }
    },
    {
      "path": "window.WebAssembly.LinkError.new()",
      "propertyName": "column",
      "prevProperty": "line",
      "property": {
        "_type": "number",
        "_flags": "cew",
        "_value": 41
      }
    },
    {
      "path": "window.WebAssembly.LinkError.new()",
      "propertyName": "sourceURL",
      "prevProperty": "column",
      "property": {
        "_type": "string",
        "_flags": "cew",
        "_value": "<url>"
      }
    },
    {
      "path": "window.WebAssembly.RuntimeError.new()",
      "propertyName": "line",
      "prevProperty": "_protos",
      "property": {
        "_type": "number",
        "_flags": "cew",
        "_value": 2034
      }
    },
    {
      "path": "window.WebAssembly.RuntimeError.new()",
      "propertyName": "column",
      "prevProperty": "line",
      "property": {
        "_type": "number",
        "_flags": "cew",
        "_value": 41
      }
    },
    {
      "path": "window.WebAssembly.RuntimeError.new()",
      "propertyName": "sourceURL",
      "prevProperty": "column",
      "property": {
        "_type": "string",
        "_flags": "cew",
        "_value": "<url>"
      }
    },
    {
      "path": "window",
      "propertyName": "ApplePaySetup",
      "prevProperty": "visualViewport",
      "property": {
        "prototype": {
          "_protos": ["Object.prototype"],
          "getSetupFeatures": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getSetupFeatures"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function getSetupFeatures() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "begin": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "begin"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function begin() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "ApplePaySetup"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "new()": "TypeError: Not enough arguments",
        "_function": "function ApplePaySetup() {\n    [native code]\n}",
        "_flags": "cw"
      }
    },
    {
      "path": "window",
      "propertyName": "ApplePaySetupFeature",
      "prevProperty": "ApplePaySetup",
      "property": {
        "prototype": {
          "_protos": ["Object.prototype"],
          "type": {
            "_flags": "ce",
            "_accessException": "TypeError: The ApplePaySetupFeature.type getter can only be used on instances of ApplePaySetupFeature",
            "_get": "function type() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "state": {
            "_flags": "ce",
            "_accessException": "TypeError: The ApplePaySetupFeature.state getter can only be used on instances of ApplePaySetupFeature",
            "_get": "function state() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "ApplePaySetupFeature"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function ApplePaySetupFeature() {\n    [native code]\n}",
        "_flags": "cw"
      }
    },
    {
      "path": "window",
      "propertyName": "ApplePaySession",
      "prevProperty": "ApplePaySetupFeature",
      "property": {
        "prototype": {
          "_protos": ["EventTarget.prototype", "Object.prototype"],
          "onvalidatemerchant": {
            "_flags": "ce",
            "_accessException": "TypeError: The ApplePaySession.onvalidatemerchant getter can only be used on instances of ApplePaySession",
            "_get": "function onvalidatemerchant() {\n    [native code]\n}",
            "_set": "function onvalidatemerchant() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onpaymentmethodselected": {
            "_flags": "ce",
            "_accessException": "TypeError: The ApplePaySession.onpaymentmethodselected getter can only be used on instances of ApplePaySession",
            "_get": "function onpaymentmethodselected() {\n    [native code]\n}",
            "_set": "function onpaymentmethodselected() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onpaymentauthorized": {
            "_flags": "ce",
            "_accessException": "TypeError: The ApplePaySession.onpaymentauthorized getter can only be used on instances of ApplePaySession",
            "_get": "function onpaymentauthorized() {\n    [native code]\n}",
            "_set": "function onpaymentauthorized() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onshippingmethodselected": {
            "_flags": "ce",
            "_accessException": "TypeError: The ApplePaySession.onshippingmethodselected getter can only be used on instances of ApplePaySession",
            "_get": "function onshippingmethodselected() {\n    [native code]\n}",
            "_set": "function onshippingmethodselected() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onshippingcontactselected": {
            "_flags": "ce",
            "_accessException": "TypeError: The ApplePaySession.onshippingcontactselected getter can only be used on instances of ApplePaySession",
            "_get": "function onshippingcontactselected() {\n    [native code]\n}",
            "_set": "function onshippingcontactselected() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "oncancel": {
            "_flags": "ce",
            "_accessException": "TypeError: The ApplePaySession.oncancel getter can only be used on instances of ApplePaySession",
            "_get": "function oncancel() {\n    [native code]\n}",
            "_set": "function oncancel() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "begin": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "begin"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function begin() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "abort": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "abort"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function abort() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "completeMerchantValidation": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "completeMerchantValidation"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function completeMerchantValidation() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "completeShippingMethodSelection": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "completeShippingMethodSelection"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function completeShippingMethodSelection() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "completeShippingContactSelection": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "completeShippingContactSelection"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function completeShippingContactSelection() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "completePaymentMethodSelection": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "completePaymentMethodSelection"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function completePaymentMethodSelection() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "completePayment": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "completePayment"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function completePayment() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "STATUS_SUCCESS": {
            "_type": "number",
            "_flags": "e",
            "_value": 0
          },
          "STATUS_FAILURE": {
            "_type": "number",
            "_flags": "e",
            "_value": 1
          },
          "STATUS_INVALID_BILLING_POSTAL_ADDRESS": {
            "_type": "number",
            "_flags": "e",
            "_value": 2
          },
          "STATUS_INVALID_SHIPPING_POSTAL_ADDRESS": {
            "_type": "number",
            "_flags": "e",
            "_value": 3
          },
          "STATUS_INVALID_SHIPPING_CONTACT": {
            "_type": "number",
            "_flags": "e",
            "_value": 4
          },
          "STATUS_PIN_REQUIRED": {
            "_type": "number",
            "_flags": "e",
            "_value": 5
          },
          "STATUS_PIN_INCORRECT": {
            "_type": "number",
            "_flags": "e",
            "_value": 6
          },
          "STATUS_PIN_LOCKOUT": {
            "_type": "number",
            "_flags": "e",
            "_value": 7
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "ApplePaySession"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 2
        },
        "STATUS_SUCCESS": {
          "_type": "number",
          "_flags": "e",
          "_value": 0
        },
        "STATUS_FAILURE": {
          "_type": "number",
          "_flags": "e",
          "_value": 1
        },
        "STATUS_INVALID_BILLING_POSTAL_ADDRESS": {
          "_type": "number",
          "_flags": "e",
          "_value": 2
        },
        "STATUS_INVALID_SHIPPING_POSTAL_ADDRESS": {
          "_type": "number",
          "_flags": "e",
          "_value": 3
        },
        "STATUS_INVALID_SHIPPING_CONTACT": {
          "_type": "number",
          "_flags": "e",
          "_value": 4
        },
        "STATUS_PIN_REQUIRED": {
          "_type": "number",
          "_flags": "e",
          "_value": 5
        },
        "STATUS_PIN_INCORRECT": {
          "_type": "number",
          "_flags": "e",
          "_value": 6
        },
        "STATUS_PIN_LOCKOUT": {
          "_type": "number",
          "_flags": "e",
          "_value": 7
        },
        "supportsVersion": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "supportsVersion"
          },
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "_function": "function supportsVersion() {\n    [native code]\n}",
          "_flags": "cew"
        },
        "canMakePayments": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "canMakePayments"
          },
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "_function": "function canMakePayments() {\n    [native code]\n}",
          "_invocation": false,
          "_flags": "cew"
        },
        "canMakePaymentsWithActiveCard": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "canMakePaymentsWithActiveCard"
          },
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "_function": "function canMakePaymentsWithActiveCard() {\n    [native code]\n}",
          "_flags": "cew"
        },
        "openPaymentSetup": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "openPaymentSetup"
          },
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "_function": "function openPaymentSetup() {\n    [native code]\n}",
          "_flags": "cew"
        },
        "new()": "TypeError: Not enough arguments",
        "_function": "function ApplePaySession() {\n    [native code]\n}",
        "_flags": "cw"
      }
    },
    {
      "path": "window.CacheStorage.prototype",
      "propertyName": "_type",
      "prevProperty": "keys",
      "property": "object"
    },
    {
      "path": "window.CacheStorage.prototype",
      "propertyName": "_flags",
      "prevProperty": "_type",
      "property": ""
    },
    {
      "path": "window",
      "propertyName": "WebKitMediaKeyMessageEvent",
      "prevProperty": "MediaKeys",
      "property": {
        "prototype": {
          "_protos": ["Event.prototype", "Object.prototype"],
          "message": {
            "_flags": "ce",
            "_accessException": "TypeError: The WebKitMediaKeyMessageEvent.message getter can only be used on instances of WebKitMediaKeyMessageEvent",
            "_get": "function message() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "destinationURL": {
            "_flags": "ce",
            "_accessException": "TypeError: The WebKitMediaKeyMessageEvent.destinationURL getter can only be used on instances of WebKitMediaKeyMessageEvent",
            "_get": "function destinationURL() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "NONE": {
            "_type": "number",
            "_value": 0
          },
          "CAPTURING_PHASE": {
            "_type": "number",
            "_value": 1
          },
          "AT_TARGET": {
            "_type": "number",
            "_value": 2
          },
          "BUBBLING_PHASE": {
            "_type": "number",
            "_value": 3
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "WebKitMediaKeyMessageEvent"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "NONE": {
          "_type": "number",
          "_value": 0
        },
        "CAPTURING_PHASE": {
          "_type": "number",
          "_value": 1
        },
        "AT_TARGET": {
          "_type": "number",
          "_value": 2
        },
        "BUBBLING_PHASE": {
          "_type": "number",
          "_value": 3
        },
        "new()": "TypeError: Not enough arguments",
        "_function": "function WebKitMediaKeyMessageEvent() {\n    [native code]\n}",
        "_flags": "cw"
      }
    },
    {
      "path": "window",
      "propertyName": "WebKitMediaKeyNeededEvent",
      "prevProperty": "WebKitMediaKeyMessageEvent",
      "property": {
        "prototype": {
          "_protos": ["Event.prototype", "Object.prototype"],
          "initData": {
            "_flags": "ce",
            "_accessException": "TypeError: The WebKitMediaKeyNeededEvent.initData getter can only be used on instances of WebKitMediaKeyNeededEvent",
            "_get": "function initData() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "NONE": {
            "_type": "number",
            "_value": 0
          },
          "CAPTURING_PHASE": {
            "_type": "number",
            "_value": 1
          },
          "AT_TARGET": {
            "_type": "number",
            "_value": 2
          },
          "BUBBLING_PHASE": {
            "_type": "number",
            "_value": 3
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "WebKitMediaKeyNeededEvent"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "NONE": {
          "_type": "number",
          "_value": 0
        },
        "CAPTURING_PHASE": {
          "_type": "number",
          "_value": 1
        },
        "AT_TARGET": {
          "_type": "number",
          "_value": 2
        },
        "BUBBLING_PHASE": {
          "_type": "number",
          "_value": 3
        },
        "new()": "TypeError: Not enough arguments",
        "_function": "function WebKitMediaKeyNeededEvent() {\n    [native code]\n}",
        "_flags": "cw"
      }
    },
    {
      "path": "window",
      "propertyName": "WebKitMediaKeySession",
      "prevProperty": "WebKitMediaKeyNeededEvent",
      "property": {
        "prototype": {
          "_protos": ["EventTarget.prototype", "Object.prototype"],
          "error": {
            "_flags": "ce",
            "_accessException": "TypeError: The WebKitMediaKeySession.error getter can only be used on instances of WebKitMediaKeySession",
            "_get": "function error() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "keySystem": {
            "_flags": "ce",
            "_accessException": "TypeError: The WebKitMediaKeySession.keySystem getter can only be used on instances of WebKitMediaKeySession",
            "_get": "function keySystem() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "sessionId": {
            "_flags": "ce",
            "_accessException": "TypeError: The WebKitMediaKeySession.sessionId getter can only be used on instances of WebKitMediaKeySession",
            "_get": "function sessionId() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onwebkitkeyadded": {
            "_flags": "ce",
            "_accessException": "TypeError: The WebKitMediaKeySession.onwebkitkeyadded getter can only be used on instances of WebKitMediaKeySession",
            "_get": "function onwebkitkeyadded() {\n    [native code]\n}",
            "_set": "function onwebkitkeyadded() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onwebkitkeyerror": {
            "_flags": "ce",
            "_accessException": "TypeError: The WebKitMediaKeySession.onwebkitkeyerror getter can only be used on instances of WebKitMediaKeySession",
            "_get": "function onwebkitkeyerror() {\n    [native code]\n}",
            "_set": "function onwebkitkeyerror() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onwebkitkeymessage": {
            "_flags": "ce",
            "_accessException": "TypeError: The WebKitMediaKeySession.onwebkitkeymessage getter can only be used on instances of WebKitMediaKeySession",
            "_get": "function onwebkitkeymessage() {\n    [native code]\n}",
            "_set": "function onwebkitkeymessage() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "update": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "update"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function update() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "close": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "close"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function close() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "WebKitMediaKeySession"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function WebKitMediaKeySession() {\n    [native code]\n}",
        "_flags": "cw"
      }
    },
    {
      "path": "window",
      "propertyName": "WebKitMediaKeys",
      "prevProperty": "WebKitMediaKeySession",
      "property": {
        "prototype": {
          "_protos": ["Object.prototype"],
          "keySystem": {
            "_flags": "ce",
            "_accessException": "TypeError: The WebKitMediaKeys.keySystem getter can only be used on instances of WebKitMediaKeys",
            "_get": "function keySystem() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "createSession": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "createSession"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function createSession() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "WebKitMediaKeys"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "isTypeSupported": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "isTypeSupported"
          },
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "_function": "function isTypeSupported() {\n    [native code]\n}",
          "_flags": "cew"
        },
        "new()": "TypeError: Not enough arguments",
        "_function": "function WebKitMediaKeys() {\n    [native code]\n}",
        "_flags": "cw"
      }
    },
    {
      "path": "window",
      "propertyName": "FileSystem",
      "prevProperty": "WebKitMediaKeys",
      "property": {
        "prototype": {
          "_protos": ["Object.prototype"],
          "name": {
            "_flags": "ce",
            "_accessException": "TypeError: The FileSystem.name getter can only be used on instances of FileSystem",
            "_get": "function name() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "root": {
            "_flags": "ce",
            "_accessException": "TypeError: The FileSystem.root getter can only be used on instances of FileSystem",
            "_get": "function root() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "FileSystem"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function FileSystem() {\n    [native code]\n}",
        "_flags": "cw"
      }
    },
    {
      "path": "window",
      "propertyName": "FileSystemDirectoryEntry",
      "prevProperty": "FileSystem",
      "property": {
        "prototype": {
          "_protos": ["FileSystemEntry.prototype", "Object.prototype"],
          "createReader": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "createReader"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function createReader() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "getFile": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getFile"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function getFile() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "getDirectory": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getDirectory"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function getDirectory() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "FileSystemDirectoryEntry"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function FileSystemDirectoryEntry() {\n    [native code]\n}",
        "_flags": "cw"
      }
    },
    {
      "path": "window",
      "propertyName": "FileSystemDirectoryReader",
      "prevProperty": "FileSystemDirectoryEntry",
      "property": {
        "prototype": {
          "_protos": ["Object.prototype"],
          "readEntries": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "readEntries"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function readEntries() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "FileSystemDirectoryReader"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function FileSystemDirectoryReader() {\n    [native code]\n}",
        "_flags": "cw"
      }
    },
    {
      "path": "window",
      "propertyName": "FileSystemEntry",
      "prevProperty": "FileSystemDirectoryReader",
      "property": {
        "prototype": {
          "_protos": ["Object.prototype"],
          "isFile": {
            "_flags": "ce",
            "_accessException": "TypeError: The FileSystemEntry.isFile getter can only be used on instances of FileSystemEntry",
            "_get": "function isFile() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "isDirectory": {
            "_flags": "ce",
            "_accessException": "TypeError: The FileSystemEntry.isDirectory getter can only be used on instances of FileSystemEntry",
            "_get": "function isDirectory() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "name": {
            "_flags": "ce",
            "_accessException": "TypeError: The FileSystemEntry.name getter can only be used on instances of FileSystemEntry",
            "_get": "function name() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "fullPath": {
            "_flags": "ce",
            "_accessException": "TypeError: The FileSystemEntry.fullPath getter can only be used on instances of FileSystemEntry",
            "_get": "function fullPath() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "filesystem": {
            "_flags": "ce",
            "_accessException": "TypeError: The FileSystemEntry.filesystem getter can only be used on instances of FileSystemEntry",
            "_get": "function filesystem() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "getParent": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getParent"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function getParent() {\n    [native code]\n}",
            "_flags": "cew"
          }
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "FileSystemEntry"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function FileSystemEntry() {\n    [native code]\n}",
        "_flags": "cw"
      }
    },
    {
      "path": "window",
      "propertyName": "FileSystemFileEntry",
      "prevProperty": "FileSystemEntry",
      "property": {
        "prototype": {
          "_protos": ["FileSystemEntry.prototype", "Object.prototype"],
          "file": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "file"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function file() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "FileSystemFileEntry"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function FileSystemFileEntry() {\n    [native code]\n}",
        "_flags": "cw"
      }
    },
    {
      "path": "window.Headers.prototype",
      "propertyName": "_type",
      "prevProperty": "Symbol(Symbol.iterator)",
      "property": "object"
    },
    {
      "path": "window.Headers.prototype",
      "propertyName": "_flags",
      "prevProperty": "_type",
      "property": ""
    },
    {
      "path": "window.Request.prototype",
      "propertyName": "body",
      "prevProperty": "signal",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The Request.body getter can only be used on instances of Request",
        "_get": "function body() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window",
      "propertyName": "ScreenLuminance",
      "prevProperty": "MediaCapabilities",
      "property": {
        "prototype": {
          "_protos": ["Object.prototype"],
          "min": {
            "_flags": "ce",
            "_accessException": "TypeError: The ScreenLuminance.min getter can only be used on instances of ScreenLuminance",
            "_get": "function min() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "max": {
            "_flags": "ce",
            "_accessException": "TypeError: The ScreenLuminance.max getter can only be used on instances of ScreenLuminance",
            "_get": "function max() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "maxAverage": {
            "_flags": "ce",
            "_accessException": "TypeError: The ScreenLuminance.maxAverage getter can only be used on instances of ScreenLuminance",
            "_get": "function maxAverage() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "ScreenLuminance"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function ScreenLuminance() {\n    [native code]\n}",
        "_flags": "cw"
      }
    },
    {
      "path": "window.RTCPeerConnectionIceEvent.prototype",
      "propertyName": "url",
      "prevProperty": "candidate",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The RTCPeerConnectionIceEvent.url getter can only be used on instances of RTCPeerConnectionIceEvent",
        "_get": "function url() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.RTCRtpTransceiver.prototype",
      "propertyName": "stop",
      "prevProperty": "currentDirection",
      "property": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "stop"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "_function": "function stop() {\n    [native code]\n}",
        "_flags": "cew"
      }
    },
    {
      "path": "window",
      "propertyName": "MerchantValidationEvent",
      "prevProperty": "RTCTrackEvent",
      "property": {
        "prototype": {
          "_protos": ["Event.prototype", "Object.prototype"],
          "methodName": {
            "_flags": "ce",
            "_accessException": "TypeError: The MerchantValidationEvent.methodName getter can only be used on instances of MerchantValidationEvent",
            "_get": "function methodName() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "validationURL": {
            "_flags": "ce",
            "_accessException": "TypeError: The MerchantValidationEvent.validationURL getter can only be used on instances of MerchantValidationEvent",
            "_get": "function validationURL() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "complete": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "complete"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function complete() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "NONE": {
            "_type": "number",
            "_value": 0
          },
          "CAPTURING_PHASE": {
            "_type": "number",
            "_value": 1
          },
          "AT_TARGET": {
            "_type": "number",
            "_value": 2
          },
          "BUBBLING_PHASE": {
            "_type": "number",
            "_value": 3
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "MerchantValidationEvent"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "NONE": {
          "_type": "number",
          "_value": 0
        },
        "CAPTURING_PHASE": {
          "_type": "number",
          "_value": 1
        },
        "AT_TARGET": {
          "_type": "number",
          "_value": 2
        },
        "BUBBLING_PHASE": {
          "_type": "number",
          "_value": 3
        },
        "new()": "TypeError: Not enough arguments",
        "_function": "function MerchantValidationEvent() {\n    [native code]\n}",
        "_flags": "cw"
      }
    },
    {
      "path": "window.PaymentRequest.prototype",
      "propertyName": "onmerchantvalidation",
      "prevProperty": "shippingType",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The PaymentRequest.onmerchantvalidation getter can only be used on instances of PaymentRequest",
        "_get": "function onmerchantvalidation() {\n    [native code]\n}",
        "_set": "function onmerchantvalidation() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window",
      "propertyName": "webkitAudioContext",
      "prevProperty": "PaymentResponse",
      "property": {
        "prototype": {
          "_protos": ["EventTarget.prototype", "Object.prototype"],
          "destination": {
            "_flags": "ce",
            "_accessException": "TypeError: The webkitAudioContext.destination getter can only be used on instances of webkitAudioContext",
            "_get": "function destination() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "currentTime": {
            "_flags": "ce",
            "_accessException": "TypeError: The webkitAudioContext.currentTime getter can only be used on instances of webkitAudioContext",
            "_get": "function currentTime() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "sampleRate": {
            "_flags": "ce",
            "_accessException": "TypeError: The webkitAudioContext.sampleRate getter can only be used on instances of webkitAudioContext",
            "_get": "function sampleRate() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "listener": {
            "_flags": "ce",
            "_accessException": "TypeError: The webkitAudioContext.listener getter can only be used on instances of webkitAudioContext",
            "_get": "function listener() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "state": {
            "_flags": "ce",
            "_accessException": "TypeError: The webkitAudioContext.state getter can only be used on instances of webkitAudioContext",
            "_get": "function state() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onstatechange": {
            "_flags": "ce",
            "_accessException": "TypeError: The webkitAudioContext.onstatechange getter can only be used on instances of webkitAudioContext",
            "_get": "function onstatechange() {\n    [native code]\n}",
            "_set": "function onstatechange() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "activeSourceCount": {
            "_flags": "ce",
            "_accessException": "TypeError: The webkitAudioContext.activeSourceCount getter can only be used on instances of webkitAudioContext",
            "_get": "function activeSourceCount() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "oncomplete": {
            "_flags": "ce",
            "_accessException": "TypeError: The webkitAudioContext.oncomplete getter can only be used on instances of webkitAudioContext",
            "_get": "function oncomplete() {\n    [native code]\n}",
            "_set": "function oncomplete() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "suspend": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "suspend"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function suspend() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "resume": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "resume"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function resume() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "close": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "close"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function close() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "createBuffer": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "createBuffer"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function createBuffer() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "decodeAudioData": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "decodeAudioData"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function decodeAudioData() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "createBufferSource": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "createBufferSource"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function createBufferSource() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "createMediaElementSource": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "createMediaElementSource"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function createMediaElementSource() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "createMediaStreamSource": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "createMediaStreamSource"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function createMediaStreamSource() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "createMediaStreamDestination": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "createMediaStreamDestination"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function createMediaStreamDestination() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "createGain": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "createGain"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function createGain() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "createDelay": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "createDelay"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function createDelay() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "createBiquadFilter": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "createBiquadFilter"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function createBiquadFilter() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "createWaveShaper": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "createWaveShaper"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function createWaveShaper() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "createPanner": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "createPanner"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function createPanner() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "createConvolver": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "createConvolver"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function createConvolver() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "createDynamicsCompressor": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "createDynamicsCompressor"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function createDynamicsCompressor() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "createAnalyser": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "createAnalyser"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function createAnalyser() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "createScriptProcessor": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "createScriptProcessor"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function createScriptProcessor() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "createOscillator": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "createOscillator"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function createOscillator() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "createPeriodicWave": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "createPeriodicWave"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function createPeriodicWave() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "createChannelSplitter": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "createChannelSplitter"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function createChannelSplitter() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "createChannelMerger": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "createChannelMerger"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function createChannelMerger() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "startRendering": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "startRendering"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function startRendering() {\n    [native code]\n}",
            "_flags": "cew"
          }
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "webkitAudioContext"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": {
          "_protos": ["webkitAudioContext.prototype", "EventTarget.prototype", "Object.prototype"],
          "destination": {
            "_protos": [
              "AudioDestinationNode.prototype",
              "AudioNode.prototype",
              "EventTarget.prototype",
              "Object.prototype"
            ],
            "maxChannelCount": {
              "_type": "number",
              "_value": 0
            },
            "context": {
              "_protos": [
                "webkitAudioContext.prototype",
                "EventTarget.prototype",
                "Object.prototype"
              ],
              "currentTime": {
                "_type": "number",
                "_value": 0
              },
              "sampleRate": {
                "_type": "number",
                "_value": 44100
              },
              "listener": {
                "_protos": ["AudioListener.prototype", "Object.prototype"],
                "dopplerFactor": {
                  "_type": "number",
                  "_value": 1
                },
                "speedOfSound": {
                  "_type": "number",
                  "_value": 343.29998779296875
                },
                "_type": "object"
              },
              "state": {
                "_type": "string",
                "_value": "suspended"
              },
              "onstatechange": {
                "_type": "object",
                "_value": null
              },
              "activeSourceCount": {
                "_type": "number",
                "_value": 0
              },
              "oncomplete": {
                "_type": "object",
                "_value": null
              },
              "_type": "object"
            },
            "numberOfInputs": {
              "_type": "number",
              "_value": 1
            },
            "numberOfOutputs": {
              "_type": "number",
              "_value": 0
            },
            "channelCount": {
              "_type": "number",
              "_value": 2
            },
            "channelCountMode": {
              "_type": "string",
              "_value": "explicit"
            },
            "channelInterpretation": {
              "_type": "string",
              "_value": "speakers"
            },
            "_type": "object"
          },
          "currentTime": {
            "_type": "number",
            "_value": 0
          },
          "sampleRate": {
            "_type": "number",
            "_value": 44100
          },
          "state": {
            "_type": "string",
            "_value": "suspended"
          },
          "onstatechange": {
            "_type": "object",
            "_value": null
          },
          "activeSourceCount": {
            "_type": "number",
            "_value": 0
          },
          "oncomplete": {
            "_type": "object",
            "_value": null
          }
        },
        "_function": "function webkitAudioContext() {\n    [native code]\n}",
        "_flags": "cw"
      }
    },
    {
      "path": "window.WebSocket.prototype",
      "propertyName": "URL",
      "prevProperty": "_protos",
      "property": {
        "_flags": "ce",
        "_accessException": "TypeError: The WebSocket.URL getter can only be used on instances of WebSocket",
        "_get": "function URL() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.DataTransferItemList.prototype",
      "propertyName": "item",
      "prevProperty": "length",
      "property": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "item"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "_function": "function item() {\n    [native code]\n}",
        "_flags": "cew"
      }
    },
    {
      "path": "window.PointerEvent.prototype",
      "propertyName": "WEBKIT_FORCE_AT_MOUSE_DOWN",
      "prevProperty": "isPrimary",
      "property": {
        "_type": "number",
        "_value": 1
      }
    },
    {
      "path": "window.PointerEvent",
      "propertyName": "WEBKIT_FORCE_AT_MOUSE_DOWN",
      "prevProperty": "length",
      "property": {
        "_type": "number",
        "_value": 1
      }
    },
    {
      "path": "window.PointerEvent.prototype",
      "propertyName": "WEBKIT_FORCE_AT_FORCE_MOUSE_DOWN",
      "prevProperty": "WEBKIT_FORCE_AT_MOUSE_DOWN",
      "property": {
        "_type": "number",
        "_value": 2
      }
    },
    {
      "path": "window.PointerEvent",
      "propertyName": "WEBKIT_FORCE_AT_FORCE_MOUSE_DOWN",
      "prevProperty": "WEBKIT_FORCE_AT_MOUSE_DOWN",
      "property": {
        "_type": "number",
        "_value": 2
      }
    },
    {
      "path": "window",
      "propertyName": "WebKitMediaKeyError",
      "prevProperty": "MediaEncryptedEvent",
      "property": {
        "prototype": {
          "_protos": ["Object.prototype"],
          "code": {
            "_flags": "ce",
            "_accessException": "TypeError: The WebKitMediaKeyError.code getter can only be used on instances of WebKitMediaKeyError",
            "_get": "function code() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "systemCode": {
            "_flags": "ce",
            "_accessException": "TypeError: The WebKitMediaKeyError.systemCode getter can only be used on instances of WebKitMediaKeyError",
            "_get": "function systemCode() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "MEDIA_KEYERR_UNKNOWN": {
            "_type": "number",
            "_flags": "e",
            "_value": 1
          },
          "MEDIA_KEYERR_CLIENT": {
            "_type": "number",
            "_flags": "e",
            "_value": 2
          },
          "MEDIA_KEYERR_SERVICE": {
            "_type": "number",
            "_flags": "e",
            "_value": 3
          },
          "MEDIA_KEYERR_OUTPUT": {
            "_type": "number",
            "_flags": "e",
            "_value": 4
          },
          "MEDIA_KEYERR_HARDWARECHANGE": {
            "_type": "number",
            "_flags": "e",
            "_value": 5
          },
          "MEDIA_KEYERR_DOMAIN": {
            "_type": "number",
            "_flags": "e",
            "_value": 6
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "WebKitMediaKeyError"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "MEDIA_KEYERR_UNKNOWN": {
          "_type": "number",
          "_flags": "e",
          "_value": 1
        },
        "MEDIA_KEYERR_CLIENT": {
          "_type": "number",
          "_flags": "e",
          "_value": 2
        },
        "MEDIA_KEYERR_SERVICE": {
          "_type": "number",
          "_flags": "e",
          "_value": 3
        },
        "MEDIA_KEYERR_OUTPUT": {
          "_type": "number",
          "_flags": "e",
          "_value": 4
        },
        "MEDIA_KEYERR_HARDWARECHANGE": {
          "_type": "number",
          "_flags": "e",
          "_value": 5
        },
        "MEDIA_KEYERR_DOMAIN": {
          "_type": "number",
          "_flags": "e",
          "_value": 6
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function WebKitMediaKeyError() {\n    [native code]\n}",
        "_flags": "cw"
      }
    },
    {
      "path": "window.PerformanceEntry.prototype",
      "propertyName": "_type",
      "prevProperty": "toJSON",
      "property": "object"
    },
    {
      "path": "window.PerformanceEntry.prototype",
      "propertyName": "_flags",
      "prevProperty": "_type",
      "property": ""
    },
    {
      "path": "window.PerformanceObserver.supportedEntryTypes",
      "propertyName": "_value",
      "prevProperty": "_flags",
      "property": "mark,measure,resource"
    },
    {
      "path": "window.document.documentElement",
      "propertyName": "ownerDocument",
      "prevProperty": "isConnected",
      "property": {
        "_protos": [
          "HTMLDocument.prototype",
          "Document.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "location": "REF: window.document.location",
        "URL": {
          "_type": "string",
          "_value": "<url>"
        },
        "documentURI": {
          "_type": "string",
          "_value": "<url>"
        },
        "origin": {
          "_type": "string",
          "_value": "https://<host>"
        },
        "compatMode": {
          "_type": "string",
          "_value": "BackCompat"
        },
        "characterSet": {
          "_type": "string",
          "_value": "windows-1252"
        },
        "charset": {
          "_type": "string",
          "_value": "windows-1252"
        },
        "inputEncoding": {
          "_type": "string",
          "_value": "windows-1252"
        },
        "contentType": {
          "_type": "string",
          "_value": "text/html"
        },
        "doctype": {
          "_type": "object",
          "_value": null
        },
        "domain": {
          "_type": "string",
          "_value": "<host>"
        },
        "referrer": {
          "_type": "string",
          "_value": "https://headers.dataliberationfoundation.org/run-page?sessionid=6"
        },
        "cookie": {
          "_type": "string",
          "_value": "SecureSub--RootDomain-SameSiteNone=0; SecureSub--RootDomain-Secure-SameSiteLax=0; SecureSub--RootDomain-Secure-SameSiteNone=0; SecureMain--RootDomain-SameSiteNone=0; SecureMain--RootDomain-Secure-SameSiteLax=0; SecureMain--RootDomain-Secure-SameSiteNone=0; Main-JsCookies=0; SecureMain=0; SecureMain--SameSiteLax=0; SecureMain--SameSiteNone=0; SecureMain--Secure=0; SecureMain--Secure-SameSiteLax=0; SecureMain--Secure-SameSiteNone=0; __Host-SecureMain--Secure-HostPrefix-RootPath=0; __Secure-SecureMain--Secure-SecurePrefix=0"
        },
        "lastModified": {
          "_skipped": "SKIPPED DOM"
        },
        "readyState": {
          "_type": "string",
          "_value": "complete"
        },
        "title": {
          "_type": "string",
          "_value": ""
        },
        "dir": {
          "_type": "string",
          "_value": ""
        },
        "body": {
          "_protos": [
            "HTMLBodyElement.prototype",
            "HTMLElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "aLink": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "background": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "bgColor": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "link": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "text": {
            "_skipped": "SKIPPED DOM"
          },
          "vLink": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "onafterprint": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "onbeforeprint": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "onbeforeunload": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "onhashchange": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "onlanguagechange": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "onmessage": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "onoffline": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "ononline": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "onpagehide": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "onpageshow": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "onpopstate": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "onstorage": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "onunload": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "title": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "lang": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "translate": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "dir": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "dataset": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "hidden": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "tabIndex": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "accessKey": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "draggable": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "spellcheck": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "innerText": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "contentEditable": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "isContentEditable": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "offsetParent": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "offsetTop": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "offsetLeft": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "offsetWidth": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "offsetHeight": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "outerText": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "webkitdropzone": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "inputMode": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "style": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "onabort": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "onblur": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "oncanplay": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "oncanplaythrough": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "onchange": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "onclick": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "oncontextmenu": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "oncuechange": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "ondblclick": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "ondrag": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "ondragend": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "ondragenter": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "ondragleave": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "ondragover": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "ondragstart": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "ondrop": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "ondurationchange": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "onemptied": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "onended": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "onerror": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "onfocus": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "oninput": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "oninvalid": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "onkeydown": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "onkeypress": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "onkeyup": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "onload": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "onloadeddata": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "onloadedmetadata": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "onloadstart": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "onmousedown": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "onmouseenter": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "onmouseleave": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "onmousemove": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "onmouseout": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "onmouseover": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "onmouseup": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "onmousewheel": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "onpause": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "onplay": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "onplaying": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "onprogress": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "onratechange": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "onrejectionhandled": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "onreset": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "onresize": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "onscroll": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "onseeked": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "onseeking": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "onselect": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "onstalled": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "onsubmit": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "onsuspend": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "ontimeupdate": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "ontoggle": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "onunhandledrejection": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "onvolumechange": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "onwaiting": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "ontransitionend": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "ontransitionrun": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "ontransitionstart": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "ontransitioncancel": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "onanimationend": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "onanimationiteration": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "onanimationstart": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "onanimationcancel": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "ongotpointercapture": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "onlostpointercapture": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "onpointerdown": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "onpointermove": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "onpointerup": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "onpointercancel": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "onpointerover": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "onpointerout": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "onpointerenter": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "onpointerleave": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "click": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "focus": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "blur": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "namespaceURI": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "prefix": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "localName": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "tagName": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "id": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "className": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "classList": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "slot": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "attributes": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "shadowRoot": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "scrollTop": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "scrollLeft": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "scrollWidth": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "scrollHeight": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "clientTop": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "clientLeft": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "clientWidth": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "clientHeight": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "innerHTML": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "outerHTML": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "role": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "ariaAtomic": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "ariaAutoComplete": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "ariaBusy": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "ariaChecked": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "ariaColCount": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "ariaColIndex": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "ariaColSpan": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "ariaCurrent": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "ariaDisabled": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "ariaExpanded": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "ariaHasPopup": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "ariaHidden": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "ariaInvalid": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "ariaKeyShortcuts": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "ariaLabel": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "ariaLevel": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "ariaLive": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "ariaModal": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "ariaMultiLine": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "ariaMultiSelectable": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "ariaOrientation": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "ariaPlaceholder": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "ariaPosInSet": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "ariaPressed": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "ariaReadOnly": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "ariaRelevant": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "ariaRequired": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "ariaRoleDescription": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "ariaRowCount": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "ariaRowIndex": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "ariaRowSpan": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "ariaSelected": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "ariaSetSize": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "ariaSort": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "ariaValueMax": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "ariaValueMin": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "ariaValueNow": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "ariaValueText": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "oncopy": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "oncut": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "onpaste": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "previousElementSibling": {
            "_skipped": "SKIPPED DOM"
          },
          "nextElementSibling": {
            "_skipped": "SKIPPED DOM"
          },
          "children": {
            "_skipped": "SKIPPED DOM"
          },
          "firstElementChild": {
            "_skipped": "SKIPPED DOM"
          },
          "lastElementChild": {
            "_skipped": "SKIPPED DOM"
          },
          "childElementCount": {
            "_skipped": "SKIPPED DOM"
          },
          "assignedSlot": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "hasAttributes": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "getAttributeNames": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "getAttribute": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "getAttributeNS": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "setAttribute": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "setAttributeNS": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "removeAttribute": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "removeAttributeNS": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "toggleAttribute": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "hasAttribute": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "hasAttributeNS": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "getAttributeNode": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "getAttributeNodeNS": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "setAttributeNode": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "setAttributeNodeNS": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "removeAttributeNode": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "attachShadow": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "closest": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "matches": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "webkitMatchesSelector": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "getElementsByTagName": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "getElementsByTagNameNS": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "getElementsByClassName": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "insertAdjacentElement": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "insertAdjacentText": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "getClientRects": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "getBoundingClientRect": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "scrollIntoView": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "scroll": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "scrollTo": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "scrollBy": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "insertAdjacentHTML": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "webkitRequestFullScreen": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "webkitRequestFullscreen": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "setPointerCapture": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "releasePointerCapture": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "hasPointerCapture": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "requestPointerLock": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "scrollIntoViewIfNeeded": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "before": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "after": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "replaceWith": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "remove": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "prepend": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "append": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "querySelector": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "querySelectorAll": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "nodeType": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "nodeName": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "baseURI": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "isConnected": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "ownerDocument": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "parentNode": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "parentElement": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "childNodes": {
            "_skipped": "SKIPPED DOM"
          },
          "firstChild": {
            "_skipped": "SKIPPED DOM"
          },
          "lastChild": {
            "_skipped": "SKIPPED DOM"
          },
          "previousSibling": {
            "_skipped": "SKIPPED DOM"
          },
          "nextSibling": {
            "_skipped": "SKIPPED DOM"
          },
          "nodeValue": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "textContent": {
            "_skipped": "SKIPPED DOM"
          },
          "getRootNode": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "hasChildNodes": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "normalize": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "cloneNode": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "isEqualNode": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "isSameNode": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "compareDocumentPosition": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "contains": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "lookupPrefix": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "lookupNamespaceURI": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "isDefaultNamespace": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "insertBefore": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "appendChild": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "replaceChild": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "removeChild": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "ELEMENT_NODE": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "ATTRIBUTE_NODE": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "TEXT_NODE": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "CDATA_SECTION_NODE": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "ENTITY_NODE": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "COMMENT_NODE": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "DOCUMENT_NODE": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "NOTATION_NODE": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "addEventListener": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "removeEventListener": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "dispatchEvent": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "_type": "object"
        },
        "head": {
          "_protos": [
            "HTMLHeadElement.prototype",
            "HTMLElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "profile": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "title": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "lang": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "translate": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "dir": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "dataset": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "hidden": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "tabIndex": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "accessKey": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "draggable": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "spellcheck": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "innerText": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "contentEditable": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "isContentEditable": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "offsetParent": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "offsetTop": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "offsetLeft": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "offsetWidth": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "offsetHeight": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "outerText": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "webkitdropzone": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "inputMode": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "style": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "onabort": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "onblur": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "oncanplay": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "oncanplaythrough": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "onchange": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "onclick": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "oncontextmenu": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "oncuechange": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "ondblclick": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "ondrag": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "ondragend": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "ondragenter": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "ondragleave": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "ondragover": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "ondragstart": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "ondrop": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "ondurationchange": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "onemptied": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "onended": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "onerror": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "onfocus": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "oninput": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "oninvalid": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "onkeydown": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "onkeypress": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "onkeyup": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "onload": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "onloadeddata": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "onloadedmetadata": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "onloadstart": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "onmousedown": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "onmouseenter": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "onmouseleave": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "onmousemove": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "onmouseout": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "onmouseover": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "onmouseup": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "onmousewheel": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "onpause": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "onplay": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "onplaying": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "onprogress": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "onratechange": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "onrejectionhandled": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "onreset": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "onresize": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "onscroll": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "onseeked": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "onseeking": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "onselect": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "onstalled": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "onsubmit": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "onsuspend": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "ontimeupdate": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "ontoggle": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "onunhandledrejection": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "onvolumechange": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "onwaiting": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "ontransitionend": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "ontransitionrun": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "ontransitionstart": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "ontransitioncancel": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "onanimationend": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "onanimationiteration": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "onanimationstart": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "onanimationcancel": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "ongotpointercapture": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "onlostpointercapture": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "onpointerdown": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "onpointermove": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "onpointerup": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "onpointercancel": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "onpointerover": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "onpointerout": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "onpointerenter": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "onpointerleave": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "click": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "focus": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "blur": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "namespaceURI": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "prefix": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "localName": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "tagName": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "id": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "className": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "classList": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "slot": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "attributes": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "shadowRoot": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "scrollTop": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "scrollLeft": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "scrollWidth": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "scrollHeight": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "clientTop": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "clientLeft": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "clientWidth": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "clientHeight": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "innerHTML": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "outerHTML": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "role": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "ariaAtomic": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "ariaAutoComplete": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "ariaBusy": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "ariaChecked": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "ariaColCount": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "ariaColIndex": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "ariaColSpan": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "ariaCurrent": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "ariaDisabled": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "ariaExpanded": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "ariaHasPopup": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "ariaHidden": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "ariaInvalid": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "ariaKeyShortcuts": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "ariaLabel": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "ariaLevel": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "ariaLive": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "ariaModal": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "ariaMultiLine": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "ariaMultiSelectable": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "ariaOrientation": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "ariaPlaceholder": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "ariaPosInSet": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "ariaPressed": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "ariaReadOnly": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "ariaRelevant": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "ariaRequired": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "ariaRoleDescription": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "ariaRowCount": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "ariaRowIndex": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "ariaRowSpan": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "ariaSelected": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "ariaSetSize": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "ariaSort": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "ariaValueMax": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "ariaValueMin": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "ariaValueNow": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "ariaValueText": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "oncopy": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "oncut": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "onpaste": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "previousElementSibling": {
            "_skipped": "SKIPPED DOM"
          },
          "nextElementSibling": {
            "_skipped": "SKIPPED DOM"
          },
          "children": {
            "_skipped": "SKIPPED DOM"
          },
          "firstElementChild": {
            "_skipped": "SKIPPED DOM"
          },
          "lastElementChild": {
            "_skipped": "SKIPPED DOM"
          },
          "childElementCount": {
            "_skipped": "SKIPPED DOM"
          },
          "assignedSlot": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "hasAttributes": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "getAttributeNames": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "getAttribute": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "getAttributeNS": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "setAttribute": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "setAttributeNS": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "removeAttribute": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "removeAttributeNS": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "toggleAttribute": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "hasAttribute": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "hasAttributeNS": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "getAttributeNode": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "getAttributeNodeNS": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "setAttributeNode": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "setAttributeNodeNS": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "removeAttributeNode": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "attachShadow": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "closest": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "matches": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "webkitMatchesSelector": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "getElementsByTagName": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "getElementsByTagNameNS": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "getElementsByClassName": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "insertAdjacentElement": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "insertAdjacentText": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "getClientRects": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "getBoundingClientRect": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "scrollIntoView": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "scroll": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "scrollTo": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "scrollBy": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "insertAdjacentHTML": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "webkitRequestFullScreen": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "webkitRequestFullscreen": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "setPointerCapture": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "releasePointerCapture": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "hasPointerCapture": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "requestPointerLock": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "scrollIntoViewIfNeeded": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "before": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "after": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "replaceWith": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "remove": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "prepend": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "append": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "querySelector": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "querySelectorAll": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "nodeType": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "nodeName": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "baseURI": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "isConnected": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "ownerDocument": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "parentNode": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "parentElement": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "childNodes": {
            "_skipped": "SKIPPED DOM"
          },
          "firstChild": {
            "_skipped": "SKIPPED DOM"
          },
          "lastChild": {
            "_skipped": "SKIPPED DOM"
          },
          "previousSibling": {
            "_skipped": "SKIPPED DOM"
          },
          "nextSibling": {
            "_skipped": "SKIPPED DOM"
          },
          "nodeValue": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "textContent": {
            "_skipped": "SKIPPED DOM"
          },
          "getRootNode": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "hasChildNodes": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "normalize": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "cloneNode": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "isEqualNode": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "isSameNode": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "compareDocumentPosition": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "contains": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "lookupPrefix": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "lookupNamespaceURI": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "isDefaultNamespace": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "insertBefore": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "appendChild": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "replaceChild": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "removeChild": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "ELEMENT_NODE": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "ATTRIBUTE_NODE": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "TEXT_NODE": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "CDATA_SECTION_NODE": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "ENTITY_NODE": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "COMMENT_NODE": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "DOCUMENT_NODE": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "NOTATION_NODE": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "addEventListener": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "removeEventListener": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "dispatchEvent": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "_type": "object"
        },
        "images": {
          "_protos": ["HTMLCollection.prototype", "Object.prototype"],
          "length": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "item": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "namedItem": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "_type": "object"
        },
        "embeds": {
          "_protos": ["HTMLCollection.prototype", "Object.prototype"],
          "length": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "item": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "namedItem": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "_type": "object"
        },
        "links": {
          "_protos": ["HTMLCollection.prototype", "Object.prototype"],
          "length": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "item": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "namedItem": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "_type": "object"
        },
        "forms": {
          "_protos": ["HTMLCollection.prototype", "Object.prototype"],
          "length": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "item": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "namedItem": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "_type": "object"
        },
        "scripts": {
          "0": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "1": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "2": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "3": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "4": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "_protos": ["HTMLCollection.prototype", "Object.prototype"],
          "length": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "item": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "namedItem": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "_type": "object"
        },
        "currentScript": {
          "_type": "object",
          "_value": null
        },
        "designMode": {
          "_type": "string",
          "_value": "off"
        },
        "onreadystatechange": {
          "_type": "object",
          "_value": null
        },
        "fonts": {
          "_protos": ["FontFaceSet.prototype", "EventTarget.prototype", "Object.prototype"],
          "size": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "onloading": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "onloadingdone": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "onloadingerror": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "ready": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "status": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "has": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "add": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "delete": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "clear": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "load": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "check": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "entries": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "keys": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "values": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "forEach": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "addEventListener": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "removeEventListener": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "dispatchEvent": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "_type": "object"
        },
        "hidden": {
          "_type": "boolean",
          "_value": false
        },
        "visibilityState": {
          "_type": "string",
          "_value": "visible"
        },
        "onvisibilitychange": {
          "_type": "object",
          "_value": null
        },
        "xmlEncoding": {
          "_type": "object",
          "_value": null
        },
        "xmlVersion": {
          "_type": "object",
          "_value": null
        },
        "xmlStandalone": {
          "_type": "boolean",
          "_value": false
        },
        "fgColor": {
          "_type": "string",
          "_value": ""
        },
        "linkColor": {
          "_type": "string",
          "_value": ""
        },
        "vlinkColor": {
          "_type": "string",
          "_value": ""
        },
        "alinkColor": {
          "_type": "string",
          "_value": ""
        },
        "bgColor": {
          "_type": "string",
          "_value": ""
        },
        "anchors": {
          "_protos": ["HTMLCollection.prototype", "Object.prototype"],
          "length": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "item": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "namedItem": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "_type": "object"
        },
        "applets": {
          "_protos": ["HTMLCollection.prototype", "Object.prototype"],
          "length": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "item": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "namedItem": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "_type": "object"
        },
        "all": {},
        "oncopy": {
          "_type": "object",
          "_value": null
        },
        "oncut": {
          "_type": "object",
          "_value": null
        },
        "onpaste": {
          "_type": "object",
          "_value": null
        },
        "webkitFullscreenEnabled": {
          "_type": "boolean",
          "_value": true
        },
        "webkitFullscreenElement": {
          "_type": "object",
          "_value": null
        },
        "webkitIsFullScreen": {
          "_type": "boolean",
          "_value": false
        },
        "webkitFullScreenKeyboardInputAllowed": {
          "_type": "boolean",
          "_value": false
        },
        "webkitCurrentFullScreenElement": {
          "_type": "object",
          "_value": null
        },
        "styleSheets": {
          "0": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "_protos": ["StyleSheetList.prototype", "Object.prototype"],
          "length": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "item": {
            "_type": "object",
            "_skipped": "SKIPPED DEPTH"
          },
          "_type": "object"
        },
        "pointerLockElement": {
          "_type": "object",
          "_value": null
        },
        "onabort": {
          "_type": "object",
          "_value": null
        },
        "onblur": {
          "_type": "object",
          "_value": null
        },
        "oncanplay": {
          "_type": "object",
          "_value": null
        },
        "oncanplaythrough": {
          "_type": "object",
          "_value": null
        },
        "onchange": {
          "_type": "object",
          "_value": null
        },
        "onclick": {
          "_type": "object",
          "_value": null
        },
        "oncontextmenu": {
          "_type": "object",
          "_value": null
        },
        "oncuechange": {
          "_type": "object",
          "_value": null
        },
        "ondblclick": {
          "_type": "object",
          "_value": null
        },
        "ondrag": {
          "_type": "object",
          "_value": null
        },
        "ondragend": {
          "_type": "object",
          "_value": null
        },
        "ondragenter": {
          "_type": "object",
          "_value": null
        },
        "ondragleave": {
          "_type": "object",
          "_value": null
        },
        "ondragover": {
          "_type": "object",
          "_value": null
        },
        "ondragstart": {
          "_type": "object",
          "_value": null
        },
        "ondrop": {
          "_type": "object",
          "_value": null
        },
        "ondurationchange": {
          "_type": "object",
          "_value": null
        },
        "onemptied": {
          "_type": "object",
          "_value": null
        },
        "onended": {
          "_type": "object",
          "_value": null
        },
        "onerror": {
          "_type": "object",
          "_value": null
        },
        "onfocus": {
          "_type": "object",
          "_value": null
        },
        "oninput": {
          "_type": "object",
          "_value": null
        },
        "oninvalid": {
          "_type": "object",
          "_value": null
        },
        "onkeydown": {
          "_type": "object",
          "_value": null
        },
        "onkeypress": {
          "_type": "object",
          "_value": null
        },
        "onkeyup": {
          "_type": "object",
          "_value": null
        },
        "onload": {
          "_type": "object",
          "_value": null
        },
        "onloadeddata": {
          "_type": "object",
          "_value": null
        },
        "onloadedmetadata": {
          "_type": "object",
          "_value": null
        },
        "onloadstart": {
          "_type": "object",
          "_value": null
        },
        "onmousedown": {
          "_type": "object",
          "_value": null
        },
        "onmouseenter": {
          "_type": "object",
          "_value": null
        },
        "onmouseleave": {
          "_type": "object",
          "_value": null
        },
        "onmousemove": {
          "_type": "object",
          "_value": null
        },
        "onmouseout": {
          "_type": "object",
          "_value": null
        },
        "onmouseover": {
          "_type": "object",
          "_value": null
        },
        "onmouseup": {
          "_type": "object",
          "_value": null
        },
        "onmousewheel": {
          "_type": "object",
          "_value": null
        },
        "onpause": {
          "_type": "object",
          "_value": null
        },
        "onplay": {
          "_type": "object",
          "_value": null
        },
        "onplaying": {
          "_type": "object",
          "_value": null
        },
        "onprogress": {
          "_type": "object",
          "_value": null
        },
        "onratechange": {
          "_type": "object",
          "_value": null
        },
        "onrejectionhandled": {
          "_type": "object",
          "_value": null
        },
        "onreset": {
          "_type": "object",
          "_value": null
        },
        "onresize": {
          "_type": "object",
          "_value": null
        },
        "onscroll": {
          "_type": "object",
          "_value": null
        },
        "onseeked": {
          "_type": "object",
          "_value": null
        },
        "onseeking": {
          "_type": "object",
          "_value": null
        },
        "onselect": {
          "_type": "object",
          "_value": null
        },
        "onstalled": {
          "_type": "object",
          "_value": null
        },
        "onsubmit": {
          "_type": "object",
          "_value": null
        },
        "onsuspend": {
          "_type": "object",
          "_value": null
        },
        "ontimeupdate": {
          "_type": "object",
          "_value": null
        },
        "ontoggle": {
          "_type": "object",
          "_value": null
        },
        "onunhandledrejection": {
          "_type": "object",
          "_value": null
        },
        "onvolumechange": {
          "_type": "object",
          "_value": null
        },
        "onwaiting": {
          "_type": "object",
          "_value": null
        },
        "ontransitionend": {
          "_type": "object",
          "_value": null
        },
        "ontransitionrun": {
          "_type": "object",
          "_value": null
        },
        "ontransitionstart": {
          "_type": "object",
          "_value": null
        },
        "ontransitioncancel": {
          "_type": "object",
          "_value": null
        },
        "onanimationend": {
          "_type": "object",
          "_value": null
        },
        "onanimationiteration": {
          "_type": "object",
          "_value": null
        },
        "onanimationstart": {
          "_type": "object",
          "_value": null
        },
        "onanimationcancel": {
          "_type": "object",
          "_value": null
        },
        "ongotpointercapture": {
          "_type": "object",
          "_value": null
        },
        "onlostpointercapture": {
          "_type": "object",
          "_value": null
        },
        "onpointerdown": {
          "_type": "object",
          "_value": null
        },
        "onpointermove": {
          "_type": "object",
          "_value": null
        },
        "onpointerup": {
          "_type": "object",
          "_value": null
        },
        "onpointercancel": {
          "_type": "object",
          "_value": null
        },
        "onpointerover": {
          "_type": "object",
          "_value": null
        },
        "onpointerout": {
          "_type": "object",
          "_value": null
        },
        "onpointerenter": {
          "_type": "object",
          "_value": null
        },
        "onpointerleave": {
          "_type": "object",
          "_value": null
        },
        "children": {
          "_skipped": "SKIPPED DOM"
        },
        "firstElementChild": {
          "_skipped": "SKIPPED DOM"
        },
        "lastElementChild": {
          "_skipped": "SKIPPED DOM"
        },
        "childElementCount": {
          "_skipped": "SKIPPED DOM"
        },
        "rootElement": {
          "_type": "object",
          "_value": null
        },
        "nodeType": {
          "_type": "number",
          "_value": 9
        },
        "nodeName": {
          "_type": "string",
          "_value": "#document"
        },
        "baseURI": {
          "_type": "string",
          "_value": "<url>"
        },
        "isConnected": {
          "_type": "boolean",
          "_value": true
        },
        "ownerDocument": {
          "_type": "object",
          "_value": null
        },
        "parentNode": {
          "_type": "object",
          "_value": null
        },
        "parentElement": {
          "_type": "object",
          "_value": null
        },
        "childNodes": {
          "_skipped": "SKIPPED DOM"
        },
        "firstChild": {
          "_skipped": "SKIPPED DOM"
        },
        "lastChild": {
          "_skipped": "SKIPPED DOM"
        },
        "previousSibling": {
          "_skipped": "SKIPPED DOM"
        },
        "nextSibling": {
          "_skipped": "SKIPPED DOM"
        },
        "nodeValue": {
          "_type": "object",
          "_value": null
        },
        "textContent": {
          "_skipped": "SKIPPED DOM"
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "_type": "object"
      }
    },
    {
      "path": "window",
      "propertyName": "safari",
      "prevProperty": "fetch",
      "property": {
        "_protos": ["Object.prototype"],
        "pushNotification": {
          "_protos": ["Object.prototype", "Object.prototype"],
          "permission": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "permission"
            },
            "_func": "function permission() {\n    [native code]\n}"
          },
          "requestPermission": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "requestPermission"
            },
            "_func": "function requestPermission() {\n    [native code]\n}"
          },
          "_type": "object",
          "_flags": "e"
        },
        "_type": "object",
        "_flags": "cew"
      }
    }
  ],
  "order": [
    {
      "path": "detached.TypedArray.prototype",
      "propertyName": "toString",
      "throughProperty": "toString",
      "prevProperty": null
    },
    {
      "path": "detached.TypedArray.prototype",
      "propertyName": "buffer",
      "throughProperty": "byteOffset",
      "prevProperty": "toString"
    },
    {
      "path": "detached.TypedArray.prototype",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "lastIndexOf"
    },
    {
      "path": "detached.TypedArray.prototype",
      "propertyName": "entries",
      "throughProperty": "entries",
      "prevProperty": "sort"
    },
    {
      "path": "detached.TypedArray.prototype",
      "propertyName": "keys",
      "throughProperty": "keys",
      "prevProperty": "join"
    },
    {
      "path": "detached.TypedArray.prototype",
      "propertyName": "values",
      "throughProperty": "values",
      "prevProperty": "toLocaleString"
    },
    {
      "path": "detached.TypedArray.prototype",
      "propertyName": "copyWithin",
      "throughProperty": "every",
      "prevProperty": "byteOffset"
    },
    {
      "path": "detached.TypedArray.prototype",
      "propertyName": "fill",
      "throughProperty": "fill",
      "prevProperty": "includes"
    },
    {
      "path": "detached.TypedArray.prototype",
      "propertyName": "filter",
      "throughProperty": "filter",
      "prevProperty": "every"
    },
    {
      "path": "detached.TypedArray.prototype",
      "propertyName": "includes",
      "throughProperty": "includes",
      "prevProperty": "entries"
    },
    {
      "path": "detached.TypedArray.prototype",
      "propertyName": "indexOf",
      "throughProperty": "join",
      "prevProperty": "forEach"
    },
    {
      "path": "detached.TypedArray.prototype",
      "propertyName": "map",
      "throughProperty": "map",
      "prevProperty": "length"
    },
    {
      "path": "detached.TypedArray.prototype",
      "propertyName": "reverse",
      "throughProperty": "reverse",
      "prevProperty": "reduceRight"
    },
    {
      "path": "detached.TypedArray.prototype",
      "propertyName": "set",
      "throughProperty": "some",
      "prevProperty": "reverse"
    },
    {
      "path": "detached.TypedArray.prototype",
      "propertyName": "sort",
      "throughProperty": "sort",
      "prevProperty": "filter"
    },
    {
      "path": "detached.TypedArray.prototype.copyWithin",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "detached.TypedArray.prototype.copyWithin",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "detached.TypedArray.prototype.includes",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "detached.TypedArray.prototype.includes",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "detached.TypedArray.prototype.indexOf",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "detached.TypedArray.prototype.indexOf",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "detached.TypedArray.prototype.join",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "detached.TypedArray.prototype.join",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "detached.TypedArray.prototype.lastIndexOf",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "detached.TypedArray.prototype.lastIndexOf",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "detached.TypedArray.prototype.reverse",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "detached.TypedArray.prototype.reverse",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "detached.TypedArray.prototype.set",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "detached.TypedArray.prototype.set",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "detached.TypedArray.prototype.slice",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "detached.TypedArray.prototype.slice",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window",
      "propertyName": "Error",
      "throughProperty": "Error",
      "prevProperty": "Date"
    },
    {
      "path": "window",
      "propertyName": "PeriodicWave",
      "throughProperty": "PeriodicWave",
      "prevProperty": "webkitAudioPannerNode"
    },
    {
      "path": "window",
      "propertyName": "OscillatorNode",
      "throughProperty": "OscillatorNode",
      "prevProperty": "webkitOfflineAudioContext"
    },
    {
      "path": "window",
      "propertyName": "MimeType",
      "throughProperty": "MimeTypeArray",
      "prevProperty": "WebKitPoint"
    },
    {
      "path": "window",
      "propertyName": "IDBCursor",
      "throughProperty": "IDBCursor",
      "prevProperty": "ApplePayError"
    },
    {
      "path": "window",
      "propertyName": "CryptoKey",
      "throughProperty": "CryptoKey",
      "prevProperty": "VRPose"
    },
    {
      "path": "window",
      "propertyName": "CloseEvent",
      "throughProperty": "CloseEvent",
      "prevProperty": "SQLTransaction"
    },
    {
      "path": "window",
      "propertyName": "XMLHttpRequestUpload",
      "throughProperty": "XMLHttpRequestUpload",
      "prevProperty": "XMLHttpRequestProgressEvent"
    },
    {
      "path": "window",
      "propertyName": "Worker",
      "throughProperty": "Worker",
      "prevProperty": "SVGZoomEvent"
    },
    {
      "path": "window",
      "propertyName": "WheelEvent",
      "throughProperty": "WheelEvent",
      "prevProperty": "WebKitTransitionEvent"
    },
    {
      "path": "window",
      "propertyName": "TextTrack",
      "throughProperty": "TextTrack",
      "prevProperty": "DataCue"
    },
    {
      "path": "window",
      "propertyName": "SVGViewElement",
      "throughProperty": "SVGViewElement",
      "prevProperty": "SVGVKernElement"
    },
    {
      "path": "window",
      "propertyName": "SVGTSpanElement",
      "throughProperty": "SVGTSpanElement",
      "prevProperty": "SVGTRefElement"
    },
    {
      "path": "window",
      "propertyName": "SVGSVGElement",
      "throughProperty": "SVGSVGElement",
      "prevProperty": "SVGRenderingIntent"
    },
    {
      "path": "window",
      "propertyName": "SVGPatternElement",
      "throughProperty": "SVGPatternElement",
      "prevProperty": "SVGPathSegMovetoRel"
    },
    {
      "path": "window",
      "propertyName": "SVGNumber",
      "throughProperty": "SVGNumber",
      "prevProperty": "SVGMissingGlyphElement"
    },
    {
      "path": "window",
      "propertyName": "SVGImageElement",
      "throughProperty": "SVGImageElement",
      "prevProperty": "SVGHKernElement"
    },
    {
      "path": "window",
      "propertyName": "SVGGradientElement",
      "throughProperty": "SVGGradientElement",
      "prevProperty": "SVGGlyphRefElement"
    },
    {
      "path": "window",
      "propertyName": "SVGForeignObjectElement",
      "throughProperty": "SVGForeignObjectElement",
      "prevProperty": "SVGFontFaceUriElement"
    },
    {
      "path": "window",
      "propertyName": "SVGDefsElement",
      "throughProperty": "SVGDefsElement",
      "prevProperty": "SVGCursorElement"
    },
    {
      "path": "window",
      "propertyName": "SVGAnimateElement",
      "throughProperty": "SVGAnimateElement",
      "prevProperty": "SVGAnimateColorElement"
    },
    {
      "path": "window",
      "propertyName": "SVGAngle",
      "throughProperty": "SVGAngle",
      "prevProperty": "SVGAltGlyphItemElement"
    },
    {
      "path": "window",
      "propertyName": "PageTransitionEvent",
      "throughProperty": "PageTransitionEvent",
      "prevProperty": "OverflowEvent"
    },
    {
      "path": "window",
      "propertyName": "MediaList",
      "throughProperty": "MediaList",
      "prevProperty": "FontFaceSet"
    },
    {
      "path": "window",
      "propertyName": "MediaError",
      "throughProperty": "MediaError",
      "prevProperty": "MediaController"
    },
    {
      "path": "window",
      "propertyName": "IntersectionObserver",
      "throughProperty": "IntersectionObserver",
      "prevProperty": "WebKitMediaKeyError"
    },
    {
      "path": "window",
      "propertyName": "Headers",
      "throughProperty": "Headers",
      "prevProperty": "FileSystemFileEntry"
    },
    {
      "path": "window",
      "propertyName": "HTMLLIElement",
      "throughProperty": "HTMLLIElement",
      "prevProperty": "HTMLKeygenElement"
    },
    {
      "path": "window",
      "propertyName": "HTMLAreaElement",
      "throughProperty": "HTMLAreaElement",
      "prevProperty": "HTMLAppletElement"
    },
    {
      "path": "window",
      "propertyName": "FontFace",
      "throughProperty": "FontFace",
      "prevProperty": "CSSValueList"
    },
    {
      "path": "window",
      "propertyName": "FileList",
      "throughProperty": "FileList",
      "prevProperty": "FileError"
    },
    {
      "path": "window",
      "propertyName": "Blob",
      "throughProperty": "Blob",
      "prevProperty": "SVGDocument"
    },
    {
      "path": "window",
      "propertyName": "BeforeUnloadEvent",
      "throughProperty": "BeforeUnloadEvent",
      "prevProperty": "BeforeLoadEvent"
    },
    {
      "path": "window",
      "propertyName": "document",
      "throughProperty": "document",
      "prevProperty": null
    },
    {
      "path": "window",
      "propertyName": "ongotpointercapture",
      "throughProperty": "onpointerleave",
      "prevProperty": "onanimationcancel"
    },
    {
      "path": "window",
      "propertyName": "onanimationend",
      "throughProperty": "onanimationstart",
      "prevProperty": "ontransitioncancel"
    },
    {
      "path": "window",
      "propertyName": "setTimeout",
      "throughProperty": "clearInterval",
      "prevProperty": "webkitConvertPointFromNodeToPage"
    },
    {
      "path": "window",
      "propertyName": "crypto",
      "throughProperty": "crypto",
      "prevProperty": "onwebkitmouseforceup"
    },
    {
      "path": "window",
      "propertyName": "MediaSource",
      "throughProperty": "MediaSource",
      "prevProperty": "ScreenLuminance"
    },
    {
      "path": "window",
      "propertyName": "Notification",
      "throughProperty": "Notification",
      "prevProperty": "OverconstrainedErrorEvent"
    },
    {
      "path": "window",
      "propertyName": "speechSynthesis",
      "throughProperty": "openDatabase",
      "prevProperty": "webkitIndexedDB"
    },
    {
      "path": "window",
      "propertyName": "ApplicationCache",
      "throughProperty": "ApplicationCache",
      "prevProperty": "VideoTrackList"
    },
    {
      "path": "window",
      "propertyName": "Cache",
      "throughProperty": "CredentialsContainer",
      "prevProperty": "ApplePaySession"
    },
    {
      "path": "window",
      "propertyName": "PaymentAddress",
      "throughProperty": "PaymentAddress",
      "prevProperty": "MerchantValidationEvent"
    },
    {
      "path": "window",
      "propertyName": "AuthenticatorAssertionResponse",
      "throughProperty": "PublicKeyCredential",
      "prevProperty": "webkitAudioContext"
    },
    {
      "path": "window",
      "propertyName": "Object",
      "throughProperty": "Array",
      "prevProperty": "WeakSet"
    },
    {
      "path": "window",
      "propertyName": "Number",
      "throughProperty": "Number",
      "prevProperty": "Boolean"
    },
    {
      "path": "window",
      "propertyName": "parseInt",
      "throughProperty": "parseInt",
      "prevProperty": "globalThis"
    },
    {
      "path": "window",
      "propertyName": "parseFloat",
      "throughProperty": "parseFloat",
      "prevProperty": "parseInt"
    },
    {
      "path": "window",
      "propertyName": "Infinity",
      "throughProperty": "Infinity",
      "prevProperty": "window"
    },
    {
      "path": "window",
      "propertyName": "NaN",
      "throughProperty": "NaN",
      "prevProperty": "document"
    },
    {
      "path": "window",
      "propertyName": "undefined",
      "throughProperty": "undefined",
      "prevProperty": "Infinity"
    },
    {
      "path": "window",
      "propertyName": "Boolean",
      "throughProperty": "Boolean",
      "prevProperty": "Error"
    },
    {
      "path": "window",
      "propertyName": "RegExp",
      "throughProperty": "RegExp",
      "prevProperty": "Array"
    },
    {
      "path": "window",
      "propertyName": "String",
      "throughProperty": "String",
      "prevProperty": "RegExp"
    },
    {
      "path": "window",
      "propertyName": "Symbol",
      "throughProperty": "Symbol",
      "prevProperty": "Number"
    },
    {
      "path": "window",
      "propertyName": "Promise",
      "throughProperty": "Promise",
      "prevProperty": "Set"
    },
    {
      "path": "window",
      "propertyName": "ArrayBuffer",
      "throughProperty": "ArrayBuffer",
      "prevProperty": "parseFloat"
    },
    {
      "path": "window",
      "propertyName": "EvalError",
      "throughProperty": "URIError",
      "prevProperty": "ArrayBuffer"
    },
    {
      "path": "window",
      "propertyName": "globalThis",
      "throughProperty": "globalThis",
      "prevProperty": "eval"
    },
    {
      "path": "window",
      "propertyName": "JSON",
      "throughProperty": "console",
      "prevProperty": "Reflect"
    },
    {
      "path": "window",
      "propertyName": "Intl",
      "throughProperty": "Intl",
      "prevProperty": "Promise"
    },
    {
      "path": "window",
      "propertyName": "Uint8Array",
      "throughProperty": "Uint8Array",
      "prevProperty": "Int32Array"
    },
    {
      "path": "window",
      "propertyName": "Int8Array",
      "throughProperty": "Int8Array",
      "prevProperty": "console"
    },
    {
      "path": "window",
      "propertyName": "Uint16Array",
      "throughProperty": "Uint16Array",
      "prevProperty": "Uint8ClampedArray"
    },
    {
      "path": "window",
      "propertyName": "Int16Array",
      "throughProperty": "Int16Array",
      "prevProperty": "Int8Array"
    },
    {
      "path": "window",
      "propertyName": "Uint32Array",
      "throughProperty": "Uint32Array",
      "prevProperty": "Uint16Array"
    },
    {
      "path": "window",
      "propertyName": "Int32Array",
      "throughProperty": "Int32Array",
      "prevProperty": "Int16Array"
    },
    {
      "path": "window",
      "propertyName": "Float32Array",
      "throughProperty": "Float64Array",
      "prevProperty": "Uint32Array"
    },
    {
      "path": "window",
      "propertyName": "Uint8ClampedArray",
      "throughProperty": "Uint8ClampedArray",
      "prevProperty": "Uint8Array"
    },
    {
      "path": "window",
      "propertyName": "DataView",
      "throughProperty": "DataView",
      "prevProperty": "Float64Array"
    },
    {
      "path": "window",
      "propertyName": "Map",
      "throughProperty": "Set",
      "prevProperty": "String"
    },
    {
      "path": "window",
      "propertyName": "WeakMap",
      "throughProperty": "WeakSet",
      "prevProperty": "Symbol"
    },
    {
      "path": "window",
      "propertyName": "Proxy",
      "throughProperty": "Reflect",
      "prevProperty": "URIError"
    },
    {
      "path": "window",
      "propertyName": "escape",
      "throughProperty": "unescape",
      "prevProperty": "isFinite"
    },
    {
      "path": "window",
      "propertyName": "decodeURI",
      "throughProperty": "encodeURIComponent",
      "prevProperty": "unescape"
    },
    {
      "path": "window",
      "propertyName": "eval",
      "throughProperty": "eval",
      "prevProperty": "encodeURIComponent"
    },
    {
      "path": "window",
      "propertyName": "isNaN",
      "throughProperty": "isNaN",
      "prevProperty": "btoa"
    },
    {
      "path": "window",
      "propertyName": "isFinite",
      "throughProperty": "isFinite",
      "prevProperty": "isNaN"
    },
    {
      "path": "window",
      "propertyName": "WebSocket",
      "throughProperty": "WebSocket",
      "prevProperty": "PublicKeyCredential"
    },
    {
      "path": "window",
      "propertyName": "WebGLTexture",
      "throughProperty": "WebGLTexture",
      "prevProperty": "WebGLSync"
    },
    {
      "path": "window",
      "propertyName": "WebGLTransformFeedback",
      "throughProperty": "WebGLTransformFeedback",
      "prevProperty": "WebGLTexture"
    },
    {
      "path": "window",
      "propertyName": "WebGLUniformLocation",
      "throughProperty": "WebGLUniformLocation",
      "prevProperty": "WebGLTransformFeedback"
    },
    {
      "path": "window",
      "propertyName": "WebGLShader",
      "throughProperty": "WebGLShader",
      "prevProperty": "WebGLSampler"
    },
    {
      "path": "window",
      "propertyName": "WebGLShaderPrecisionFormat",
      "throughProperty": "WebGLShaderPrecisionFormat",
      "prevProperty": "WebGLShader"
    },
    {
      "path": "window",
      "propertyName": "WebGLSync",
      "throughProperty": "WebGLSync",
      "prevProperty": "WebGLShaderPrecisionFormat"
    },
    {
      "path": "window",
      "propertyName": "WebGLRenderbuffer",
      "throughProperty": "WebGLRenderbuffer",
      "prevProperty": "WebGLQuery"
    },
    {
      "path": "window",
      "propertyName": "WebGLRenderingContext",
      "throughProperty": "WebGLRenderingContext",
      "prevProperty": "WebGLRenderbuffer"
    },
    {
      "path": "window",
      "propertyName": "WebGLSampler",
      "throughProperty": "WebGLSampler",
      "prevProperty": "WebGLRenderingContext"
    },
    {
      "path": "window",
      "propertyName": "WebGLProgram",
      "throughProperty": "WebGLProgram",
      "prevProperty": "WebGLFramebuffer"
    },
    {
      "path": "window",
      "propertyName": "WebGLQuery",
      "throughProperty": "WebGLQuery",
      "prevProperty": "WebGLProgram"
    },
    {
      "path": "window",
      "propertyName": "WebGLContextEvent",
      "throughProperty": "WebGLContextEvent",
      "prevProperty": "WebGLBuffer"
    },
    {
      "path": "window",
      "propertyName": "WebGLFramebuffer",
      "throughProperty": "WebGLFramebuffer",
      "prevProperty": "WebGLContextEvent"
    },
    {
      "path": "window",
      "propertyName": "WebGLActiveInfo",
      "throughProperty": "WebGLActiveInfo",
      "prevProperty": "Path2D"
    },
    {
      "path": "window",
      "propertyName": "WebGLBuffer",
      "throughProperty": "WebGLBuffer",
      "prevProperty": "WebGLActiveInfo"
    },
    {
      "path": "window",
      "propertyName": "WaveShaperNode",
      "throughProperty": "WaveShaperNode",
      "prevProperty": "ScriptProcessorNode"
    },
    {
      "path": "window",
      "propertyName": "TextDecoder",
      "throughProperty": "TextDecoder",
      "prevProperty": "Text"
    },
    {
      "path": "window",
      "propertyName": "TextEncoder",
      "throughProperty": "TextEncoder",
      "prevProperty": "TextDecoder"
    },
    {
      "path": "window",
      "propertyName": "SubtleCrypto",
      "throughProperty": "SubtleCrypto",
      "prevProperty": "CryptoKey"
    },
    {
      "path": "window",
      "propertyName": "Storage",
      "throughProperty": "Storage",
      "prevProperty": "PluginArray"
    },
    {
      "path": "window",
      "propertyName": "StorageEvent",
      "throughProperty": "StorageEvent",
      "prevProperty": "Storage"
    },
    {
      "path": "window",
      "propertyName": "SourceBuffer",
      "throughProperty": "SourceBuffer",
      "prevProperty": "IDBVersionChangeEvent"
    },
    {
      "path": "window",
      "propertyName": "SourceBufferList",
      "throughProperty": "SourceBufferList",
      "prevProperty": "SourceBuffer"
    },
    {
      "path": "window",
      "propertyName": "ScriptProcessorNode",
      "throughProperty": "ScriptProcessorNode",
      "prevProperty": "PeriodicWave"
    },
    {
      "path": "window",
      "propertyName": "RTCRtpTransceiver",
      "throughProperty": "RTCRtpTransceiver",
      "prevProperty": "RTCRtpSender"
    },
    {
      "path": "window",
      "propertyName": "RTCSessionDescription",
      "throughProperty": "RTCSessionDescription",
      "prevProperty": "RTCRtpTransceiver"
    },
    {
      "path": "window",
      "propertyName": "RTCStatsReport",
      "throughProperty": "RTCStatsReport",
      "prevProperty": "RTCSessionDescription"
    },
    {
      "path": "window",
      "propertyName": "RTCTrackEvent",
      "throughProperty": "RTCTrackEvent",
      "prevProperty": "RTCStatsReport"
    },
    {
      "path": "window",
      "propertyName": "RTCRtpReceiver",
      "throughProperty": "RTCRtpReceiver",
      "prevProperty": "RTCPeerConnectionIceEvent"
    },
    {
      "path": "window",
      "propertyName": "RTCRtpSender",
      "throughProperty": "RTCRtpSender",
      "prevProperty": "RTCRtpReceiver"
    },
    {
      "path": "window",
      "propertyName": "RTCPeerConnection",
      "throughProperty": "RTCPeerConnection",
      "prevProperty": "RTCIceTransport"
    },
    {
      "path": "window",
      "propertyName": "RTCPeerConnectionIceEvent",
      "throughProperty": "RTCPeerConnectionIceEvent",
      "prevProperty": "RTCPeerConnection"
    },
    {
      "path": "window",
      "propertyName": "RTCDataChannel",
      "throughProperty": "RTCDataChannel",
      "prevProperty": "RTCCertificate"
    },
    {
      "path": "window",
      "propertyName": "RTCDataChannelEvent",
      "throughProperty": "RTCDataChannelEvent",
      "prevProperty": "RTCDataChannel"
    },
    {
      "path": "window",
      "propertyName": "RTCIceCandidate",
      "throughProperty": "RTCIceCandidate",
      "prevProperty": "RTCDataChannelEvent"
    },
    {
      "path": "window",
      "propertyName": "RTCCertificate",
      "throughProperty": "RTCCertificate",
      "prevProperty": "MediaSource"
    },
    {
      "path": "window",
      "propertyName": "Plugin",
      "throughProperty": "PluginArray",
      "prevProperty": "MimeTypeArray"
    },
    {
      "path": "window",
      "propertyName": "Path2D",
      "throughProperty": "Path2D",
      "prevProperty": "CanvasRenderingContext2D"
    },
    {
      "path": "window",
      "propertyName": "OverconstrainedError",
      "throughProperty": "OverconstrainedError",
      "prevProperty": "MediaStreamTrackEvent"
    },
    {
      "path": "window",
      "propertyName": "OfflineAudioCompletionEvent",
      "throughProperty": "OfflineAudioCompletionEvent",
      "prevProperty": "MediaStreamAudioSourceNode"
    },
    {
      "path": "window",
      "propertyName": "MediaStreamTrack",
      "throughProperty": "MediaStreamTrack",
      "prevProperty": "MediaStream"
    },
    {
      "path": "window",
      "propertyName": "MediaStreamTrackEvent",
      "throughProperty": "MediaStreamTrackEvent",
      "prevProperty": "MediaStreamTrack"
    },
    {
      "path": "window",
      "propertyName": "MediaStream",
      "throughProperty": "MediaStream",
      "prevProperty": "MediaDevices"
    },
    {
      "path": "window",
      "propertyName": "MediaStreamAudioDestinationNode",
      "throughProperty": "MediaStreamAudioDestinationNode",
      "prevProperty": "MediaElementAudioSourceNode"
    },
    {
      "path": "window",
      "propertyName": "MediaStreamAudioSourceNode",
      "throughProperty": "MediaStreamAudioSourceNode",
      "prevProperty": "MediaStreamAudioDestinationNode"
    },
    {
      "path": "window",
      "propertyName": "MediaEncryptedEvent",
      "throughProperty": "MediaEncryptedEvent",
      "prevProperty": "HTMLSlotElement"
    },
    {
      "path": "window",
      "propertyName": "MediaElementAudioSourceNode",
      "throughProperty": "MediaElementAudioSourceNode",
      "prevProperty": "GainNode"
    },
    {
      "path": "window",
      "propertyName": "Gamepad",
      "throughProperty": "GamepadButton",
      "prevProperty": "Response"
    },
    {
      "path": "window",
      "propertyName": "GamepadEvent",
      "throughProperty": "GamepadEvent",
      "prevProperty": "GamepadButton"
    },
    {
      "path": "window",
      "propertyName": "MediaCapabilities",
      "throughProperty": "MediaCapabilities",
      "prevProperty": "GamepadEvent"
    },
    {
      "path": "window",
      "propertyName": "IDBRequest",
      "throughProperty": "IDBRequest",
      "prevProperty": "IDBOpenDBRequest"
    },
    {
      "path": "window",
      "propertyName": "IDBTransaction",
      "throughProperty": "IDBTransaction",
      "prevProperty": "IDBRequest"
    },
    {
      "path": "window",
      "propertyName": "IDBVersionChangeEvent",
      "throughProperty": "IDBVersionChangeEvent",
      "prevProperty": "IDBTransaction"
    },
    {
      "path": "window",
      "propertyName": "IDBKeyRange",
      "throughProperty": "IDBKeyRange",
      "prevProperty": "IDBIndex"
    },
    {
      "path": "window",
      "propertyName": "IDBObjectStore",
      "throughProperty": "IDBObjectStore",
      "prevProperty": "IDBKeyRange"
    },
    {
      "path": "window",
      "propertyName": "IDBOpenDBRequest",
      "throughProperty": "IDBOpenDBRequest",
      "prevProperty": "IDBObjectStore"
    },
    {
      "path": "window",
      "propertyName": "IDBDatabase",
      "throughProperty": "IDBDatabase",
      "prevProperty": "IDBCursorWithValue"
    },
    {
      "path": "window",
      "propertyName": "IDBFactory",
      "throughProperty": "IDBFactory",
      "prevProperty": "IDBDatabase"
    },
    {
      "path": "window",
      "propertyName": "IDBIndex",
      "throughProperty": "IDBIndex",
      "prevProperty": "IDBFactory"
    },
    {
      "path": "window",
      "propertyName": "IDBCursorWithValue",
      "throughProperty": "IDBCursorWithValue",
      "prevProperty": "IDBCursor"
    },
    {
      "path": "window",
      "propertyName": "GainNode",
      "throughProperty": "GainNode",
      "prevProperty": "DynamicsCompressorNode"
    },
    {
      "path": "window",
      "propertyName": "EventSource",
      "throughProperty": "EventSource",
      "prevProperty": "Window"
    },
    {
      "path": "window",
      "propertyName": "DelayNode",
      "throughProperty": "DelayNode",
      "prevProperty": "ConvolverNode"
    },
    {
      "path": "window",
      "propertyName": "DynamicsCompressorNode",
      "throughProperty": "DynamicsCompressorNode",
      "prevProperty": "DelayNode"
    },
    {
      "path": "window",
      "propertyName": "Crypto",
      "throughProperty": "Crypto",
      "prevProperty": "BarProp"
    },
    {
      "path": "window",
      "propertyName": "ChannelSplitterNode",
      "throughProperty": "ChannelSplitterNode",
      "prevProperty": "ChannelMergerNode"
    },
    {
      "path": "window",
      "propertyName": "ConvolverNode",
      "throughProperty": "ConvolverNode",
      "prevProperty": "ChannelSplitterNode"
    },
    {
      "path": "window",
      "propertyName": "AudioProcessingEvent",
      "throughProperty": "AudioProcessingEvent",
      "prevProperty": "AudioParam"
    },
    {
      "path": "window",
      "propertyName": "BiquadFilterNode",
      "throughProperty": "BiquadFilterNode",
      "prevProperty": "AudioProcessingEvent"
    },
    {
      "path": "window",
      "propertyName": "ChannelMergerNode",
      "throughProperty": "ChannelMergerNode",
      "prevProperty": "BiquadFilterNode"
    },
    {
      "path": "window",
      "propertyName": "CanvasGradient",
      "throughProperty": "CanvasGradient",
      "prevProperty": "ValidityState"
    },
    {
      "path": "window",
      "propertyName": "CanvasPattern",
      "throughProperty": "CanvasPattern",
      "prevProperty": "CanvasGradient"
    },
    {
      "path": "window",
      "propertyName": "CanvasRenderingContext2D",
      "throughProperty": "CanvasRenderingContext2D",
      "prevProperty": "CanvasPattern"
    },
    {
      "path": "window",
      "propertyName": "CanvasCaptureMediaStreamTrack",
      "throughProperty": "CanvasCaptureMediaStreamTrack",
      "prevProperty": "SourceBufferList"
    },
    {
      "path": "window",
      "propertyName": "AudioNode",
      "throughProperty": "AudioNode",
      "prevProperty": "AudioListener"
    },
    {
      "path": "window",
      "propertyName": "AudioParam",
      "throughProperty": "AudioParam",
      "prevProperty": "AudioNode"
    },
    {
      "path": "window",
      "propertyName": "AudioBufferSourceNode",
      "throughProperty": "AudioBufferSourceNode",
      "prevProperty": "AudioBuffer"
    },
    {
      "path": "window",
      "propertyName": "AudioDestinationNode",
      "throughProperty": "AudioDestinationNode",
      "prevProperty": "AudioBufferSourceNode"
    },
    {
      "path": "window",
      "propertyName": "AudioListener",
      "throughProperty": "AudioListener",
      "prevProperty": "AudioDestinationNode"
    },
    {
      "path": "window",
      "propertyName": "AnalyserNode",
      "throughProperty": "AnalyserNode",
      "prevProperty": "ReadableStream"
    },
    {
      "path": "window",
      "propertyName": "AudioBuffer",
      "throughProperty": "AudioBuffer",
      "prevProperty": "AnalyserNode"
    },
    {
      "path": "window",
      "propertyName": "XPathEvaluator",
      "throughProperty": "XPathEvaluator",
      "prevProperty": "XMLSerializer"
    },
    {
      "path": "window",
      "propertyName": "XPathExpression",
      "throughProperty": "XPathExpression",
      "prevProperty": "XPathEvaluator"
    },
    {
      "path": "window",
      "propertyName": "XPathResult",
      "throughProperty": "XPathResult",
      "prevProperty": "XPathExpression"
    },
    {
      "path": "window",
      "propertyName": "XMLSerializer",
      "throughProperty": "XMLSerializer",
      "prevProperty": "XMLHttpRequestUpload"
    },
    {
      "path": "window",
      "propertyName": "XMLHttpRequest",
      "throughProperty": "XMLHttpRequest",
      "prevProperty": "DOMParser"
    },
    {
      "path": "window",
      "propertyName": "XMLHttpRequestEventTarget",
      "throughProperty": "XMLHttpRequestEventTarget",
      "prevProperty": "XMLHttpRequest"
    },
    {
      "path": "window",
      "propertyName": "XMLDocument",
      "throughProperty": "XMLDocument",
      "prevProperty": "WheelEvent"
    },
    {
      "path": "window",
      "propertyName": "Window",
      "throughProperty": "Window",
      "prevProperty": "Selection"
    },
    {
      "path": "window",
      "propertyName": "VisualViewport",
      "throughProperty": "VisualViewport",
      "prevProperty": "PerformanceResourceTiming"
    },
    {
      "path": "window",
      "propertyName": "URLSearchParams",
      "throughProperty": "URLSearchParams",
      "prevProperty": "TimeRanges"
    },
    {
      "path": "window",
      "propertyName": "ValidityState",
      "throughProperty": "ValidityState",
      "prevProperty": "URLSearchParams"
    },
    {
      "path": "window",
      "propertyName": "VTTCue",
      "throughProperty": "VTTCue",
      "prevProperty": "TrackEvent"
    },
    {
      "path": "window",
      "propertyName": "URL",
      "throughProperty": "URL",
      "prevProperty": "DOMTokenList"
    },
    {
      "path": "window",
      "propertyName": "TransitionEvent",
      "throughProperty": "TransitionEvent",
      "prevProperty": "TextEvent"
    },
    {
      "path": "window",
      "propertyName": "TreeWalker",
      "throughProperty": "TreeWalker",
      "prevProperty": "TransitionEvent"
    },
    {
      "path": "window",
      "propertyName": "UIEvent",
      "throughProperty": "UIEvent",
      "prevProperty": "TreeWalker"
    },
    {
      "path": "window",
      "propertyName": "TextTrackList",
      "throughProperty": "TextTrackList",
      "prevProperty": "TextTrackCueList"
    },
    {
      "path": "window",
      "propertyName": "TrackEvent",
      "throughProperty": "TrackEvent",
      "prevProperty": "TextTrackList"
    },
    {
      "path": "window",
      "propertyName": "TimeRanges",
      "throughProperty": "TimeRanges",
      "prevProperty": "TextMetrics"
    },
    {
      "path": "window",
      "propertyName": "TextTrackCue",
      "throughProperty": "TextTrackCue",
      "prevProperty": "TextTrack"
    },
    {
      "path": "window",
      "propertyName": "TextTrackCueList",
      "throughProperty": "TextTrackCueList",
      "prevProperty": "TextTrackCue"
    },
    {
      "path": "window",
      "propertyName": "TextMetrics",
      "throughProperty": "TextMetrics",
      "prevProperty": "RadioNodeList"
    },
    {
      "path": "window",
      "propertyName": "TextEvent",
      "throughProperty": "TextEvent",
      "prevProperty": "TextEncoder"
    },
    {
      "path": "window",
      "propertyName": "Text",
      "throughProperty": "Text",
      "prevProperty": "SecurityPolicyViolationEvent"
    },
    {
      "path": "window",
      "propertyName": "StyleSheet",
      "throughProperty": "StyleSheet",
      "prevProperty": "MediaList"
    },
    {
      "path": "window",
      "propertyName": "StyleSheetList",
      "throughProperty": "StyleSheetList",
      "prevProperty": "StyleSheet"
    },
    {
      "path": "window",
      "propertyName": "ShadowRoot",
      "throughProperty": "ShadowRoot",
      "prevProperty": "PointerEvent"
    },
    {
      "path": "window",
      "propertyName": "StaticRange",
      "throughProperty": "StaticRange",
      "prevProperty": "ShadowRoot"
    },
    {
      "path": "window",
      "propertyName": "Selection",
      "throughProperty": "Selection",
      "prevProperty": "Crypto"
    },
    {
      "path": "window",
      "propertyName": "SecurityPolicyViolationEvent",
      "throughProperty": "SecurityPolicyViolationEvent",
      "prevProperty": "Range"
    },
    {
      "path": "window",
      "propertyName": "Screen",
      "throughProperty": "Screen",
      "prevProperty": "PerformanceTiming"
    },
    {
      "path": "window",
      "propertyName": "SVGUnitTypes",
      "throughProperty": "SVGUnitTypes",
      "prevProperty": "SVGTransformList"
    },
    {
      "path": "window",
      "propertyName": "SVGUseElement",
      "throughProperty": "SVGUseElement",
      "prevProperty": "SVGUnitTypes"
    },
    {
      "path": "window",
      "propertyName": "SVGTitleElement",
      "throughProperty": "SVGTitleElement",
      "prevProperty": "SVGTextPositioningElement"
    },
    {
      "path": "window",
      "propertyName": "SVGTransform",
      "throughProperty": "SVGTransform",
      "prevProperty": "SVGTitleElement"
    },
    {
      "path": "window",
      "propertyName": "SVGTransformList",
      "throughProperty": "SVGTransformList",
      "prevProperty": "SVGTransform"
    },
    {
      "path": "window",
      "propertyName": "SVGTextContentElement",
      "throughProperty": "SVGTextContentElement",
      "prevProperty": "SVGTSpanElement"
    },
    {
      "path": "window",
      "propertyName": "SVGTextElement",
      "throughProperty": "SVGTextElement",
      "prevProperty": "SVGTextContentElement"
    },
    {
      "path": "window",
      "propertyName": "SVGTextPathElement",
      "throughProperty": "SVGTextPathElement",
      "prevProperty": "SVGTextElement"
    },
    {
      "path": "window",
      "propertyName": "SVGTextPositioningElement",
      "throughProperty": "SVGTextPositioningElement",
      "prevProperty": "SVGTextPathElement"
    },
    {
      "path": "window",
      "propertyName": "SVGStyleElement",
      "throughProperty": "SVGStyleElement",
      "prevProperty": "SVGStringList"
    },
    {
      "path": "window",
      "propertyName": "SVGSwitchElement",
      "throughProperty": "SVGSwitchElement",
      "prevProperty": "SVGStyleElement"
    },
    {
      "path": "window",
      "propertyName": "SVGSymbolElement",
      "throughProperty": "SVGSymbolElement",
      "prevProperty": "SVGSwitchElement"
    },
    {
      "path": "window",
      "propertyName": "SVGSetElement",
      "throughProperty": "SVGSetElement",
      "prevProperty": "SVGScriptElement"
    },
    {
      "path": "window",
      "propertyName": "SVGStopElement",
      "throughProperty": "SVGStopElement",
      "prevProperty": "SVGSetElement"
    },
    {
      "path": "window",
      "propertyName": "SVGStringList",
      "throughProperty": "SVGStringList",
      "prevProperty": "SVGStopElement"
    },
    {
      "path": "window",
      "propertyName": "SVGScriptElement",
      "throughProperty": "SVGScriptElement",
      "prevProperty": "SVGSVGElement"
    },
    {
      "path": "window",
      "propertyName": "SVGRect",
      "throughProperty": "SVGRect",
      "prevProperty": "SVGRadialGradientElement"
    },
    {
      "path": "window",
      "propertyName": "SVGRectElement",
      "throughProperty": "SVGRectElement",
      "prevProperty": "SVGRect"
    },
    {
      "path": "window",
      "propertyName": "SVGPreserveAspectRatio",
      "throughProperty": "SVGPreserveAspectRatio",
      "prevProperty": "SVGPolylineElement"
    },
    {
      "path": "window",
      "propertyName": "SVGRadialGradientElement",
      "throughProperty": "SVGRadialGradientElement",
      "prevProperty": "SVGPreserveAspectRatio"
    },
    {
      "path": "window",
      "propertyName": "SVGPolygonElement",
      "throughProperty": "SVGPolygonElement",
      "prevProperty": "SVGPointList"
    },
    {
      "path": "window",
      "propertyName": "SVGPolylineElement",
      "throughProperty": "SVGPolylineElement",
      "prevProperty": "SVGPolygonElement"
    },
    {
      "path": "window",
      "propertyName": "SVGPoint",
      "throughProperty": "SVGPoint",
      "prevProperty": "SVGPatternElement"
    },
    {
      "path": "window",
      "propertyName": "SVGPointList",
      "throughProperty": "SVGPointList",
      "prevProperty": "SVGPoint"
    },
    {
      "path": "window",
      "propertyName": "SVGNumberList",
      "throughProperty": "SVGNumberList",
      "prevProperty": "SVGNumber"
    },
    {
      "path": "window",
      "propertyName": "SVGPathElement",
      "throughProperty": "SVGPathElement",
      "prevProperty": "SVGNumberList"
    },
    {
      "path": "window",
      "propertyName": "SVGMaskElement",
      "throughProperty": "SVGMaskElement",
      "prevProperty": "SVGMarkerElement"
    },
    {
      "path": "window",
      "propertyName": "SVGMatrix",
      "throughProperty": "SVGMatrix",
      "prevProperty": "SVGMaskElement"
    },
    {
      "path": "window",
      "propertyName": "SVGMetadataElement",
      "throughProperty": "SVGMetadataElement",
      "prevProperty": "SVGMatrix"
    },
    {
      "path": "window",
      "propertyName": "SVGLinearGradientElement",
      "throughProperty": "SVGLinearGradientElement",
      "prevProperty": "SVGLineElement"
    },
    {
      "path": "window",
      "propertyName": "SVGMPathElement",
      "throughProperty": "SVGMPathElement",
      "prevProperty": "SVGLinearGradientElement"
    },
    {
      "path": "window",
      "propertyName": "SVGMarkerElement",
      "throughProperty": "SVGMarkerElement",
      "prevProperty": "SVGMPathElement"
    },
    {
      "path": "window",
      "propertyName": "SVGLength",
      "throughProperty": "SVGLength",
      "prevProperty": "SVGImageElement"
    },
    {
      "path": "window",
      "propertyName": "SVGLengthList",
      "throughProperty": "SVGLengthList",
      "prevProperty": "SVGLength"
    },
    {
      "path": "window",
      "propertyName": "SVGLineElement",
      "throughProperty": "SVGLineElement",
      "prevProperty": "SVGLengthList"
    },
    {
      "path": "window",
      "propertyName": "SVGGraphicsElement",
      "throughProperty": "SVGGraphicsElement",
      "prevProperty": "SVGGradientElement"
    },
    {
      "path": "window",
      "propertyName": "SVGGElement",
      "throughProperty": "SVGGElement",
      "prevProperty": "SVGForeignObjectElement"
    },
    {
      "path": "window",
      "propertyName": "SVGGeometryElement",
      "throughProperty": "SVGGeometryElement",
      "prevProperty": "SVGGElement"
    },
    {
      "path": "window",
      "propertyName": "SVGFETurbulenceElement",
      "throughProperty": "SVGFETurbulenceElement",
      "prevProperty": "SVGFETileElement"
    },
    {
      "path": "window",
      "propertyName": "SVGFilterElement",
      "throughProperty": "SVGFilterElement",
      "prevProperty": "SVGFETurbulenceElement"
    },
    {
      "path": "window",
      "propertyName": "SVGFESpotLightElement",
      "throughProperty": "SVGFESpotLightElement",
      "prevProperty": "SVGFESpecularLightingElement"
    },
    {
      "path": "window",
      "propertyName": "SVGFETileElement",
      "throughProperty": "SVGFETileElement",
      "prevProperty": "SVGFESpotLightElement"
    },
    {
      "path": "window",
      "propertyName": "SVGDescElement",
      "throughProperty": "SVGDescElement",
      "prevProperty": "SVGDefsElement"
    },
    {
      "path": "window",
      "propertyName": "SVGElement",
      "throughProperty": "SVGElement",
      "prevProperty": "SVGDescElement"
    },
    {
      "path": "window",
      "propertyName": "SVGEllipseElement",
      "throughProperty": "SVGEllipseElement",
      "prevProperty": "SVGElement"
    },
    {
      "path": "window",
      "propertyName": "SVGFEBlendElement",
      "throughProperty": "SVGFEBlendElement",
      "prevProperty": "SVGEllipseElement"
    },
    {
      "path": "window",
      "propertyName": "SVGFEColorMatrixElement",
      "throughProperty": "SVGFEColorMatrixElement",
      "prevProperty": "SVGFEBlendElement"
    },
    {
      "path": "window",
      "propertyName": "SVGFEComponentTransferElement",
      "throughProperty": "SVGFEComponentTransferElement",
      "prevProperty": "SVGFEColorMatrixElement"
    },
    {
      "path": "window",
      "propertyName": "SVGFECompositeElement",
      "throughProperty": "SVGFECompositeElement",
      "prevProperty": "SVGFEComponentTransferElement"
    },
    {
      "path": "window",
      "propertyName": "SVGFEConvolveMatrixElement",
      "throughProperty": "SVGFEConvolveMatrixElement",
      "prevProperty": "SVGFECompositeElement"
    },
    {
      "path": "window",
      "propertyName": "SVGFEDiffuseLightingElement",
      "throughProperty": "SVGFEDiffuseLightingElement",
      "prevProperty": "SVGFEConvolveMatrixElement"
    },
    {
      "path": "window",
      "propertyName": "SVGFEDisplacementMapElement",
      "throughProperty": "SVGFEDisplacementMapElement",
      "prevProperty": "SVGFEDiffuseLightingElement"
    },
    {
      "path": "window",
      "propertyName": "SVGFEDistantLightElement",
      "throughProperty": "SVGFEDistantLightElement",
      "prevProperty": "SVGFEDisplacementMapElement"
    },
    {
      "path": "window",
      "propertyName": "SVGFEDropShadowElement",
      "throughProperty": "SVGFEDropShadowElement",
      "prevProperty": "SVGFEDistantLightElement"
    },
    {
      "path": "window",
      "propertyName": "SVGFEFloodElement",
      "throughProperty": "SVGFEFloodElement",
      "prevProperty": "SVGFEDropShadowElement"
    },
    {
      "path": "window",
      "propertyName": "SVGFEFuncAElement",
      "throughProperty": "SVGFEFuncAElement",
      "prevProperty": "SVGFEFloodElement"
    },
    {
      "path": "window",
      "propertyName": "SVGFEFuncBElement",
      "throughProperty": "SVGFEFuncBElement",
      "prevProperty": "SVGFEFuncAElement"
    },
    {
      "path": "window",
      "propertyName": "SVGFEFuncGElement",
      "throughProperty": "SVGFEFuncGElement",
      "prevProperty": "SVGFEFuncBElement"
    },
    {
      "path": "window",
      "propertyName": "SVGFEFuncRElement",
      "throughProperty": "SVGFEFuncRElement",
      "prevProperty": "SVGFEFuncGElement"
    },
    {
      "path": "window",
      "propertyName": "SVGFEGaussianBlurElement",
      "throughProperty": "SVGFEGaussianBlurElement",
      "prevProperty": "SVGFEFuncRElement"
    },
    {
      "path": "window",
      "propertyName": "SVGFEImageElement",
      "throughProperty": "SVGFEImageElement",
      "prevProperty": "SVGFEGaussianBlurElement"
    },
    {
      "path": "window",
      "propertyName": "SVGFEMergeElement",
      "throughProperty": "SVGFEMergeElement",
      "prevProperty": "SVGFEImageElement"
    },
    {
      "path": "window",
      "propertyName": "SVGFEMergeNodeElement",
      "throughProperty": "SVGFEMergeNodeElement",
      "prevProperty": "SVGFEMergeElement"
    },
    {
      "path": "window",
      "propertyName": "SVGFEMorphologyElement",
      "throughProperty": "SVGFEMorphologyElement",
      "prevProperty": "SVGFEMergeNodeElement"
    },
    {
      "path": "window",
      "propertyName": "SVGFEOffsetElement",
      "throughProperty": "SVGFEOffsetElement",
      "prevProperty": "SVGFEMorphologyElement"
    },
    {
      "path": "window",
      "propertyName": "SVGFEPointLightElement",
      "throughProperty": "SVGFEPointLightElement",
      "prevProperty": "SVGFEOffsetElement"
    },
    {
      "path": "window",
      "propertyName": "SVGFESpecularLightingElement",
      "throughProperty": "SVGFESpecularLightingElement",
      "prevProperty": "SVGFEPointLightElement"
    },
    {
      "path": "window",
      "propertyName": "SVGClipPathElement",
      "throughProperty": "SVGClipPathElement",
      "prevProperty": "SVGCircleElement"
    },
    {
      "path": "window",
      "propertyName": "SVGComponentTransferFunctionElement",
      "throughProperty": "SVGComponentTransferFunctionElement",
      "prevProperty": "SVGClipPathElement"
    },
    {
      "path": "window",
      "propertyName": "SVGAnimationElement",
      "throughProperty": "SVGAnimationElement",
      "prevProperty": "SVGAnimatedTransformList"
    },
    {
      "path": "window",
      "propertyName": "SVGCircleElement",
      "throughProperty": "SVGCircleElement",
      "prevProperty": "SVGAnimationElement"
    },
    {
      "path": "window",
      "propertyName": "SVGAnimatedRect",
      "throughProperty": "SVGAnimatedRect",
      "prevProperty": "SVGAnimatedPreserveAspectRatio"
    },
    {
      "path": "window",
      "propertyName": "SVGAnimatedString",
      "throughProperty": "SVGAnimatedString",
      "prevProperty": "SVGAnimatedRect"
    },
    {
      "path": "window",
      "propertyName": "SVGAnimatedTransformList",
      "throughProperty": "SVGAnimatedTransformList",
      "prevProperty": "SVGAnimatedString"
    },
    {
      "path": "window",
      "propertyName": "SVGAnimatedNumber",
      "throughProperty": "SVGAnimatedNumber",
      "prevProperty": "SVGAnimatedLengthList"
    },
    {
      "path": "window",
      "propertyName": "SVGAnimatedNumberList",
      "throughProperty": "SVGAnimatedNumberList",
      "prevProperty": "SVGAnimatedNumber"
    },
    {
      "path": "window",
      "propertyName": "SVGAnimatedPreserveAspectRatio",
      "throughProperty": "SVGAnimatedPreserveAspectRatio",
      "prevProperty": "SVGAnimatedNumberList"
    },
    {
      "path": "window",
      "propertyName": "SVGAnimatedInteger",
      "throughProperty": "SVGAnimatedInteger",
      "prevProperty": "SVGAnimatedEnumeration"
    },
    {
      "path": "window",
      "propertyName": "SVGAnimatedLength",
      "throughProperty": "SVGAnimatedLength",
      "prevProperty": "SVGAnimatedInteger"
    },
    {
      "path": "window",
      "propertyName": "SVGAnimatedLengthList",
      "throughProperty": "SVGAnimatedLengthList",
      "prevProperty": "SVGAnimatedLength"
    },
    {
      "path": "window",
      "propertyName": "SVGAnimatedAngle",
      "throughProperty": "SVGAnimatedAngle",
      "prevProperty": "SVGAnimateTransformElement"
    },
    {
      "path": "window",
      "propertyName": "SVGAnimatedBoolean",
      "throughProperty": "SVGAnimatedBoolean",
      "prevProperty": "SVGAnimatedAngle"
    },
    {
      "path": "window",
      "propertyName": "SVGAnimatedEnumeration",
      "throughProperty": "SVGAnimatedEnumeration",
      "prevProperty": "SVGAnimatedBoolean"
    },
    {
      "path": "window",
      "propertyName": "SVGAnimateMotionElement",
      "throughProperty": "SVGAnimateMotionElement",
      "prevProperty": "SVGAnimateElement"
    },
    {
      "path": "window",
      "propertyName": "SVGAnimateTransformElement",
      "throughProperty": "SVGAnimateTransformElement",
      "prevProperty": "SVGAnimateMotionElement"
    },
    {
      "path": "window",
      "propertyName": "SVGAElement",
      "throughProperty": "SVGAElement",
      "prevProperty": "StorageEvent"
    },
    {
      "path": "window",
      "propertyName": "Request",
      "throughProperty": "Request",
      "prevProperty": "Headers"
    },
    {
      "path": "window",
      "propertyName": "Response",
      "throughProperty": "Response",
      "prevProperty": "Request"
    },
    {
      "path": "window",
      "propertyName": "ReadableStream",
      "throughProperty": "ReadableStream",
      "prevProperty": "CountQueuingStrategy"
    },
    {
      "path": "window",
      "propertyName": "Range",
      "throughProperty": "Range",
      "prevProperty": "PromiseRejectionEvent"
    },
    {
      "path": "window",
      "propertyName": "RadioNodeList",
      "throughProperty": "RadioNodeList",
      "prevProperty": "MediaError"
    },
    {
      "path": "window",
      "propertyName": "PopStateEvent",
      "throughProperty": "PopStateEvent",
      "prevProperty": "PageTransitionEvent"
    },
    {
      "path": "window",
      "propertyName": "ProcessingInstruction",
      "throughProperty": "ProcessingInstruction",
      "prevProperty": "PopStateEvent"
    },
    {
      "path": "window",
      "propertyName": "ProgressEvent",
      "throughProperty": "ProgressEvent",
      "prevProperty": "ProcessingInstruction"
    },
    {
      "path": "window",
      "propertyName": "PromiseRejectionEvent",
      "throughProperty": "PromiseRejectionEvent",
      "prevProperty": "ProgressEvent"
    },
    {
      "path": "window",
      "propertyName": "PointerEvent",
      "throughProperty": "PointerEvent",
      "prevProperty": "InputEvent"
    },
    {
      "path": "window",
      "propertyName": "PerformanceTiming",
      "throughProperty": "PerformanceTiming",
      "prevProperty": "PerformanceNavigation"
    },
    {
      "path": "window",
      "propertyName": "PerformanceObserver",
      "throughProperty": "PerformanceObserver",
      "prevProperty": "PerformanceMeasure"
    },
    {
      "path": "window",
      "propertyName": "PerformanceObserverEntryList",
      "throughProperty": "PerformanceObserverEntryList",
      "prevProperty": "PerformanceObserver"
    },
    {
      "path": "window",
      "propertyName": "PerformanceResourceTiming",
      "throughProperty": "PerformanceResourceTiming",
      "prevProperty": "PerformanceObserverEntryList"
    },
    {
      "path": "window",
      "propertyName": "PerformanceNavigation",
      "throughProperty": "PerformanceNavigation",
      "prevProperty": "Performance"
    },
    {
      "path": "window",
      "propertyName": "PerformanceMark",
      "throughProperty": "PerformanceMark",
      "prevProperty": "PerformanceEntry"
    },
    {
      "path": "window",
      "propertyName": "PerformanceMeasure",
      "throughProperty": "PerformanceMeasure",
      "prevProperty": "PerformanceMark"
    },
    {
      "path": "window",
      "propertyName": "PerformanceEntry",
      "throughProperty": "PerformanceEntry",
      "prevProperty": "IntersectionObserverEntry"
    },
    {
      "path": "window",
      "propertyName": "Navigator",
      "throughProperty": "Navigator",
      "prevProperty": "Location"
    },
    {
      "path": "window",
      "propertyName": "Performance",
      "throughProperty": "Performance",
      "prevProperty": "Navigator"
    },
    {
      "path": "window",
      "propertyName": "NodeFilter",
      "throughProperty": "NodeFilter",
      "prevProperty": "Node"
    },
    {
      "path": "window",
      "propertyName": "NodeIterator",
      "throughProperty": "NodeIterator",
      "prevProperty": "NodeFilter"
    },
    {
      "path": "window",
      "propertyName": "NodeList",
      "throughProperty": "NodeList",
      "prevProperty": "NodeIterator"
    },
    {
      "path": "window",
      "propertyName": "MutationRecord",
      "throughProperty": "MutationRecord",
      "prevProperty": "WebKitMutationObserver"
    },
    {
      "path": "window",
      "propertyName": "NamedNodeMap",
      "throughProperty": "NamedNodeMap",
      "prevProperty": "MutationRecord"
    },
    {
      "path": "window",
      "propertyName": "Node",
      "throughProperty": "Node",
      "prevProperty": "NamedNodeMap"
    },
    {
      "path": "window",
      "propertyName": "MutationEvent",
      "throughProperty": "MutationEvent",
      "prevProperty": "MouseEvent"
    },
    {
      "path": "window",
      "propertyName": "MutationObserver",
      "throughProperty": "MutationObserver",
      "prevProperty": "MutationEvent"
    },
    {
      "path": "window",
      "propertyName": "MessagePort",
      "throughProperty": "MessagePort",
      "prevProperty": "MessageEvent"
    },
    {
      "path": "window",
      "propertyName": "MouseEvent",
      "throughProperty": "MouseEvent",
      "prevProperty": "MessagePort"
    },
    {
      "path": "window",
      "propertyName": "MessageChannel",
      "throughProperty": "MessageChannel",
      "prevProperty": "KeyboardEvent"
    },
    {
      "path": "window",
      "propertyName": "MessageEvent",
      "throughProperty": "MessageEvent",
      "prevProperty": "MessageChannel"
    },
    {
      "path": "window",
      "propertyName": "Location",
      "throughProperty": "Location",
      "prevProperty": "History"
    },
    {
      "path": "window",
      "propertyName": "KeyboardEvent",
      "throughProperty": "KeyboardEvent",
      "prevProperty": "HashChangeEvent"
    },
    {
      "path": "window",
      "propertyName": "IntersectionObserverEntry",
      "throughProperty": "IntersectionObserverEntry",
      "prevProperty": "IntersectionObserver"
    },
    {
      "path": "window",
      "propertyName": "InputEvent",
      "throughProperty": "InputEvent",
      "prevProperty": "DataTransferItemList"
    },
    {
      "path": "window",
      "propertyName": "ImageData",
      "throughProperty": "ImageData",
      "prevProperty": "HTMLVideoElement"
    },
    {
      "path": "window",
      "propertyName": "History",
      "throughProperty": "History",
      "prevProperty": "EventSource"
    },
    {
      "path": "window",
      "propertyName": "HashChangeEvent",
      "throughProperty": "HashChangeEvent",
      "prevProperty": "FocusEvent"
    },
    {
      "path": "window",
      "propertyName": "HTMLUListElement",
      "throughProperty": "HTMLUListElement",
      "prevProperty": "HTMLTrackElement"
    },
    {
      "path": "window",
      "propertyName": "HTMLUnknownElement",
      "throughProperty": "HTMLUnknownElement",
      "prevProperty": "HTMLUListElement"
    },
    {
      "path": "window",
      "propertyName": "HTMLVideoElement",
      "throughProperty": "HTMLVideoElement",
      "prevProperty": "HTMLUnknownElement"
    },
    {
      "path": "window",
      "propertyName": "HTMLTimeElement",
      "throughProperty": "HTMLTimeElement",
      "prevProperty": "HTMLTextAreaElement"
    },
    {
      "path": "window",
      "propertyName": "HTMLTitleElement",
      "throughProperty": "HTMLTitleElement",
      "prevProperty": "HTMLTimeElement"
    },
    {
      "path": "window",
      "propertyName": "HTMLTrackElement",
      "throughProperty": "HTMLTrackElement",
      "prevProperty": "HTMLTitleElement"
    },
    {
      "path": "window",
      "propertyName": "HTMLTemplateElement",
      "throughProperty": "HTMLTemplateElement",
      "prevProperty": "HTMLTableSectionElement"
    },
    {
      "path": "window",
      "propertyName": "HTMLTextAreaElement",
      "throughProperty": "HTMLTextAreaElement",
      "prevProperty": "HTMLTemplateElement"
    },
    {
      "path": "window",
      "propertyName": "HTMLTableRowElement",
      "throughProperty": "HTMLTableRowElement",
      "prevProperty": "HTMLTableElement"
    },
    {
      "path": "window",
      "propertyName": "HTMLTableSectionElement",
      "throughProperty": "HTMLTableSectionElement",
      "prevProperty": "HTMLTableRowElement"
    },
    {
      "path": "window",
      "propertyName": "HTMLTableColElement",
      "throughProperty": "HTMLTableColElement",
      "prevProperty": "HTMLTableCellElement"
    },
    {
      "path": "window",
      "propertyName": "HTMLTableElement",
      "throughProperty": "HTMLTableElement",
      "prevProperty": "HTMLTableColElement"
    },
    {
      "path": "window",
      "propertyName": "HTMLTableCellElement",
      "throughProperty": "HTMLTableCellElement",
      "prevProperty": "HTMLTableCaptionElement"
    },
    {
      "path": "window",
      "propertyName": "HTMLSourceElement",
      "throughProperty": "HTMLSourceElement",
      "prevProperty": "HTMLSelectElement"
    },
    {
      "path": "window",
      "propertyName": "HTMLSpanElement",
      "throughProperty": "HTMLSpanElement",
      "prevProperty": "HTMLSourceElement"
    },
    {
      "path": "window",
      "propertyName": "HTMLStyleElement",
      "throughProperty": "HTMLStyleElement",
      "prevProperty": "HTMLSpanElement"
    },
    {
      "path": "window",
      "propertyName": "HTMLTableCaptionElement",
      "throughProperty": "HTMLTableCaptionElement",
      "prevProperty": "HTMLStyleElement"
    },
    {
      "path": "window",
      "propertyName": "HTMLSlotElement",
      "throughProperty": "HTMLSlotElement",
      "prevProperty": "HTMLDataListElement"
    },
    {
      "path": "window",
      "propertyName": "HTMLQuoteElement",
      "throughProperty": "HTMLQuoteElement",
      "prevProperty": "HTMLProgressElement"
    },
    {
      "path": "window",
      "propertyName": "HTMLScriptElement",
      "throughProperty": "HTMLScriptElement",
      "prevProperty": "HTMLQuoteElement"
    },
    {
      "path": "window",
      "propertyName": "HTMLSelectElement",
      "throughProperty": "HTMLSelectElement",
      "prevProperty": "HTMLScriptElement"
    },
    {
      "path": "window",
      "propertyName": "HTMLParamElement",
      "throughProperty": "HTMLParamElement",
      "prevProperty": "HTMLParagraphElement"
    },
    {
      "path": "window",
      "propertyName": "HTMLPictureElement",
      "throughProperty": "HTMLPictureElement",
      "prevProperty": "HTMLParamElement"
    },
    {
      "path": "window",
      "propertyName": "HTMLPreElement",
      "throughProperty": "HTMLPreElement",
      "prevProperty": "HTMLPictureElement"
    },
    {
      "path": "window",
      "propertyName": "HTMLProgressElement",
      "throughProperty": "HTMLProgressElement",
      "prevProperty": "HTMLPreElement"
    },
    {
      "path": "window",
      "propertyName": "HTMLOutputElement",
      "throughProperty": "HTMLOutputElement",
      "prevProperty": "HTMLOptionsCollection"
    },
    {
      "path": "window",
      "propertyName": "HTMLParagraphElement",
      "throughProperty": "HTMLParagraphElement",
      "prevProperty": "HTMLOutputElement"
    },
    {
      "path": "window",
      "propertyName": "HTMLOptionElement",
      "throughProperty": "HTMLOptionElement",
      "prevProperty": "HTMLOptGroupElement"
    },
    {
      "path": "window",
      "propertyName": "Option",
      "throughProperty": "Option",
      "prevProperty": "HTMLOptionElement"
    },
    {
      "path": "window",
      "propertyName": "HTMLOptionsCollection",
      "throughProperty": "HTMLOptionsCollection",
      "prevProperty": "Option"
    },
    {
      "path": "window",
      "propertyName": "HTMLOListElement",
      "throughProperty": "HTMLOListElement",
      "prevProperty": "HTMLModElement"
    },
    {
      "path": "window",
      "propertyName": "HTMLObjectElement",
      "throughProperty": "HTMLObjectElement",
      "prevProperty": "HTMLOListElement"
    },
    {
      "path": "window",
      "propertyName": "HTMLOptGroupElement",
      "throughProperty": "HTMLOptGroupElement",
      "prevProperty": "HTMLObjectElement"
    },
    {
      "path": "window",
      "propertyName": "HTMLMenuElement",
      "throughProperty": "HTMLMenuElement",
      "prevProperty": "HTMLMediaElement"
    },
    {
      "path": "window",
      "propertyName": "HTMLMetaElement",
      "throughProperty": "HTMLMetaElement",
      "prevProperty": "HTMLMenuElement"
    },
    {
      "path": "window",
      "propertyName": "HTMLMeterElement",
      "throughProperty": "HTMLMeterElement",
      "prevProperty": "HTMLMetaElement"
    },
    {
      "path": "window",
      "propertyName": "HTMLModElement",
      "throughProperty": "HTMLModElement",
      "prevProperty": "HTMLMeterElement"
    },
    {
      "path": "window",
      "propertyName": "HTMLMarqueeElement",
      "throughProperty": "HTMLMarqueeElement",
      "prevProperty": "HTMLMapElement"
    },
    {
      "path": "window",
      "propertyName": "HTMLMediaElement",
      "throughProperty": "HTMLMediaElement",
      "prevProperty": "HTMLMarqueeElement"
    },
    {
      "path": "window",
      "propertyName": "HTMLLinkElement",
      "throughProperty": "HTMLLinkElement",
      "prevProperty": "HTMLLegendElement"
    },
    {
      "path": "window",
      "propertyName": "HTMLMapElement",
      "throughProperty": "HTMLMapElement",
      "prevProperty": "HTMLLinkElement"
    },
    {
      "path": "window",
      "propertyName": "HTMLLabelElement",
      "throughProperty": "HTMLLabelElement",
      "prevProperty": "HTMLLIElement"
    },
    {
      "path": "window",
      "propertyName": "HTMLLegendElement",
      "throughProperty": "HTMLLegendElement",
      "prevProperty": "HTMLLabelElement"
    },
    {
      "path": "window",
      "propertyName": "HTMLImageElement",
      "throughProperty": "HTMLImageElement",
      "prevProperty": "HTMLIFrameElement"
    },
    {
      "path": "window",
      "propertyName": "Image",
      "throughProperty": "Image",
      "prevProperty": "HTMLImageElement"
    },
    {
      "path": "window",
      "propertyName": "HTMLInputElement",
      "throughProperty": "HTMLInputElement",
      "prevProperty": "Image"
    },
    {
      "path": "window",
      "propertyName": "HTMLHeadingElement",
      "throughProperty": "HTMLHeadingElement",
      "prevProperty": "HTMLHeadElement"
    },
    {
      "path": "window",
      "propertyName": "HTMLHtmlElement",
      "throughProperty": "HTMLHtmlElement",
      "prevProperty": "HTMLHeadingElement"
    },
    {
      "path": "window",
      "propertyName": "HTMLIFrameElement",
      "throughProperty": "HTMLIFrameElement",
      "prevProperty": "HTMLHtmlElement"
    },
    {
      "path": "window",
      "propertyName": "HTMLFrameSetElement",
      "throughProperty": "HTMLFrameSetElement",
      "prevProperty": "HTMLFrameElement"
    },
    {
      "path": "window",
      "propertyName": "HTMLHRElement",
      "throughProperty": "HTMLHRElement",
      "prevProperty": "HTMLFrameSetElement"
    },
    {
      "path": "window",
      "propertyName": "HTMLHeadElement",
      "throughProperty": "HTMLHeadElement",
      "prevProperty": "HTMLHRElement"
    },
    {
      "path": "window",
      "propertyName": "HTMLFormControlsCollection",
      "throughProperty": "HTMLFormControlsCollection",
      "prevProperty": "HTMLFontElement"
    },
    {
      "path": "window",
      "propertyName": "HTMLFormElement",
      "throughProperty": "HTMLFormElement",
      "prevProperty": "HTMLFormControlsCollection"
    },
    {
      "path": "window",
      "propertyName": "HTMLFrameElement",
      "throughProperty": "HTMLFrameElement",
      "prevProperty": "HTMLFormElement"
    },
    {
      "path": "window",
      "propertyName": "HTMLEmbedElement",
      "throughProperty": "HTMLEmbedElement",
      "prevProperty": "HTMLElement"
    },
    {
      "path": "window",
      "propertyName": "HTMLFieldSetElement",
      "throughProperty": "HTMLFieldSetElement",
      "prevProperty": "HTMLEmbedElement"
    },
    {
      "path": "window",
      "propertyName": "HTMLFontElement",
      "throughProperty": "HTMLFontElement",
      "prevProperty": "HTMLFieldSetElement"
    },
    {
      "path": "window",
      "propertyName": "HTMLDocument",
      "throughProperty": "HTMLDocument",
      "prevProperty": "HTMLDivElement"
    },
    {
      "path": "window",
      "propertyName": "HTMLElement",
      "throughProperty": "HTMLElement",
      "prevProperty": "HTMLDocument"
    },
    {
      "path": "window",
      "propertyName": "HTMLDirectoryElement",
      "throughProperty": "HTMLDirectoryElement",
      "prevProperty": "HTMLDetailsElement"
    },
    {
      "path": "window",
      "propertyName": "HTMLDivElement",
      "throughProperty": "HTMLDivElement",
      "prevProperty": "HTMLDirectoryElement"
    },
    {
      "path": "window",
      "propertyName": "HTMLDetailsElement",
      "throughProperty": "HTMLDetailsElement",
      "prevProperty": "HTMLDataElement"
    },
    {
      "path": "window",
      "propertyName": "HTMLDataListElement",
      "throughProperty": "HTMLDataListElement",
      "prevProperty": "StaticRange"
    },
    {
      "path": "window",
      "propertyName": "HTMLAudioElement",
      "throughProperty": "HTMLAudioElement",
      "prevProperty": "HTMLAreaElement"
    },
    {
      "path": "window",
      "propertyName": "Audio",
      "throughProperty": "Audio",
      "prevProperty": "HTMLAudioElement"
    },
    {
      "path": "window",
      "propertyName": "HTMLBRElement",
      "throughProperty": "HTMLBRElement",
      "prevProperty": "Audio"
    },
    {
      "path": "window",
      "propertyName": "HTMLBaseElement",
      "throughProperty": "HTMLBaseElement",
      "prevProperty": "HTMLBRElement"
    },
    {
      "path": "window",
      "propertyName": "HTMLBodyElement",
      "throughProperty": "HTMLBodyElement",
      "prevProperty": "HTMLBaseElement"
    },
    {
      "path": "window",
      "propertyName": "HTMLButtonElement",
      "throughProperty": "HTMLButtonElement",
      "prevProperty": "HTMLBodyElement"
    },
    {
      "path": "window",
      "propertyName": "HTMLCanvasElement",
      "throughProperty": "HTMLCanvasElement",
      "prevProperty": "HTMLButtonElement"
    },
    {
      "path": "window",
      "propertyName": "HTMLCollection",
      "throughProperty": "HTMLCollection",
      "prevProperty": "HTMLCanvasElement"
    },
    {
      "path": "window",
      "propertyName": "HTMLDListElement",
      "throughProperty": "HTMLDListElement",
      "prevProperty": "HTMLCollection"
    },
    {
      "path": "window",
      "propertyName": "HTMLDataElement",
      "throughProperty": "HTMLDataElement",
      "prevProperty": "HTMLDListElement"
    },
    {
      "path": "window",
      "propertyName": "HTMLAllCollection",
      "throughProperty": "HTMLAllCollection",
      "prevProperty": "webkitURL"
    },
    {
      "path": "window",
      "propertyName": "HTMLAnchorElement",
      "throughProperty": "HTMLAnchorElement",
      "prevProperty": "HTMLAllCollection"
    },
    {
      "path": "window",
      "propertyName": "FileReader",
      "throughProperty": "FileReader",
      "prevProperty": "FileList"
    },
    {
      "path": "window",
      "propertyName": "FormData",
      "throughProperty": "FormData",
      "prevProperty": "FileReader"
    },
    {
      "path": "window",
      "propertyName": "EventTarget",
      "throughProperty": "EventTarget",
      "prevProperty": "Event"
    },
    {
      "path": "window",
      "propertyName": "FocusEvent",
      "throughProperty": "FocusEvent",
      "prevProperty": "EventTarget"
    },
    {
      "path": "window",
      "propertyName": "File",
      "throughProperty": "File",
      "prevProperty": "Blob"
    },
    {
      "path": "window",
      "propertyName": "DocumentType",
      "throughProperty": "DocumentType",
      "prevProperty": "DocumentFragment"
    },
    {
      "path": "window",
      "propertyName": "Element",
      "throughProperty": "Element",
      "prevProperty": "DocumentType"
    },
    {
      "path": "window",
      "propertyName": "ErrorEvent",
      "throughProperty": "ErrorEvent",
      "prevProperty": "Element"
    },
    {
      "path": "window",
      "propertyName": "Event",
      "throughProperty": "Event",
      "prevProperty": "ErrorEvent"
    },
    {
      "path": "window",
      "propertyName": "Document",
      "throughProperty": "Document",
      "prevProperty": "DataTransfer"
    },
    {
      "path": "window",
      "propertyName": "DocumentFragment",
      "throughProperty": "DocumentFragment",
      "prevProperty": "Document"
    },
    {
      "path": "window",
      "propertyName": "DataTransferItem",
      "throughProperty": "DataTransferItem",
      "prevProperty": "CustomElementRegistry"
    },
    {
      "path": "window",
      "propertyName": "DataTransferItemList",
      "throughProperty": "DataTransferItemList",
      "prevProperty": "DataTransferItem"
    },
    {
      "path": "window",
      "propertyName": "DataTransfer",
      "throughProperty": "DataTransfer",
      "prevProperty": "DOMStringMap"
    },
    {
      "path": "window",
      "propertyName": "DOMTokenList",
      "throughProperty": "DOMTokenList",
      "prevProperty": "FormData"
    },
    {
      "path": "window",
      "propertyName": "DOMRectReadOnly",
      "throughProperty": "DOMRectReadOnly",
      "prevProperty": "DOMRectList"
    },
    {
      "path": "window",
      "propertyName": "DOMStringList",
      "throughProperty": "DOMStringList",
      "prevProperty": "DOMRectReadOnly"
    },
    {
      "path": "window",
      "propertyName": "DOMStringMap",
      "throughProperty": "DOMStringMap",
      "prevProperty": "DOMStringList"
    },
    {
      "path": "window",
      "propertyName": "DOMQuad",
      "throughProperty": "DOMQuad",
      "prevProperty": "DOMPointReadOnly"
    },
    {
      "path": "window",
      "propertyName": "DOMRect",
      "throughProperty": "DOMRect",
      "prevProperty": "DOMQuad"
    },
    {
      "path": "window",
      "propertyName": "DOMRectList",
      "throughProperty": "DOMRectList",
      "prevProperty": "DOMRect"
    },
    {
      "path": "window",
      "propertyName": "DOMImplementation",
      "throughProperty": "DOMImplementation",
      "prevProperty": "DOMException"
    },
    {
      "path": "window",
      "propertyName": "DOMPoint",
      "throughProperty": "DOMPoint",
      "prevProperty": "DOMImplementation"
    },
    {
      "path": "window",
      "propertyName": "DOMPointReadOnly",
      "throughProperty": "DOMPointReadOnly",
      "prevProperty": "DOMPoint"
    },
    {
      "path": "window",
      "propertyName": "DOMParser",
      "throughProperty": "DOMParser",
      "prevProperty": "Worker"
    },
    {
      "path": "window",
      "propertyName": "DOMMatrix",
      "throughProperty": "DOMMatrix",
      "prevProperty": "CSS"
    },
    {
      "path": "window",
      "propertyName": "DOMMatrixReadOnly",
      "throughProperty": "DOMMatrixReadOnly",
      "prevProperty": "DOMMatrix"
    },
    {
      "path": "window",
      "propertyName": "CustomEvent",
      "throughProperty": "CustomEvent",
      "prevProperty": "CompositionEvent"
    },
    {
      "path": "window",
      "propertyName": "DOMException",
      "throughProperty": "DOMException",
      "prevProperty": "CustomEvent"
    },
    {
      "path": "window",
      "propertyName": "CustomElementRegistry",
      "throughProperty": "CustomElementRegistry",
      "prevProperty": "WebSocket"
    },
    {
      "path": "window",
      "propertyName": "CountQueuingStrategy",
      "throughProperty": "CountQueuingStrategy",
      "prevProperty": "ByteLengthQueuingStrategy"
    },
    {
      "path": "window",
      "propertyName": "Comment",
      "throughProperty": "Comment",
      "prevProperty": "ClipboardEvent"
    },
    {
      "path": "window",
      "propertyName": "CompositionEvent",
      "throughProperty": "CompositionEvent",
      "prevProperty": "Comment"
    },
    {
      "path": "window",
      "propertyName": "CharacterData",
      "throughProperty": "CharacterData",
      "prevProperty": "CDATASection"
    },
    {
      "path": "window",
      "propertyName": "ClipboardEvent",
      "throughProperty": "ClipboardEvent",
      "prevProperty": "CharacterData"
    },
    {
      "path": "window",
      "propertyName": "CSSStyleSheet",
      "throughProperty": "CSSStyleSheet",
      "prevProperty": "CSSStyleRule"
    },
    {
      "path": "window",
      "propertyName": "CSSSupportsRule",
      "throughProperty": "CSSSupportsRule",
      "prevProperty": "CSSStyleSheet"
    },
    {
      "path": "window",
      "propertyName": "CSSFontFaceRule",
      "throughProperty": "CSSFontFaceRule",
      "prevProperty": "SubtleCrypto"
    },
    {
      "path": "window",
      "propertyName": "CSSImportRule",
      "throughProperty": "CSSImportRule",
      "prevProperty": "CSSFontFaceRule"
    },
    {
      "path": "window",
      "propertyName": "CSSKeyframeRule",
      "throughProperty": "CSSKeyframeRule",
      "prevProperty": "CSSImportRule"
    },
    {
      "path": "window",
      "propertyName": "CSSKeyframesRule",
      "throughProperty": "CSSKeyframesRule",
      "prevProperty": "CSSKeyframeRule"
    },
    {
      "path": "window",
      "propertyName": "CSSMediaRule",
      "throughProperty": "CSSMediaRule",
      "prevProperty": "CSSKeyframesRule"
    },
    {
      "path": "window",
      "propertyName": "CSSNamespaceRule",
      "throughProperty": "CSSNamespaceRule",
      "prevProperty": "CSSMediaRule"
    },
    {
      "path": "window",
      "propertyName": "CSSPageRule",
      "throughProperty": "CSSPageRule",
      "prevProperty": "CSSNamespaceRule"
    },
    {
      "path": "window",
      "propertyName": "CSSRule",
      "throughProperty": "CSSRule",
      "prevProperty": "CSSPageRule"
    },
    {
      "path": "window",
      "propertyName": "CSSRuleList",
      "throughProperty": "CSSRuleList",
      "prevProperty": "CSSRule"
    },
    {
      "path": "window",
      "propertyName": "CSSStyleDeclaration",
      "throughProperty": "CSSStyleDeclaration",
      "prevProperty": "CSSRuleList"
    },
    {
      "path": "window",
      "propertyName": "CSSStyleRule",
      "throughProperty": "CSSStyleRule",
      "prevProperty": "CSSStyleDeclaration"
    },
    {
      "path": "window",
      "propertyName": "CSS",
      "throughProperty": "CSS",
      "prevProperty": "CSSSupportsRule"
    },
    {
      "path": "window",
      "propertyName": "CDATASection",
      "throughProperty": "CDATASection",
      "prevProperty": "BeforeUnloadEvent"
    },
    {
      "path": "window",
      "propertyName": "ByteLengthQueuingStrategy",
      "throughProperty": "ByteLengthQueuingStrategy",
      "prevProperty": "SpeechSynthesisUtterance"
    },
    {
      "path": "window",
      "propertyName": "BarProp",
      "throughProperty": "BarProp",
      "prevProperty": "ApplicationCache"
    },
    {
      "path": "window",
      "propertyName": "AbortSignal",
      "throughProperty": "AbortSignal",
      "prevProperty": "AbortController"
    },
    {
      "path": "window",
      "propertyName": "AnimationEvent",
      "throughProperty": "AnimationEvent",
      "prevProperty": "AbortSignal"
    },
    {
      "path": "window",
      "propertyName": "Attr",
      "throughProperty": "Attr",
      "prevProperty": "AnimationEvent"
    },
    {
      "path": "window",
      "propertyName": "WebKitCSSMatrix",
      "throughProperty": "WebKitCSSMatrix",
      "prevProperty": "StyleSheetList"
    },
    {
      "path": "window",
      "propertyName": "AbortController",
      "throughProperty": "AbortController",
      "prevProperty": "WebKitCSSMatrix"
    },
    {
      "path": "window",
      "propertyName": "WebKitMutationObserver",
      "throughProperty": "WebKitMutationObserver",
      "prevProperty": "MutationObserver"
    },
    {
      "path": "window",
      "propertyName": "webkitURL",
      "throughProperty": "webkitURL",
      "prevProperty": "URL"
    },
    {
      "path": "window",
      "propertyName": "opener",
      "throughProperty": "opener",
      "prevProperty": "top"
    },
    {
      "path": "window",
      "propertyName": "parent",
      "throughProperty": "parent",
      "prevProperty": "opener"
    },
    {
      "path": "window",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "frames"
    },
    {
      "path": "window",
      "propertyName": "top",
      "throughProperty": "top",
      "prevProperty": "length"
    },
    {
      "path": "window",
      "propertyName": "closed",
      "throughProperty": "closed",
      "prevProperty": "status"
    },
    {
      "path": "window",
      "propertyName": "frames",
      "throughProperty": "frames",
      "prevProperty": "closed"
    },
    {
      "path": "window",
      "propertyName": "location",
      "throughProperty": "location",
      "prevProperty": "name"
    },
    {
      "path": "window",
      "propertyName": "self",
      "throughProperty": "self",
      "prevProperty": "undefined"
    },
    {
      "path": "window",
      "propertyName": "window",
      "throughProperty": "window",
      "prevProperty": "NaN"
    },
    {
      "path": "window",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": "self"
    },
    {
      "path": "window",
      "propertyName": "customElements",
      "throughProperty": "customElements",
      "prevProperty": "WebAssembly"
    },
    {
      "path": "window",
      "propertyName": "history",
      "throughProperty": "status",
      "prevProperty": "location"
    },
    {
      "path": "window",
      "propertyName": "frameElement",
      "throughProperty": "navigator",
      "prevProperty": "parent"
    },
    {
      "path": "window",
      "propertyName": "origin",
      "throughProperty": "origin",
      "prevProperty": "onunload"
    },
    {
      "path": "window",
      "propertyName": "screen",
      "throughProperty": "screen",
      "prevProperty": "localStorage"
    },
    {
      "path": "window",
      "propertyName": "innerHeight",
      "throughProperty": "innerHeight",
      "prevProperty": "screen"
    },
    {
      "path": "window",
      "propertyName": "innerWidth",
      "throughProperty": "innerWidth",
      "prevProperty": "innerHeight"
    },
    {
      "path": "window",
      "propertyName": "scrollX",
      "throughProperty": "pageYOffset",
      "prevProperty": "innerWidth"
    },
    {
      "path": "window",
      "propertyName": "visualViewport",
      "throughProperty": "visualViewport",
      "prevProperty": "customElements"
    },
    {
      "path": "window",
      "propertyName": "screenX",
      "throughProperty": "devicePixelRatio",
      "prevProperty": "pageYOffset"
    },
    {
      "path": "window",
      "propertyName": "clientInformation",
      "throughProperty": "clientInformation",
      "prevProperty": "screenTop"
    },
    {
      "path": "window",
      "propertyName": "event",
      "throughProperty": "event",
      "prevProperty": "devicePixelRatio"
    },
    {
      "path": "window",
      "propertyName": "defaultStatus",
      "throughProperty": "defaultstatus",
      "prevProperty": "event"
    },
    {
      "path": "window",
      "propertyName": "offscreenBuffering",
      "throughProperty": "screenTop",
      "prevProperty": "defaultstatus"
    },
    {
      "path": "window",
      "propertyName": "styleMedia",
      "throughProperty": "styleMedia",
      "prevProperty": "clientInformation"
    },
    {
      "path": "window",
      "propertyName": "onsearch",
      "throughProperty": "onsearch",
      "prevProperty": "onpointerleave"
    },
    {
      "path": "window",
      "propertyName": "onwebkitanimationend",
      "throughProperty": "onwebkittransitionend",
      "prevProperty": "styleMedia"
    },
    {
      "path": "window",
      "propertyName": "isSecureContext",
      "throughProperty": "isSecureContext",
      "prevProperty": "caches"
    },
    {
      "path": "window",
      "propertyName": "onabort",
      "throughProperty": "onratechange",
      "prevProperty": "openDatabase"
    },
    {
      "path": "window",
      "propertyName": "onrejectionhandled",
      "throughProperty": "onrejectionhandled",
      "prevProperty": "onratechange"
    },
    {
      "path": "window",
      "propertyName": "onreset",
      "throughProperty": "ontoggle",
      "prevProperty": "onrejectionhandled"
    },
    {
      "path": "window",
      "propertyName": "onvolumechange",
      "throughProperty": "onwaiting",
      "prevProperty": "onunhandledrejection"
    },
    {
      "path": "window",
      "propertyName": "onwheel",
      "throughProperty": "onwheel",
      "prevProperty": "onsearch"
    },
    {
      "path": "window",
      "propertyName": "ontransitionend",
      "throughProperty": "ontransitionend",
      "prevProperty": "onwaiting"
    },
    {
      "path": "window",
      "propertyName": "onafterprint",
      "throughProperty": "onpopstate",
      "prevProperty": "performance"
    },
    {
      "path": "window",
      "propertyName": "onstorage",
      "throughProperty": "onstorage",
      "prevProperty": "onpopstate"
    },
    {
      "path": "window",
      "propertyName": "onunhandledrejection",
      "throughProperty": "onunhandledrejection",
      "prevProperty": "ontoggle"
    },
    {
      "path": "window",
      "propertyName": "onunload",
      "throughProperty": "onunload",
      "prevProperty": "onstorage"
    },
    {
      "path": "window",
      "propertyName": "performance",
      "throughProperty": "performance",
      "prevProperty": "crypto"
    },
    {
      "path": "window",
      "propertyName": "stop",
      "throughProperty": "stop",
      "prevProperty": "close"
    },
    {
      "path": "window",
      "propertyName": "open",
      "throughProperty": "print",
      "prevProperty": "blur"
    },
    {
      "path": "window",
      "propertyName": "queueMicrotask",
      "throughProperty": "queueMicrotask",
      "prevProperty": "clearInterval"
    },
    {
      "path": "window",
      "propertyName": "requestAnimationFrame",
      "throughProperty": "cancelAnimationFrame",
      "prevProperty": "print"
    },
    {
      "path": "window",
      "propertyName": "postMessage",
      "throughProperty": "postMessage",
      "prevProperty": "cancelAnimationFrame"
    },
    {
      "path": "window",
      "propertyName": "captureEvents",
      "throughProperty": "webkitCancelAnimationFrame",
      "prevProperty": "postMessage"
    },
    {
      "path": "window",
      "propertyName": "fetch",
      "throughProperty": "fetch",
      "prevProperty": "isSecureContext"
    },
    {
      "path": "window",
      "propertyName": "atob",
      "throughProperty": "atob",
      "prevProperty": "queueMicrotask"
    },
    {
      "path": "window",
      "propertyName": "btoa",
      "throughProperty": "btoa",
      "prevProperty": "atob"
    },
    {
      "path": "window",
      "propertyName": "close",
      "throughProperty": "close",
      "prevProperty": "origin"
    },
    {
      "path": "window",
      "propertyName": "focus",
      "throughProperty": "blur",
      "prevProperty": "stop"
    },
    {
      "path": "window",
      "propertyName": "XSLTProcessor",
      "throughProperty": "XSLTProcessor",
      "prevProperty": "XPathResult"
    },
    {
      "path": "window",
      "propertyName": "indexedDB",
      "throughProperty": "indexedDB",
      "prevProperty": "XSLTProcessor"
    },
    {
      "path": "window",
      "propertyName": "applicationCache",
      "throughProperty": "applicationCache",
      "prevProperty": "navigator"
    },
    {
      "path": "window",
      "propertyName": "sessionStorage",
      "throughProperty": "localStorage",
      "prevProperty": "applicationCache"
    },
    {
      "path": "window",
      "propertyName": "WebAssembly",
      "throughProperty": "WebAssembly",
      "prevProperty": "Intl"
    },
    {
      "path": "window",
      "propertyName": "PaymentRequestUpdateEvent",
      "throughProperty": "PaymentRequestUpdateEvent",
      "prevProperty": "PaymentRequest"
    },
    {
      "path": "window",
      "propertyName": "SpeechSynthesisEvent",
      "throughProperty": "SpeechSynthesisUtterance",
      "prevProperty": "Notification"
    },
    {
      "path": "window",
      "propertyName": "caches",
      "throughProperty": "caches",
      "prevProperty": "ServiceWorkerRegistration"
    },
    {
      "path": "window",
      "propertyName": "MediaDeviceInfo",
      "throughProperty": "MediaDevices",
      "prevProperty": "CanvasCaptureMediaStreamTrack"
    },
    {
      "path": "window",
      "propertyName": "MediaKeyMessageEvent",
      "throughProperty": "MediaKeyMessageEvent",
      "prevProperty": "CredentialsContainer"
    },
    {
      "path": "window",
      "propertyName": "MediaKeySession",
      "throughProperty": "MediaKeySystemAccess",
      "prevProperty": "MediaKeyMessageEvent"
    },
    {
      "path": "window",
      "propertyName": "MediaKeys",
      "throughProperty": "MediaKeys",
      "prevProperty": "MediaKeySystemAccess"
    },
    {
      "path": "window",
      "propertyName": "RTCIceTransport",
      "throughProperty": "RTCIceTransport",
      "prevProperty": "RTCIceCandidate"
    },
    {
      "path": "window",
      "propertyName": "ServiceWorker",
      "throughProperty": "ServiceWorkerRegistration",
      "prevProperty": "VisualViewport"
    },
    {
      "path": "window",
      "propertyName": "PaymentMethodChangeEvent",
      "throughProperty": "PaymentMethodChangeEvent",
      "prevProperty": "PaymentAddress"
    },
    {
      "path": "window",
      "propertyName": "PaymentRequest",
      "throughProperty": "PaymentRequest",
      "prevProperty": "PaymentMethodChangeEvent"
    },
    {
      "path": "window",
      "propertyName": "PaymentResponse",
      "throughProperty": "PaymentResponse",
      "prevProperty": "PaymentRequestUpdateEvent"
    },
    {
      "path": "window.AbortController",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.AbortController",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.AbortController",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.AbortController",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.AbortController",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.AbortController.prototype.abort",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.AbortController.prototype.abort",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.AbortSignal",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.AbortSignal",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.AbortSignal",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.AbortSignal",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.AbortSignal",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.alert",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.alert",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.AnalyserNode",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.AnalyserNode",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.AnalyserNode",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.AnalyserNode",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.AnalyserNode",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.AnalyserNode.prototype.getByteFrequencyData",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.AnalyserNode.prototype.getByteFrequencyData",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.AnalyserNode.prototype.getByteTimeDomainData",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.AnalyserNode.prototype.getByteTimeDomainData",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.AnalyserNode.prototype.getFloatFrequencyData",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.AnalyserNode.prototype.getFloatFrequencyData",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.AnimationEvent",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.AnimationEvent",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.AnimationEvent",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.AnimationEvent",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.AnimationEvent",
      "propertyName": "NONE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.applicationCache",
      "propertyName": "status",
      "throughProperty": "status",
      "prevProperty": null
    },
    {
      "path": "window.applicationCache",
      "propertyName": "onobsolete",
      "throughProperty": "onobsolete",
      "prevProperty": "oncached"
    },
    {
      "path": "window.applicationCache",
      "propertyName": "UNCACHED",
      "throughProperty": "OBSOLETE",
      "prevProperty": "onobsolete"
    },
    {
      "path": "window.applicationCache",
      "propertyName": "onchecking",
      "throughProperty": "onchecking",
      "prevProperty": "status"
    },
    {
      "path": "window.applicationCache",
      "propertyName": "onerror",
      "throughProperty": "onnoupdate",
      "prevProperty": "onchecking"
    },
    {
      "path": "window.applicationCache",
      "propertyName": "ondownloading",
      "throughProperty": "ondownloading",
      "prevProperty": "onnoupdate"
    },
    {
      "path": "window.applicationCache",
      "propertyName": "onprogress",
      "throughProperty": "onupdateready",
      "prevProperty": "ondownloading"
    },
    {
      "path": "window.ApplicationCache",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.ApplicationCache",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.ApplicationCache",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.ApplicationCache",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.ApplicationCache",
      "propertyName": "UNCACHED",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.ApplicationCache.prototype",
      "propertyName": "status",
      "throughProperty": "status",
      "prevProperty": null
    },
    {
      "path": "window.ApplicationCache.prototype",
      "propertyName": "onobsolete",
      "throughProperty": "onobsolete",
      "prevProperty": "oncached"
    },
    {
      "path": "window.ApplicationCache.prototype",
      "propertyName": "UNCACHED",
      "throughProperty": "OBSOLETE",
      "prevProperty": "abort"
    },
    {
      "path": "window.ApplicationCache.prototype",
      "propertyName": "onchecking",
      "throughProperty": "onchecking",
      "prevProperty": "status"
    },
    {
      "path": "window.ApplicationCache.prototype",
      "propertyName": "onerror",
      "throughProperty": "onnoupdate",
      "prevProperty": "onchecking"
    },
    {
      "path": "window.ApplicationCache.prototype",
      "propertyName": "ondownloading",
      "throughProperty": "ondownloading",
      "prevProperty": "onnoupdate"
    },
    {
      "path": "window.ApplicationCache.prototype",
      "propertyName": "onprogress",
      "throughProperty": "onupdateready",
      "prevProperty": "ondownloading"
    },
    {
      "path": "window.ApplicationCache.prototype",
      "propertyName": "update",
      "throughProperty": "update",
      "prevProperty": "onobsolete"
    },
    {
      "path": "window.ApplicationCache.prototype",
      "propertyName": "swapCache",
      "throughProperty": "swapCache",
      "prevProperty": "update"
    },
    {
      "path": "window.ApplicationCache.prototype",
      "propertyName": "abort",
      "throughProperty": "abort",
      "prevProperty": "swapCache"
    },
    {
      "path": "window.ApplicationCache.prototype.abort",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.ApplicationCache.prototype.abort",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.ApplicationCache.prototype.swapCache",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.ApplicationCache.prototype.swapCache",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.ApplicationCache.prototype.update",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.ApplicationCache.prototype.update",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Array",
      "propertyName": "of",
      "throughProperty": "of",
      "prevProperty": null
    },
    {
      "path": "window.Array",
      "propertyName": "name",
      "throughProperty": "prototype",
      "prevProperty": "from"
    },
    {
      "path": "window.Array",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "prototype"
    },
    {
      "path": "window.Array",
      "propertyName": "isArray",
      "throughProperty": "isArray",
      "prevProperty": "length"
    },
    {
      "path": "window.Array",
      "propertyName": "from",
      "throughProperty": "from",
      "prevProperty": "of"
    },
    {
      "path": "window.Array.prototype",
      "propertyName": "slice",
      "throughProperty": "splice",
      "prevProperty": "shift"
    },
    {
      "path": "window.Array.prototype",
      "propertyName": "concat",
      "throughProperty": "concat",
      "prevProperty": "toLocaleString"
    },
    {
      "path": "window.Array.prototype",
      "propertyName": "copyWithin",
      "throughProperty": "copyWithin",
      "prevProperty": "includes"
    },
    {
      "path": "window.Array.prototype",
      "propertyName": "fill",
      "throughProperty": "fill",
      "prevProperty": "concat"
    },
    {
      "path": "window.Array.prototype",
      "propertyName": "find",
      "throughProperty": "findIndex",
      "prevProperty": "keys"
    },
    {
      "path": "window.Array.prototype",
      "propertyName": "indexOf",
      "throughProperty": "indexOf",
      "prevProperty": "some"
    },
    {
      "path": "window.Array.prototype",
      "propertyName": "lastIndexOf",
      "throughProperty": "lastIndexOf",
      "prevProperty": "indexOf"
    },
    {
      "path": "window.Array.prototype",
      "propertyName": "unshift",
      "throughProperty": "unshift",
      "prevProperty": "splice"
    },
    {
      "path": "window.Array.prototype",
      "propertyName": "includes",
      "throughProperty": "includes",
      "prevProperty": "findIndex"
    },
    {
      "path": "window.Array.prototype",
      "propertyName": "join",
      "throughProperty": "join",
      "prevProperty": "fill"
    },
    {
      "path": "window.Array.prototype",
      "propertyName": "entries",
      "throughProperty": "entries",
      "prevProperty": "map"
    },
    {
      "path": "window.Array.prototype",
      "propertyName": "keys",
      "throughProperty": "keys",
      "prevProperty": "entries"
    },
    {
      "path": "window.Array.prototype",
      "propertyName": "values",
      "throughProperty": "values",
      "prevProperty": "toString"
    },
    {
      "path": "window.Array.prototype",
      "propertyName": "forEach",
      "throughProperty": "forEach",
      "prevProperty": "every"
    },
    {
      "path": "window.Array.prototype",
      "propertyName": "filter",
      "throughProperty": "flatMap",
      "prevProperty": "lastIndexOf"
    },
    {
      "path": "window.Array.prototype",
      "propertyName": "every",
      "throughProperty": "every",
      "prevProperty": "unshift"
    },
    {
      "path": "window.Array.prototype",
      "propertyName": "some",
      "throughProperty": "some",
      "prevProperty": "forEach"
    },
    {
      "path": "window.Array.prototype",
      "propertyName": "reduce",
      "throughProperty": "reduceRight",
      "prevProperty": "flatMap"
    },
    {
      "path": "window.Array.prototype",
      "propertyName": "toLocaleString",
      "throughProperty": "toLocaleString",
      "prevProperty": "values"
    },
    {
      "path": "window.Array.prototype",
      "propertyName": "toString",
      "throughProperty": "toString",
      "prevProperty": "length"
    },
    {
      "path": "window.Array.prototype.indexOf",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Array.prototype.indexOf",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Array.prototype.join",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Array.prototype.join",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Array.prototype.lastIndexOf",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Array.prototype.lastIndexOf",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Array.prototype.pop",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Array.prototype.pop",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Array.prototype.push",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Array.prototype.push",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Array.prototype.reverse",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Array.prototype.reverse",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Array.prototype.shift",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Array.prototype.shift",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Array.prototype.slice",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Array.prototype.slice",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Array.prototype.splice",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Array.prototype.splice",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Array.prototype.toLocaleString",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Array.prototype.toLocaleString",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Array.prototype.toString",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Array.prototype.toString",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Array.prototype.unshift",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Array.prototype.unshift",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.ArrayBuffer",
      "propertyName": "name",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.ArrayBuffer",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "prototype"
    },
    {
      "path": "window.ArrayBuffer.isView",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.ArrayBuffer.isView",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.ArrayBuffer.prototype",
      "propertyName": "slice",
      "throughProperty": "slice",
      "prevProperty": null
    },
    {
      "path": "window.ArrayBuffer.prototype",
      "propertyName": "byteLength",
      "throughProperty": "byteLength",
      "prevProperty": "slice"
    },
    {
      "path": "window.ArrayBuffer.prototype.slice",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.ArrayBuffer.prototype.slice",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.atob",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.atob",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Attr",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.Attr",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.Attr",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.Attr",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Attr",
      "propertyName": "ELEMENT_NODE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.Audio",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.Audio",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.Audio",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.Audio",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Audio",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.AudioBuffer",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.AudioBuffer",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.AudioBuffer",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.AudioBuffer",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.AudioBuffer",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.AudioBuffer.prototype.getChannelData",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.AudioBuffer.prototype.getChannelData",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.AudioBufferSourceNode",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.AudioBufferSourceNode",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.AudioBufferSourceNode",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.AudioBufferSourceNode",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "FINISHED_STATE"
    },
    {
      "path": "window.AudioBufferSourceNode",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.AudioBufferSourceNode.prototype.start",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.AudioBufferSourceNode.prototype.start",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.AudioDestinationNode",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.AudioDestinationNode",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.AudioDestinationNode",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.AudioDestinationNode",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.AudioDestinationNode",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.AudioListener",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.AudioListener",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.AudioListener",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.AudioListener",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.AudioListener",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.AudioListener.prototype.setOrientation",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.AudioListener.prototype.setOrientation",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.AudioListener.prototype.setPosition",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.AudioListener.prototype.setPosition",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.AudioNode",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.AudioNode",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.AudioNode",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.AudioNode",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.AudioNode",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.AudioNode.prototype.connect",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.AudioNode.prototype.connect",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.AudioNode.prototype.disconnect",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.AudioNode.prototype.disconnect",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.AudioParam",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.AudioParam",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.AudioParam",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.AudioParam",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.AudioParam",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.AudioParam.prototype",
      "propertyName": "setValueAtTime",
      "throughProperty": "cancelScheduledValues",
      "prevProperty": "units"
    },
    {
      "path": "window.AudioParam.prototype",
      "propertyName": "minValue",
      "throughProperty": "maxValue",
      "prevProperty": "value"
    },
    {
      "path": "window.AudioParam.prototype",
      "propertyName": "defaultValue",
      "throughProperty": "defaultValue",
      "prevProperty": "maxValue"
    },
    {
      "path": "window.AudioParam.prototype.cancelScheduledValues",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.AudioParam.prototype.cancelScheduledValues",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.AudioParam.prototype.exponentialRampToValueAtTime",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.AudioParam.prototype.exponentialRampToValueAtTime",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.AudioParam.prototype.linearRampToValueAtTime",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.AudioParam.prototype.linearRampToValueAtTime",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.AudioParam.prototype.setTargetAtTime",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.AudioParam.prototype.setTargetAtTime",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.AudioParam.prototype.setValueAtTime",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.AudioParam.prototype.setValueAtTime",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.AudioParam.prototype.setValueCurveAtTime",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.AudioParam.prototype.setValueCurveAtTime",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.AudioProcessingEvent",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.AudioProcessingEvent",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.AudioProcessingEvent",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.AudioProcessingEvent",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.AudioProcessingEvent",
      "propertyName": "NONE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.AuthenticatorAssertionResponse",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.AuthenticatorAssertionResponse",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.AuthenticatorAssertionResponse",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.AuthenticatorAssertionResponse",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.AuthenticatorAssertionResponse",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.AuthenticatorAttestationResponse",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.AuthenticatorAttestationResponse",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.AuthenticatorAttestationResponse",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.AuthenticatorAttestationResponse",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.AuthenticatorAttestationResponse",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.AuthenticatorResponse",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.AuthenticatorResponse",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.AuthenticatorResponse",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.AuthenticatorResponse",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.AuthenticatorResponse",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.BarProp",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.BarProp",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.BarProp",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.BarProp",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.BarProp",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.BeforeUnloadEvent",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.BeforeUnloadEvent",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.BeforeUnloadEvent",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.BeforeUnloadEvent",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.BeforeUnloadEvent",
      "propertyName": "NONE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.BiquadFilterNode",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.BiquadFilterNode",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.BiquadFilterNode",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.BiquadFilterNode",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.BiquadFilterNode",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.BiquadFilterNode.prototype.getFrequencyResponse",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.BiquadFilterNode.prototype.getFrequencyResponse",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Blob",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.Blob",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.Blob",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.Blob",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Blob",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.Blob.prototype.slice",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Blob.prototype.slice",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.blur",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.blur",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Boolean",
      "propertyName": "name",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.Boolean",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "prototype"
    },
    {
      "path": "window.Boolean.prototype.toString",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Boolean.prototype.toString",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Boolean.prototype.valueOf",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Boolean.prototype.valueOf",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.btoa",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.btoa",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.ByteLengthQueuingStrategy",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.ByteLengthQueuingStrategy",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.ByteLengthQueuingStrategy",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.ByteLengthQueuingStrategy",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.ByteLengthQueuingStrategy",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.Cache",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.Cache",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.Cache",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.Cache",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Cache",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.Cache.prototype.add",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Cache.prototype.add",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Cache.prototype.addAll",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Cache.prototype.addAll",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Cache.prototype.delete",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Cache.prototype.delete",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Cache.prototype.keys",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Cache.prototype.keys",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Cache.prototype.match",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Cache.prototype.match",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Cache.prototype.matchAll",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Cache.prototype.matchAll",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Cache.prototype.put",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Cache.prototype.put",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.CacheStorage",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.CacheStorage",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.CacheStorage",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.CacheStorage",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.CacheStorage",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.CacheStorage.prototype.delete",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.CacheStorage.prototype.delete",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.CacheStorage.prototype.has",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.CacheStorage.prototype.has",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.CacheStorage.prototype.keys",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.CacheStorage.prototype.keys",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.CacheStorage.prototype.match",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.CacheStorage.prototype.match",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.CacheStorage.prototype.open",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.CacheStorage.prototype.open",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.cancelAnimationFrame",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.cancelAnimationFrame",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.CanvasCaptureMediaStreamTrack",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.CanvasCaptureMediaStreamTrack",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.CanvasCaptureMediaStreamTrack",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.CanvasCaptureMediaStreamTrack",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.CanvasCaptureMediaStreamTrack",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.CanvasCaptureMediaStreamTrack.prototype.requestFrame",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.CanvasCaptureMediaStreamTrack.prototype.requestFrame",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.CanvasGradient",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.CanvasGradient",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.CanvasGradient",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.CanvasGradient",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.CanvasGradient",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.CanvasGradient.prototype.addColorStop",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.CanvasGradient.prototype.addColorStop",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.CanvasPattern",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.CanvasPattern",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.CanvasPattern",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.CanvasPattern",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.CanvasPattern",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.CanvasPattern.prototype.setTransform",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.CanvasPattern.prototype.setTransform",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.CanvasRenderingContext2D",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.CanvasRenderingContext2D",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.CanvasRenderingContext2D",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.CanvasRenderingContext2D",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.CanvasRenderingContext2D",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype",
      "propertyName": "globalAlpha",
      "throughProperty": "globalCompositeOperation",
      "prevProperty": "webkitLineDashOffset"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype",
      "propertyName": "shadowOffsetX",
      "throughProperty": "shadowColor",
      "prevProperty": "lineDashOffset"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype",
      "propertyName": "createLinearGradient",
      "throughProperty": "createPattern",
      "prevProperty": "isPointInStroke"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype",
      "propertyName": "drawImage",
      "throughProperty": "drawImage",
      "prevProperty": "clearShadow"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype",
      "propertyName": "closePath",
      "throughProperty": "ellipse",
      "prevProperty": "putImageData"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype",
      "propertyName": "strokeStyle",
      "throughProperty": "fillStyle",
      "prevProperty": "globalCompositeOperation"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype",
      "propertyName": "imageSmoothingEnabled",
      "throughProperty": "imageSmoothingQuality",
      "prevProperty": "fillStyle"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype",
      "propertyName": "font",
      "throughProperty": "direction",
      "prevProperty": "shadowColor"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype",
      "propertyName": "clearRect",
      "throughProperty": "strokeRect",
      "prevProperty": "getLineDash"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype",
      "propertyName": "save",
      "throughProperty": "restore",
      "prevProperty": "strokeRect"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype",
      "propertyName": "fillText",
      "throughProperty": "measureText",
      "prevProperty": "restore"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype",
      "propertyName": "scale",
      "throughProperty": "transform",
      "prevProperty": "measureText"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype",
      "propertyName": "getTransform",
      "throughProperty": "getTransform",
      "prevProperty": "transform"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype",
      "propertyName": "setTransform",
      "throughProperty": "setTransform",
      "prevProperty": "getTransform"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype",
      "propertyName": "resetTransform",
      "throughProperty": "resetTransform",
      "prevProperty": "setTransform"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype",
      "propertyName": "beginPath",
      "throughProperty": "stroke",
      "prevProperty": "drawImage"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype",
      "propertyName": "drawFocusIfNeeded",
      "throughProperty": "drawFocusIfNeeded",
      "prevProperty": "resetTransform"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype",
      "propertyName": "createImageData",
      "throughProperty": "createImageData",
      "prevProperty": "createPattern"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype",
      "propertyName": "setLineDash",
      "throughProperty": "getLineDash",
      "prevProperty": "ellipse"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.arc",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.arc",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.arcTo",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.arcTo",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.beginPath",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.beginPath",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.bezierCurveTo",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.bezierCurveTo",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.clearRect",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.clearRect",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.clip",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.clip",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.closePath",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.closePath",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.createImageData",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.createImageData",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.createLinearGradient",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.createLinearGradient",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.createPattern",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.createPattern",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.createRadialGradient",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.createRadialGradient",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.drawFocusIfNeeded",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.drawFocusIfNeeded",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.drawImage",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.drawImage",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.ellipse",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.ellipse",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.fill",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.fill",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.fillRect",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.fillRect",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.fillText",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.fillText",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.getImageData",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.getImageData",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.getLineDash",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.getLineDash",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.getTransform",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.getTransform",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.isPointInPath",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.isPointInPath",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.isPointInStroke",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.isPointInStroke",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.lineTo",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.lineTo",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.measureText",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.measureText",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.moveTo",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.moveTo",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.putImageData",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.putImageData",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.quadraticCurveTo",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.quadraticCurveTo",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.rect",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.rect",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.resetTransform",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.resetTransform",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.restore",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.restore",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.rotate",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.rotate",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.save",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.save",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.scale",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.scale",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.setLineDash",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.setLineDash",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.setTransform",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.setTransform",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.stroke",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.stroke",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.strokeRect",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.strokeRect",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.strokeText",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.strokeText",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.transform",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.transform",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.translate",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.translate",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.captureEvents",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.captureEvents",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.CDATASection",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.CDATASection",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.CDATASection",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.CDATASection",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.CDATASection",
      "propertyName": "ELEMENT_NODE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.ChannelMergerNode",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.ChannelMergerNode",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.ChannelMergerNode",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.ChannelMergerNode",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.ChannelMergerNode",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.ChannelSplitterNode",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.ChannelSplitterNode",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.ChannelSplitterNode",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.ChannelSplitterNode",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.ChannelSplitterNode",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.CharacterData",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.CharacterData",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.CharacterData",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.CharacterData",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.CharacterData",
      "propertyName": "ELEMENT_NODE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.CharacterData.prototype.after",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.CharacterData.prototype.after",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.CharacterData.prototype.appendData",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.CharacterData.prototype.appendData",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.CharacterData.prototype.before",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.CharacterData.prototype.before",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.CharacterData.prototype.deleteData",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.CharacterData.prototype.deleteData",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.CharacterData.prototype.insertData",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.CharacterData.prototype.insertData",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.CharacterData.prototype.remove",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.CharacterData.prototype.remove",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.CharacterData.prototype.replaceData",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.CharacterData.prototype.replaceData",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.CharacterData.prototype.replaceWith",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.CharacterData.prototype.replaceWith",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.CharacterData.prototype.substringData",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.CharacterData.prototype.substringData",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.CharacterData.prototype.Symbol(Symbol.unscopables)",
      "propertyName": "before",
      "throughProperty": "before",
      "prevProperty": null
    },
    {
      "path": "window.CharacterData.prototype.Symbol(Symbol.unscopables)",
      "propertyName": "after",
      "throughProperty": "after",
      "prevProperty": "before"
    },
    {
      "path": "window.CharacterData.prototype.Symbol(Symbol.unscopables)",
      "propertyName": "replaceWith",
      "throughProperty": "replaceWith",
      "prevProperty": "after"
    },
    {
      "path": "window.CharacterData.prototype.Symbol(Symbol.unscopables)",
      "propertyName": "remove",
      "throughProperty": "remove",
      "prevProperty": "replaceWith"
    },
    {
      "path": "window.clearInterval",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.clearInterval",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.clearTimeout",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.clearTimeout",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.ClipboardEvent",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.ClipboardEvent",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.ClipboardEvent",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.ClipboardEvent",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.ClipboardEvent",
      "propertyName": "NONE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.close",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.close",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.CloseEvent",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.CloseEvent",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.CloseEvent",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.CloseEvent",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.CloseEvent",
      "propertyName": "NONE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.Comment",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.Comment",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.Comment",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.Comment",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Comment",
      "propertyName": "ELEMENT_NODE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.CompositionEvent",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.CompositionEvent",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.CompositionEvent",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.CompositionEvent",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.CompositionEvent",
      "propertyName": "NONE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.CompositionEvent.prototype.initCompositionEvent",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.CompositionEvent.prototype.initCompositionEvent",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.confirm",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.confirm",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.console",
      "propertyName": "group",
      "throughProperty": "groupEnd",
      "prevProperty": "takeHeapSnapshot"
    },
    {
      "path": "window.console",
      "propertyName": "clear",
      "throughProperty": "clear",
      "prevProperty": "warn"
    },
    {
      "path": "window.console",
      "propertyName": "log",
      "throughProperty": "log",
      "prevProperty": "error"
    },
    {
      "path": "window.console",
      "propertyName": "info",
      "throughProperty": "info",
      "prevProperty": "log"
    },
    {
      "path": "window.console",
      "propertyName": "dir",
      "throughProperty": "trace",
      "prevProperty": "clear"
    },
    {
      "path": "window.console",
      "propertyName": "assert",
      "throughProperty": "assert",
      "prevProperty": "trace"
    },
    {
      "path": "window.console",
      "propertyName": "count",
      "throughProperty": "countReset",
      "prevProperty": "assert"
    },
    {
      "path": "window.console",
      "propertyName": "profile",
      "throughProperty": "timeStamp",
      "prevProperty": "countReset"
    },
    {
      "path": "window.console.assert",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.console.assert",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.console.clear",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.console.clear",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.console.count",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.console.count",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.console.countReset",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.console.countReset",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.console.debug",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.console.debug",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.console.dir",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.console.dir",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.console.dirxml",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.console.dirxml",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.console.error",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.console.error",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.console.group",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.console.group",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.console.groupCollapsed",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.console.groupCollapsed",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.console.groupEnd",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.console.groupEnd",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.console.info",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.console.info",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.console.log",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.console.log",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.console.profile",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.console.profile",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.console.profileEnd",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.console.profileEnd",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.console.table",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.console.table",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.console.time",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.console.time",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.console.timeEnd",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.console.timeEnd",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.console.timeLog",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.console.timeLog",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.console.timeStamp",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.console.timeStamp",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.console.trace",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.console.trace",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.console.warn",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.console.warn",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.ConvolverNode",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.ConvolverNode",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.ConvolverNode",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.ConvolverNode",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.ConvolverNode",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.CountQueuingStrategy",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.CountQueuingStrategy",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.CountQueuingStrategy",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.CountQueuingStrategy",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.CountQueuingStrategy",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.Credential",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.Credential",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.Credential",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.Credential",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Credential",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.CredentialsContainer",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.CredentialsContainer",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.CredentialsContainer",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.CredentialsContainer",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.CredentialsContainer",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.CredentialsContainer.prototype.create",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.CredentialsContainer.prototype.create",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.CredentialsContainer.prototype.get",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.CredentialsContainer.prototype.get",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.CredentialsContainer.prototype.preventSilentAccess",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.CredentialsContainer.prototype.preventSilentAccess",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.CredentialsContainer.prototype.store",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.CredentialsContainer.prototype.store",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Crypto",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.Crypto",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.Crypto",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.Crypto",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Crypto",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.Crypto.prototype",
      "propertyName": "subtle",
      "throughProperty": "subtle",
      "prevProperty": null
    },
    {
      "path": "window.Crypto.prototype",
      "propertyName": "getRandomValues",
      "throughProperty": "getRandomValues",
      "prevProperty": "subtle"
    },
    {
      "path": "window.Crypto.prototype.getRandomValues",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Crypto.prototype.getRandomValues",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.CryptoKey",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.CryptoKey",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.CryptoKey",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.CryptoKey",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.CryptoKey",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.CSS",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.CSS",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.CSS",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.CSS",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.CSS",
      "propertyName": "supports",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.CSS.escape",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.CSS.escape",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.CSS.supports",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.CSS.supports",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.CSSFontFaceRule",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.CSSFontFaceRule",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.CSSFontFaceRule",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.CSSFontFaceRule",
      "propertyName": "STYLE_RULE",
      "throughProperty": "PAGE_RULE",
      "prevProperty": "UNKNOWN_RULE"
    },
    {
      "path": "window.CSSFontFaceRule",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "WEBKIT_KEYFRAME_RULE"
    },
    {
      "path": "window.CSSFontFaceRule",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.CSSFontFaceRule",
      "propertyName": "KEYFRAMES_RULE",
      "throughProperty": "KEYFRAME_RULE",
      "prevProperty": "PAGE_RULE"
    },
    {
      "path": "window.CSSFontFaceRule",
      "propertyName": "NAMESPACE_RULE",
      "throughProperty": "NAMESPACE_RULE",
      "prevProperty": "KEYFRAME_RULE"
    },
    {
      "path": "window.CSSFontFaceRule",
      "propertyName": "SUPPORTS_RULE",
      "throughProperty": "SUPPORTS_RULE",
      "prevProperty": "NAMESPACE_RULE"
    },
    {
      "path": "window.CSSFontFaceRule.prototype",
      "propertyName": "KEYFRAMES_RULE",
      "throughProperty": "KEYFRAME_RULE",
      "prevProperty": "PAGE_RULE"
    },
    {
      "path": "window.CSSFontFaceRule.prototype",
      "propertyName": "NAMESPACE_RULE",
      "throughProperty": "NAMESPACE_RULE",
      "prevProperty": "KEYFRAME_RULE"
    },
    {
      "path": "window.CSSImportRule",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.CSSImportRule",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.CSSImportRule",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.CSSImportRule",
      "propertyName": "STYLE_RULE",
      "throughProperty": "PAGE_RULE",
      "prevProperty": "UNKNOWN_RULE"
    },
    {
      "path": "window.CSSImportRule",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "WEBKIT_KEYFRAME_RULE"
    },
    {
      "path": "window.CSSImportRule",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.CSSImportRule",
      "propertyName": "KEYFRAMES_RULE",
      "throughProperty": "KEYFRAME_RULE",
      "prevProperty": "PAGE_RULE"
    },
    {
      "path": "window.CSSImportRule",
      "propertyName": "NAMESPACE_RULE",
      "throughProperty": "NAMESPACE_RULE",
      "prevProperty": "KEYFRAME_RULE"
    },
    {
      "path": "window.CSSImportRule",
      "propertyName": "SUPPORTS_RULE",
      "throughProperty": "SUPPORTS_RULE",
      "prevProperty": "NAMESPACE_RULE"
    },
    {
      "path": "window.CSSImportRule.prototype",
      "propertyName": "KEYFRAMES_RULE",
      "throughProperty": "KEYFRAME_RULE",
      "prevProperty": "PAGE_RULE"
    },
    {
      "path": "window.CSSImportRule.prototype",
      "propertyName": "NAMESPACE_RULE",
      "throughProperty": "NAMESPACE_RULE",
      "prevProperty": "KEYFRAME_RULE"
    },
    {
      "path": "window.CSSKeyframeRule",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.CSSKeyframeRule",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.CSSKeyframeRule",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.CSSKeyframeRule",
      "propertyName": "STYLE_RULE",
      "throughProperty": "PAGE_RULE",
      "prevProperty": "UNKNOWN_RULE"
    },
    {
      "path": "window.CSSKeyframeRule",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "WEBKIT_KEYFRAME_RULE"
    },
    {
      "path": "window.CSSKeyframeRule",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.CSSKeyframeRule",
      "propertyName": "KEYFRAMES_RULE",
      "throughProperty": "KEYFRAME_RULE",
      "prevProperty": "PAGE_RULE"
    },
    {
      "path": "window.CSSKeyframeRule",
      "propertyName": "NAMESPACE_RULE",
      "throughProperty": "NAMESPACE_RULE",
      "prevProperty": "KEYFRAME_RULE"
    },
    {
      "path": "window.CSSKeyframeRule",
      "propertyName": "SUPPORTS_RULE",
      "throughProperty": "SUPPORTS_RULE",
      "prevProperty": "NAMESPACE_RULE"
    },
    {
      "path": "window.CSSKeyframeRule.prototype",
      "propertyName": "KEYFRAMES_RULE",
      "throughProperty": "KEYFRAME_RULE",
      "prevProperty": "PAGE_RULE"
    },
    {
      "path": "window.CSSKeyframeRule.prototype",
      "propertyName": "NAMESPACE_RULE",
      "throughProperty": "NAMESPACE_RULE",
      "prevProperty": "KEYFRAME_RULE"
    },
    {
      "path": "window.CSSKeyframesRule",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.CSSKeyframesRule",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.CSSKeyframesRule",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.CSSKeyframesRule",
      "propertyName": "STYLE_RULE",
      "throughProperty": "PAGE_RULE",
      "prevProperty": "UNKNOWN_RULE"
    },
    {
      "path": "window.CSSKeyframesRule",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "WEBKIT_KEYFRAME_RULE"
    },
    {
      "path": "window.CSSKeyframesRule",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.CSSKeyframesRule",
      "propertyName": "KEYFRAMES_RULE",
      "throughProperty": "KEYFRAME_RULE",
      "prevProperty": "PAGE_RULE"
    },
    {
      "path": "window.CSSKeyframesRule",
      "propertyName": "NAMESPACE_RULE",
      "throughProperty": "NAMESPACE_RULE",
      "prevProperty": "KEYFRAME_RULE"
    },
    {
      "path": "window.CSSKeyframesRule",
      "propertyName": "SUPPORTS_RULE",
      "throughProperty": "SUPPORTS_RULE",
      "prevProperty": "NAMESPACE_RULE"
    },
    {
      "path": "window.CSSKeyframesRule.prototype",
      "propertyName": "appendRule",
      "throughProperty": "PAGE_RULE",
      "prevProperty": "insertRule"
    },
    {
      "path": "window.CSSKeyframesRule.prototype",
      "propertyName": "NAMESPACE_RULE",
      "throughProperty": "NAMESPACE_RULE",
      "prevProperty": "KEYFRAME_RULE"
    },
    {
      "path": "window.CSSKeyframesRule.prototype",
      "propertyName": "SUPPORTS_RULE",
      "throughProperty": "SUPPORTS_RULE",
      "prevProperty": "NAMESPACE_RULE"
    },
    {
      "path": "window.CSSKeyframesRule.prototype.appendRule",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.CSSKeyframesRule.prototype.appendRule",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.CSSKeyframesRule.prototype.deleteRule",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.CSSKeyframesRule.prototype.deleteRule",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.CSSKeyframesRule.prototype.findRule",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.CSSKeyframesRule.prototype.findRule",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.CSSMediaRule",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.CSSMediaRule",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.CSSMediaRule",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.CSSMediaRule",
      "propertyName": "STYLE_RULE",
      "throughProperty": "PAGE_RULE",
      "prevProperty": "UNKNOWN_RULE"
    },
    {
      "path": "window.CSSMediaRule",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "WEBKIT_KEYFRAME_RULE"
    },
    {
      "path": "window.CSSMediaRule",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.CSSMediaRule",
      "propertyName": "KEYFRAMES_RULE",
      "throughProperty": "KEYFRAME_RULE",
      "prevProperty": "PAGE_RULE"
    },
    {
      "path": "window.CSSMediaRule",
      "propertyName": "NAMESPACE_RULE",
      "throughProperty": "NAMESPACE_RULE",
      "prevProperty": "KEYFRAME_RULE"
    },
    {
      "path": "window.CSSMediaRule",
      "propertyName": "SUPPORTS_RULE",
      "throughProperty": "SUPPORTS_RULE",
      "prevProperty": "NAMESPACE_RULE"
    },
    {
      "path": "window.CSSMediaRule.prototype",
      "propertyName": "KEYFRAMES_RULE",
      "throughProperty": "KEYFRAME_RULE",
      "prevProperty": "PAGE_RULE"
    },
    {
      "path": "window.CSSMediaRule.prototype",
      "propertyName": "NAMESPACE_RULE",
      "throughProperty": "NAMESPACE_RULE",
      "prevProperty": "KEYFRAME_RULE"
    },
    {
      "path": "window.CSSMediaRule.prototype",
      "propertyName": "SUPPORTS_RULE",
      "throughProperty": "SUPPORTS_RULE",
      "prevProperty": "NAMESPACE_RULE"
    },
    {
      "path": "window.CSSNamespaceRule",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.CSSNamespaceRule",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.CSSNamespaceRule",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.CSSNamespaceRule",
      "propertyName": "STYLE_RULE",
      "throughProperty": "PAGE_RULE",
      "prevProperty": "UNKNOWN_RULE"
    },
    {
      "path": "window.CSSNamespaceRule",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "WEBKIT_KEYFRAME_RULE"
    },
    {
      "path": "window.CSSNamespaceRule",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.CSSNamespaceRule",
      "propertyName": "KEYFRAMES_RULE",
      "throughProperty": "KEYFRAME_RULE",
      "prevProperty": "PAGE_RULE"
    },
    {
      "path": "window.CSSNamespaceRule",
      "propertyName": "NAMESPACE_RULE",
      "throughProperty": "NAMESPACE_RULE",
      "prevProperty": "KEYFRAME_RULE"
    },
    {
      "path": "window.CSSNamespaceRule",
      "propertyName": "SUPPORTS_RULE",
      "throughProperty": "SUPPORTS_RULE",
      "prevProperty": "NAMESPACE_RULE"
    },
    {
      "path": "window.CSSNamespaceRule.prototype",
      "propertyName": "KEYFRAMES_RULE",
      "throughProperty": "KEYFRAME_RULE",
      "prevProperty": "PAGE_RULE"
    },
    {
      "path": "window.CSSNamespaceRule.prototype",
      "propertyName": "NAMESPACE_RULE",
      "throughProperty": "NAMESPACE_RULE",
      "prevProperty": "KEYFRAME_RULE"
    },
    {
      "path": "window.CSSPageRule",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.CSSPageRule",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.CSSPageRule",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.CSSPageRule",
      "propertyName": "STYLE_RULE",
      "throughProperty": "PAGE_RULE",
      "prevProperty": "UNKNOWN_RULE"
    },
    {
      "path": "window.CSSPageRule",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "WEBKIT_KEYFRAME_RULE"
    },
    {
      "path": "window.CSSPageRule",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.CSSPageRule",
      "propertyName": "KEYFRAMES_RULE",
      "throughProperty": "KEYFRAME_RULE",
      "prevProperty": "PAGE_RULE"
    },
    {
      "path": "window.CSSPageRule",
      "propertyName": "NAMESPACE_RULE",
      "throughProperty": "NAMESPACE_RULE",
      "prevProperty": "KEYFRAME_RULE"
    },
    {
      "path": "window.CSSPageRule",
      "propertyName": "SUPPORTS_RULE",
      "throughProperty": "SUPPORTS_RULE",
      "prevProperty": "NAMESPACE_RULE"
    },
    {
      "path": "window.CSSPageRule.prototype",
      "propertyName": "KEYFRAMES_RULE",
      "throughProperty": "KEYFRAME_RULE",
      "prevProperty": "PAGE_RULE"
    },
    {
      "path": "window.CSSPageRule.prototype",
      "propertyName": "NAMESPACE_RULE",
      "throughProperty": "NAMESPACE_RULE",
      "prevProperty": "KEYFRAME_RULE"
    },
    {
      "path": "window.CSSRule",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.CSSRule",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.CSSRule",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.CSSRule",
      "propertyName": "STYLE_RULE",
      "throughProperty": "PAGE_RULE",
      "prevProperty": "UNKNOWN_RULE"
    },
    {
      "path": "window.CSSRule",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "WEBKIT_KEYFRAME_RULE"
    },
    {
      "path": "window.CSSRule",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.CSSRule",
      "propertyName": "KEYFRAMES_RULE",
      "throughProperty": "KEYFRAME_RULE",
      "prevProperty": "PAGE_RULE"
    },
    {
      "path": "window.CSSRule",
      "propertyName": "NAMESPACE_RULE",
      "throughProperty": "NAMESPACE_RULE",
      "prevProperty": "KEYFRAME_RULE"
    },
    {
      "path": "window.CSSRule",
      "propertyName": "SUPPORTS_RULE",
      "throughProperty": "SUPPORTS_RULE",
      "prevProperty": "NAMESPACE_RULE"
    },
    {
      "path": "window.CSSRule.prototype",
      "propertyName": "STYLE_RULE",
      "throughProperty": "PAGE_RULE",
      "prevProperty": "UNKNOWN_RULE"
    },
    {
      "path": "window.CSSRule.prototype",
      "propertyName": "type",
      "throughProperty": "cssText",
      "prevProperty": null
    },
    {
      "path": "window.CSSRule.prototype",
      "propertyName": "KEYFRAMES_RULE",
      "throughProperty": "KEYFRAME_RULE",
      "prevProperty": "PAGE_RULE"
    },
    {
      "path": "window.CSSRule.prototype",
      "propertyName": "NAMESPACE_RULE",
      "throughProperty": "NAMESPACE_RULE",
      "prevProperty": "KEYFRAME_RULE"
    },
    {
      "path": "window.CSSRule.prototype",
      "propertyName": "SUPPORTS_RULE",
      "throughProperty": "SUPPORTS_RULE",
      "prevProperty": "NAMESPACE_RULE"
    },
    {
      "path": "window.CSSRule.prototype",
      "propertyName": "parentStyleSheet",
      "throughProperty": "parentStyleSheet",
      "prevProperty": "cssText"
    },
    {
      "path": "window.CSSRule.prototype",
      "propertyName": "parentRule",
      "throughProperty": "parentRule",
      "prevProperty": "parentStyleSheet"
    },
    {
      "path": "window.CSSRuleList",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.CSSRuleList",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.CSSRuleList",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.CSSRuleList",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.CSSRuleList",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.CSSRuleList.prototype.item",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.CSSRuleList.prototype.item",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.CSSStyleDeclaration",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.CSSStyleDeclaration",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.CSSStyleDeclaration",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.CSSStyleDeclaration",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.CSSStyleDeclaration",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.CSSStyleDeclaration.prototype",
      "propertyName": "item",
      "throughProperty": "item",
      "prevProperty": "setProperty"
    },
    {
      "path": "window.CSSStyleDeclaration.prototype",
      "propertyName": "getPropertyValue",
      "throughProperty": "getPropertyValue",
      "prevProperty": "cssFloat"
    },
    {
      "path": "window.CSSStyleDeclaration.prototype",
      "propertyName": "removeProperty",
      "throughProperty": "removeProperty",
      "prevProperty": "getPropertyValue"
    },
    {
      "path": "window.CSSStyleDeclaration.prototype.getPropertyPriority",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.CSSStyleDeclaration.prototype.getPropertyPriority",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.CSSStyleDeclaration.prototype.getPropertyValue",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.CSSStyleDeclaration.prototype.getPropertyValue",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.CSSStyleDeclaration.prototype.item",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.CSSStyleDeclaration.prototype.item",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.CSSStyleDeclaration.prototype.removeProperty",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.CSSStyleDeclaration.prototype.removeProperty",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.CSSStyleDeclaration.prototype.setProperty",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.CSSStyleDeclaration.prototype.setProperty",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.CSSStyleRule",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.CSSStyleRule",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.CSSStyleRule",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.CSSStyleRule",
      "propertyName": "STYLE_RULE",
      "throughProperty": "PAGE_RULE",
      "prevProperty": "UNKNOWN_RULE"
    },
    {
      "path": "window.CSSStyleRule",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "WEBKIT_KEYFRAME_RULE"
    },
    {
      "path": "window.CSSStyleRule",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.CSSStyleRule",
      "propertyName": "KEYFRAMES_RULE",
      "throughProperty": "KEYFRAME_RULE",
      "prevProperty": "PAGE_RULE"
    },
    {
      "path": "window.CSSStyleRule",
      "propertyName": "NAMESPACE_RULE",
      "throughProperty": "NAMESPACE_RULE",
      "prevProperty": "KEYFRAME_RULE"
    },
    {
      "path": "window.CSSStyleRule",
      "propertyName": "SUPPORTS_RULE",
      "throughProperty": "SUPPORTS_RULE",
      "prevProperty": "NAMESPACE_RULE"
    },
    {
      "path": "window.CSSStyleRule.prototype",
      "propertyName": "KEYFRAMES_RULE",
      "throughProperty": "KEYFRAME_RULE",
      "prevProperty": "PAGE_RULE"
    },
    {
      "path": "window.CSSStyleRule.prototype",
      "propertyName": "NAMESPACE_RULE",
      "throughProperty": "NAMESPACE_RULE",
      "prevProperty": "KEYFRAME_RULE"
    },
    {
      "path": "window.CSSStyleSheet",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.CSSStyleSheet",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.CSSStyleSheet",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.CSSStyleSheet",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.CSSStyleSheet",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.CSSStyleSheet.prototype.addRule",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.CSSStyleSheet.prototype.addRule",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.CSSStyleSheet.prototype.deleteRule",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.CSSStyleSheet.prototype.deleteRule",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.CSSStyleSheet.prototype.insertRule",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.CSSStyleSheet.prototype.insertRule",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.CSSStyleSheet.prototype.removeRule",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.CSSStyleSheet.prototype.removeRule",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.CSSSupportsRule",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.CSSSupportsRule",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.CSSSupportsRule",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.CSSSupportsRule",
      "propertyName": "STYLE_RULE",
      "throughProperty": "PAGE_RULE",
      "prevProperty": "UNKNOWN_RULE"
    },
    {
      "path": "window.CSSSupportsRule",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "WEBKIT_KEYFRAME_RULE"
    },
    {
      "path": "window.CSSSupportsRule",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.CSSSupportsRule",
      "propertyName": "KEYFRAMES_RULE",
      "throughProperty": "KEYFRAME_RULE",
      "prevProperty": "PAGE_RULE"
    },
    {
      "path": "window.CSSSupportsRule",
      "propertyName": "NAMESPACE_RULE",
      "throughProperty": "NAMESPACE_RULE",
      "prevProperty": "KEYFRAME_RULE"
    },
    {
      "path": "window.CSSSupportsRule",
      "propertyName": "SUPPORTS_RULE",
      "throughProperty": "SUPPORTS_RULE",
      "prevProperty": "NAMESPACE_RULE"
    },
    {
      "path": "window.CSSSupportsRule.prototype",
      "propertyName": "KEYFRAMES_RULE",
      "throughProperty": "KEYFRAME_RULE",
      "prevProperty": "PAGE_RULE"
    },
    {
      "path": "window.CSSSupportsRule.prototype",
      "propertyName": "NAMESPACE_RULE",
      "throughProperty": "NAMESPACE_RULE",
      "prevProperty": "KEYFRAME_RULE"
    },
    {
      "path": "window.CSSSupportsRule.prototype",
      "propertyName": "SUPPORTS_RULE",
      "throughProperty": "SUPPORTS_RULE",
      "prevProperty": "NAMESPACE_RULE"
    },
    {
      "path": "window.CustomElementRegistry",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.CustomElementRegistry",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.CustomElementRegistry",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.CustomElementRegistry",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.CustomElementRegistry",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.CustomElementRegistry.prototype.define",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.CustomElementRegistry.prototype.define",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.CustomElementRegistry.prototype.get",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.CustomElementRegistry.prototype.get",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.CustomElementRegistry.prototype.upgrade",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.CustomElementRegistry.prototype.upgrade",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.CustomElementRegistry.prototype.whenDefined",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.CustomElementRegistry.prototype.whenDefined",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.CustomEvent",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.CustomEvent",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.CustomEvent",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.CustomEvent",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.CustomEvent",
      "propertyName": "NONE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.CustomEvent.prototype.initCustomEvent",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.CustomEvent.prototype.initCustomEvent",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.DataTransfer",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.DataTransfer",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.DataTransfer",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.DataTransfer",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.DataTransfer",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.DataTransfer.prototype.clearData",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.DataTransfer.prototype.clearData",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.DataTransfer.prototype.getData",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.DataTransfer.prototype.getData",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.DataTransfer.prototype.setData",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.DataTransfer.prototype.setData",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.DataTransfer.prototype.setDragImage",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.DataTransfer.prototype.setDragImage",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.DataTransferItem",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.DataTransferItem",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.DataTransferItem",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.DataTransferItem",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.DataTransferItem",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.DataTransferItem.prototype.getAsFile",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.DataTransferItem.prototype.getAsFile",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.DataTransferItem.prototype.getAsString",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.DataTransferItem.prototype.getAsString",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.DataTransferItem.prototype.webkitGetAsEntry",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.DataTransferItem.prototype.webkitGetAsEntry",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.DataTransferItemList",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.DataTransferItemList",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.DataTransferItemList",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.DataTransferItemList",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.DataTransferItemList",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.DataTransferItemList.prototype.add",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.DataTransferItemList.prototype.add",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.DataTransferItemList.prototype.clear",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.DataTransferItemList.prototype.clear",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.DataTransferItemList.prototype.remove",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.DataTransferItemList.prototype.remove",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.DataView",
      "propertyName": "name",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.DataView",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "BYTES_PER_ELEMENT"
    },
    {
      "path": "window.DataView",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "prototype"
    },
    {
      "path": "window.DataView.prototype",
      "propertyName": "getInt8",
      "throughProperty": "getInt8",
      "prevProperty": null
    },
    {
      "path": "window.DataView.prototype",
      "propertyName": "setUint32",
      "throughProperty": "setUint32",
      "prevProperty": "setInt32"
    },
    {
      "path": "window.DataView.prototype",
      "propertyName": "buffer",
      "throughProperty": "byteOffset",
      "prevProperty": "setFloat64"
    },
    {
      "path": "window.DataView.prototype",
      "propertyName": "setInt8",
      "throughProperty": "setInt8",
      "prevProperty": "getFloat64"
    },
    {
      "path": "window.DataView.prototype",
      "propertyName": "getUint8",
      "throughProperty": "getUint8",
      "prevProperty": "getInt8"
    },
    {
      "path": "window.DataView.prototype",
      "propertyName": "setUint8",
      "throughProperty": "setUint8",
      "prevProperty": "setInt8"
    },
    {
      "path": "window.DataView.prototype",
      "propertyName": "getInt16",
      "throughProperty": "getInt16",
      "prevProperty": "getUint8"
    },
    {
      "path": "window.DataView.prototype",
      "propertyName": "setInt16",
      "throughProperty": "setInt16",
      "prevProperty": "setUint8"
    },
    {
      "path": "window.DataView.prototype",
      "propertyName": "getUint16",
      "throughProperty": "getUint16",
      "prevProperty": "getInt16"
    },
    {
      "path": "window.DataView.prototype",
      "propertyName": "setUint16",
      "throughProperty": "setUint16",
      "prevProperty": "setInt16"
    },
    {
      "path": "window.DataView.prototype",
      "propertyName": "getInt32",
      "throughProperty": "getInt32",
      "prevProperty": "getUint16"
    },
    {
      "path": "window.DataView.prototype",
      "propertyName": "getUint32",
      "throughProperty": "getUint32",
      "prevProperty": "getInt32"
    },
    {
      "path": "window.DataView.prototype",
      "propertyName": "getFloat32",
      "throughProperty": "getFloat32",
      "prevProperty": "getUint32"
    },
    {
      "path": "window.DataView.prototype",
      "propertyName": "setFloat32",
      "throughProperty": "setFloat32",
      "prevProperty": "setUint32"
    },
    {
      "path": "window.DataView.prototype",
      "propertyName": "getFloat64",
      "throughProperty": "getFloat64",
      "prevProperty": "getFloat32"
    },
    {
      "path": "window.DataView.prototype",
      "propertyName": "setFloat64",
      "throughProperty": "setFloat64",
      "prevProperty": "setFloat32"
    },
    {
      "path": "window.DataView.prototype.getFloat32",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.DataView.prototype.getFloat32",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.DataView.prototype.getFloat64",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.DataView.prototype.getFloat64",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.DataView.prototype.getInt16",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.DataView.prototype.getInt16",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.DataView.prototype.getInt32",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.DataView.prototype.getInt32",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.DataView.prototype.getInt8",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.DataView.prototype.getInt8",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.DataView.prototype.getUint16",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.DataView.prototype.getUint16",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.DataView.prototype.getUint32",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.DataView.prototype.getUint32",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.DataView.prototype.getUint8",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.DataView.prototype.getUint8",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.DataView.prototype.setFloat32",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.DataView.prototype.setFloat32",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.DataView.prototype.setFloat64",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.DataView.prototype.setFloat64",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.DataView.prototype.setInt16",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.DataView.prototype.setInt16",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.DataView.prototype.setInt32",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.DataView.prototype.setInt32",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.DataView.prototype.setInt8",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.DataView.prototype.setInt8",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.DataView.prototype.setUint16",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.DataView.prototype.setUint16",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.DataView.prototype.setUint32",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.DataView.prototype.setUint32",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.DataView.prototype.setUint8",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.DataView.prototype.setUint8",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Date",
      "propertyName": "parse",
      "throughProperty": "UTC",
      "prevProperty": null
    },
    {
      "path": "window.Date",
      "propertyName": "name",
      "throughProperty": "prototype",
      "prevProperty": "now"
    },
    {
      "path": "window.Date",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "prototype"
    },
    {
      "path": "window.Date",
      "propertyName": "now",
      "throughProperty": "now",
      "prevProperty": "UTC"
    },
    {
      "path": "window.Date.now",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Date.now",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Date.parse",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Date.parse",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Date.prototype",
      "propertyName": "getUTCFullYear",
      "throughProperty": "getUTCFullYear",
      "prevProperty": "getFullYear"
    },
    {
      "path": "window.Date.prototype",
      "propertyName": "getYear",
      "throughProperty": "getYear",
      "prevProperty": "setYear"
    },
    {
      "path": "window.Date.prototype",
      "propertyName": "toISOString",
      "throughProperty": "toISOString",
      "prevProperty": "toString"
    },
    {
      "path": "window.Date.prototype",
      "propertyName": "toDateString",
      "throughProperty": "toTimeString",
      "prevProperty": "toISOString"
    },
    {
      "path": "window.Date.prototype",
      "propertyName": "toUTCString",
      "throughProperty": "toGMTString",
      "prevProperty": "toJSON"
    },
    {
      "path": "window.Date.prototype",
      "propertyName": "getDate",
      "throughProperty": "getDate",
      "prevProperty": "getUTCMonth"
    },
    {
      "path": "window.Date.prototype",
      "propertyName": "setDate",
      "throughProperty": "setDate",
      "prevProperty": "setUTCHours"
    },
    {
      "path": "window.Date.prototype",
      "propertyName": "getDay",
      "throughProperty": "getDay",
      "prevProperty": "getUTCDate"
    },
    {
      "path": "window.Date.prototype",
      "propertyName": "setFullYear",
      "throughProperty": "setFullYear",
      "prevProperty": "setUTCMonth"
    },
    {
      "path": "window.Date.prototype",
      "propertyName": "getHours",
      "throughProperty": "getHours",
      "prevProperty": "getUTCDay"
    },
    {
      "path": "window.Date.prototype",
      "propertyName": "setHours",
      "throughProperty": "setHours",
      "prevProperty": "setUTCMinutes"
    },
    {
      "path": "window.Date.prototype",
      "propertyName": "getMilliseconds",
      "throughProperty": "getMilliseconds",
      "prevProperty": "getUTCSeconds"
    },
    {
      "path": "window.Date.prototype",
      "propertyName": "setMilliseconds",
      "throughProperty": "setMilliseconds",
      "prevProperty": "setTime"
    },
    {
      "path": "window.Date.prototype",
      "propertyName": "getMinutes",
      "throughProperty": "getMinutes",
      "prevProperty": "getUTCHours"
    },
    {
      "path": "window.Date.prototype",
      "propertyName": "setMinutes",
      "throughProperty": "setMinutes",
      "prevProperty": "setUTCSeconds"
    },
    {
      "path": "window.Date.prototype",
      "propertyName": "getMonth",
      "throughProperty": "getMonth",
      "prevProperty": "getUTCFullYear"
    },
    {
      "path": "window.Date.prototype",
      "propertyName": "setMonth",
      "throughProperty": "setMonth",
      "prevProperty": "setUTCDate"
    },
    {
      "path": "window.Date.prototype",
      "propertyName": "getSeconds",
      "throughProperty": "getSeconds",
      "prevProperty": "getUTCMinutes"
    },
    {
      "path": "window.Date.prototype",
      "propertyName": "setSeconds",
      "throughProperty": "setSeconds",
      "prevProperty": "setUTCMilliseconds"
    },
    {
      "path": "window.Date.prototype",
      "propertyName": "getTime",
      "throughProperty": "getTime",
      "prevProperty": "valueOf"
    },
    {
      "path": "window.Date.prototype",
      "propertyName": "getTimezoneOffset",
      "throughProperty": "getTimezoneOffset",
      "prevProperty": "getUTCMilliseconds"
    },
    {
      "path": "window.Date.prototype",
      "propertyName": "setTime",
      "throughProperty": "setTime",
      "prevProperty": "getTimezoneOffset"
    },
    {
      "path": "window.Date.prototype",
      "propertyName": "getUTCDate",
      "throughProperty": "getUTCDate",
      "prevProperty": "getDate"
    },
    {
      "path": "window.Date.prototype",
      "propertyName": "setUTCDate",
      "throughProperty": "setUTCDate",
      "prevProperty": "setDate"
    },
    {
      "path": "window.Date.prototype",
      "propertyName": "getUTCDay",
      "throughProperty": "getUTCDay",
      "prevProperty": "getDay"
    },
    {
      "path": "window.Date.prototype",
      "propertyName": "setUTCFullYear",
      "throughProperty": "setUTCFullYear",
      "prevProperty": "setFullYear"
    },
    {
      "path": "window.Date.prototype",
      "propertyName": "getUTCHours",
      "throughProperty": "getUTCHours",
      "prevProperty": "getHours"
    },
    {
      "path": "window.Date.prototype",
      "propertyName": "setUTCHours",
      "throughProperty": "setUTCHours",
      "prevProperty": "setHours"
    },
    {
      "path": "window.Date.prototype",
      "propertyName": "getUTCMilliseconds",
      "throughProperty": "getUTCMilliseconds",
      "prevProperty": "getMilliseconds"
    },
    {
      "path": "window.Date.prototype",
      "propertyName": "setUTCMilliseconds",
      "throughProperty": "setUTCMilliseconds",
      "prevProperty": "setMilliseconds"
    },
    {
      "path": "window.Date.prototype",
      "propertyName": "getUTCMinutes",
      "throughProperty": "getUTCMinutes",
      "prevProperty": "getMinutes"
    },
    {
      "path": "window.Date.prototype",
      "propertyName": "setUTCMinutes",
      "throughProperty": "setUTCMinutes",
      "prevProperty": "setMinutes"
    },
    {
      "path": "window.Date.prototype",
      "propertyName": "getUTCMonth",
      "throughProperty": "getUTCMonth",
      "prevProperty": "getMonth"
    },
    {
      "path": "window.Date.prototype",
      "propertyName": "setUTCMonth",
      "throughProperty": "setUTCMonth",
      "prevProperty": "setMonth"
    },
    {
      "path": "window.Date.prototype",
      "propertyName": "getUTCSeconds",
      "throughProperty": "getUTCSeconds",
      "prevProperty": "getSeconds"
    },
    {
      "path": "window.Date.prototype",
      "propertyName": "setUTCSeconds",
      "throughProperty": "setUTCSeconds",
      "prevProperty": "setSeconds"
    },
    {
      "path": "window.Date.prototype",
      "propertyName": "valueOf",
      "throughProperty": "valueOf",
      "prevProperty": "toLocaleTimeString"
    },
    {
      "path": "window.Date.prototype",
      "propertyName": "toJSON",
      "throughProperty": "toJSON",
      "prevProperty": "getYear"
    },
    {
      "path": "window.Date.prototype",
      "propertyName": "toLocaleString",
      "throughProperty": "toLocaleTimeString",
      "prevProperty": "toTimeString"
    },
    {
      "path": "window.Date.prototype.getDate",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Date.prototype.getDate",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Date.prototype.getDay",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Date.prototype.getDay",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Date.prototype.getFullYear",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Date.prototype.getFullYear",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Date.prototype.getHours",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Date.prototype.getHours",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Date.prototype.getMilliseconds",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Date.prototype.getMilliseconds",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Date.prototype.getMinutes",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Date.prototype.getMinutes",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Date.prototype.getMonth",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Date.prototype.getMonth",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Date.prototype.getSeconds",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Date.prototype.getSeconds",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Date.prototype.getTime",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Date.prototype.getTime",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Date.prototype.getTimezoneOffset",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Date.prototype.getTimezoneOffset",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Date.prototype.getUTCDate",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Date.prototype.getUTCDate",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Date.prototype.getUTCDay",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Date.prototype.getUTCDay",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Date.prototype.getUTCFullYear",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Date.prototype.getUTCFullYear",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Date.prototype.getUTCHours",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Date.prototype.getUTCHours",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Date.prototype.getUTCMilliseconds",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Date.prototype.getUTCMilliseconds",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Date.prototype.getUTCMinutes",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Date.prototype.getUTCMinutes",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Date.prototype.getUTCMonth",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Date.prototype.getUTCMonth",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Date.prototype.getUTCSeconds",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Date.prototype.getUTCSeconds",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Date.prototype.getYear",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Date.prototype.getYear",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Date.prototype.setDate",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Date.prototype.setDate",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Date.prototype.setFullYear",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Date.prototype.setFullYear",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Date.prototype.setHours",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Date.prototype.setHours",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Date.prototype.setMilliseconds",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Date.prototype.setMilliseconds",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Date.prototype.setMinutes",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Date.prototype.setMinutes",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Date.prototype.setMonth",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Date.prototype.setMonth",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Date.prototype.setSeconds",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Date.prototype.setSeconds",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Date.prototype.setTime",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Date.prototype.setTime",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Date.prototype.setUTCDate",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Date.prototype.setUTCDate",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Date.prototype.setUTCFullYear",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Date.prototype.setUTCFullYear",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Date.prototype.setUTCHours",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Date.prototype.setUTCHours",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Date.prototype.setUTCMilliseconds",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Date.prototype.setUTCMilliseconds",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Date.prototype.setUTCMinutes",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Date.prototype.setUTCMinutes",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Date.prototype.setUTCMonth",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Date.prototype.setUTCMonth",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Date.prototype.setUTCSeconds",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Date.prototype.setUTCSeconds",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Date.prototype.setYear",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Date.prototype.setYear",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Date.prototype.Symbol(Symbol.toPrimitive)",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Date.prototype.Symbol(Symbol.toPrimitive)",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Date.prototype.toDateString",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Date.prototype.toDateString",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Date.prototype.toISOString",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Date.prototype.toISOString",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Date.prototype.toJSON",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Date.prototype.toJSON",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Date.prototype.toString",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Date.prototype.toString",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Date.prototype.toTimeString",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Date.prototype.toTimeString",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Date.prototype.toUTCString",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Date.prototype.toUTCString",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Date.prototype.valueOf",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Date.prototype.valueOf",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Date.UTC",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Date.UTC",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.decodeURI",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.decodeURI",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.decodeURIComponent",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.decodeURIComponent",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.DelayNode",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.DelayNode",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.DelayNode",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.DelayNode",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.DelayNode",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.document",
      "propertyName": "designMode",
      "throughProperty": "onreadystatechange",
      "prevProperty": "currentScript"
    },
    {
      "path": "window.document",
      "propertyName": "ongotpointercapture",
      "throughProperty": "onpointerleave",
      "prevProperty": "onanimationcancel"
    },
    {
      "path": "window.document",
      "propertyName": "onanimationend",
      "throughProperty": "onanimationstart",
      "prevProperty": "ontransitioncancel"
    },
    {
      "path": "window.document",
      "propertyName": "webkitCurrentFullScreenElement",
      "throughProperty": "webkitCurrentFullScreenElement",
      "prevProperty": "webkitFullScreenKeyboardInputAllowed"
    },
    {
      "path": "window.document",
      "propertyName": "compatMode",
      "throughProperty": "documentElement",
      "prevProperty": "origin"
    },
    {
      "path": "window.document",
      "propertyName": "xmlEncoding",
      "throughProperty": "xmlStandalone",
      "prevProperty": "onvisibilitychange"
    },
    {
      "path": "window.document",
      "propertyName": "domain",
      "throughProperty": "dir",
      "prevProperty": "documentElement"
    },
    {
      "path": "window.document",
      "propertyName": "fgColor",
      "throughProperty": "all",
      "prevProperty": "xmlStandalone"
    },
    {
      "path": "window.document",
      "propertyName": "hidden",
      "throughProperty": "onvisibilitychange",
      "prevProperty": "onreadystatechange"
    },
    {
      "path": "window.document",
      "propertyName": "oncopy",
      "throughProperty": "onpaste",
      "prevProperty": "all"
    },
    {
      "path": "window.document",
      "propertyName": "pointerLockElement",
      "throughProperty": "onratechange",
      "prevProperty": "webkitCurrentFullScreenElement"
    },
    {
      "path": "window.document",
      "propertyName": "onreset",
      "throughProperty": "ontoggle",
      "prevProperty": "onrejectionhandled"
    },
    {
      "path": "window.document",
      "propertyName": "onvolumechange",
      "throughProperty": "onwaiting",
      "prevProperty": "onunhandledrejection"
    },
    {
      "path": "window.document",
      "propertyName": "ontransitionend",
      "throughProperty": "ontransitionend",
      "prevProperty": "onwaiting"
    },
    {
      "path": "window.document",
      "propertyName": "children",
      "throughProperty": "childElementCount",
      "prevProperty": "onpointerleave"
    },
    {
      "path": "window.document",
      "propertyName": "webkitFullscreenEnabled",
      "throughProperty": "webkitFullscreenElement",
      "prevProperty": "onpaste"
    },
    {
      "path": "window.document",
      "propertyName": "webkitIsFullScreen",
      "throughProperty": "webkitIsFullScreen",
      "prevProperty": "webkitFullscreenElement"
    },
    {
      "path": "window.document",
      "propertyName": "rootElement",
      "throughProperty": "rootElement",
      "prevProperty": "childElementCount"
    },
    {
      "path": "window.document",
      "propertyName": "nodeType",
      "throughProperty": "textContent",
      "prevProperty": "rootElement"
    },
    {
      "path": "window.document",
      "propertyName": "ELEMENT_NODE",
      "throughProperty": "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC",
      "prevProperty": "textContent"
    },
    {
      "path": "window.Document",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.Document",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.Document",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.Document",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Document",
      "propertyName": "ELEMENT_NODE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.document.documentElement",
      "propertyName": "title",
      "throughProperty": "dir",
      "prevProperty": "manifest"
    },
    {
      "path": "window.document.documentElement",
      "propertyName": "inputMode",
      "throughProperty": "inputMode",
      "prevProperty": "webkitdropzone"
    },
    {
      "path": "window.document.documentElement",
      "propertyName": "oncopy",
      "throughProperty": "onpaste",
      "prevProperty": "ariaValueText"
    },
    {
      "path": "window.document.documentElement",
      "propertyName": "ongotpointercapture",
      "throughProperty": "onpointerleave",
      "prevProperty": "onanimationcancel"
    },
    {
      "path": "window.document.documentElement",
      "propertyName": "onanimationend",
      "throughProperty": "onanimationstart",
      "prevProperty": "ontransitioncancel"
    },
    {
      "path": "window.document.documentElement",
      "propertyName": "parentElement",
      "throughProperty": "textContent",
      "prevProperty": "ownerDocument"
    },
    {
      "path": "window.document.documentElement",
      "propertyName": "hidden",
      "throughProperty": "hidden",
      "prevProperty": "dataset"
    },
    {
      "path": "window.document.documentElement",
      "propertyName": "accessKey",
      "throughProperty": "spellcheck",
      "prevProperty": "tabIndex"
    },
    {
      "path": "window.document.documentElement",
      "propertyName": "innerText",
      "throughProperty": "innerText",
      "prevProperty": "spellcheck"
    },
    {
      "path": "window.document.documentElement",
      "propertyName": "contentEditable",
      "throughProperty": "isContentEditable",
      "prevProperty": "innerText"
    },
    {
      "path": "window.document.documentElement",
      "propertyName": "offsetParent",
      "throughProperty": "offsetHeight",
      "prevProperty": "isContentEditable"
    },
    {
      "path": "window.document.documentElement",
      "propertyName": "style",
      "throughProperty": "style",
      "prevProperty": "inputMode"
    },
    {
      "path": "window.document.documentElement",
      "propertyName": "outerText",
      "throughProperty": "outerText",
      "prevProperty": "offsetHeight"
    },
    {
      "path": "window.document.documentElement",
      "propertyName": "onabort",
      "throughProperty": "onratechange",
      "prevProperty": "style"
    },
    {
      "path": "window.document.documentElement",
      "propertyName": "onreset",
      "throughProperty": "ontoggle",
      "prevProperty": "onrejectionhandled"
    },
    {
      "path": "window.document.documentElement",
      "propertyName": "onvolumechange",
      "throughProperty": "onwaiting",
      "prevProperty": "onunhandledrejection"
    },
    {
      "path": "window.document.documentElement",
      "propertyName": "ontransitionend",
      "throughProperty": "ontransitionend",
      "prevProperty": "onwaiting"
    },
    {
      "path": "window.document.documentElement",
      "propertyName": "dataset",
      "throughProperty": "dataset",
      "prevProperty": "dir"
    },
    {
      "path": "window.document.documentElement",
      "propertyName": "tabIndex",
      "throughProperty": "tabIndex",
      "prevProperty": "hidden"
    },
    {
      "path": "window.document.documentElement",
      "propertyName": "namespaceURI",
      "throughProperty": "shadowRoot",
      "prevProperty": "onpointerleave"
    },
    {
      "path": "window.document.documentElement",
      "propertyName": "assignedSlot",
      "throughProperty": "assignedSlot",
      "prevProperty": "childElementCount"
    },
    {
      "path": "window.document.documentElement",
      "propertyName": "scrollTop",
      "throughProperty": "clientHeight",
      "prevProperty": "shadowRoot"
    },
    {
      "path": "window.document.documentElement",
      "propertyName": "innerHTML",
      "throughProperty": "outerHTML",
      "prevProperty": "clientHeight"
    },
    {
      "path": "window.document.documentElement",
      "propertyName": "previousElementSibling",
      "throughProperty": "childElementCount",
      "prevProperty": "onpaste"
    },
    {
      "path": "window.document.documentElement",
      "propertyName": "ELEMENT_NODE",
      "throughProperty": "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC",
      "prevProperty": "textContent"
    },
    {
      "path": "window.document.documentElement",
      "propertyName": "nodeType",
      "throughProperty": "isConnected",
      "prevProperty": "assignedSlot"
    },
    {
      "path": "window.Document.prototype",
      "propertyName": "onbeforepaste",
      "throughProperty": "onbeforepaste",
      "prevProperty": "onbeforeinput"
    },
    {
      "path": "window.Document.prototype",
      "propertyName": "ongotpointercapture",
      "throughProperty": "onpointerleave",
      "prevProperty": "onanimationcancel"
    },
    {
      "path": "window.Document.prototype",
      "propertyName": "onanimationend",
      "throughProperty": "onanimationstart",
      "prevProperty": "ontransitioncancel"
    },
    {
      "path": "window.Document.prototype",
      "propertyName": "children",
      "throughProperty": "childElementCount",
      "prevProperty": "onwebkitmouseforceup"
    },
    {
      "path": "window.Document.prototype",
      "propertyName": "webkitCurrentFullScreenElement",
      "throughProperty": "webkitCurrentFullScreenElement",
      "prevProperty": "webkitFullScreenKeyboardInputAllowed"
    },
    {
      "path": "window.Document.prototype",
      "propertyName": "clear",
      "throughProperty": "releaseEvents",
      "prevProperty": "getCSSCanvasContext"
    },
    {
      "path": "window.Document.prototype",
      "propertyName": "exitPointerLock",
      "throughProperty": "exitPointerLock",
      "prevProperty": "evaluate"
    },
    {
      "path": "window.Document.prototype",
      "propertyName": "caretRangeFromPoint",
      "throughProperty": "caretRangeFromPoint",
      "prevProperty": "getOverrideStyle"
    },
    {
      "path": "window.Document.prototype",
      "propertyName": "getElementById",
      "throughProperty": "querySelectorAll",
      "prevProperty": "requestStorageAccess"
    },
    {
      "path": "window.Document.prototype",
      "propertyName": "compatMode",
      "throughProperty": "documentElement",
      "prevProperty": "origin"
    },
    {
      "path": "window.Document.prototype",
      "propertyName": "xmlEncoding",
      "throughProperty": "xmlStandalone",
      "prevProperty": "onvisibilitychange"
    },
    {
      "path": "window.Document.prototype",
      "propertyName": "domain",
      "throughProperty": "onreadystatechange",
      "prevProperty": "documentElement"
    },
    {
      "path": "window.Document.prototype",
      "propertyName": "fgColor",
      "throughProperty": "bgColor",
      "prevProperty": "onselectionchange"
    },
    {
      "path": "window.Document.prototype",
      "propertyName": "anchors",
      "throughProperty": "applets",
      "prevProperty": "bgColor"
    },
    {
      "path": "window.Document.prototype",
      "propertyName": "all",
      "throughProperty": "all",
      "prevProperty": "applets"
    },
    {
      "path": "window.Document.prototype",
      "propertyName": "scrollingElement",
      "throughProperty": "onpointerlockerror",
      "prevProperty": "onreadystatechange"
    },
    {
      "path": "window.Document.prototype",
      "propertyName": "hidden",
      "throughProperty": "visibilityState",
      "prevProperty": "fonts"
    },
    {
      "path": "window.Document.prototype",
      "propertyName": "onbeforecopy",
      "throughProperty": "onbeforecut",
      "prevProperty": "onpaste"
    },
    {
      "path": "window.Document.prototype",
      "propertyName": "onsearch",
      "throughProperty": "onsearch",
      "prevProperty": "onpointerleave"
    },
    {
      "path": "window.Document.prototype",
      "propertyName": "onvisibilitychange",
      "throughProperty": "onvisibilitychange",
      "prevProperty": "visibilityState"
    },
    {
      "path": "window.Document.prototype",
      "propertyName": "fonts",
      "throughProperty": "fonts",
      "prevProperty": "onpointerlockerror"
    },
    {
      "path": "window.Document.prototype",
      "propertyName": "oncopy",
      "throughProperty": "onpaste",
      "prevProperty": "all"
    },
    {
      "path": "window.Document.prototype",
      "propertyName": "activeElement",
      "throughProperty": "onratechange",
      "prevProperty": "onwebkitfullscreenerror"
    },
    {
      "path": "window.Document.prototype",
      "propertyName": "onreset",
      "throughProperty": "ontoggle",
      "prevProperty": "onrejectionhandled"
    },
    {
      "path": "window.Document.prototype",
      "propertyName": "onvolumechange",
      "throughProperty": "onwaiting",
      "prevProperty": "onunhandledrejection"
    },
    {
      "path": "window.Document.prototype",
      "propertyName": "onwheel",
      "throughProperty": "onwheel",
      "prevProperty": "onsearch"
    },
    {
      "path": "window.Document.prototype",
      "propertyName": "onselectstart",
      "throughProperty": "onselectionchange",
      "prevProperty": "xmlStandalone"
    },
    {
      "path": "window.Document.prototype",
      "propertyName": "ontransitionend",
      "throughProperty": "ontransitionend",
      "prevProperty": "onwaiting"
    },
    {
      "path": "window.Document.prototype",
      "propertyName": "webkitFullscreenEnabled",
      "throughProperty": "webkitFullscreenElement",
      "prevProperty": "onbeforepaste"
    },
    {
      "path": "window.Document.prototype",
      "propertyName": "webkitIsFullScreen",
      "throughProperty": "webkitIsFullScreen",
      "prevProperty": "webkitFullscreenElement"
    },
    {
      "path": "window.Document.prototype",
      "propertyName": "onwebkitfullscreenchange",
      "throughProperty": "onwebkitfullscreenerror",
      "prevProperty": "webkitCurrentFullScreenElement"
    },
    {
      "path": "window.Document.prototype",
      "propertyName": "rootElement",
      "throughProperty": "getElementsByClassName",
      "prevProperty": "childElementCount"
    },
    {
      "path": "window.Document.prototype",
      "propertyName": "createElement",
      "throughProperty": "createElementNS",
      "prevProperty": "getElementsByClassName"
    },
    {
      "path": "window.Document.prototype",
      "propertyName": "createDocumentFragment",
      "throughProperty": "queryCommandValue",
      "prevProperty": "createElementNS"
    },
    {
      "path": "window.Document.prototype",
      "propertyName": "getSelection",
      "throughProperty": "getSelection",
      "prevProperty": "queryCommandValue"
    },
    {
      "path": "window.Document.prototype",
      "propertyName": "webkitExitFullscreen",
      "throughProperty": "webkitExitFullscreen",
      "prevProperty": "releaseEvents"
    },
    {
      "path": "window.Document.prototype",
      "propertyName": "webkitCancelFullScreen",
      "throughProperty": "webkitCancelFullScreen",
      "prevProperty": "webkitExitFullscreen"
    },
    {
      "path": "window.Document.prototype",
      "propertyName": "elementFromPoint",
      "throughProperty": "elementsFromPoint",
      "prevProperty": "webkitCancelFullScreen"
    },
    {
      "path": "window.Document.prototype",
      "propertyName": "createExpression",
      "throughProperty": "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC",
      "prevProperty": "getSelection"
    },
    {
      "path": "window.Document.prototype.adoptNode",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Document.prototype.adoptNode",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Document.prototype.append",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Document.prototype.append",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Document.prototype.captureEvents",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Document.prototype.captureEvents",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Document.prototype.caretRangeFromPoint",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Document.prototype.caretRangeFromPoint",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Document.prototype.clear",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Document.prototype.clear",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Document.prototype.close",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Document.prototype.close",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Document.prototype.createAttribute",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Document.prototype.createAttribute",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Document.prototype.createAttributeNS",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Document.prototype.createAttributeNS",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Document.prototype.createCDATASection",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Document.prototype.createCDATASection",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Document.prototype.createComment",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Document.prototype.createComment",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Document.prototype.createDocumentFragment",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Document.prototype.createDocumentFragment",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Document.prototype.createElement",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Document.prototype.createElement",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Document.prototype.createElementNS",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Document.prototype.createElementNS",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Document.prototype.createEvent",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Document.prototype.createEvent",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Document.prototype.createExpression",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Document.prototype.createExpression",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Document.prototype.createNodeIterator",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Document.prototype.createNodeIterator",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Document.prototype.createNSResolver",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Document.prototype.createNSResolver",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Document.prototype.createProcessingInstruction",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Document.prototype.createProcessingInstruction",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Document.prototype.createRange",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Document.prototype.createRange",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Document.prototype.createTextNode",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Document.prototype.createTextNode",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Document.prototype.createTreeWalker",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Document.prototype.createTreeWalker",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Document.prototype.elementFromPoint",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Document.prototype.elementFromPoint",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Document.prototype.elementsFromPoint",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Document.prototype.elementsFromPoint",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Document.prototype.evaluate",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Document.prototype.evaluate",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Document.prototype.execCommand",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Document.prototype.execCommand",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Document.prototype.exitPointerLock",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Document.prototype.exitPointerLock",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Document.prototype.getElementById",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Document.prototype.getElementById",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Document.prototype.getElementsByClassName",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Document.prototype.getElementsByClassName",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Document.prototype.getElementsByName",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Document.prototype.getElementsByName",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Document.prototype.getElementsByTagName",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Document.prototype.getElementsByTagName",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Document.prototype.getElementsByTagNameNS",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Document.prototype.getElementsByTagNameNS",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Document.prototype.getSelection",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Document.prototype.getSelection",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Document.prototype.hasFocus",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Document.prototype.hasFocus",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Document.prototype.importNode",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Document.prototype.importNode",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Document.prototype.open",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Document.prototype.open",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Document.prototype.prepend",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Document.prototype.prepend",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Document.prototype.queryCommandEnabled",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Document.prototype.queryCommandEnabled",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Document.prototype.queryCommandIndeterm",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Document.prototype.queryCommandIndeterm",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Document.prototype.queryCommandState",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Document.prototype.queryCommandState",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Document.prototype.queryCommandSupported",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Document.prototype.queryCommandSupported",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Document.prototype.queryCommandValue",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Document.prototype.queryCommandValue",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Document.prototype.querySelector",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Document.prototype.querySelector",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Document.prototype.querySelectorAll",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Document.prototype.querySelectorAll",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Document.prototype.releaseEvents",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Document.prototype.releaseEvents",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Document.prototype.Symbol(Symbol.unscopables)",
      "propertyName": "fullscreen",
      "throughProperty": "fullscreen",
      "prevProperty": null
    },
    {
      "path": "window.Document.prototype.Symbol(Symbol.unscopables)",
      "propertyName": "prepend",
      "throughProperty": "prepend",
      "prevProperty": null
    },
    {
      "path": "window.Document.prototype.Symbol(Symbol.unscopables)",
      "propertyName": "append",
      "throughProperty": "append",
      "prevProperty": "prepend"
    },
    {
      "path": "window.Document.prototype.webkitCancelFullScreen",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Document.prototype.webkitCancelFullScreen",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Document.prototype.webkitExitFullscreen",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Document.prototype.webkitExitFullscreen",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Document.prototype.write",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Document.prototype.write",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Document.prototype.writeln",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Document.prototype.writeln",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.DocumentFragment",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.DocumentFragment",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.DocumentFragment",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.DocumentFragment",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.DocumentFragment",
      "propertyName": "ELEMENT_NODE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.DocumentFragment.prototype.append",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.DocumentFragment.prototype.append",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.DocumentFragment.prototype.getElementById",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.DocumentFragment.prototype.getElementById",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.DocumentFragment.prototype.prepend",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.DocumentFragment.prototype.prepend",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.DocumentFragment.prototype.querySelector",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.DocumentFragment.prototype.querySelector",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.DocumentFragment.prototype.querySelectorAll",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.DocumentFragment.prototype.querySelectorAll",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.DocumentFragment.prototype.Symbol(Symbol.unscopables)",
      "propertyName": "prepend",
      "throughProperty": "prepend",
      "prevProperty": null
    },
    {
      "path": "window.DocumentFragment.prototype.Symbol(Symbol.unscopables)",
      "propertyName": "append",
      "throughProperty": "append",
      "prevProperty": "prepend"
    },
    {
      "path": "window.DocumentType",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.DocumentType",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.DocumentType",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.DocumentType",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.DocumentType",
      "propertyName": "ELEMENT_NODE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.DocumentType.prototype.after",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.DocumentType.prototype.after",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.DocumentType.prototype.before",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.DocumentType.prototype.before",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.DocumentType.prototype.remove",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.DocumentType.prototype.remove",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.DocumentType.prototype.replaceWith",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.DocumentType.prototype.replaceWith",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.DocumentType.prototype.Symbol(Symbol.unscopables)",
      "propertyName": "before",
      "throughProperty": "before",
      "prevProperty": null
    },
    {
      "path": "window.DocumentType.prototype.Symbol(Symbol.unscopables)",
      "propertyName": "after",
      "throughProperty": "after",
      "prevProperty": "before"
    },
    {
      "path": "window.DocumentType.prototype.Symbol(Symbol.unscopables)",
      "propertyName": "replaceWith",
      "throughProperty": "replaceWith",
      "prevProperty": "after"
    },
    {
      "path": "window.DocumentType.prototype.Symbol(Symbol.unscopables)",
      "propertyName": "remove",
      "throughProperty": "remove",
      "prevProperty": "replaceWith"
    },
    {
      "path": "window.DOMException",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.DOMException",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.DOMException",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.DOMException",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.DOMException",
      "propertyName": "INDEX_SIZE_ERR",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.DOMException.prototype",
      "propertyName": "code",
      "throughProperty": "message",
      "prevProperty": null
    },
    {
      "path": "window.DOMException.prototype",
      "propertyName": "INDEX_SIZE_ERR",
      "throughProperty": "DATA_CLONE_ERR",
      "prevProperty": "message"
    },
    {
      "path": "window.DOMImplementation",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.DOMImplementation",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.DOMImplementation",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.DOMImplementation",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.DOMImplementation",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.DOMImplementation.prototype.createDocument",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.DOMImplementation.prototype.createDocument",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.DOMImplementation.prototype.createDocumentType",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.DOMImplementation.prototype.createDocumentType",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.DOMImplementation.prototype.createHTMLDocument",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.DOMImplementation.prototype.createHTMLDocument",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.DOMImplementation.prototype.hasFeature",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.DOMImplementation.prototype.hasFeature",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.DOMMatrix",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.DOMMatrix",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.DOMMatrix",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.DOMMatrix",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.DOMMatrix",
      "propertyName": "fromMatrix",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.DOMMatrix.fromFloat32Array",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.DOMMatrix.fromFloat32Array",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.DOMMatrix.fromFloat64Array",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.DOMMatrix.fromFloat64Array",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.DOMMatrix.fromMatrix",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.DOMMatrix.fromMatrix",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.DOMMatrix.prototype.invertSelf",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.DOMMatrix.prototype.invertSelf",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.DOMMatrix.prototype.multiplySelf",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.DOMMatrix.prototype.multiplySelf",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.DOMMatrix.prototype.preMultiplySelf",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.DOMMatrix.prototype.preMultiplySelf",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.DOMMatrix.prototype.rotateAxisAngleSelf",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.DOMMatrix.prototype.rotateAxisAngleSelf",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.DOMMatrix.prototype.rotateFromVectorSelf",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.DOMMatrix.prototype.rotateFromVectorSelf",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.DOMMatrix.prototype.rotateSelf",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.DOMMatrix.prototype.rotateSelf",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.DOMMatrix.prototype.scale3dSelf",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.DOMMatrix.prototype.scale3dSelf",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.DOMMatrix.prototype.scaleSelf",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.DOMMatrix.prototype.scaleSelf",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.DOMMatrix.prototype.setMatrixValue",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.DOMMatrix.prototype.setMatrixValue",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.DOMMatrix.prototype.skewXSelf",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.DOMMatrix.prototype.skewXSelf",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.DOMMatrix.prototype.skewYSelf",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.DOMMatrix.prototype.skewYSelf",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.DOMMatrix.prototype.translateSelf",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.DOMMatrix.prototype.translateSelf",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.DOMMatrixReadOnly",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.DOMMatrixReadOnly",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.DOMMatrixReadOnly",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.DOMMatrixReadOnly",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.DOMMatrixReadOnly",
      "propertyName": "fromMatrix",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.DOMMatrixReadOnly.fromFloat32Array",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.DOMMatrixReadOnly.fromFloat32Array",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.DOMMatrixReadOnly.fromFloat64Array",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.DOMMatrixReadOnly.fromFloat64Array",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.DOMMatrixReadOnly.fromMatrix",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.DOMMatrixReadOnly.fromMatrix",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.DOMMatrixReadOnly.prototype",
      "propertyName": "toString",
      "throughProperty": "toString",
      "prevProperty": "toFloat64Array"
    },
    {
      "path": "window.DOMMatrixReadOnly.prototype",
      "propertyName": "toJSON",
      "throughProperty": "toJSON",
      "prevProperty": "toString"
    },
    {
      "path": "window.DOMMatrixReadOnly.prototype.flipX",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.DOMMatrixReadOnly.prototype.flipX",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.DOMMatrixReadOnly.prototype.flipY",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.DOMMatrixReadOnly.prototype.flipY",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.DOMMatrixReadOnly.prototype.inverse",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.DOMMatrixReadOnly.prototype.inverse",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.DOMMatrixReadOnly.prototype.multiply",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.DOMMatrixReadOnly.prototype.multiply",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.DOMMatrixReadOnly.prototype.rotate",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.DOMMatrixReadOnly.prototype.rotate",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.DOMMatrixReadOnly.prototype.rotateAxisAngle",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.DOMMatrixReadOnly.prototype.rotateAxisAngle",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.DOMMatrixReadOnly.prototype.rotateFromVector",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.DOMMatrixReadOnly.prototype.rotateFromVector",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.DOMMatrixReadOnly.prototype.scale",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.DOMMatrixReadOnly.prototype.scale",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.DOMMatrixReadOnly.prototype.scale3d",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.DOMMatrixReadOnly.prototype.scale3d",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.DOMMatrixReadOnly.prototype.skewX",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.DOMMatrixReadOnly.prototype.skewX",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.DOMMatrixReadOnly.prototype.skewY",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.DOMMatrixReadOnly.prototype.skewY",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.DOMMatrixReadOnly.prototype.toFloat32Array",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.DOMMatrixReadOnly.prototype.toFloat32Array",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.DOMMatrixReadOnly.prototype.toFloat64Array",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.DOMMatrixReadOnly.prototype.toFloat64Array",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.DOMMatrixReadOnly.prototype.toJSON",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.DOMMatrixReadOnly.prototype.toJSON",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.DOMMatrixReadOnly.prototype.toString",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.DOMMatrixReadOnly.prototype.toString",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.DOMMatrixReadOnly.prototype.transformPoint",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.DOMMatrixReadOnly.prototype.transformPoint",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.DOMMatrixReadOnly.prototype.translate",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.DOMMatrixReadOnly.prototype.translate",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.DOMParser",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.DOMParser",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.DOMParser",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.DOMParser",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.DOMParser",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.DOMParser.prototype.parseFromString",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.DOMParser.prototype.parseFromString",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.DOMPoint",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.DOMPoint",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.DOMPoint",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.DOMPoint",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.DOMPoint",
      "propertyName": "fromPoint",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.DOMPoint.fromPoint",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.DOMPoint.fromPoint",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.DOMPointReadOnly",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.DOMPointReadOnly",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.DOMPointReadOnly",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.DOMPointReadOnly",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.DOMPointReadOnly",
      "propertyName": "fromPoint",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.DOMPointReadOnly.fromPoint",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.DOMPointReadOnly.fromPoint",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.DOMPointReadOnly.prototype.matrixTransform",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.DOMPointReadOnly.prototype.matrixTransform",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.DOMPointReadOnly.prototype.toJSON",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.DOMPointReadOnly.prototype.toJSON",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.DOMQuad",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.DOMQuad",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.DOMQuad",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.DOMQuad",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.DOMQuad",
      "propertyName": "fromRect",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.DOMQuad.fromQuad",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.DOMQuad.fromQuad",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.DOMQuad.fromRect",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.DOMQuad.fromRect",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.DOMQuad.prototype.getBounds",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.DOMQuad.prototype.getBounds",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.DOMQuad.prototype.toJSON",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.DOMQuad.prototype.toJSON",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.DOMRect",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.DOMRect",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.DOMRect",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.DOMRect",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.DOMRect",
      "propertyName": "fromRect",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.DOMRect.fromRect",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.DOMRect.fromRect",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.DOMRectList",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.DOMRectList",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.DOMRectList",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.DOMRectList",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.DOMRectList",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.DOMRectList.prototype.item",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.DOMRectList.prototype.item",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.DOMRectReadOnly",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.DOMRectReadOnly",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.DOMRectReadOnly",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.DOMRectReadOnly",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.DOMRectReadOnly",
      "propertyName": "fromRect",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.DOMRectReadOnly.fromRect",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.DOMRectReadOnly.fromRect",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.DOMRectReadOnly.prototype.toJSON",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.DOMRectReadOnly.prototype.toJSON",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.DOMStringList",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.DOMStringList",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.DOMStringList",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.DOMStringList",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.DOMStringList",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.DOMStringList.prototype.contains",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.DOMStringList.prototype.contains",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.DOMStringList.prototype.item",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.DOMStringList.prototype.item",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.DOMStringMap",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.DOMStringMap",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.DOMStringMap",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.DOMStringMap",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.DOMStringMap",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.DOMTokenList",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.DOMTokenList",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.DOMTokenList",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.DOMTokenList",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.DOMTokenList",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.DOMTokenList.prototype.add",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.DOMTokenList.prototype.add",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.DOMTokenList.prototype.contains",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.DOMTokenList.prototype.contains",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.DOMTokenList.prototype.item",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.DOMTokenList.prototype.item",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.DOMTokenList.prototype.remove",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.DOMTokenList.prototype.remove",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.DOMTokenList.prototype.replace",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.DOMTokenList.prototype.replace",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.DOMTokenList.prototype.supports",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.DOMTokenList.prototype.supports",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.DOMTokenList.prototype.toggle",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.DOMTokenList.prototype.toggle",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.DOMTokenList.prototype.toString",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.DOMTokenList.prototype.toString",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.DynamicsCompressorNode",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.DynamicsCompressorNode",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.DynamicsCompressorNode",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.DynamicsCompressorNode",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.DynamicsCompressorNode",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.Element",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.Element",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.Element",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.Element",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Element",
      "propertyName": "ELEMENT_NODE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.Element.prototype",
      "propertyName": "onbeforepaste",
      "throughProperty": "childElementCount",
      "prevProperty": "onbeforeinput"
    },
    {
      "path": "window.Element.prototype",
      "propertyName": "setPointerCapture",
      "throughProperty": "hasPointerCapture",
      "prevProperty": "webkitRequestFullscreen"
    },
    {
      "path": "window.Element.prototype",
      "propertyName": "assignedSlot",
      "throughProperty": "assignedSlot",
      "prevProperty": "childElementCount"
    },
    {
      "path": "window.Element.prototype",
      "propertyName": "scrollTop",
      "throughProperty": "clientHeight",
      "prevProperty": "shadowRoot"
    },
    {
      "path": "window.Element.prototype",
      "propertyName": "innerHTML",
      "throughProperty": "outerHTML",
      "prevProperty": "clientHeight"
    },
    {
      "path": "window.Element.prototype",
      "propertyName": "onbeforecopy",
      "throughProperty": "onbeforecut",
      "prevProperty": "onpaste"
    },
    {
      "path": "window.Element.prototype",
      "propertyName": "onwebkitfullscreenchange",
      "throughProperty": "onwebkitfullscreenerror",
      "prevProperty": "onwebkittransitionend"
    },
    {
      "path": "window.Element.prototype",
      "propertyName": "hasAttributes",
      "throughProperty": "insertAdjacentText",
      "prevProperty": "assignedSlot"
    },
    {
      "path": "window.Element.prototype",
      "propertyName": "insertAdjacentHTML",
      "throughProperty": "insertAdjacentHTML",
      "prevProperty": "scrollBy"
    },
    {
      "path": "window.Element.prototype",
      "propertyName": "requestPointerLock",
      "throughProperty": "requestPointerLock",
      "prevProperty": "hasPointerCapture"
    },
    {
      "path": "window.Element.prototype",
      "propertyName": "getClientRects",
      "throughProperty": "scrollBy",
      "prevProperty": "insertAdjacentText"
    },
    {
      "path": "window.Element.prototype",
      "propertyName": "scrollIntoViewIfNeeded",
      "throughProperty": "querySelectorAll",
      "prevProperty": "requestPointerLock"
    },
    {
      "path": "window.Element.prototype",
      "propertyName": "webkitRequestFullScreen",
      "throughProperty": "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC",
      "prevProperty": "insertAdjacentHTML"
    },
    {
      "path": "window.Element.prototype.after",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Element.prototype.after",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Element.prototype.append",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Element.prototype.append",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Element.prototype.attachShadow",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Element.prototype.attachShadow",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Element.prototype.before",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Element.prototype.before",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Element.prototype.closest",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Element.prototype.closest",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Element.prototype.getAttribute",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Element.prototype.getAttribute",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Element.prototype.getAttributeNames",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Element.prototype.getAttributeNames",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Element.prototype.getAttributeNode",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Element.prototype.getAttributeNode",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Element.prototype.getAttributeNodeNS",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Element.prototype.getAttributeNodeNS",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Element.prototype.getAttributeNS",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Element.prototype.getAttributeNS",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Element.prototype.getBoundingClientRect",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Element.prototype.getBoundingClientRect",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Element.prototype.getClientRects",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Element.prototype.getClientRects",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Element.prototype.getElementsByClassName",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Element.prototype.getElementsByClassName",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Element.prototype.getElementsByTagName",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Element.prototype.getElementsByTagName",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Element.prototype.getElementsByTagNameNS",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Element.prototype.getElementsByTagNameNS",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Element.prototype.hasAttribute",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Element.prototype.hasAttribute",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Element.prototype.hasAttributeNS",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Element.prototype.hasAttributeNS",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Element.prototype.hasAttributes",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Element.prototype.hasAttributes",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Element.prototype.hasPointerCapture",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Element.prototype.hasPointerCapture",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Element.prototype.insertAdjacentElement",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Element.prototype.insertAdjacentElement",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Element.prototype.insertAdjacentHTML",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Element.prototype.insertAdjacentHTML",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Element.prototype.insertAdjacentText",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Element.prototype.insertAdjacentText",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Element.prototype.matches",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Element.prototype.matches",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Element.prototype.prepend",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Element.prototype.prepend",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Element.prototype.querySelector",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Element.prototype.querySelector",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Element.prototype.querySelectorAll",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Element.prototype.querySelectorAll",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Element.prototype.releasePointerCapture",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Element.prototype.releasePointerCapture",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Element.prototype.remove",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Element.prototype.remove",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Element.prototype.removeAttribute",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Element.prototype.removeAttribute",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Element.prototype.removeAttributeNode",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Element.prototype.removeAttributeNode",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Element.prototype.removeAttributeNS",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Element.prototype.removeAttributeNS",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Element.prototype.replaceWith",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Element.prototype.replaceWith",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Element.prototype.requestPointerLock",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Element.prototype.requestPointerLock",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Element.prototype.scroll",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Element.prototype.scroll",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Element.prototype.scrollBy",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Element.prototype.scrollBy",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Element.prototype.scrollIntoView",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Element.prototype.scrollIntoView",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Element.prototype.scrollIntoViewIfNeeded",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Element.prototype.scrollIntoViewIfNeeded",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Element.prototype.scrollTo",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Element.prototype.scrollTo",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Element.prototype.setAttribute",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Element.prototype.setAttribute",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Element.prototype.setAttributeNode",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Element.prototype.setAttributeNode",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Element.prototype.setAttributeNodeNS",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Element.prototype.setAttributeNodeNS",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Element.prototype.setAttributeNS",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Element.prototype.setAttributeNS",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Element.prototype.setPointerCapture",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Element.prototype.setPointerCapture",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Element.prototype.Symbol(Symbol.unscopables)",
      "propertyName": "before",
      "throughProperty": "before",
      "prevProperty": null
    },
    {
      "path": "window.Element.prototype.Symbol(Symbol.unscopables)",
      "propertyName": "after",
      "throughProperty": "after",
      "prevProperty": "before"
    },
    {
      "path": "window.Element.prototype.Symbol(Symbol.unscopables)",
      "propertyName": "remove",
      "throughProperty": "remove",
      "prevProperty": "replaceWith"
    },
    {
      "path": "window.Element.prototype.Symbol(Symbol.unscopables)",
      "propertyName": "prepend",
      "throughProperty": "prepend",
      "prevProperty": "remove"
    },
    {
      "path": "window.Element.prototype.Symbol(Symbol.unscopables)",
      "propertyName": "append",
      "throughProperty": "append",
      "prevProperty": "prepend"
    },
    {
      "path": "window.Element.prototype.Symbol(Symbol.unscopables)",
      "propertyName": "replaceWith",
      "throughProperty": "replaceWith",
      "prevProperty": "after"
    },
    {
      "path": "window.Element.prototype.toggleAttribute",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Element.prototype.toggleAttribute",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Element.prototype.webkitMatchesSelector",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Element.prototype.webkitMatchesSelector",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Element.prototype.webkitRequestFullscreen",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Element.prototype.webkitRequestFullscreen",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Element.prototype.webkitRequestFullScreen",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Element.prototype.webkitRequestFullScreen",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.encodeURI",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.encodeURI",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.encodeURIComponent",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.encodeURIComponent",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Error",
      "propertyName": "name",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.Error",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "prototype"
    },
    {
      "path": "window.Error.prototype",
      "propertyName": "toString",
      "throughProperty": "toString",
      "prevProperty": null
    },
    {
      "path": "window.Error.prototype",
      "propertyName": "name",
      "throughProperty": "message",
      "prevProperty": "toString"
    },
    {
      "path": "window.Error.prototype.toString",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Error.prototype.toString",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.ErrorEvent",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.ErrorEvent",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.ErrorEvent",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.ErrorEvent",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.ErrorEvent",
      "propertyName": "NONE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.escape",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.escape",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.eval",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.eval",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.EvalError",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.EvalError",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.EvalError.prototype",
      "propertyName": "toString",
      "throughProperty": "toString",
      "prevProperty": null
    },
    {
      "path": "window.EvalError.prototype",
      "propertyName": "name",
      "throughProperty": "message",
      "prevProperty": "toString"
    },
    {
      "path": "window.Event",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.Event",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.Event",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.Event",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Event",
      "propertyName": "NONE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.Event.prototype",
      "propertyName": "type",
      "throughProperty": "eventPhase",
      "prevProperty": null
    },
    {
      "path": "window.Event.prototype",
      "propertyName": "composedPath",
      "throughProperty": "initEvent",
      "prevProperty": "returnValue"
    },
    {
      "path": "window.Event.prototype",
      "propertyName": "NONE",
      "throughProperty": "BUBBLING_PHASE",
      "prevProperty": "initEvent"
    },
    {
      "path": "window.Event.prototype",
      "propertyName": "cancelBubble",
      "throughProperty": "cancelBubble",
      "prevProperty": "eventPhase"
    },
    {
      "path": "window.Event.prototype",
      "propertyName": "bubbles",
      "throughProperty": "returnValue",
      "prevProperty": "cancelBubble"
    },
    {
      "path": "window.Event.prototype.composedPath",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Event.prototype.composedPath",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Event.prototype.initEvent",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Event.prototype.initEvent",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Event.prototype.preventDefault",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Event.prototype.preventDefault",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Event.prototype.stopImmediatePropagation",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Event.prototype.stopImmediatePropagation",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Event.prototype.stopPropagation",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Event.prototype.stopPropagation",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.EventSource",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.EventSource",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.EventSource",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.EventSource",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.EventSource",
      "propertyName": "CONNECTING",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.EventSource.prototype",
      "propertyName": "url",
      "throughProperty": "close",
      "prevProperty": "URL"
    },
    {
      "path": "window.EventSource.prototype",
      "propertyName": "CONNECTING",
      "throughProperty": "CLOSED",
      "prevProperty": "close"
    },
    {
      "path": "window.EventSource.prototype.close",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.EventSource.prototype.close",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.EventTarget",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.EventTarget",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.EventTarget",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.EventTarget",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.EventTarget",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.EventTarget.prototype.addEventListener",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.EventTarget.prototype.addEventListener",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.EventTarget.prototype.dispatchEvent",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.EventTarget.prototype.dispatchEvent",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.EventTarget.prototype.removeEventListener",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.EventTarget.prototype.removeEventListener",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.fetch",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.fetch",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.File",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.File",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.File",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.File",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.File",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.FileList",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.FileList",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.FileList",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.FileList",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.FileList",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.FileList.prototype.item",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.FileList.prototype.item",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.FileReader",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.FileReader",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.FileReader",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.FileReader",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.FileReader",
      "propertyName": "EMPTY",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.FileReader.prototype",
      "propertyName": "readyState",
      "throughProperty": "abort",
      "prevProperty": null
    },
    {
      "path": "window.FileReader.prototype",
      "propertyName": "EMPTY",
      "throughProperty": "DONE",
      "prevProperty": "abort"
    },
    {
      "path": "window.FileReader.prototype.abort",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.FileReader.prototype.abort",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.FileReader.prototype.readAsArrayBuffer",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.FileReader.prototype.readAsArrayBuffer",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.FileReader.prototype.readAsBinaryString",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.FileReader.prototype.readAsBinaryString",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.FileReader.prototype.readAsDataURL",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.FileReader.prototype.readAsDataURL",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.FileReader.prototype.readAsText",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.FileReader.prototype.readAsText",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.find",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.find",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Float32Array",
      "propertyName": "name",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.Float32Array",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "prototype"
    },
    {
      "path": "window.Float64Array",
      "propertyName": "name",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.Float64Array",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "prototype"
    },
    {
      "path": "window.focus",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.focus",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.FocusEvent",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.FocusEvent",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.FocusEvent",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.FocusEvent",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.FocusEvent",
      "propertyName": "NONE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.FontFace",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.FontFace",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.FontFace",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.FontFace",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.FontFace",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.FontFace.prototype.load",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.FontFace.prototype.load",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.FormData",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.FormData",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.FormData",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.FormData",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.FormData",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.FormData.prototype",
      "propertyName": "entries",
      "throughProperty": "entries",
      "prevProperty": "set"
    },
    {
      "path": "window.FormData.prototype",
      "propertyName": "keys",
      "throughProperty": "forEach",
      "prevProperty": "entries"
    },
    {
      "path": "window.FormData.prototype.append",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.FormData.prototype.append",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.FormData.prototype.delete",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.FormData.prototype.delete",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.FormData.prototype.entries",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.FormData.prototype.entries",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.FormData.prototype.forEach",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.FormData.prototype.forEach",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.FormData.prototype.get",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.FormData.prototype.get",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.FormData.prototype.getAll",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.FormData.prototype.getAll",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.FormData.prototype.has",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.FormData.prototype.has",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.FormData.prototype.keys",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.FormData.prototype.keys",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.FormData.prototype.set",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.FormData.prototype.set",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.FormData.prototype.values",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.FormData.prototype.values",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Function",
      "propertyName": "name",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.Function",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "prototype"
    },
    {
      "path": "window.Function.prototype",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Function.prototype",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": "bind"
    },
    {
      "path": "window.Function.prototype",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Function.prototype",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": "caller"
    },
    {
      "path": "window.Function.prototype",
      "propertyName": "apply",
      "throughProperty": "apply",
      "prevProperty": "toString"
    },
    {
      "path": "window.Function.prototype",
      "propertyName": "call",
      "throughProperty": "call",
      "prevProperty": "apply"
    },
    {
      "path": "window.Function.prototype",
      "propertyName": "toString",
      "throughProperty": "toString",
      "prevProperty": "length"
    },
    {
      "path": "window.Function.prototype.toString",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Function.prototype.toString",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.GainNode",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.GainNode",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.GainNode",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.GainNode",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.GainNode",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.Gamepad",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.Gamepad",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.Gamepad",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.Gamepad",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Gamepad",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.GamepadButton",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.GamepadButton",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.GamepadButton",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.GamepadButton",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.GamepadButton",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.GamepadEvent",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.GamepadEvent",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.GamepadEvent",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.GamepadEvent",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.GamepadEvent",
      "propertyName": "NONE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.getComputedStyle",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.getComputedStyle",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.getSelection",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.getSelection",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.HashChangeEvent",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.HashChangeEvent",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.HashChangeEvent",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.HashChangeEvent",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.HashChangeEvent",
      "propertyName": "NONE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.Headers",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.Headers",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.Headers",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.Headers",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Headers",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.Headers.prototype",
      "propertyName": "entries",
      "throughProperty": "entries",
      "prevProperty": "set"
    },
    {
      "path": "window.Headers.prototype",
      "propertyName": "keys",
      "throughProperty": "forEach",
      "prevProperty": "entries"
    },
    {
      "path": "window.Headers.prototype.append",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Headers.prototype.append",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Headers.prototype.delete",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Headers.prototype.delete",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Headers.prototype.entries",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Headers.prototype.entries",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Headers.prototype.forEach",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Headers.prototype.forEach",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Headers.prototype.get",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Headers.prototype.get",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Headers.prototype.has",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Headers.prototype.has",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Headers.prototype.keys",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Headers.prototype.keys",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Headers.prototype.set",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Headers.prototype.set",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Headers.prototype.values",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Headers.prototype.values",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.History",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.History",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.History",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.History",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.History",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.History.prototype",
      "propertyName": "back",
      "throughProperty": "forward",
      "prevProperty": "state"
    },
    {
      "path": "window.History.prototype",
      "propertyName": "go",
      "throughProperty": "go",
      "prevProperty": "forward"
    },
    {
      "path": "window.History.prototype.back",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.History.prototype.back",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.History.prototype.forward",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.History.prototype.forward",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.History.prototype.go",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.History.prototype.go",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.History.prototype.pushState",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.History.prototype.pushState",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.History.prototype.replaceState",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.History.prototype.replaceState",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.HTMLAllCollection",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.HTMLAllCollection",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.HTMLAllCollection",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.HTMLAllCollection",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.HTMLAllCollection",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.HTMLAllCollection.prototype.item",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.HTMLAllCollection.prototype.item",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.HTMLAllCollection.prototype.namedItem",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.HTMLAllCollection.prototype.namedItem",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.HTMLAnchorElement",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.HTMLAnchorElement",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.HTMLAnchorElement",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.HTMLAnchorElement",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.HTMLAnchorElement",
      "propertyName": "ELEMENT_NODE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.HTMLAnchorElement.prototype",
      "propertyName": "charset",
      "throughProperty": "charset",
      "prevProperty": null
    },
    {
      "path": "window.HTMLAnchorElement.prototype",
      "propertyName": "target",
      "throughProperty": "target",
      "prevProperty": "shape"
    },
    {
      "path": "window.HTMLAnchorElement.prototype",
      "propertyName": "download",
      "throughProperty": "download",
      "prevProperty": "coords"
    },
    {
      "path": "window.HTMLAnchorElement.prototype",
      "propertyName": "ping",
      "throughProperty": "rel",
      "prevProperty": "name"
    },
    {
      "path": "window.HTMLAnchorElement.prototype",
      "propertyName": "relList",
      "throughProperty": "relList",
      "prevProperty": "text"
    },
    {
      "path": "window.HTMLAnchorElement.prototype",
      "propertyName": "hreflang",
      "throughProperty": "hreflang",
      "prevProperty": "download"
    },
    {
      "path": "window.HTMLAnchorElement.prototype",
      "propertyName": "type",
      "throughProperty": "text",
      "prevProperty": "target"
    },
    {
      "path": "window.HTMLAnchorElement.prototype",
      "propertyName": "coords",
      "throughProperty": "coords",
      "prevProperty": "charset"
    },
    {
      "path": "window.HTMLAnchorElement.prototype",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": "hreflang"
    },
    {
      "path": "window.HTMLAnchorElement.prototype",
      "propertyName": "rev",
      "throughProperty": "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC",
      "prevProperty": "rel"
    },
    {
      "path": "window.HTMLAnchorElement.prototype.toString",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.HTMLAnchorElement.prototype.toString",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.HTMLAreaElement",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.HTMLAreaElement",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.HTMLAreaElement",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.HTMLAreaElement",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.HTMLAreaElement",
      "propertyName": "ELEMENT_NODE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.HTMLAreaElement.prototype",
      "propertyName": "ping",
      "throughProperty": "rel",
      "prevProperty": "noHref"
    },
    {
      "path": "window.HTMLAreaElement.prototype",
      "propertyName": "shape",
      "throughProperty": "target",
      "prevProperty": "rel"
    },
    {
      "path": "window.HTMLAreaElement.prototype",
      "propertyName": "download",
      "throughProperty": "download",
      "prevProperty": "target"
    },
    {
      "path": "window.HTMLAreaElement.prototype",
      "propertyName": "relList",
      "throughProperty": "relList",
      "prevProperty": "download"
    },
    {
      "path": "window.HTMLAreaElement.prototype",
      "propertyName": "noHref",
      "throughProperty": "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC",
      "prevProperty": "coords"
    },
    {
      "path": "window.HTMLAreaElement.prototype.toString",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.HTMLAreaElement.prototype.toString",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.HTMLAudioElement",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.HTMLAudioElement",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.HTMLAudioElement",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.HTMLAudioElement",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.HTMLAudioElement",
      "propertyName": "NETWORK_EMPTY",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.HTMLBaseElement",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.HTMLBaseElement",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.HTMLBaseElement",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.HTMLBaseElement",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.HTMLBaseElement",
      "propertyName": "ELEMENT_NODE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.HTMLBodyElement",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.HTMLBodyElement",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.HTMLBodyElement",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.HTMLBodyElement",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.HTMLBodyElement",
      "propertyName": "ELEMENT_NODE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.HTMLBodyElement.prototype",
      "propertyName": "aLink",
      "throughProperty": "aLink",
      "prevProperty": null
    },
    {
      "path": "window.HTMLBodyElement.prototype",
      "propertyName": "onload",
      "throughProperty": "onscroll",
      "prevProperty": "onfocusout"
    },
    {
      "path": "window.HTMLBodyElement.prototype",
      "propertyName": "bgColor",
      "throughProperty": "bgColor",
      "prevProperty": "background"
    },
    {
      "path": "window.HTMLBodyElement.prototype",
      "propertyName": "link",
      "throughProperty": "link",
      "prevProperty": "bgColor"
    },
    {
      "path": "window.HTMLBodyElement.prototype",
      "propertyName": "text",
      "throughProperty": "text",
      "prevProperty": "link"
    },
    {
      "path": "window.HTMLBodyElement.prototype",
      "propertyName": "vLink",
      "throughProperty": "vLink",
      "prevProperty": "text"
    },
    {
      "path": "window.HTMLBodyElement.prototype",
      "propertyName": "background",
      "throughProperty": "background",
      "prevProperty": "aLink"
    },
    {
      "path": "window.HTMLBodyElement.prototype",
      "propertyName": "onafterprint",
      "throughProperty": "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC",
      "prevProperty": "onselectionchange"
    },
    {
      "path": "window.HTMLBRElement",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.HTMLBRElement",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.HTMLBRElement",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.HTMLBRElement",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.HTMLBRElement",
      "propertyName": "ELEMENT_NODE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.HTMLButtonElement",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.HTMLButtonElement",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.HTMLButtonElement",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.HTMLButtonElement",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.HTMLButtonElement",
      "propertyName": "ELEMENT_NODE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.HTMLButtonElement.prototype",
      "propertyName": "disabled",
      "throughProperty": "formMethod",
      "prevProperty": "autofocus"
    },
    {
      "path": "window.HTMLButtonElement.prototype",
      "propertyName": "type",
      "throughProperty": "type",
      "prevProperty": "formMethod"
    },
    {
      "path": "window.HTMLButtonElement.prototype",
      "propertyName": "formNoValidate",
      "throughProperty": "name",
      "prevProperty": "type"
    },
    {
      "path": "window.HTMLButtonElement.prototype",
      "propertyName": "value",
      "throughProperty": "setCustomValidity",
      "prevProperty": "name"
    },
    {
      "path": "window.HTMLButtonElement.prototype.checkValidity",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.HTMLButtonElement.prototype.checkValidity",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.HTMLButtonElement.prototype.reportValidity",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.HTMLButtonElement.prototype.reportValidity",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.HTMLButtonElement.prototype.setCustomValidity",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.HTMLButtonElement.prototype.setCustomValidity",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.HTMLCanvasElement",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.HTMLCanvasElement",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.HTMLCanvasElement",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.HTMLCanvasElement",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.HTMLCanvasElement",
      "propertyName": "ELEMENT_NODE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.HTMLCanvasElement.prototype",
      "propertyName": "toDataURL",
      "throughProperty": "toBlob",
      "prevProperty": "getContext"
    },
    {
      "path": "window.HTMLCanvasElement.prototype",
      "propertyName": "getContext",
      "throughProperty": "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC",
      "prevProperty": "height"
    },
    {
      "path": "window.HTMLCanvasElement.prototype.captureStream",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.HTMLCanvasElement.prototype.captureStream",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.HTMLCanvasElement.prototype.getContext",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.HTMLCanvasElement.prototype.getContext",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.HTMLCanvasElement.prototype.toBlob",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.HTMLCanvasElement.prototype.toBlob",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.HTMLCanvasElement.prototype.toDataURL",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.HTMLCanvasElement.prototype.toDataURL",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.HTMLCollection",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.HTMLCollection",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.HTMLCollection",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.HTMLCollection",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.HTMLCollection",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.HTMLCollection.prototype.item",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.HTMLCollection.prototype.item",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.HTMLCollection.prototype.namedItem",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.HTMLCollection.prototype.namedItem",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.HTMLDataElement",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.HTMLDataElement",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.HTMLDataElement",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.HTMLDataElement",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.HTMLDataElement",
      "propertyName": "ELEMENT_NODE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.HTMLDataListElement",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.HTMLDataListElement",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.HTMLDataListElement",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.HTMLDataListElement",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.HTMLDataListElement",
      "propertyName": "ELEMENT_NODE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.HTMLDetailsElement",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.HTMLDetailsElement",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.HTMLDetailsElement",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.HTMLDetailsElement",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.HTMLDetailsElement",
      "propertyName": "ELEMENT_NODE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.HTMLDirectoryElement",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.HTMLDirectoryElement",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.HTMLDirectoryElement",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.HTMLDirectoryElement",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.HTMLDirectoryElement",
      "propertyName": "ELEMENT_NODE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.HTMLDivElement",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.HTMLDivElement",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.HTMLDivElement",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.HTMLDivElement",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.HTMLDivElement",
      "propertyName": "ELEMENT_NODE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.HTMLDListElement",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.HTMLDListElement",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.HTMLDListElement",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.HTMLDListElement",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.HTMLDListElement",
      "propertyName": "ELEMENT_NODE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.HTMLDocument",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.HTMLDocument",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.HTMLDocument",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.HTMLDocument",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.HTMLDocument",
      "propertyName": "ELEMENT_NODE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.HTMLElement",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.HTMLElement",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.HTMLElement",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.HTMLElement",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.HTMLElement",
      "propertyName": "ELEMENT_NODE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.HTMLElement.prototype",
      "propertyName": "inputMode",
      "throughProperty": "inputMode",
      "prevProperty": "webkitdropzone"
    },
    {
      "path": "window.HTMLElement.prototype",
      "propertyName": "ongotpointercapture",
      "throughProperty": "onpointerleave",
      "prevProperty": "onanimationcancel"
    },
    {
      "path": "window.HTMLElement.prototype",
      "propertyName": "onanimationend",
      "throughProperty": "onanimationstart",
      "prevProperty": "ontransitioncancel"
    },
    {
      "path": "window.HTMLElement.prototype",
      "propertyName": "click",
      "throughProperty": "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC",
      "prevProperty": "onwebkitmouseforceup"
    },
    {
      "path": "window.HTMLElement.prototype",
      "propertyName": "dataset",
      "throughProperty": "dataset",
      "prevProperty": "dir"
    },
    {
      "path": "window.HTMLElement.prototype",
      "propertyName": "hidden",
      "throughProperty": "hidden",
      "prevProperty": "dataset"
    },
    {
      "path": "window.HTMLElement.prototype",
      "propertyName": "accessKey",
      "throughProperty": "spellcheck",
      "prevProperty": "tabIndex"
    },
    {
      "path": "window.HTMLElement.prototype",
      "propertyName": "contentEditable",
      "throughProperty": "isContentEditable",
      "prevProperty": "innerText"
    },
    {
      "path": "window.HTMLElement.prototype",
      "propertyName": "offsetParent",
      "throughProperty": "offsetHeight",
      "prevProperty": "isContentEditable"
    },
    {
      "path": "window.HTMLElement.prototype",
      "propertyName": "style",
      "throughProperty": "style",
      "prevProperty": "inputMode"
    },
    {
      "path": "window.HTMLElement.prototype",
      "propertyName": "innerText",
      "throughProperty": "innerText",
      "prevProperty": "spellcheck"
    },
    {
      "path": "window.HTMLElement.prototype",
      "propertyName": "onabort",
      "throughProperty": "onratechange",
      "prevProperty": "style"
    },
    {
      "path": "window.HTMLElement.prototype",
      "propertyName": "onreset",
      "throughProperty": "ontoggle",
      "prevProperty": "onrejectionhandled"
    },
    {
      "path": "window.HTMLElement.prototype",
      "propertyName": "onvolumechange",
      "throughProperty": "onwaiting",
      "prevProperty": "onunhandledrejection"
    },
    {
      "path": "window.HTMLElement.prototype",
      "propertyName": "onwheel",
      "throughProperty": "onwheel",
      "prevProperty": "onsearch"
    },
    {
      "path": "window.HTMLElement.prototype",
      "propertyName": "ontransitionend",
      "throughProperty": "ontransitionend",
      "prevProperty": "onwaiting"
    },
    {
      "path": "window.HTMLElement.prototype",
      "propertyName": "tabIndex",
      "throughProperty": "tabIndex",
      "prevProperty": "hidden"
    },
    {
      "path": "window.HTMLElement.prototype.blur",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.HTMLElement.prototype.blur",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.HTMLElement.prototype.click",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.HTMLElement.prototype.click",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.HTMLElement.prototype.focus",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.HTMLElement.prototype.focus",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.HTMLEmbedElement",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.HTMLEmbedElement",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.HTMLEmbedElement",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.HTMLEmbedElement",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.HTMLEmbedElement",
      "propertyName": "ELEMENT_NODE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.HTMLEmbedElement.prototype",
      "propertyName": "align",
      "throughProperty": "align",
      "prevProperty": null
    },
    {
      "path": "window.HTMLEmbedElement.prototype",
      "propertyName": "name",
      "throughProperty": "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC",
      "prevProperty": "height"
    },
    {
      "path": "window.HTMLEmbedElement.prototype",
      "propertyName": "src",
      "throughProperty": "width",
      "prevProperty": "name"
    },
    {
      "path": "window.HTMLEmbedElement.prototype",
      "propertyName": "height",
      "throughProperty": "height",
      "prevProperty": "align"
    },
    {
      "path": "window.HTMLEmbedElement.prototype.getSVGDocument",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.HTMLEmbedElement.prototype.getSVGDocument",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.HTMLFieldSetElement",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.HTMLFieldSetElement",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.HTMLFieldSetElement",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.HTMLFieldSetElement",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.HTMLFieldSetElement",
      "propertyName": "ELEMENT_NODE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.HTMLFieldSetElement.prototype.checkValidity",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.HTMLFieldSetElement.prototype.checkValidity",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.HTMLFieldSetElement.prototype.reportValidity",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.HTMLFieldSetElement.prototype.reportValidity",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.HTMLFieldSetElement.prototype.setCustomValidity",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.HTMLFieldSetElement.prototype.setCustomValidity",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.HTMLFontElement",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.HTMLFontElement",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.HTMLFontElement",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.HTMLFontElement",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.HTMLFontElement",
      "propertyName": "ELEMENT_NODE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.HTMLFormControlsCollection",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.HTMLFormControlsCollection",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.HTMLFormControlsCollection",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.HTMLFormControlsCollection",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.HTMLFormControlsCollection",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.HTMLFormControlsCollection.prototype.namedItem",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.HTMLFormControlsCollection.prototype.namedItem",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.HTMLFormElement",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.HTMLFormElement",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.HTMLFormElement",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.HTMLFormElement",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.HTMLFormElement",
      "propertyName": "ELEMENT_NODE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.HTMLFormElement.prototype.checkValidity",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.HTMLFormElement.prototype.checkValidity",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.HTMLFormElement.prototype.reportValidity",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.HTMLFormElement.prototype.reportValidity",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.HTMLFormElement.prototype.reset",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.HTMLFormElement.prototype.reset",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.HTMLFormElement.prototype.submit",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.HTMLFormElement.prototype.submit",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.HTMLFrameElement",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.HTMLFrameElement",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.HTMLFrameElement",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.HTMLFrameElement",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.HTMLFrameElement",
      "propertyName": "ELEMENT_NODE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.HTMLFrameSetElement",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.HTMLFrameSetElement",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.HTMLFrameSetElement",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.HTMLFrameSetElement",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.HTMLFrameSetElement",
      "propertyName": "ELEMENT_NODE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.HTMLHeadElement",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.HTMLHeadElement",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.HTMLHeadElement",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.HTMLHeadElement",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.HTMLHeadElement",
      "propertyName": "ELEMENT_NODE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.HTMLHeadingElement",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.HTMLHeadingElement",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.HTMLHeadingElement",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.HTMLHeadingElement",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.HTMLHeadingElement",
      "propertyName": "ELEMENT_NODE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.HTMLHRElement",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.HTMLHRElement",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.HTMLHRElement",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.HTMLHRElement",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.HTMLHRElement",
      "propertyName": "ELEMENT_NODE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.HTMLHtmlElement",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.HTMLHtmlElement",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.HTMLHtmlElement",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.HTMLHtmlElement",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.HTMLHtmlElement",
      "propertyName": "ELEMENT_NODE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.HTMLIFrameElement",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.HTMLIFrameElement",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.HTMLIFrameElement",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.HTMLIFrameElement",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.HTMLIFrameElement",
      "propertyName": "ELEMENT_NODE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.HTMLIFrameElement.prototype",
      "propertyName": "name",
      "throughProperty": "allowFullscreen",
      "prevProperty": "marginWidth"
    },
    {
      "path": "window.HTMLIFrameElement.prototype",
      "propertyName": "align",
      "throughProperty": "align",
      "prevProperty": null
    },
    {
      "path": "window.HTMLIFrameElement.prototype",
      "propertyName": "scrolling",
      "throughProperty": "scrolling",
      "prevProperty": "allow"
    },
    {
      "path": "window.HTMLIFrameElement.prototype",
      "propertyName": "src",
      "throughProperty": "srcdoc",
      "prevProperty": "scrolling"
    },
    {
      "path": "window.HTMLIFrameElement.prototype",
      "propertyName": "width",
      "throughProperty": "width",
      "prevProperty": "srcdoc"
    },
    {
      "path": "window.HTMLIFrameElement.prototype",
      "propertyName": "frameBorder",
      "throughProperty": "frameBorder",
      "prevProperty": "align"
    },
    {
      "path": "window.HTMLIFrameElement.prototype",
      "propertyName": "height",
      "throughProperty": "height",
      "prevProperty": "frameBorder"
    },
    {
      "path": "window.HTMLIFrameElement.prototype",
      "propertyName": "contentDocument",
      "throughProperty": "contentWindow",
      "prevProperty": "width"
    },
    {
      "path": "window.HTMLIFrameElement.prototype",
      "propertyName": "longDesc",
      "throughProperty": "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC",
      "prevProperty": "height"
    },
    {
      "path": "window.HTMLIFrameElement.prototype.getSVGDocument",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.HTMLIFrameElement.prototype.getSVGDocument",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.HTMLImageElement",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.HTMLImageElement",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.HTMLImageElement",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.HTMLImageElement",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.HTMLImageElement",
      "propertyName": "ELEMENT_NODE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.HTMLInputElement",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.HTMLInputElement",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.HTMLInputElement",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.HTMLInputElement",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.HTMLInputElement",
      "propertyName": "ELEMENT_NODE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.HTMLInputElement.prototype",
      "propertyName": "defaultChecked",
      "throughProperty": "max",
      "prevProperty": "autofocus"
    },
    {
      "path": "window.HTMLInputElement.prototype",
      "propertyName": "webkitdirectory",
      "throughProperty": "webkitdirectory",
      "prevProperty": "incremental"
    },
    {
      "path": "window.HTMLInputElement.prototype",
      "propertyName": "minLength",
      "throughProperty": "minLength",
      "prevProperty": "max"
    },
    {
      "path": "window.HTMLInputElement.prototype",
      "propertyName": "maxLength",
      "throughProperty": "min",
      "prevProperty": "minLength"
    },
    {
      "path": "window.HTMLInputElement.prototype",
      "propertyName": "multiple",
      "throughProperty": "useMap",
      "prevProperty": "min"
    },
    {
      "path": "window.HTMLInputElement.prototype",
      "propertyName": "webkitEntries",
      "throughProperty": "webkitEntries",
      "prevProperty": "webkitdirectory"
    },
    {
      "path": "window.HTMLInputElement.prototype",
      "propertyName": "stepUp",
      "throughProperty": "setSelectionRange",
      "prevProperty": "webkitEntries"
    },
    {
      "path": "window.HTMLInputElement.prototype.checkValidity",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.HTMLInputElement.prototype.checkValidity",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.HTMLInputElement.prototype.reportValidity",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.HTMLInputElement.prototype.reportValidity",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.HTMLInputElement.prototype.select",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.HTMLInputElement.prototype.select",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.HTMLInputElement.prototype.setCustomValidity",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.HTMLInputElement.prototype.setCustomValidity",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.HTMLInputElement.prototype.setRangeText",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.HTMLInputElement.prototype.setRangeText",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.HTMLInputElement.prototype.setSelectionRange",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.HTMLInputElement.prototype.setSelectionRange",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.HTMLInputElement.prototype.stepDown",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.HTMLInputElement.prototype.stepDown",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.HTMLInputElement.prototype.stepUp",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.HTMLInputElement.prototype.stepUp",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.HTMLLabelElement",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.HTMLLabelElement",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.HTMLLabelElement",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.HTMLLabelElement",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.HTMLLabelElement",
      "propertyName": "ELEMENT_NODE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.HTMLLegendElement",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.HTMLLegendElement",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.HTMLLegendElement",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.HTMLLegendElement",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.HTMLLegendElement",
      "propertyName": "ELEMENT_NODE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.HTMLLIElement",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.HTMLLIElement",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.HTMLLIElement",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.HTMLLIElement",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.HTMLLIElement",
      "propertyName": "ELEMENT_NODE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.HTMLLIElement.prototype",
      "propertyName": "type",
      "throughProperty": "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC",
      "prevProperty": null
    },
    {
      "path": "window.HTMLLIElement.prototype",
      "propertyName": "value",
      "throughProperty": "value",
      "prevProperty": "type"
    },
    {
      "path": "window.HTMLLinkElement",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.HTMLLinkElement",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.HTMLLinkElement",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.HTMLLinkElement",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.HTMLLinkElement",
      "propertyName": "ELEMENT_NODE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.HTMLLinkElement.prototype",
      "propertyName": "integrity",
      "throughProperty": "integrity",
      "prevProperty": "nonce"
    },
    {
      "path": "window.HTMLLinkElement.prototype",
      "propertyName": "href",
      "throughProperty": "href",
      "prevProperty": "charset"
    },
    {
      "path": "window.HTMLLinkElement.prototype",
      "propertyName": "crossOrigin",
      "throughProperty": "crossOrigin",
      "prevProperty": "as"
    },
    {
      "path": "window.HTMLLinkElement.prototype",
      "propertyName": "rel",
      "throughProperty": "rel",
      "prevProperty": "media"
    },
    {
      "path": "window.HTMLLinkElement.prototype",
      "propertyName": "relList",
      "throughProperty": "relList",
      "prevProperty": "sheet"
    },
    {
      "path": "window.HTMLLinkElement.prototype",
      "propertyName": "hreflang",
      "throughProperty": "hreflang",
      "prevProperty": "href"
    },
    {
      "path": "window.HTMLLinkElement.prototype",
      "propertyName": "media",
      "throughProperty": "media",
      "prevProperty": "hreflang"
    },
    {
      "path": "window.HTMLLinkElement.prototype",
      "propertyName": "type",
      "throughProperty": "as",
      "prevProperty": "target"
    },
    {
      "path": "window.HTMLLinkElement.prototype",
      "propertyName": "rev",
      "throughProperty": "rev",
      "prevProperty": "rel"
    },
    {
      "path": "window.HTMLLinkElement.prototype",
      "propertyName": "sizes",
      "throughProperty": "sizes",
      "prevProperty": "rev"
    },
    {
      "path": "window.HTMLLinkElement.prototype",
      "propertyName": "charset",
      "throughProperty": "charset",
      "prevProperty": "disabled"
    },
    {
      "path": "window.HTMLLinkElement.prototype",
      "propertyName": "target",
      "throughProperty": "target",
      "prevProperty": "sizes"
    },
    {
      "path": "window.HTMLLinkElement.prototype",
      "propertyName": "sheet",
      "throughProperty": "sheet",
      "prevProperty": "crossOrigin"
    },
    {
      "path": "window.HTMLMapElement",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.HTMLMapElement",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.HTMLMapElement",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.HTMLMapElement",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.HTMLMapElement",
      "propertyName": "ELEMENT_NODE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.HTMLMapElement.prototype",
      "propertyName": "areas",
      "throughProperty": "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC",
      "prevProperty": null
    },
    {
      "path": "window.HTMLMapElement.prototype",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": "areas"
    },
    {
      "path": "window.HTMLMarqueeElement",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.HTMLMarqueeElement",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.HTMLMarqueeElement",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.HTMLMarqueeElement",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.HTMLMarqueeElement",
      "propertyName": "ELEMENT_NODE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.HTMLMarqueeElement.prototype.start",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.HTMLMarqueeElement.prototype.start",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.HTMLMarqueeElement.prototype.stop",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.HTMLMarqueeElement.prototype.stop",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.HTMLMediaElement",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.HTMLMediaElement",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.HTMLMediaElement",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.HTMLMediaElement",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.HTMLMediaElement",
      "propertyName": "NETWORK_EMPTY",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.HTMLMediaElement.prototype",
      "propertyName": "NETWORK_EMPTY",
      "throughProperty": "HAVE_ENOUGH_DATA",
      "prevProperty": "webkitShowPlaybackTargetPicker"
    },
    {
      "path": "window.HTMLMediaElement.prototype",
      "propertyName": "error",
      "throughProperty": "src",
      "prevProperty": null
    },
    {
      "path": "window.HTMLMediaElement.prototype",
      "propertyName": "load",
      "throughProperty": "canPlayType",
      "prevProperty": "webkitCurrentPlaybackTargetIsWireless"
    },
    {
      "path": "window.HTMLMediaElement.prototype",
      "propertyName": "play",
      "throughProperty": "pause",
      "prevProperty": "getStartDate"
    },
    {
      "path": "window.HTMLMediaElement.prototype",
      "propertyName": "mediaKeys",
      "throughProperty": "mediaKeys",
      "prevProperty": "webkitKeys"
    },
    {
      "path": "window.HTMLMediaElement.prototype",
      "propertyName": "setMediaKeys",
      "throughProperty": "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC",
      "prevProperty": "webkitSetMediaKeys"
    },
    {
      "path": "window.HTMLMediaElement.prototype",
      "propertyName": "addTextTrack",
      "throughProperty": "addTextTrack",
      "prevProperty": "setMediaKeys"
    },
    {
      "path": "window.HTMLMediaElement.prototype",
      "propertyName": "srcObject",
      "throughProperty": "srcObject",
      "prevProperty": "src"
    },
    {
      "path": "window.HTMLMediaElement.prototype",
      "propertyName": "currentSrc",
      "throughProperty": "defaultMuted",
      "prevProperty": "srcObject"
    },
    {
      "path": "window.HTMLMediaElement.prototype",
      "propertyName": "onencrypted",
      "throughProperty": "onwaitingforkey",
      "prevProperty": "mediaKeys"
    },
    {
      "path": "window.HTMLMediaElement.prototype.addTextTrack",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.HTMLMediaElement.prototype.addTextTrack",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.HTMLMediaElement.prototype.canPlayType",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.HTMLMediaElement.prototype.canPlayType",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.HTMLMediaElement.prototype.load",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.HTMLMediaElement.prototype.load",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.HTMLMediaElement.prototype.pause",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.HTMLMediaElement.prototype.pause",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.HTMLMediaElement.prototype.play",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.HTMLMediaElement.prototype.play",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.HTMLMediaElement.prototype.setMediaKeys",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.HTMLMediaElement.prototype.setMediaKeys",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.HTMLMenuElement",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.HTMLMenuElement",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.HTMLMenuElement",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.HTMLMenuElement",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.HTMLMenuElement",
      "propertyName": "ELEMENT_NODE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.HTMLMetaElement",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.HTMLMetaElement",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.HTMLMetaElement",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.HTMLMetaElement",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.HTMLMetaElement",
      "propertyName": "ELEMENT_NODE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.HTMLMetaElement.prototype",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": "httpEquiv"
    },
    {
      "path": "window.HTMLMetaElement.prototype",
      "propertyName": "content",
      "throughProperty": "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC",
      "prevProperty": null
    },
    {
      "path": "window.HTMLMeterElement",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.HTMLMeterElement",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.HTMLMeterElement",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.HTMLMeterElement",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.HTMLMeterElement",
      "propertyName": "ELEMENT_NODE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.HTMLModElement",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.HTMLModElement",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.HTMLModElement",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.HTMLModElement",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.HTMLModElement",
      "propertyName": "ELEMENT_NODE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.HTMLObjectElement",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.HTMLObjectElement",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.HTMLObjectElement",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.HTMLObjectElement",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.HTMLObjectElement",
      "propertyName": "ELEMENT_NODE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.HTMLObjectElement.prototype",
      "propertyName": "form",
      "throughProperty": "form",
      "prevProperty": null
    },
    {
      "path": "window.HTMLObjectElement.prototype",
      "propertyName": "data",
      "throughProperty": "data",
      "prevProperty": "codeType"
    },
    {
      "path": "window.HTMLObjectElement.prototype",
      "propertyName": "type",
      "throughProperty": "type",
      "prevProperty": "standby"
    },
    {
      "path": "window.HTMLObjectElement.prototype",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": "hspace"
    },
    {
      "path": "window.HTMLObjectElement.prototype",
      "propertyName": "useMap",
      "throughProperty": "useMap",
      "prevProperty": "type"
    },
    {
      "path": "window.HTMLObjectElement.prototype",
      "propertyName": "width",
      "throughProperty": "width",
      "prevProperty": "vspace"
    },
    {
      "path": "window.HTMLObjectElement.prototype",
      "propertyName": "height",
      "throughProperty": "height",
      "prevProperty": "declare"
    },
    {
      "path": "window.HTMLObjectElement.prototype",
      "propertyName": "willValidate",
      "throughProperty": "validationMessage",
      "prevProperty": "width"
    },
    {
      "path": "window.HTMLObjectElement.prototype",
      "propertyName": "contentDocument",
      "throughProperty": "contentWindow",
      "prevProperty": "validationMessage"
    },
    {
      "path": "window.HTMLObjectElement.prototype",
      "propertyName": "code",
      "throughProperty": "code",
      "prevProperty": "form"
    },
    {
      "path": "window.HTMLObjectElement.prototype",
      "propertyName": "align",
      "throughProperty": "archive",
      "prevProperty": "code"
    },
    {
      "path": "window.HTMLObjectElement.prototype",
      "propertyName": "declare",
      "throughProperty": "declare",
      "prevProperty": "data"
    },
    {
      "path": "window.HTMLObjectElement.prototype",
      "propertyName": "hspace",
      "throughProperty": "hspace",
      "prevProperty": "height"
    },
    {
      "path": "window.HTMLObjectElement.prototype",
      "propertyName": "standby",
      "throughProperty": "standby",
      "prevProperty": "name"
    },
    {
      "path": "window.HTMLObjectElement.prototype",
      "propertyName": "vspace",
      "throughProperty": "vspace",
      "prevProperty": "useMap"
    },
    {
      "path": "window.HTMLObjectElement.prototype",
      "propertyName": "border",
      "throughProperty": "border",
      "prevProperty": "archive"
    },
    {
      "path": "window.HTMLObjectElement.prototype",
      "propertyName": "codeBase",
      "throughProperty": "codeType",
      "prevProperty": "border"
    },
    {
      "path": "window.HTMLObjectElement.prototype",
      "propertyName": "getSVGDocument",
      "throughProperty": "getSVGDocument",
      "prevProperty": "setCustomValidity"
    },
    {
      "path": "window.HTMLObjectElement.prototype",
      "propertyName": "checkValidity",
      "throughProperty": "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC",
      "prevProperty": "contentWindow"
    },
    {
      "path": "window.HTMLObjectElement.prototype.checkValidity",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.HTMLObjectElement.prototype.checkValidity",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.HTMLObjectElement.prototype.getSVGDocument",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.HTMLObjectElement.prototype.getSVGDocument",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.HTMLObjectElement.prototype.reportValidity",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.HTMLObjectElement.prototype.reportValidity",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.HTMLObjectElement.prototype.setCustomValidity",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.HTMLObjectElement.prototype.setCustomValidity",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.HTMLOListElement",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.HTMLOListElement",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.HTMLOListElement",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.HTMLOListElement",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.HTMLOListElement",
      "propertyName": "ELEMENT_NODE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.HTMLOListElement.prototype",
      "propertyName": "reversed",
      "throughProperty": "reversed",
      "prevProperty": "start"
    },
    {
      "path": "window.HTMLOListElement.prototype",
      "propertyName": "compact",
      "throughProperty": "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC",
      "prevProperty": null
    },
    {
      "path": "window.HTMLOListElement.prototype",
      "propertyName": "type",
      "throughProperty": "type",
      "prevProperty": "reversed"
    },
    {
      "path": "window.HTMLOptGroupElement",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.HTMLOptGroupElement",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.HTMLOptGroupElement",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.HTMLOptGroupElement",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.HTMLOptGroupElement",
      "propertyName": "ELEMENT_NODE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.HTMLOptionElement",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.HTMLOptionElement",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.HTMLOptionElement",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.HTMLOptionElement",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.HTMLOptionElement",
      "propertyName": "ELEMENT_NODE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.HTMLOptionsCollection",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.HTMLOptionsCollection",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.HTMLOptionsCollection",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.HTMLOptionsCollection",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.HTMLOptionsCollection",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.HTMLOptionsCollection.prototype.add",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.HTMLOptionsCollection.prototype.add",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.HTMLOptionsCollection.prototype.remove",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.HTMLOptionsCollection.prototype.remove",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.HTMLOutputElement",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.HTMLOutputElement",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.HTMLOutputElement",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.HTMLOutputElement",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.HTMLOutputElement",
      "propertyName": "ELEMENT_NODE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.HTMLOutputElement.prototype.checkValidity",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.HTMLOutputElement.prototype.checkValidity",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.HTMLOutputElement.prototype.reportValidity",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.HTMLOutputElement.prototype.reportValidity",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.HTMLOutputElement.prototype.setCustomValidity",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.HTMLOutputElement.prototype.setCustomValidity",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.HTMLParagraphElement",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.HTMLParagraphElement",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.HTMLParagraphElement",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.HTMLParagraphElement",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.HTMLParagraphElement",
      "propertyName": "ELEMENT_NODE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.HTMLParamElement",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.HTMLParamElement",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.HTMLParamElement",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.HTMLParamElement",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.HTMLParamElement",
      "propertyName": "ELEMENT_NODE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.HTMLParamElement.prototype",
      "propertyName": "type",
      "throughProperty": "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC",
      "prevProperty": "name"
    },
    {
      "path": "window.HTMLParamElement.prototype",
      "propertyName": "value",
      "throughProperty": "value",
      "prevProperty": "type"
    },
    {
      "path": "window.HTMLPictureElement",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.HTMLPictureElement",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.HTMLPictureElement",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.HTMLPictureElement",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.HTMLPictureElement",
      "propertyName": "ELEMENT_NODE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.HTMLPreElement",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.HTMLPreElement",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.HTMLPreElement",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.HTMLPreElement",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.HTMLPreElement",
      "propertyName": "ELEMENT_NODE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.HTMLProgressElement",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.HTMLProgressElement",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.HTMLProgressElement",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.HTMLProgressElement",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.HTMLProgressElement",
      "propertyName": "ELEMENT_NODE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.HTMLQuoteElement",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.HTMLQuoteElement",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.HTMLQuoteElement",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.HTMLQuoteElement",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.HTMLQuoteElement",
      "propertyName": "ELEMENT_NODE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.HTMLScriptElement",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.HTMLScriptElement",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.HTMLScriptElement",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.HTMLScriptElement",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.HTMLScriptElement",
      "propertyName": "ELEMENT_NODE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.HTMLScriptElement.prototype",
      "propertyName": "src",
      "throughProperty": "type",
      "prevProperty": "defer"
    },
    {
      "path": "window.HTMLScriptElement.prototype",
      "propertyName": "noModule",
      "throughProperty": "noModule",
      "prevProperty": "nonce"
    },
    {
      "path": "window.HTMLScriptElement.prototype",
      "propertyName": "text",
      "throughProperty": "text",
      "prevProperty": null
    },
    {
      "path": "window.HTMLScriptElement.prototype",
      "propertyName": "crossOrigin",
      "throughProperty": "crossOrigin",
      "prevProperty": "type"
    },
    {
      "path": "window.HTMLScriptElement.prototype",
      "propertyName": "htmlFor",
      "throughProperty": "htmlFor",
      "prevProperty": "text"
    },
    {
      "path": "window.HTMLScriptElement.prototype",
      "propertyName": "event",
      "throughProperty": "event",
      "prevProperty": "htmlFor"
    },
    {
      "path": "window.HTMLScriptElement.prototype",
      "propertyName": "integrity",
      "throughProperty": "integrity",
      "prevProperty": "noModule"
    },
    {
      "path": "window.HTMLSelectElement",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.HTMLSelectElement",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.HTMLSelectElement",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.HTMLSelectElement",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.HTMLSelectElement",
      "propertyName": "ELEMENT_NODE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.HTMLSelectElement.prototype.add",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.HTMLSelectElement.prototype.add",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.HTMLSelectElement.prototype.checkValidity",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.HTMLSelectElement.prototype.checkValidity",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.HTMLSelectElement.prototype.item",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.HTMLSelectElement.prototype.item",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.HTMLSelectElement.prototype.namedItem",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.HTMLSelectElement.prototype.namedItem",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.HTMLSelectElement.prototype.remove",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.HTMLSelectElement.prototype.remove",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.HTMLSelectElement.prototype.reportValidity",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.HTMLSelectElement.prototype.reportValidity",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.HTMLSelectElement.prototype.setCustomValidity",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.HTMLSelectElement.prototype.setCustomValidity",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.HTMLSlotElement",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.HTMLSlotElement",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.HTMLSlotElement",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.HTMLSlotElement",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.HTMLSlotElement",
      "propertyName": "ELEMENT_NODE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.HTMLSlotElement.prototype.assignedElements",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.HTMLSlotElement.prototype.assignedElements",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.HTMLSlotElement.prototype.assignedNodes",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.HTMLSlotElement.prototype.assignedNodes",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.HTMLSourceElement",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.HTMLSourceElement",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.HTMLSourceElement",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.HTMLSourceElement",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.HTMLSourceElement",
      "propertyName": "ELEMENT_NODE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.HTMLSpanElement",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.HTMLSpanElement",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.HTMLSpanElement",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.HTMLSpanElement",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.HTMLSpanElement",
      "propertyName": "ELEMENT_NODE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.HTMLStyleElement",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.HTMLStyleElement",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.HTMLStyleElement",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.HTMLStyleElement",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.HTMLStyleElement",
      "propertyName": "ELEMENT_NODE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.HTMLTableCaptionElement",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.HTMLTableCaptionElement",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.HTMLTableCaptionElement",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.HTMLTableCaptionElement",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.HTMLTableCaptionElement",
      "propertyName": "ELEMENT_NODE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.HTMLTableCellElement",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.HTMLTableCellElement",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.HTMLTableCellElement",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.HTMLTableCellElement",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.HTMLTableCellElement",
      "propertyName": "ELEMENT_NODE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.HTMLTableCellElement.prototype",
      "propertyName": "cellIndex",
      "throughProperty": "axis",
      "prevProperty": null
    },
    {
      "path": "window.HTMLTableCellElement.prototype",
      "propertyName": "colSpan",
      "throughProperty": "headers",
      "prevProperty": "chOff"
    },
    {
      "path": "window.HTMLTableCellElement.prototype",
      "propertyName": "height",
      "throughProperty": "height",
      "prevProperty": "headers"
    },
    {
      "path": "window.HTMLTableCellElement.prototype",
      "propertyName": "width",
      "throughProperty": "width",
      "prevProperty": "vAlign"
    },
    {
      "path": "window.HTMLTableCellElement.prototype",
      "propertyName": "ch",
      "throughProperty": "chOff",
      "prevProperty": "bgColor"
    },
    {
      "path": "window.HTMLTableCellElement.prototype",
      "propertyName": "bgColor",
      "throughProperty": "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC",
      "prevProperty": "axis"
    },
    {
      "path": "window.HTMLTableColElement",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.HTMLTableColElement",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.HTMLTableColElement",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.HTMLTableColElement",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.HTMLTableColElement",
      "propertyName": "ELEMENT_NODE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.HTMLTableColElement.prototype",
      "propertyName": "align",
      "throughProperty": "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC",
      "prevProperty": null
    },
    {
      "path": "window.HTMLTableColElement.prototype",
      "propertyName": "span",
      "throughProperty": "span",
      "prevProperty": "chOff"
    },
    {
      "path": "window.HTMLTableElement",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.HTMLTableElement",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.HTMLTableElement",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.HTMLTableElement",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.HTMLTableElement",
      "propertyName": "ELEMENT_NODE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.HTMLTableElement.prototype",
      "propertyName": "rows",
      "throughProperty": "rows",
      "prevProperty": "tFoot"
    },
    {
      "path": "window.HTMLTableElement.prototype",
      "propertyName": "createCaption",
      "throughProperty": "deleteCaption",
      "prevProperty": "createTBody"
    },
    {
      "path": "window.HTMLTableElement.prototype",
      "propertyName": "tBodies",
      "throughProperty": "tBodies",
      "prevProperty": "rows"
    },
    {
      "path": "window.HTMLTableElement.prototype",
      "propertyName": "border",
      "throughProperty": "border",
      "prevProperty": "bgColor"
    },
    {
      "path": "window.HTMLTableElement.prototype",
      "propertyName": "frame",
      "throughProperty": "width",
      "prevProperty": "cellSpacing"
    },
    {
      "path": "window.HTMLTableElement.prototype",
      "propertyName": "bgColor",
      "throughProperty": "bgColor",
      "prevProperty": "align"
    },
    {
      "path": "window.HTMLTableElement.prototype",
      "propertyName": "cellPadding",
      "throughProperty": "cellSpacing",
      "prevProperty": "border"
    },
    {
      "path": "window.HTMLTableElement.prototype",
      "propertyName": "createTHead",
      "throughProperty": "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC",
      "prevProperty": "width"
    },
    {
      "path": "window.HTMLTableElement.prototype.createCaption",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.HTMLTableElement.prototype.createCaption",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.HTMLTableElement.prototype.createTBody",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.HTMLTableElement.prototype.createTBody",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.HTMLTableElement.prototype.createTFoot",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.HTMLTableElement.prototype.createTFoot",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.HTMLTableElement.prototype.createTHead",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.HTMLTableElement.prototype.createTHead",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.HTMLTableElement.prototype.deleteCaption",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.HTMLTableElement.prototype.deleteCaption",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.HTMLTableElement.prototype.deleteRow",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.HTMLTableElement.prototype.deleteRow",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.HTMLTableElement.prototype.deleteTFoot",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.HTMLTableElement.prototype.deleteTFoot",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.HTMLTableElement.prototype.deleteTHead",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.HTMLTableElement.prototype.deleteTHead",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.HTMLTableElement.prototype.insertRow",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.HTMLTableElement.prototype.insertRow",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.HTMLTableRowElement",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.HTMLTableRowElement",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.HTMLTableRowElement",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.HTMLTableRowElement",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.HTMLTableRowElement",
      "propertyName": "ELEMENT_NODE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.HTMLTableRowElement.prototype",
      "propertyName": "bgColor",
      "throughProperty": "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC",
      "prevProperty": "align"
    },
    {
      "path": "window.HTMLTableRowElement.prototype",
      "propertyName": "ch",
      "throughProperty": "vAlign",
      "prevProperty": "bgColor"
    },
    {
      "path": "window.HTMLTableRowElement.prototype.deleteCell",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.HTMLTableRowElement.prototype.deleteCell",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.HTMLTableRowElement.prototype.insertCell",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.HTMLTableRowElement.prototype.insertCell",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.HTMLTableSectionElement",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.HTMLTableSectionElement",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.HTMLTableSectionElement",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.HTMLTableSectionElement",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.HTMLTableSectionElement",
      "propertyName": "ELEMENT_NODE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.HTMLTableSectionElement.prototype",
      "propertyName": "align",
      "throughProperty": "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC",
      "prevProperty": null
    },
    {
      "path": "window.HTMLTableSectionElement.prototype",
      "propertyName": "rows",
      "throughProperty": "rows",
      "prevProperty": "vAlign"
    },
    {
      "path": "window.HTMLTableSectionElement.prototype.deleteRow",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.HTMLTableSectionElement.prototype.deleteRow",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.HTMLTableSectionElement.prototype.insertRow",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.HTMLTableSectionElement.prototype.insertRow",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.HTMLTemplateElement",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.HTMLTemplateElement",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.HTMLTemplateElement",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.HTMLTemplateElement",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.HTMLTemplateElement",
      "propertyName": "ELEMENT_NODE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.HTMLTextAreaElement",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.HTMLTextAreaElement",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.HTMLTextAreaElement",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.HTMLTextAreaElement",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.HTMLTextAreaElement",
      "propertyName": "ELEMENT_NODE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.HTMLTextAreaElement.prototype",
      "propertyName": "autocomplete",
      "throughProperty": "autocomplete",
      "prevProperty": "selectionDirection"
    },
    {
      "path": "window.HTMLTextAreaElement.prototype",
      "propertyName": "dirName",
      "throughProperty": "form",
      "prevProperty": "autofocus"
    },
    {
      "path": "window.HTMLTextAreaElement.prototype",
      "propertyName": "name",
      "throughProperty": "rows",
      "prevProperty": "maxLength"
    },
    {
      "path": "window.HTMLTextAreaElement.prototype",
      "propertyName": "cols",
      "throughProperty": "cols",
      "prevProperty": "rows"
    },
    {
      "path": "window.HTMLTextAreaElement.prototype",
      "propertyName": "minLength",
      "throughProperty": "minLength",
      "prevProperty": "form"
    },
    {
      "path": "window.HTMLTextAreaElement.prototype",
      "propertyName": "checkValidity",
      "throughProperty": "setSelectionRange",
      "prevProperty": "autocomplete"
    },
    {
      "path": "window.HTMLTextAreaElement.prototype.checkValidity",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.HTMLTextAreaElement.prototype.checkValidity",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.HTMLTextAreaElement.prototype.reportValidity",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.HTMLTextAreaElement.prototype.reportValidity",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.HTMLTextAreaElement.prototype.select",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.HTMLTextAreaElement.prototype.select",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.HTMLTextAreaElement.prototype.setCustomValidity",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.HTMLTextAreaElement.prototype.setCustomValidity",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.HTMLTextAreaElement.prototype.setRangeText",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.HTMLTextAreaElement.prototype.setRangeText",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.HTMLTextAreaElement.prototype.setSelectionRange",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.HTMLTextAreaElement.prototype.setSelectionRange",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.HTMLTimeElement",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.HTMLTimeElement",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.HTMLTimeElement",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.HTMLTimeElement",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.HTMLTimeElement",
      "propertyName": "ELEMENT_NODE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.HTMLTitleElement",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.HTMLTitleElement",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.HTMLTitleElement",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.HTMLTitleElement",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.HTMLTitleElement",
      "propertyName": "ELEMENT_NODE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.HTMLTrackElement",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.HTMLTrackElement",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.HTMLTrackElement",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.HTMLTrackElement",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.HTMLTrackElement",
      "propertyName": "NONE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.HTMLTrackElement.prototype",
      "propertyName": "NONE",
      "throughProperty": "ERROR",
      "prevProperty": "track"
    },
    {
      "path": "window.HTMLTrackElement.prototype",
      "propertyName": "kind",
      "throughProperty": "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC",
      "prevProperty": null
    },
    {
      "path": "window.HTMLUListElement",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.HTMLUListElement",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.HTMLUListElement",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.HTMLUListElement",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.HTMLUListElement",
      "propertyName": "ELEMENT_NODE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.HTMLUnknownElement",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.HTMLUnknownElement",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.HTMLUnknownElement",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.HTMLUnknownElement",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.HTMLUnknownElement",
      "propertyName": "ELEMENT_NODE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.HTMLVideoElement",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.HTMLVideoElement",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.HTMLVideoElement",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.HTMLVideoElement",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.HTMLVideoElement",
      "propertyName": "NETWORK_EMPTY",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.HTMLVideoElement.prototype",
      "propertyName": "webkitSupportsFullscreen",
      "throughProperty": "webkitSupportsFullscreen",
      "prevProperty": "playsInline"
    },
    {
      "path": "window.HTMLVideoElement.prototype",
      "propertyName": "webkitEnterFullscreen",
      "throughProperty": "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC",
      "prevProperty": "webkitPresentationMode"
    },
    {
      "path": "window.HTMLVideoElement.prototype",
      "propertyName": "webkitDisplayingFullscreen",
      "throughProperty": "webkitDisplayingFullscreen",
      "prevProperty": "webkitSupportsFullscreen"
    },
    {
      "path": "window.HTMLVideoElement.prototype.webkitEnterFullscreen",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.HTMLVideoElement.prototype.webkitEnterFullscreen",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.HTMLVideoElement.prototype.webkitEnterFullScreen",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.HTMLVideoElement.prototype.webkitEnterFullScreen",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.HTMLVideoElement.prototype.webkitExitFullscreen",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.HTMLVideoElement.prototype.webkitExitFullscreen",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.HTMLVideoElement.prototype.webkitExitFullScreen",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.HTMLVideoElement.prototype.webkitExitFullScreen",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.IDBCursor",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.IDBCursor",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.IDBCursor",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.IDBCursor",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.IDBCursor",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.IDBCursor.prototype",
      "propertyName": "update",
      "throughProperty": "update",
      "prevProperty": "primaryKey"
    },
    {
      "path": "window.IDBCursor.prototype",
      "propertyName": "advance",
      "throughProperty": "continuePrimaryKey",
      "prevProperty": "update"
    },
    {
      "path": "window.IDBCursor.prototype.advance",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.IDBCursor.prototype.advance",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.IDBCursor.prototype.continue",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.IDBCursor.prototype.continue",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.IDBCursor.prototype.continuePrimaryKey",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.IDBCursor.prototype.continuePrimaryKey",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.IDBCursor.prototype.delete",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.IDBCursor.prototype.delete",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.IDBCursor.prototype.update",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.IDBCursor.prototype.update",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.IDBCursorWithValue",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.IDBCursorWithValue",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.IDBCursorWithValue",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.IDBCursorWithValue",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.IDBCursorWithValue",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.IDBDatabase",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.IDBDatabase",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.IDBDatabase",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.IDBDatabase",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.IDBDatabase",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.IDBDatabase.prototype",
      "propertyName": "createObjectStore",
      "throughProperty": "deleteObjectStore",
      "prevProperty": "onversionchange"
    },
    {
      "path": "window.IDBDatabase.prototype",
      "propertyName": "transaction",
      "throughProperty": "close",
      "prevProperty": "deleteObjectStore"
    },
    {
      "path": "window.IDBDatabase.prototype.close",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.IDBDatabase.prototype.close",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.IDBDatabase.prototype.createObjectStore",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.IDBDatabase.prototype.createObjectStore",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.IDBDatabase.prototype.deleteObjectStore",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.IDBDatabase.prototype.deleteObjectStore",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.IDBDatabase.prototype.transaction",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.IDBDatabase.prototype.transaction",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.IDBFactory",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.IDBFactory",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.IDBFactory",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.IDBFactory",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.IDBFactory",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.IDBFactory.prototype.cmp",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.IDBFactory.prototype.cmp",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.IDBFactory.prototype.deleteDatabase",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.IDBFactory.prototype.deleteDatabase",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.IDBFactory.prototype.open",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.IDBFactory.prototype.open",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.IDBIndex",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.IDBIndex",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.IDBIndex",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.IDBIndex",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.IDBIndex",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.IDBIndex.prototype",
      "propertyName": "openCursor",
      "throughProperty": "openKeyCursor",
      "prevProperty": "unique"
    },
    {
      "path": "window.IDBIndex.prototype",
      "propertyName": "get",
      "throughProperty": "count",
      "prevProperty": "openKeyCursor"
    },
    {
      "path": "window.IDBIndex.prototype.count",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.IDBIndex.prototype.count",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.IDBIndex.prototype.get",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.IDBIndex.prototype.get",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.IDBIndex.prototype.getAll",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.IDBIndex.prototype.getAll",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.IDBIndex.prototype.getAllKeys",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.IDBIndex.prototype.getAllKeys",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.IDBIndex.prototype.getKey",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.IDBIndex.prototype.getKey",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.IDBIndex.prototype.openCursor",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.IDBIndex.prototype.openCursor",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.IDBIndex.prototype.openKeyCursor",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.IDBIndex.prototype.openKeyCursor",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.IDBKeyRange",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.IDBKeyRange",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.IDBKeyRange",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.IDBKeyRange",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.IDBKeyRange",
      "propertyName": "only",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.IDBKeyRange.bound",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.IDBKeyRange.bound",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.IDBKeyRange.lowerBound",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.IDBKeyRange.lowerBound",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.IDBKeyRange.only",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.IDBKeyRange.only",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.IDBKeyRange.prototype.includes",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.IDBKeyRange.prototype.includes",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.IDBKeyRange.upperBound",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.IDBKeyRange.upperBound",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.IDBObjectStore",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.IDBObjectStore",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.IDBObjectStore",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.IDBObjectStore",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.IDBObjectStore",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.IDBObjectStore.prototype",
      "propertyName": "deleteIndex",
      "throughProperty": "deleteIndex",
      "prevProperty": "index"
    },
    {
      "path": "window.IDBObjectStore.prototype",
      "propertyName": "get",
      "throughProperty": "getKey",
      "prevProperty": "delete"
    },
    {
      "path": "window.IDBObjectStore.prototype",
      "propertyName": "clear",
      "throughProperty": "clear",
      "prevProperty": "getKey"
    },
    {
      "path": "window.IDBObjectStore.prototype",
      "propertyName": "openCursor",
      "throughProperty": "openKeyCursor",
      "prevProperty": "clear"
    },
    {
      "path": "window.IDBObjectStore.prototype",
      "propertyName": "getAll",
      "throughProperty": "getAllKeys",
      "prevProperty": "openKeyCursor"
    },
    {
      "path": "window.IDBObjectStore.prototype",
      "propertyName": "count",
      "throughProperty": "count",
      "prevProperty": "deleteIndex"
    },
    {
      "path": "window.IDBObjectStore.prototype",
      "propertyName": "createIndex",
      "throughProperty": "createIndex",
      "prevProperty": "getAllKeys"
    },
    {
      "path": "window.IDBObjectStore.prototype.add",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.IDBObjectStore.prototype.add",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.IDBObjectStore.prototype.clear",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.IDBObjectStore.prototype.clear",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.IDBObjectStore.prototype.count",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.IDBObjectStore.prototype.count",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.IDBObjectStore.prototype.createIndex",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.IDBObjectStore.prototype.createIndex",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.IDBObjectStore.prototype.delete",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.IDBObjectStore.prototype.delete",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.IDBObjectStore.prototype.deleteIndex",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.IDBObjectStore.prototype.deleteIndex",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.IDBObjectStore.prototype.get",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.IDBObjectStore.prototype.get",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.IDBObjectStore.prototype.getAll",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.IDBObjectStore.prototype.getAll",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.IDBObjectStore.prototype.getAllKeys",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.IDBObjectStore.prototype.getAllKeys",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.IDBObjectStore.prototype.getKey",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.IDBObjectStore.prototype.getKey",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.IDBObjectStore.prototype.index",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.IDBObjectStore.prototype.index",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.IDBObjectStore.prototype.openCursor",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.IDBObjectStore.prototype.openCursor",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.IDBObjectStore.prototype.openKeyCursor",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.IDBObjectStore.prototype.openKeyCursor",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.IDBObjectStore.prototype.put",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.IDBObjectStore.prototype.put",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.IDBOpenDBRequest",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.IDBOpenDBRequest",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.IDBOpenDBRequest",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.IDBOpenDBRequest",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.IDBOpenDBRequest",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.IDBRequest",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.IDBRequest",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.IDBRequest",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.IDBRequest",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.IDBRequest",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.IDBTransaction",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.IDBTransaction",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.IDBTransaction",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.IDBTransaction",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.IDBTransaction",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.IDBTransaction.prototype.abort",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.IDBTransaction.prototype.abort",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.IDBTransaction.prototype.objectStore",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.IDBTransaction.prototype.objectStore",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.IDBVersionChangeEvent",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.IDBVersionChangeEvent",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.IDBVersionChangeEvent",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.IDBVersionChangeEvent",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.IDBVersionChangeEvent",
      "propertyName": "NONE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.Image",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.Image",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.Image",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.Image",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Image",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.ImageData",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.ImageData",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.ImageData",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.ImageData",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.ImageData",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.InputEvent",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.InputEvent",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.InputEvent",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.InputEvent",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.InputEvent",
      "propertyName": "NONE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.InputEvent.prototype",
      "propertyName": "inputType",
      "throughProperty": "BUBBLING_PHASE",
      "prevProperty": null
    },
    {
      "path": "window.InputEvent.prototype",
      "propertyName": "data",
      "throughProperty": "data",
      "prevProperty": "inputType"
    },
    {
      "path": "window.InputEvent.prototype.getTargetRanges",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.InputEvent.prototype.getTargetRanges",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Int16Array",
      "propertyName": "name",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.Int16Array",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "prototype"
    },
    {
      "path": "window.Int32Array",
      "propertyName": "name",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.Int32Array",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "prototype"
    },
    {
      "path": "window.Int8Array",
      "propertyName": "name",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.Int8Array",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "prototype"
    },
    {
      "path": "window.IntersectionObserver",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.IntersectionObserver",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.IntersectionObserver",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.IntersectionObserver",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.IntersectionObserver",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.IntersectionObserver.prototype.disconnect",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.IntersectionObserver.prototype.disconnect",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.IntersectionObserver.prototype.observe",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.IntersectionObserver.prototype.observe",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.IntersectionObserver.prototype.takeRecords",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.IntersectionObserver.prototype.takeRecords",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.IntersectionObserver.prototype.unobserve",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.IntersectionObserver.prototype.unobserve",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.IntersectionObserverEntry",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.IntersectionObserverEntry",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.IntersectionObserverEntry",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.IntersectionObserverEntry",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.IntersectionObserverEntry",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.Intl",
      "propertyName": "Collator",
      "throughProperty": "Collator",
      "prevProperty": "getCanonicalLocales"
    },
    {
      "path": "window.Intl",
      "propertyName": "DateTimeFormat",
      "throughProperty": "NumberFormat",
      "prevProperty": "Collator"
    },
    {
      "path": "window.Intl.Collator",
      "propertyName": "supportedLocalesOf",
      "throughProperty": "supportedLocalesOf",
      "prevProperty": null
    },
    {
      "path": "window.Intl.Collator",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "prototype"
    },
    {
      "path": "window.Intl.Collator.prototype",
      "propertyName": "compare",
      "throughProperty": "compare",
      "prevProperty": null
    },
    {
      "path": "window.Intl.Collator.prototype",
      "propertyName": "resolvedOptions",
      "throughProperty": "resolvedOptions",
      "prevProperty": "compare"
    },
    {
      "path": "window.Intl.Collator.prototype.resolvedOptions",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Intl.Collator.prototype.resolvedOptions",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Intl.Collator.supportedLocalesOf",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Intl.Collator.supportedLocalesOf",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Intl.DateTimeFormat",
      "propertyName": "supportedLocalesOf",
      "throughProperty": "supportedLocalesOf",
      "prevProperty": null
    },
    {
      "path": "window.Intl.DateTimeFormat",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "prototype"
    },
    {
      "path": "window.Intl.DateTimeFormat.prototype",
      "propertyName": "format",
      "throughProperty": "format",
      "prevProperty": null
    },
    {
      "path": "window.Intl.DateTimeFormat.prototype",
      "propertyName": "resolvedOptions",
      "throughProperty": "formatToParts",
      "prevProperty": "format"
    },
    {
      "path": "window.Intl.DateTimeFormat.prototype.formatToParts",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Intl.DateTimeFormat.prototype.formatToParts",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Intl.DateTimeFormat.prototype.resolvedOptions",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Intl.DateTimeFormat.prototype.resolvedOptions",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Intl.DateTimeFormat.supportedLocalesOf",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Intl.DateTimeFormat.supportedLocalesOf",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Intl.getCanonicalLocales",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Intl.getCanonicalLocales",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Intl.NumberFormat",
      "propertyName": "supportedLocalesOf",
      "throughProperty": "supportedLocalesOf",
      "prevProperty": null
    },
    {
      "path": "window.Intl.NumberFormat",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "prototype"
    },
    {
      "path": "window.Intl.NumberFormat.prototype",
      "propertyName": "format",
      "throughProperty": "format",
      "prevProperty": null
    },
    {
      "path": "window.Intl.NumberFormat.prototype",
      "propertyName": "resolvedOptions",
      "throughProperty": "formatToParts",
      "prevProperty": "format"
    },
    {
      "path": "window.Intl.NumberFormat.prototype.formatToParts",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Intl.NumberFormat.prototype.formatToParts",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Intl.NumberFormat.prototype.resolvedOptions",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Intl.NumberFormat.prototype.resolvedOptions",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Intl.NumberFormat.supportedLocalesOf",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Intl.NumberFormat.supportedLocalesOf",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Intl.PluralRules",
      "propertyName": "supportedLocalesOf",
      "throughProperty": "supportedLocalesOf",
      "prevProperty": null
    },
    {
      "path": "window.Intl.PluralRules",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "prototype"
    },
    {
      "path": "window.Intl.PluralRules.prototype",
      "propertyName": "select",
      "throughProperty": "select",
      "prevProperty": null
    },
    {
      "path": "window.Intl.PluralRules.prototype",
      "propertyName": "resolvedOptions",
      "throughProperty": "resolvedOptions",
      "prevProperty": "select"
    },
    {
      "path": "window.Intl.PluralRules.prototype.resolvedOptions",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Intl.PluralRules.prototype.resolvedOptions",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Intl.PluralRules.prototype.select",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Intl.PluralRules.prototype.select",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Intl.PluralRules.supportedLocalesOf",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Intl.PluralRules.supportedLocalesOf",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.JSON.parse",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.JSON.parse",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.JSON.stringify",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.JSON.stringify",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.KeyboardEvent",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.KeyboardEvent",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.KeyboardEvent",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.KeyboardEvent",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.KeyboardEvent",
      "propertyName": "DOM_KEY_LOCATION_STANDARD",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.KeyboardEvent.prototype",
      "propertyName": "DOM_KEY_LOCATION_STANDARD",
      "throughProperty": "DOM_KEY_LOCATION_NUMPAD",
      "prevProperty": "initKeyboardEvent"
    },
    {
      "path": "window.KeyboardEvent.prototype",
      "propertyName": "key",
      "throughProperty": "isComposing",
      "prevProperty": null
    },
    {
      "path": "window.KeyboardEvent.prototype",
      "propertyName": "charCode",
      "throughProperty": "BUBBLING_PHASE",
      "prevProperty": "altGraphKey"
    },
    {
      "path": "window.KeyboardEvent.prototype.getModifierState",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.KeyboardEvent.prototype.getModifierState",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.KeyboardEvent.prototype.initKeyboardEvent",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.KeyboardEvent.prototype.initKeyboardEvent",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Location",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.Location",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.Location",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.Location",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Location",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.Map",
      "propertyName": "name",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.Map",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "prototype"
    },
    {
      "path": "window.Map.prototype",
      "propertyName": "forEach",
      "throughProperty": "forEach",
      "prevProperty": null
    },
    {
      "path": "window.Map.prototype",
      "propertyName": "delete",
      "throughProperty": "delete",
      "prevProperty": "clear"
    },
    {
      "path": "window.Map.prototype",
      "propertyName": "get",
      "throughProperty": "get",
      "prevProperty": "delete"
    },
    {
      "path": "window.Map.prototype",
      "propertyName": "has",
      "throughProperty": "has",
      "prevProperty": "get"
    },
    {
      "path": "window.Map.prototype",
      "propertyName": "set",
      "throughProperty": "set",
      "prevProperty": "has"
    },
    {
      "path": "window.Map.prototype",
      "propertyName": "clear",
      "throughProperty": "clear",
      "prevProperty": "keys"
    },
    {
      "path": "window.Map.prototype",
      "propertyName": "entries",
      "throughProperty": "entries",
      "prevProperty": "set"
    },
    {
      "path": "window.Map.prototype",
      "propertyName": "values",
      "throughProperty": "values",
      "prevProperty": "forEach"
    },
    {
      "path": "window.Map.prototype",
      "propertyName": "keys",
      "throughProperty": "keys",
      "prevProperty": "values"
    },
    {
      "path": "window.Map.prototype",
      "propertyName": "size",
      "throughProperty": "size",
      "prevProperty": "entries"
    },
    {
      "path": "window.Map.prototype.clear",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Map.prototype.clear",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Map.prototype.delete",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Map.prototype.delete",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Map.prototype.get",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Map.prototype.get",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Map.prototype.has",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Map.prototype.has",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Map.prototype.set",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Map.prototype.set",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.matchMedia",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.matchMedia",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Math",
      "propertyName": "E",
      "throughProperty": "E",
      "prevProperty": null
    },
    {
      "path": "window.Math",
      "propertyName": "abs",
      "throughProperty": "acos",
      "prevProperty": "SQRT2"
    },
    {
      "path": "window.Math",
      "propertyName": "atan",
      "throughProperty": "atan",
      "prevProperty": "asin"
    },
    {
      "path": "window.Math",
      "propertyName": "acosh",
      "throughProperty": "acosh",
      "prevProperty": "atan"
    },
    {
      "path": "window.Math",
      "propertyName": "asin",
      "throughProperty": "asin",
      "prevProperty": "acos"
    },
    {
      "path": "window.Math",
      "propertyName": "asinh",
      "throughProperty": "asinh",
      "prevProperty": "acosh"
    },
    {
      "path": "window.Math",
      "propertyName": "atanh",
      "throughProperty": "atan2",
      "prevProperty": "asinh"
    },
    {
      "path": "window.Math",
      "propertyName": "cbrt",
      "throughProperty": "cbrt",
      "prevProperty": "atan2"
    },
    {
      "path": "window.Math",
      "propertyName": "ceil",
      "throughProperty": "ceil",
      "prevProperty": "cbrt"
    },
    {
      "path": "window.Math",
      "propertyName": "clz32",
      "throughProperty": "exp",
      "prevProperty": "ceil"
    },
    {
      "path": "window.Math",
      "propertyName": "expm1",
      "throughProperty": "expm1",
      "prevProperty": "exp"
    },
    {
      "path": "window.Math",
      "propertyName": "floor",
      "throughProperty": "hypot",
      "prevProperty": "expm1"
    },
    {
      "path": "window.Math",
      "propertyName": "imul",
      "throughProperty": "imul",
      "prevProperty": "trunc"
    },
    {
      "path": "window.Math",
      "propertyName": "log",
      "throughProperty": "log",
      "prevProperty": "hypot"
    },
    {
      "path": "window.Math",
      "propertyName": "log10",
      "throughProperty": "log10",
      "prevProperty": "log"
    },
    {
      "path": "window.Math",
      "propertyName": "log1p",
      "throughProperty": "log2",
      "prevProperty": "log10"
    },
    {
      "path": "window.Math",
      "propertyName": "max",
      "throughProperty": "trunc",
      "prevProperty": "log2"
    },
    {
      "path": "window.Math",
      "propertyName": "LN2",
      "throughProperty": "LN2",
      "prevProperty": "E"
    },
    {
      "path": "window.Math",
      "propertyName": "LN10",
      "throughProperty": "LN10",
      "prevProperty": "LN2"
    },
    {
      "path": "window.Math",
      "propertyName": "LOG2E",
      "throughProperty": "LOG2E",
      "prevProperty": "LN10"
    },
    {
      "path": "window.Math",
      "propertyName": "LOG10E",
      "throughProperty": "LOG10E",
      "prevProperty": "LOG2E"
    },
    {
      "path": "window.Math",
      "propertyName": "PI",
      "throughProperty": "SQRT2",
      "prevProperty": "LOG10E"
    },
    {
      "path": "window.Math.abs",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Math.abs",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Math.acos",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Math.acos",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Math.acosh",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Math.acosh",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Math.asin",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Math.asin",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Math.asinh",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Math.asinh",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Math.atan",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Math.atan",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Math.atan2",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Math.atan2",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Math.atanh",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Math.atanh",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Math.cbrt",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Math.cbrt",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Math.ceil",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Math.ceil",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Math.clz32",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Math.clz32",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Math.cos",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Math.cos",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Math.cosh",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Math.cosh",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Math.exp",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Math.exp",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Math.expm1",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Math.expm1",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Math.floor",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Math.floor",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Math.fround",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Math.fround",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Math.hypot",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Math.hypot",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Math.imul",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Math.imul",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Math.log",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Math.log",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Math.log10",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Math.log10",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Math.log1p",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Math.log1p",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Math.log2",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Math.log2",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Math.max",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Math.max",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Math.min",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Math.min",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Math.pow",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Math.pow",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Math.random",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Math.random",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Math.round",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Math.round",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Math.sign",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Math.sign",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Math.sin",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Math.sin",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Math.sinh",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Math.sinh",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Math.sqrt",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Math.sqrt",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Math.tan",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Math.tan",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Math.tanh",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Math.tanh",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Math.trunc",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Math.trunc",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.MediaCapabilities",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.MediaCapabilities",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.MediaCapabilities",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.MediaCapabilities",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.MediaCapabilities",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.MediaCapabilities.prototype.decodingInfo",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.MediaCapabilities.prototype.decodingInfo",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.MediaDeviceInfo",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.MediaDeviceInfo",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.MediaDeviceInfo",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.MediaDeviceInfo",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.MediaDeviceInfo",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.MediaDeviceInfo.prototype",
      "propertyName": "kind",
      "throughProperty": "label",
      "prevProperty": "deviceId"
    },
    {
      "path": "window.MediaDeviceInfo.prototype",
      "propertyName": "groupId",
      "throughProperty": "groupId",
      "prevProperty": "label"
    },
    {
      "path": "window.MediaDeviceInfo.prototype.toJSON",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.MediaDeviceInfo.prototype.toJSON",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.MediaDevices",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.MediaDevices",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.MediaDevices",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.MediaDevices",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.MediaDevices",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.MediaDevices.prototype.enumerateDevices",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.MediaDevices.prototype.enumerateDevices",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.MediaDevices.prototype.getDisplayMedia",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.MediaDevices.prototype.getDisplayMedia",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.MediaDevices.prototype.getSupportedConstraints",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.MediaDevices.prototype.getSupportedConstraints",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.MediaDevices.prototype.getUserMedia",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.MediaDevices.prototype.getUserMedia",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.MediaElementAudioSourceNode",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.MediaElementAudioSourceNode",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.MediaElementAudioSourceNode",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.MediaElementAudioSourceNode",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.MediaElementAudioSourceNode",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.MediaEncryptedEvent",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.MediaEncryptedEvent",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.MediaEncryptedEvent",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.MediaEncryptedEvent",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.MediaEncryptedEvent",
      "propertyName": "NONE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.MediaError",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.MediaError",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.MediaError",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.MediaError",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "MEDIA_ERR_ENCRYPTED"
    },
    {
      "path": "window.MediaError",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.MediaError",
      "propertyName": "MEDIA_ERR_ABORTED",
      "throughProperty": "MEDIA_ERR_SRC_NOT_SUPPORTED",
      "prevProperty": "length"
    },
    {
      "path": "window.MediaError.prototype",
      "propertyName": "code",
      "throughProperty": "code",
      "prevProperty": null
    },
    {
      "path": "window.MediaError.prototype",
      "propertyName": "MEDIA_ERR_ABORTED",
      "throughProperty": "MEDIA_ERR_SRC_NOT_SUPPORTED",
      "prevProperty": "code"
    },
    {
      "path": "window.MediaKeyMessageEvent",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.MediaKeyMessageEvent",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.MediaKeyMessageEvent",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.MediaKeyMessageEvent",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.MediaKeyMessageEvent",
      "propertyName": "NONE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.MediaKeys",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.MediaKeys",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.MediaKeys",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.MediaKeys",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.MediaKeys",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.MediaKeys.prototype.createSession",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.MediaKeys.prototype.createSession",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.MediaKeys.prototype.setServerCertificate",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.MediaKeys.prototype.setServerCertificate",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.MediaKeySession",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.MediaKeySession",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.MediaKeySession",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.MediaKeySession",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.MediaKeySession",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.MediaKeySession.prototype",
      "propertyName": "closed",
      "throughProperty": "closed",
      "prevProperty": "expiration"
    },
    {
      "path": "window.MediaKeySession.prototype",
      "propertyName": "sessionId",
      "throughProperty": "sessionId",
      "prevProperty": null
    },
    {
      "path": "window.MediaKeySession.prototype.close",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.MediaKeySession.prototype.close",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.MediaKeySession.prototype.generateRequest",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.MediaKeySession.prototype.generateRequest",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.MediaKeySession.prototype.load",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.MediaKeySession.prototype.load",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.MediaKeySession.prototype.remove",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.MediaKeySession.prototype.remove",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.MediaKeySession.prototype.update",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.MediaKeySession.prototype.update",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.MediaKeyStatusMap",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.MediaKeyStatusMap",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.MediaKeyStatusMap",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.MediaKeyStatusMap",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.MediaKeyStatusMap",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.MediaKeyStatusMap.prototype",
      "propertyName": "size",
      "throughProperty": "get",
      "prevProperty": null
    },
    {
      "path": "window.MediaKeyStatusMap.prototype",
      "propertyName": "entries",
      "throughProperty": "entries",
      "prevProperty": "get"
    },
    {
      "path": "window.MediaKeyStatusMap.prototype.entries",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.MediaKeyStatusMap.prototype.entries",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.MediaKeyStatusMap.prototype.forEach",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.MediaKeyStatusMap.prototype.forEach",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.MediaKeyStatusMap.prototype.get",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.MediaKeyStatusMap.prototype.get",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.MediaKeyStatusMap.prototype.has",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.MediaKeyStatusMap.prototype.has",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.MediaKeyStatusMap.prototype.keys",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.MediaKeyStatusMap.prototype.keys",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.MediaKeyStatusMap.prototype.values",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.MediaKeyStatusMap.prototype.values",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.MediaKeySystemAccess",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.MediaKeySystemAccess",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.MediaKeySystemAccess",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.MediaKeySystemAccess",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.MediaKeySystemAccess",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.MediaKeySystemAccess.prototype.createMediaKeys",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.MediaKeySystemAccess.prototype.createMediaKeys",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.MediaKeySystemAccess.prototype.getConfiguration",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.MediaKeySystemAccess.prototype.getConfiguration",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.MediaList",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.MediaList",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.MediaList",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.MediaList",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.MediaList",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.MediaList.prototype",
      "propertyName": "toString",
      "throughProperty": "toString",
      "prevProperty": null
    },
    {
      "path": "window.MediaList.prototype",
      "propertyName": "deleteMedium",
      "throughProperty": "deleteMedium",
      "prevProperty": "item"
    },
    {
      "path": "window.MediaList.prototype",
      "propertyName": "appendMedium",
      "throughProperty": "appendMedium",
      "prevProperty": "deleteMedium"
    },
    {
      "path": "window.MediaList.prototype.appendMedium",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.MediaList.prototype.appendMedium",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.MediaList.prototype.deleteMedium",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.MediaList.prototype.deleteMedium",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.MediaList.prototype.item",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.MediaList.prototype.item",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.MediaSource",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.MediaSource",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.MediaSource",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.MediaSource",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.MediaSource",
      "propertyName": "isTypeSupported",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.MediaSource.isTypeSupported",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.MediaSource.isTypeSupported",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.MediaSource.prototype",
      "propertyName": "readyState",
      "throughProperty": "readyState",
      "prevProperty": "duration"
    },
    {
      "path": "window.MediaSource.prototype",
      "propertyName": "onsourceopen",
      "throughProperty": "onsourceclose",
      "prevProperty": "readyState"
    },
    {
      "path": "window.MediaSource.prototype.addSourceBuffer",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.MediaSource.prototype.addSourceBuffer",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.MediaSource.prototype.clearLiveSeekableRange",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.MediaSource.prototype.clearLiveSeekableRange",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.MediaSource.prototype.endOfStream",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.MediaSource.prototype.endOfStream",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.MediaSource.prototype.removeSourceBuffer",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.MediaSource.prototype.removeSourceBuffer",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.MediaSource.prototype.setLiveSeekableRange",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.MediaSource.prototype.setLiveSeekableRange",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.MediaStreamAudioDestinationNode",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.MediaStreamAudioDestinationNode",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.MediaStreamAudioDestinationNode",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.MediaStreamAudioDestinationNode",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.MediaStreamAudioDestinationNode",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.MediaStreamAudioSourceNode",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.MediaStreamAudioSourceNode",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.MediaStreamAudioSourceNode",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.MediaStreamAudioSourceNode",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.MediaStreamAudioSourceNode",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.MediaStreamTrack",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.MediaStreamTrack",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.MediaStreamTrack",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.MediaStreamTrack",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.MediaStreamTrack",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.MediaStreamTrack.prototype",
      "propertyName": "contentHint",
      "throughProperty": "contentHint",
      "prevProperty": "enabled"
    },
    {
      "path": "window.MediaStreamTrack.prototype",
      "propertyName": "clone",
      "throughProperty": "applyConstraints",
      "prevProperty": "onoverconstrained"
    },
    {
      "path": "window.MediaStreamTrack.prototype",
      "propertyName": "muted",
      "throughProperty": "onended",
      "prevProperty": "contentHint"
    },
    {
      "path": "window.MediaStreamTrack.prototype.applyConstraints",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.MediaStreamTrack.prototype.applyConstraints",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.MediaStreamTrack.prototype.clone",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.MediaStreamTrack.prototype.clone",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.MediaStreamTrack.prototype.getCapabilities",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.MediaStreamTrack.prototype.getCapabilities",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.MediaStreamTrack.prototype.getConstraints",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.MediaStreamTrack.prototype.getConstraints",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.MediaStreamTrack.prototype.getSettings",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.MediaStreamTrack.prototype.getSettings",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.MediaStreamTrack.prototype.stop",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.MediaStreamTrack.prototype.stop",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.MediaStreamTrackEvent",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.MediaStreamTrackEvent",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.MediaStreamTrackEvent",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.MediaStreamTrackEvent",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.MediaStreamTrackEvent",
      "propertyName": "NONE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.MessageChannel",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.MessageChannel",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.MessageChannel",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.MessageChannel",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.MessageChannel",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.MessageEvent",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.MessageEvent",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.MessageEvent",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.MessageEvent",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.MessageEvent",
      "propertyName": "NONE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.MessageEvent.prototype",
      "propertyName": "origin",
      "throughProperty": "BUBBLING_PHASE",
      "prevProperty": null
    },
    {
      "path": "window.MessageEvent.prototype",
      "propertyName": "data",
      "throughProperty": "data",
      "prevProperty": "source"
    },
    {
      "path": "window.MessageEvent.prototype.initMessageEvent",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.MessageEvent.prototype.initMessageEvent",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.MessagePort",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.MessagePort",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.MessagePort",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.MessagePort",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.MessagePort",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.MessagePort.prototype.close",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.MessagePort.prototype.close",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.MessagePort.prototype.postMessage",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.MessagePort.prototype.postMessage",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.MessagePort.prototype.start",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.MessagePort.prototype.start",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.MimeType",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.MimeType",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.MimeType",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.MimeType",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.MimeType",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.MimeTypeArray",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.MimeTypeArray",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.MimeTypeArray",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.MimeTypeArray",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.MimeTypeArray",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.MimeTypeArray.prototype.item",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.MimeTypeArray.prototype.item",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.MimeTypeArray.prototype.namedItem",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.MimeTypeArray.prototype.namedItem",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.MouseEvent",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.MouseEvent",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.MouseEvent",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.MouseEvent",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.MouseEvent.prototype",
      "propertyName": "offsetX",
      "throughProperty": "offsetY",
      "prevProperty": "webkitForce"
    },
    {
      "path": "window.MouseEvent.prototype",
      "propertyName": "movementX",
      "throughProperty": "movementY",
      "prevProperty": "relatedTarget"
    },
    {
      "path": "window.MouseEvent.prototype",
      "propertyName": "getModifierState",
      "throughProperty": "BUBBLING_PHASE",
      "prevProperty": "dataTransfer"
    },
    {
      "path": "window.MouseEvent.prototype",
      "propertyName": "x",
      "throughProperty": "y",
      "prevProperty": "offsetY"
    },
    {
      "path": "window.MouseEvent.prototype",
      "propertyName": "fromElement",
      "throughProperty": "toElement",
      "prevProperty": "y"
    },
    {
      "path": "window.MouseEvent.prototype.getModifierState",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.MouseEvent.prototype.getModifierState",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.MouseEvent.prototype.initMouseEvent",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.MouseEvent.prototype.initMouseEvent",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.moveBy",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.moveBy",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.moveTo",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.moveTo",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.MutationEvent",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.MutationEvent",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.MutationEvent",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.MutationEvent",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.MutationEvent",
      "propertyName": "MODIFICATION",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.MutationEvent.prototype",
      "propertyName": "MODIFICATION",
      "throughProperty": "REMOVAL",
      "prevProperty": "initMutationEvent"
    },
    {
      "path": "window.MutationEvent.prototype",
      "propertyName": "relatedNode",
      "throughProperty": "BUBBLING_PHASE",
      "prevProperty": null
    },
    {
      "path": "window.MutationEvent.prototype.initMutationEvent",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.MutationEvent.prototype.initMutationEvent",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.MutationObserver",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.MutationObserver",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.MutationObserver",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.MutationObserver",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.MutationObserver",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.MutationObserver.prototype.disconnect",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.MutationObserver.prototype.disconnect",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.MutationObserver.prototype.observe",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.MutationObserver.prototype.observe",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.MutationObserver.prototype.takeRecords",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.MutationObserver.prototype.takeRecords",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.MutationRecord",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.MutationRecord",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.MutationRecord",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.MutationRecord",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.MutationRecord",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.NamedNodeMap",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.NamedNodeMap",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.NamedNodeMap",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.NamedNodeMap",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.NamedNodeMap",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.NamedNodeMap.prototype.getNamedItem",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.NamedNodeMap.prototype.getNamedItem",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.NamedNodeMap.prototype.getNamedItemNS",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.NamedNodeMap.prototype.getNamedItemNS",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.NamedNodeMap.prototype.item",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.NamedNodeMap.prototype.item",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.NamedNodeMap.prototype.removeNamedItem",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.NamedNodeMap.prototype.removeNamedItem",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.NamedNodeMap.prototype.removeNamedItemNS",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.NamedNodeMap.prototype.removeNamedItemNS",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.NamedNodeMap.prototype.setNamedItem",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.NamedNodeMap.prototype.setNamedItem",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.NamedNodeMap.prototype.setNamedItemNS",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.NamedNodeMap.prototype.setNamedItemNS",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.navigator",
      "propertyName": "plugins",
      "throughProperty": "mimeTypes",
      "prevProperty": null
    },
    {
      "path": "window.navigator",
      "propertyName": "vendorSub",
      "throughProperty": "vendorSub",
      "prevProperty": "vendor"
    },
    {
      "path": "window.navigator",
      "propertyName": "productSub",
      "throughProperty": "productSub",
      "prevProperty": "product"
    },
    {
      "path": "window.navigator",
      "propertyName": "vendor",
      "throughProperty": "vendor",
      "prevProperty": "userAgent"
    },
    {
      "path": "window.navigator",
      "propertyName": "maxTouchPoints",
      "throughProperty": "maxTouchPoints",
      "prevProperty": "webdriver"
    },
    {
      "path": "window.navigator",
      "propertyName": "cookieEnabled",
      "throughProperty": "cookieEnabled",
      "prevProperty": "mimeTypes"
    },
    {
      "path": "window.navigator",
      "propertyName": "appCodeName",
      "throughProperty": "product",
      "prevProperty": "maxTouchPoints"
    },
    {
      "path": "window.navigator",
      "propertyName": "userAgent",
      "throughProperty": "userAgent",
      "prevProperty": "productSub"
    },
    {
      "path": "window.navigator",
      "propertyName": "language",
      "throughProperty": "onLine",
      "prevProperty": "vendorSub"
    },
    {
      "path": "window.navigator",
      "propertyName": "credentials",
      "throughProperty": "credentials",
      "prevProperty": "cookieEnabled"
    },
    {
      "path": "window.navigator",
      "propertyName": "geolocation",
      "throughProperty": "mediaCapabilities",
      "prevProperty": "credentials"
    },
    {
      "path": "window.navigator",
      "propertyName": "mediaDevices",
      "throughProperty": "mediaDevices",
      "prevProperty": "mediaCapabilities"
    },
    {
      "path": "window.navigator",
      "propertyName": "webdriver",
      "throughProperty": "webdriver",
      "prevProperty": "mediaDevices"
    },
    {
      "path": "window.Navigator",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.Navigator",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.Navigator",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.Navigator",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Navigator",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.Navigator.prototype",
      "propertyName": "plugins",
      "throughProperty": "mimeTypes",
      "prevProperty": null
    },
    {
      "path": "window.Navigator.prototype",
      "propertyName": "sendBeacon",
      "throughProperty": "sendBeacon",
      "prevProperty": "getStorageUpdates"
    },
    {
      "path": "window.Navigator.prototype",
      "propertyName": "getGamepads",
      "throughProperty": "getGamepads",
      "prevProperty": "requestMediaKeySystemAccess"
    },
    {
      "path": "window.Navigator.prototype",
      "propertyName": "vendorSub",
      "throughProperty": "vendorSub",
      "prevProperty": "vendor"
    },
    {
      "path": "window.Navigator.prototype",
      "propertyName": "productSub",
      "throughProperty": "productSub",
      "prevProperty": "product"
    },
    {
      "path": "window.Navigator.prototype",
      "propertyName": "vendor",
      "throughProperty": "vendor",
      "prevProperty": "userAgent"
    },
    {
      "path": "window.Navigator.prototype",
      "propertyName": "webdriver",
      "throughProperty": "webdriver",
      "prevProperty": "mediaDevices"
    },
    {
      "path": "window.Navigator.prototype",
      "propertyName": "maxTouchPoints",
      "throughProperty": "maxTouchPoints",
      "prevProperty": "webdriver"
    },
    {
      "path": "window.Navigator.prototype",
      "propertyName": "cookieEnabled",
      "throughProperty": "cookieEnabled",
      "prevProperty": "mimeTypes"
    },
    {
      "path": "window.Navigator.prototype",
      "propertyName": "appCodeName",
      "throughProperty": "product",
      "prevProperty": "maxTouchPoints"
    },
    {
      "path": "window.Navigator.prototype",
      "propertyName": "userAgent",
      "throughProperty": "userAgent",
      "prevProperty": "productSub"
    },
    {
      "path": "window.Navigator.prototype",
      "propertyName": "language",
      "throughProperty": "onLine",
      "prevProperty": "vendorSub"
    },
    {
      "path": "window.Navigator.prototype",
      "propertyName": "geolocation",
      "throughProperty": "mediaCapabilities",
      "prevProperty": "credentials"
    },
    {
      "path": "window.Navigator.prototype",
      "propertyName": "javaEnabled",
      "throughProperty": "javaEnabled",
      "prevProperty": "serviceWorker"
    },
    {
      "path": "window.Navigator.prototype",
      "propertyName": "credentials",
      "throughProperty": "credentials",
      "prevProperty": "cookieEnabled"
    },
    {
      "path": "window.Navigator.prototype",
      "propertyName": "mediaDevices",
      "throughProperty": "mediaDevices",
      "prevProperty": "mediaCapabilities"
    },
    {
      "path": "window.Navigator.prototype",
      "propertyName": "serviceWorker",
      "throughProperty": "serviceWorker",
      "prevProperty": "onLine"
    },
    {
      "path": "window.Navigator.prototype.getGamepads",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Navigator.prototype.getGamepads",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Navigator.prototype.javaEnabled",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Navigator.prototype.javaEnabled",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Navigator.prototype.requestMediaKeySystemAccess",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Navigator.prototype.requestMediaKeySystemAccess",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Navigator.prototype.sendBeacon",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Navigator.prototype.sendBeacon",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.navigator.serviceWorker",
      "propertyName": "controller",
      "throughProperty": "controller",
      "prevProperty": null
    },
    {
      "path": "window.navigator.serviceWorker",
      "propertyName": "ready",
      "throughProperty": "ready",
      "prevProperty": "controller"
    },
    {
      "path": "window.Node",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.Node",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.Node",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.Node",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Node",
      "propertyName": "ELEMENT_NODE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.Node.prototype",
      "propertyName": "nodeType",
      "throughProperty": "textContent",
      "prevProperty": null
    },
    {
      "path": "window.Node.prototype",
      "propertyName": "ELEMENT_NODE",
      "throughProperty": "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC",
      "prevProperty": "removeChild"
    },
    {
      "path": "window.Node.prototype",
      "propertyName": "getRootNode",
      "throughProperty": "getRootNode",
      "prevProperty": "textContent"
    },
    {
      "path": "window.Node.prototype",
      "propertyName": "hasChildNodes",
      "throughProperty": "hasChildNodes",
      "prevProperty": "getRootNode"
    },
    {
      "path": "window.Node.prototype",
      "propertyName": "normalize",
      "throughProperty": "removeChild",
      "prevProperty": "hasChildNodes"
    },
    {
      "path": "window.Node.prototype.appendChild",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Node.prototype.appendChild",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Node.prototype.cloneNode",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Node.prototype.cloneNode",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Node.prototype.compareDocumentPosition",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Node.prototype.compareDocumentPosition",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Node.prototype.contains",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Node.prototype.contains",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Node.prototype.getRootNode",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Node.prototype.getRootNode",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Node.prototype.hasChildNodes",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Node.prototype.hasChildNodes",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Node.prototype.insertBefore",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Node.prototype.insertBefore",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Node.prototype.isDefaultNamespace",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Node.prototype.isDefaultNamespace",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Node.prototype.isEqualNode",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Node.prototype.isEqualNode",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Node.prototype.isSameNode",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Node.prototype.isSameNode",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Node.prototype.lookupNamespaceURI",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Node.prototype.lookupNamespaceURI",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Node.prototype.lookupPrefix",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Node.prototype.lookupPrefix",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Node.prototype.normalize",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Node.prototype.normalize",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Node.prototype.removeChild",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Node.prototype.removeChild",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Node.prototype.replaceChild",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Node.prototype.replaceChild",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.NodeFilter",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.NodeFilter",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.NodeIterator",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.NodeIterator",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.NodeIterator",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.NodeIterator",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.NodeIterator",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.NodeIterator.prototype.detach",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.NodeIterator.prototype.detach",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.NodeIterator.prototype.nextNode",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.NodeIterator.prototype.nextNode",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.NodeIterator.prototype.previousNode",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.NodeIterator.prototype.previousNode",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.NodeList",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.NodeList",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.NodeList",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.NodeList",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.NodeList",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.NodeList.prototype.item",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.NodeList.prototype.item",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Notification",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.Notification",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.Notification",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.Notification",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Notification",
      "propertyName": "permission",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.Notification.prototype",
      "propertyName": "onshow",
      "throughProperty": "onshow",
      "prevProperty": "ondisplay"
    },
    {
      "path": "window.Notification.prototype",
      "propertyName": "onerror",
      "throughProperty": "onerror",
      "prevProperty": "onclick"
    },
    {
      "path": "window.Notification.prototype",
      "propertyName": "title",
      "throughProperty": "icon",
      "prevProperty": "onerror"
    },
    {
      "path": "window.Notification.prototype",
      "propertyName": "onclose",
      "throughProperty": "onclose",
      "prevProperty": "icon"
    },
    {
      "path": "window.Notification.prototype",
      "propertyName": "close",
      "throughProperty": "close",
      "prevProperty": "onshow"
    },
    {
      "path": "window.Notification.prototype.close",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Notification.prototype.close",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Notification.requestPermission",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Notification.requestPermission",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Number",
      "propertyName": "isFinite",
      "throughProperty": "isFinite",
      "prevProperty": null
    },
    {
      "path": "window.Number",
      "propertyName": "name",
      "throughProperty": "prototype",
      "prevProperty": "isSafeInteger"
    },
    {
      "path": "window.Number",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "prototype"
    },
    {
      "path": "window.Number",
      "propertyName": "parseFloat",
      "throughProperty": "parseFloat",
      "prevProperty": "parseInt"
    },
    {
      "path": "window.Number",
      "propertyName": "isInteger",
      "throughProperty": "isInteger",
      "prevProperty": "parseFloat"
    },
    {
      "path": "window.Number",
      "propertyName": "isNaN",
      "throughProperty": "isSafeInteger",
      "prevProperty": "isFinite"
    },
    {
      "path": "window.Number",
      "propertyName": "parseInt",
      "throughProperty": "parseInt",
      "prevProperty": "NaN"
    },
    {
      "path": "window.Number",
      "propertyName": "MAX_VALUE",
      "throughProperty": "MIN_VALUE",
      "prevProperty": "EPSILON"
    },
    {
      "path": "window.Number",
      "propertyName": "NEGATIVE_INFINITY",
      "throughProperty": "POSITIVE_INFINITY",
      "prevProperty": "MIN_SAFE_INTEGER"
    },
    {
      "path": "window.Number",
      "propertyName": "NaN",
      "throughProperty": "NaN",
      "prevProperty": "POSITIVE_INFINITY"
    },
    {
      "path": "window.Number",
      "propertyName": "MAX_SAFE_INTEGER",
      "throughProperty": "MIN_SAFE_INTEGER",
      "prevProperty": "MIN_VALUE"
    },
    {
      "path": "window.Number",
      "propertyName": "EPSILON",
      "throughProperty": "EPSILON",
      "prevProperty": "length"
    },
    {
      "path": "window.Number.isInteger",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Number.isInteger",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Number.isSafeInteger",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Number.isSafeInteger",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Number.prototype",
      "propertyName": "toLocaleString",
      "throughProperty": "toLocaleString",
      "prevProperty": null
    },
    {
      "path": "window.Number.prototype",
      "propertyName": "toFixed",
      "throughProperty": "toFixed",
      "prevProperty": "valueOf"
    },
    {
      "path": "window.Number.prototype",
      "propertyName": "toExponential",
      "throughProperty": "toExponential",
      "prevProperty": "toFixed"
    },
    {
      "path": "window.Number.prototype",
      "propertyName": "toPrecision",
      "throughProperty": "toString",
      "prevProperty": "toExponential"
    },
    {
      "path": "window.Number.prototype",
      "propertyName": "valueOf",
      "throughProperty": "valueOf",
      "prevProperty": "toLocaleString"
    },
    {
      "path": "window.Number.prototype.toExponential",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Number.prototype.toExponential",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Number.prototype.toFixed",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Number.prototype.toFixed",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Number.prototype.toLocaleString",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Number.prototype.toLocaleString",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Number.prototype.toPrecision",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Number.prototype.toPrecision",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Number.prototype.toString",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Number.prototype.toString",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Number.prototype.valueOf",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Number.prototype.valueOf",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Object",
      "propertyName": "freeze",
      "throughProperty": "freeze",
      "prevProperty": "seal"
    },
    {
      "path": "window.Object",
      "propertyName": "getPrototypeOf",
      "throughProperty": "setPrototypeOf",
      "prevProperty": null
    },
    {
      "path": "window.Object",
      "propertyName": "name",
      "throughProperty": "prototype",
      "prevProperty": "fromEntries"
    },
    {
      "path": "window.Object",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "prototype"
    },
    {
      "path": "window.Object",
      "propertyName": "is",
      "throughProperty": "is",
      "prevProperty": "isExtensible"
    },
    {
      "path": "window.Object",
      "propertyName": "assign",
      "throughProperty": "assign",
      "prevProperty": "is"
    },
    {
      "path": "window.Object",
      "propertyName": "getOwnPropertyDescriptor",
      "throughProperty": "getOwnPropertySymbols",
      "prevProperty": "setPrototypeOf"
    },
    {
      "path": "window.Object",
      "propertyName": "preventExtensions",
      "throughProperty": "preventExtensions",
      "prevProperty": "freeze"
    },
    {
      "path": "window.Object",
      "propertyName": "defineProperty",
      "throughProperty": "defineProperty",
      "prevProperty": "keys"
    },
    {
      "path": "window.Object",
      "propertyName": "defineProperties",
      "throughProperty": "defineProperties",
      "prevProperty": "defineProperty"
    },
    {
      "path": "window.Object",
      "propertyName": "create",
      "throughProperty": "create",
      "prevProperty": "defineProperties"
    },
    {
      "path": "window.Object",
      "propertyName": "isFrozen",
      "throughProperty": "isFrozen",
      "prevProperty": "isSealed"
    },
    {
      "path": "window.Object",
      "propertyName": "isExtensible",
      "throughProperty": "isExtensible",
      "prevProperty": "isFrozen"
    },
    {
      "path": "window.Object",
      "propertyName": "isSealed",
      "throughProperty": "isSealed",
      "prevProperty": "preventExtensions"
    },
    {
      "path": "window.Object",
      "propertyName": "keys",
      "throughProperty": "keys",
      "prevProperty": "getOwnPropertySymbols"
    },
    {
      "path": "window.Object",
      "propertyName": "values",
      "throughProperty": "values",
      "prevProperty": "assign"
    },
    {
      "path": "window.Object",
      "propertyName": "entries",
      "throughProperty": "fromEntries",
      "prevProperty": "values"
    },
    {
      "path": "window.Object.assign",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Object.assign",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Object.create",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Object.create",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Object.defineProperties",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Object.defineProperties",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Object.defineProperty",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Object.defineProperty",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Object.freeze",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Object.freeze",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Object.getOwnPropertyDescriptor",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Object.getOwnPropertyDescriptor",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Object.getOwnPropertyDescriptors",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Object.getOwnPropertyDescriptors",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Object.getOwnPropertyNames",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Object.getOwnPropertyNames",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Object.getOwnPropertySymbols",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Object.getOwnPropertySymbols",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Object.getPrototypeOf",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Object.getPrototypeOf",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Object.is",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Object.is",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Object.isExtensible",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Object.isExtensible",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Object.isFrozen",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Object.isFrozen",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Object.isSealed",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Object.isSealed",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Object.keys",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Object.keys",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Object.preventExtensions",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Object.preventExtensions",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Object.prototype",
      "propertyName": "toString",
      "throughProperty": "toString",
      "prevProperty": null
    },
    {
      "path": "window.Object.prototype",
      "propertyName": "hasOwnProperty",
      "throughProperty": "hasOwnProperty",
      "prevProperty": "valueOf"
    },
    {
      "path": "window.Object.prototype",
      "propertyName": "propertyIsEnumerable",
      "throughProperty": "propertyIsEnumerable",
      "prevProperty": "hasOwnProperty"
    },
    {
      "path": "window.Object.prototype",
      "propertyName": "isPrototypeOf",
      "throughProperty": "isPrototypeOf",
      "prevProperty": "propertyIsEnumerable"
    },
    {
      "path": "window.Object.prototype",
      "propertyName": "toLocaleString",
      "throughProperty": "toLocaleString",
      "prevProperty": "toString"
    },
    {
      "path": "window.Object.prototype",
      "propertyName": "valueOf",
      "throughProperty": "valueOf",
      "prevProperty": "toLocaleString"
    },
    {
      "path": "window.Object.prototype.__defineGetter__",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Object.prototype.__defineGetter__",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Object.prototype.__defineSetter__",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Object.prototype.__defineSetter__",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Object.prototype.__lookupGetter__",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Object.prototype.__lookupGetter__",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Object.prototype.__lookupSetter__",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Object.prototype.__lookupSetter__",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Object.prototype.hasOwnProperty",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Object.prototype.hasOwnProperty",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Object.prototype.isPrototypeOf",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Object.prototype.isPrototypeOf",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Object.prototype.propertyIsEnumerable",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Object.prototype.propertyIsEnumerable",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Object.prototype.toLocaleString",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Object.prototype.toLocaleString",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Object.prototype.toString",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Object.prototype.toString",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Object.prototype.valueOf",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Object.prototype.valueOf",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Object.seal",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Object.seal",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Object.setPrototypeOf",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Object.setPrototypeOf",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Object.values",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Object.values",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.OfflineAudioCompletionEvent",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.OfflineAudioCompletionEvent",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.OfflineAudioCompletionEvent",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.OfflineAudioCompletionEvent",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.OfflineAudioCompletionEvent",
      "propertyName": "NONE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.open",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.open",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Option",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.Option",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.Option",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.Option",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Option",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.OscillatorNode",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.OscillatorNode",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.OscillatorNode",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.OscillatorNode",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "FINISHED_STATE"
    },
    {
      "path": "window.OscillatorNode",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.OscillatorNode.prototype.setPeriodicWave",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.OscillatorNode.prototype.setPeriodicWave",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.OverconstrainedError",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.OverconstrainedError",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.OverconstrainedError",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.OverconstrainedError",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.OverconstrainedError",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.PageTransitionEvent",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.PageTransitionEvent",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.PageTransitionEvent",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.PageTransitionEvent",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.PageTransitionEvent",
      "propertyName": "NONE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.Path2D",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.Path2D",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.Path2D",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.Path2D",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Path2D",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.Path2D.prototype.addPath",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Path2D.prototype.addPath",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Path2D.prototype.arc",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Path2D.prototype.arc",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Path2D.prototype.arcTo",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Path2D.prototype.arcTo",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Path2D.prototype.bezierCurveTo",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Path2D.prototype.bezierCurveTo",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Path2D.prototype.closePath",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Path2D.prototype.closePath",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Path2D.prototype.ellipse",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Path2D.prototype.ellipse",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Path2D.prototype.lineTo",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Path2D.prototype.lineTo",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Path2D.prototype.moveTo",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Path2D.prototype.moveTo",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Path2D.prototype.quadraticCurveTo",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Path2D.prototype.quadraticCurveTo",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Path2D.prototype.rect",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Path2D.prototype.rect",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.PaymentAddress",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.PaymentAddress",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.PaymentAddress",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.PaymentAddress",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.PaymentAddress",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.PaymentAddress.prototype",
      "propertyName": "country",
      "throughProperty": "country",
      "prevProperty": null
    },
    {
      "path": "window.PaymentAddress.prototype",
      "propertyName": "addressLine",
      "throughProperty": "addressLine",
      "prevProperty": "country"
    },
    {
      "path": "window.PaymentAddress.prototype",
      "propertyName": "city",
      "throughProperty": "city",
      "prevProperty": "region"
    },
    {
      "path": "window.PaymentAddress.prototype",
      "propertyName": "dependentLocality",
      "throughProperty": "dependentLocality",
      "prevProperty": "city"
    },
    {
      "path": "window.PaymentAddress.prototype",
      "propertyName": "organization",
      "throughProperty": "organization",
      "prevProperty": "sortingCode"
    },
    {
      "path": "window.PaymentAddress.prototype",
      "propertyName": "recipient",
      "throughProperty": "recipient",
      "prevProperty": "organization"
    },
    {
      "path": "window.PaymentAddress.prototype",
      "propertyName": "phone",
      "throughProperty": "phone",
      "prevProperty": "recipient"
    },
    {
      "path": "window.PaymentAddress.prototype",
      "propertyName": "postalCode",
      "throughProperty": "postalCode",
      "prevProperty": "dependentLocality"
    },
    {
      "path": "window.PaymentAddress.prototype",
      "propertyName": "region",
      "throughProperty": "region",
      "prevProperty": "addressLine"
    },
    {
      "path": "window.PaymentAddress.prototype",
      "propertyName": "sortingCode",
      "throughProperty": "sortingCode",
      "prevProperty": "postalCode"
    },
    {
      "path": "window.PaymentAddress.prototype.toJSON",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.PaymentAddress.prototype.toJSON",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.PaymentMethodChangeEvent",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.PaymentMethodChangeEvent",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.PaymentMethodChangeEvent",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.PaymentMethodChangeEvent",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.PaymentMethodChangeEvent",
      "propertyName": "NONE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.PaymentMethodChangeEvent.prototype",
      "propertyName": "methodName",
      "throughProperty": "BUBBLING_PHASE",
      "prevProperty": null
    },
    {
      "path": "window.PaymentMethodChangeEvent.prototype",
      "propertyName": "methodDetails",
      "throughProperty": "methodDetails",
      "prevProperty": "methodName"
    },
    {
      "path": "window.PaymentRequest",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.PaymentRequest",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.PaymentRequest",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.PaymentRequest",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.PaymentRequest",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.PaymentRequest.prototype",
      "propertyName": "onshippingaddresschange",
      "throughProperty": "canMakePayment",
      "prevProperty": "onmerchantvalidation"
    },
    {
      "path": "window.PaymentRequest.prototype",
      "propertyName": "shippingAddress",
      "throughProperty": "shippingAddress",
      "prevProperty": "id"
    },
    {
      "path": "window.PaymentRequest.prototype",
      "propertyName": "shippingOption",
      "throughProperty": "shippingType",
      "prevProperty": "shippingAddress"
    },
    {
      "path": "window.PaymentRequest.prototype.abort",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.PaymentRequest.prototype.abort",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.PaymentRequest.prototype.canMakePayment",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.PaymentRequest.prototype.canMakePayment",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.PaymentRequest.prototype.show",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.PaymentRequest.prototype.show",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.PaymentRequestUpdateEvent",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.PaymentRequestUpdateEvent",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.PaymentRequestUpdateEvent",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.PaymentRequestUpdateEvent",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.PaymentRequestUpdateEvent",
      "propertyName": "NONE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.PaymentRequestUpdateEvent.prototype.updateWith",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.PaymentRequestUpdateEvent.prototype.updateWith",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.PaymentResponse",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.PaymentResponse",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.PaymentResponse",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.PaymentResponse",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.PaymentResponse",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.PaymentResponse.prototype",
      "propertyName": "requestId",
      "throughProperty": "requestId",
      "prevProperty": null
    },
    {
      "path": "window.PaymentResponse.prototype",
      "propertyName": "complete",
      "throughProperty": "retry",
      "prevProperty": "onpayerdetailchange"
    },
    {
      "path": "window.PaymentResponse.prototype",
      "propertyName": "details",
      "throughProperty": "details",
      "prevProperty": "methodName"
    },
    {
      "path": "window.PaymentResponse.prototype",
      "propertyName": "shippingOption",
      "throughProperty": "shippingOption",
      "prevProperty": "shippingAddress"
    },
    {
      "path": "window.PaymentResponse.prototype",
      "propertyName": "payerName",
      "throughProperty": "payerName",
      "prevProperty": "shippingOption"
    },
    {
      "path": "window.PaymentResponse.prototype",
      "propertyName": "payerEmail",
      "throughProperty": "payerEmail",
      "prevProperty": "payerName"
    },
    {
      "path": "window.PaymentResponse.prototype",
      "propertyName": "payerPhone",
      "throughProperty": "payerPhone",
      "prevProperty": "payerEmail"
    },
    {
      "path": "window.PaymentResponse.prototype",
      "propertyName": "shippingAddress",
      "throughProperty": "shippingAddress",
      "prevProperty": "details"
    },
    {
      "path": "window.PaymentResponse.prototype",
      "propertyName": "toJSON",
      "throughProperty": "toJSON",
      "prevProperty": "retry"
    },
    {
      "path": "window.PaymentResponse.prototype.complete",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.PaymentResponse.prototype.complete",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.PaymentResponse.prototype.retry",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.PaymentResponse.prototype.retry",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.PaymentResponse.prototype.toJSON",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.PaymentResponse.prototype.toJSON",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.performance",
      "propertyName": "navigation",
      "throughProperty": "timing",
      "prevProperty": null
    },
    {
      "path": "window.performance",
      "propertyName": "onresourcetimingbufferfull",
      "throughProperty": "onresourcetimingbufferfull",
      "prevProperty": "timing"
    },
    {
      "path": "window.Performance",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.Performance",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.Performance",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.Performance",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Performance",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.performance.navigation",
      "propertyName": "type",
      "throughProperty": "redirectCount",
      "prevProperty": null
    },
    {
      "path": "window.performance.navigation",
      "propertyName": "TYPE_NAVIGATE",
      "throughProperty": "TYPE_RESERVED",
      "prevProperty": "redirectCount"
    },
    {
      "path": "window.Performance.prototype",
      "propertyName": "navigation",
      "throughProperty": "timing",
      "prevProperty": null
    },
    {
      "path": "window.Performance.prototype",
      "propertyName": "onresourcetimingbufferfull",
      "throughProperty": "clearMeasures",
      "prevProperty": "timing"
    },
    {
      "path": "window.Performance.prototype.clearMarks",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Performance.prototype.clearMarks",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Performance.prototype.clearMeasures",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Performance.prototype.clearMeasures",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Performance.prototype.clearResourceTimings",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Performance.prototype.clearResourceTimings",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Performance.prototype.getEntries",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Performance.prototype.getEntries",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Performance.prototype.getEntriesByName",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Performance.prototype.getEntriesByName",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Performance.prototype.getEntriesByType",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Performance.prototype.getEntriesByType",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Performance.prototype.mark",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Performance.prototype.mark",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Performance.prototype.measure",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Performance.prototype.measure",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Performance.prototype.now",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Performance.prototype.now",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Performance.prototype.setResourceTimingBufferSize",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Performance.prototype.setResourceTimingBufferSize",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.PerformanceEntry",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.PerformanceEntry",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.PerformanceEntry",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.PerformanceEntry",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.PerformanceEntry",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.PerformanceEntry.prototype.toJSON",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.PerformanceEntry.prototype.toJSON",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.PerformanceMark",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.PerformanceMark",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.PerformanceMark",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.PerformanceMark",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.PerformanceMark",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.PerformanceMeasure",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.PerformanceMeasure",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.PerformanceMeasure",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.PerformanceMeasure",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.PerformanceMeasure",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.PerformanceNavigation",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.PerformanceNavigation",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.PerformanceNavigation",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.PerformanceNavigation",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.PerformanceNavigation",
      "propertyName": "TYPE_NAVIGATE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.PerformanceNavigation.prototype",
      "propertyName": "type",
      "throughProperty": "redirectCount",
      "prevProperty": null
    },
    {
      "path": "window.PerformanceNavigation.prototype",
      "propertyName": "TYPE_NAVIGATE",
      "throughProperty": "TYPE_RESERVED",
      "prevProperty": "redirectCount"
    },
    {
      "path": "window.PerformanceObserver",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.PerformanceObserver",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.PerformanceObserver",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.PerformanceObserver",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.PerformanceObserver",
      "propertyName": "supportedEntryTypes",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.PerformanceObserver.prototype.disconnect",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.PerformanceObserver.prototype.disconnect",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.PerformanceObserver.prototype.observe",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.PerformanceObserver.prototype.observe",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.PerformanceObserverEntryList",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.PerformanceObserverEntryList",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.PerformanceObserverEntryList",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.PerformanceObserverEntryList",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.PerformanceObserverEntryList",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.PerformanceObserverEntryList.prototype.getEntries",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.PerformanceObserverEntryList.prototype.getEntries",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.PerformanceObserverEntryList.prototype.getEntriesByName",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.PerformanceObserverEntryList.prototype.getEntriesByName",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.PerformanceObserverEntryList.prototype.getEntriesByType",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.PerformanceObserverEntryList.prototype.getEntriesByType",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.PerformanceResourceTiming",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.PerformanceResourceTiming",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.PerformanceResourceTiming",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.PerformanceResourceTiming",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.PerformanceResourceTiming",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.PerformanceResourceTiming.prototype.toJSON",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.PerformanceResourceTiming.prototype.toJSON",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.PerformanceTiming",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.PerformanceTiming",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.PerformanceTiming",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.PerformanceTiming",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.PerformanceTiming",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.PerformanceTiming.prototype.toJSON",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.PerformanceTiming.prototype.toJSON",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.PeriodicWave",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.PeriodicWave",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.PeriodicWave",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.PeriodicWave",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.PeriodicWave",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.Plugin",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.Plugin",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.Plugin",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.Plugin",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Plugin",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.Plugin.prototype.item",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Plugin.prototype.item",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Plugin.prototype.namedItem",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Plugin.prototype.namedItem",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.PluginArray",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.PluginArray",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.PluginArray",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.PluginArray",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.PluginArray",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.PluginArray.prototype.item",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.PluginArray.prototype.item",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.PluginArray.prototype.namedItem",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.PluginArray.prototype.namedItem",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.PluginArray.prototype.refresh",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.PluginArray.prototype.refresh",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.PointerEvent",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.PointerEvent",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.PointerEvent",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.PointerEvent",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.PointerEvent.prototype",
      "propertyName": "tangentialPressure",
      "throughProperty": "BUBBLING_PHASE",
      "prevProperty": "pressure"
    },
    {
      "path": "window.PointerEvent.prototype",
      "propertyName": "tiltX",
      "throughProperty": "tiltY",
      "prevProperty": "tangentialPressure"
    },
    {
      "path": "window.PopStateEvent",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.PopStateEvent",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.PopStateEvent",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.PopStateEvent",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.PopStateEvent",
      "propertyName": "NONE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.postMessage",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.postMessage",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.print",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.print",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.ProcessingInstruction",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.ProcessingInstruction",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.ProcessingInstruction",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.ProcessingInstruction",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.ProcessingInstruction",
      "propertyName": "ELEMENT_NODE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.ProgressEvent",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.ProgressEvent",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.ProgressEvent",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.ProgressEvent",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.ProgressEvent",
      "propertyName": "NONE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.Promise",
      "propertyName": "resolve",
      "throughProperty": "reject",
      "prevProperty": null
    },
    {
      "path": "window.Promise",
      "propertyName": "allSettled",
      "throughProperty": "allSettled",
      "prevProperty": "all"
    },
    {
      "path": "window.Promise",
      "propertyName": "name",
      "throughProperty": "prototype",
      "prevProperty": "allSettled"
    },
    {
      "path": "window.Promise",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "prototype"
    },
    {
      "path": "window.Promise",
      "propertyName": "race",
      "throughProperty": "race",
      "prevProperty": "reject"
    },
    {
      "path": "window.PromiseRejectionEvent",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.PromiseRejectionEvent",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.PromiseRejectionEvent",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.PromiseRejectionEvent",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.PromiseRejectionEvent",
      "propertyName": "NONE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.prompt",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.prompt",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Proxy",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Proxy",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Proxy.revocable",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Proxy.revocable",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.PublicKeyCredential",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.PublicKeyCredential",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.PublicKeyCredential",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.PublicKeyCredential",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.PublicKeyCredential",
      "propertyName": "isUserVerifyingPlatformAuthenticatorAvailable",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.PublicKeyCredential.isUserVerifyingPlatformAuthenticatorAvailable",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.PublicKeyCredential.isUserVerifyingPlatformAuthenticatorAvailable",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.PublicKeyCredential.prototype.getClientExtensionResults",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.PublicKeyCredential.prototype.getClientExtensionResults",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.queueMicrotask",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.queueMicrotask",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.RadioNodeList",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.RadioNodeList",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.RadioNodeList",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.RadioNodeList",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.RadioNodeList",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.Range",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.Range",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.Range",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.Range",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "NODE_INSIDE"
    },
    {
      "path": "window.Range",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Range",
      "propertyName": "START_TO_START",
      "throughProperty": "END_TO_START",
      "prevProperty": "length"
    },
    {
      "path": "window.Range.prototype",
      "propertyName": "startContainer",
      "throughProperty": "expand",
      "prevProperty": null
    },
    {
      "path": "window.Range.prototype",
      "propertyName": "toString",
      "throughProperty": "toString",
      "prevProperty": "compareNode"
    },
    {
      "path": "window.Range.prototype",
      "propertyName": "START_TO_START",
      "throughProperty": "END_TO_START",
      "prevProperty": "toString"
    },
    {
      "path": "window.Range.prototype.cloneContents",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Range.prototype.cloneContents",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Range.prototype.cloneRange",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Range.prototype.cloneRange",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Range.prototype.collapse",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Range.prototype.collapse",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Range.prototype.compareBoundaryPoints",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Range.prototype.compareBoundaryPoints",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Range.prototype.comparePoint",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Range.prototype.comparePoint",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Range.prototype.createContextualFragment",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Range.prototype.createContextualFragment",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Range.prototype.deleteContents",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Range.prototype.deleteContents",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Range.prototype.detach",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Range.prototype.detach",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Range.prototype.expand",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Range.prototype.expand",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Range.prototype.extractContents",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Range.prototype.extractContents",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Range.prototype.getBoundingClientRect",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Range.prototype.getBoundingClientRect",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Range.prototype.getClientRects",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Range.prototype.getClientRects",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Range.prototype.insertNode",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Range.prototype.insertNode",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Range.prototype.intersectsNode",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Range.prototype.intersectsNode",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Range.prototype.isPointInRange",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Range.prototype.isPointInRange",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Range.prototype.selectNode",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Range.prototype.selectNode",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Range.prototype.selectNodeContents",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Range.prototype.selectNodeContents",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Range.prototype.setEnd",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Range.prototype.setEnd",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Range.prototype.setEndAfter",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Range.prototype.setEndAfter",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Range.prototype.setEndBefore",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Range.prototype.setEndBefore",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Range.prototype.setStart",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Range.prototype.setStart",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Range.prototype.setStartAfter",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Range.prototype.setStartAfter",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Range.prototype.setStartBefore",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Range.prototype.setStartBefore",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Range.prototype.surroundContents",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Range.prototype.surroundContents",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Range.prototype.toString",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Range.prototype.toString",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.RangeError",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.RangeError",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.RangeError.prototype",
      "propertyName": "toString",
      "throughProperty": "toString",
      "prevProperty": null
    },
    {
      "path": "window.RangeError.prototype",
      "propertyName": "name",
      "throughProperty": "message",
      "prevProperty": "toString"
    },
    {
      "path": "window.ReadableStream",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.ReadableStream",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.ReadableStream",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.ReadableStream",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.ReadableStream",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.ReadableStream.prototype",
      "propertyName": "pipeTo",
      "throughProperty": "pipeTo",
      "prevProperty": "getReader"
    },
    {
      "path": "window.ReadableStream.prototype",
      "propertyName": "pipeThrough",
      "throughProperty": "pipeThrough",
      "prevProperty": "pipeTo"
    },
    {
      "path": "window.ReferenceError",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.ReferenceError",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.ReferenceError.prototype",
      "propertyName": "toString",
      "throughProperty": "toString",
      "prevProperty": null
    },
    {
      "path": "window.ReferenceError.prototype",
      "propertyName": "name",
      "throughProperty": "message",
      "prevProperty": "toString"
    },
    {
      "path": "window.Reflect",
      "propertyName": "apply",
      "throughProperty": "construct",
      "prevProperty": null
    },
    {
      "path": "window.Reflect",
      "propertyName": "defineProperty",
      "throughProperty": "deleteProperty",
      "prevProperty": "construct"
    },
    {
      "path": "window.Reflect.construct",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Reflect.construct",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Reflect.defineProperty",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Reflect.defineProperty",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Reflect.get",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Reflect.get",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Reflect.getOwnPropertyDescriptor",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Reflect.getOwnPropertyDescriptor",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Reflect.getPrototypeOf",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Reflect.getPrototypeOf",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Reflect.isExtensible",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Reflect.isExtensible",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Reflect.ownKeys",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Reflect.ownKeys",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Reflect.preventExtensions",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Reflect.preventExtensions",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Reflect.set",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Reflect.set",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Reflect.setPrototypeOf",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Reflect.setPrototypeOf",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.RegExp",
      "propertyName": "input",
      "throughProperty": "$_",
      "prevProperty": null
    },
    {
      "path": "window.RegExp",
      "propertyName": "lastMatch",
      "throughProperty": "$9",
      "prevProperty": "$*"
    },
    {
      "path": "window.RegExp",
      "propertyName": "name",
      "throughProperty": "prototype",
      "prevProperty": "$9"
    },
    {
      "path": "window.RegExp",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "prototype"
    },
    {
      "path": "window.RegExp.prototype",
      "propertyName": "dotAll",
      "throughProperty": "dotAll",
      "prevProperty": "global"
    },
    {
      "path": "window.RegExp.prototype",
      "propertyName": "source",
      "throughProperty": "source",
      "prevProperty": "unicode"
    },
    {
      "path": "window.RegExp.prototype",
      "propertyName": "compile",
      "throughProperty": "compile",
      "prevProperty": null
    },
    {
      "path": "window.RegExp.prototype",
      "propertyName": "exec",
      "throughProperty": "exec",
      "prevProperty": "compile"
    },
    {
      "path": "window.RegExp.prototype",
      "propertyName": "flags",
      "throughProperty": "flags",
      "prevProperty": "source"
    },
    {
      "path": "window.RegExp.prototype",
      "propertyName": "ignoreCase",
      "throughProperty": "multiline",
      "prevProperty": "dotAll"
    },
    {
      "path": "window.RegExp.prototype",
      "propertyName": "toString",
      "throughProperty": "toString",
      "prevProperty": "exec"
    },
    {
      "path": "window.RegExp.prototype.compile",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.RegExp.prototype.compile",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.RegExp.prototype.exec",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.RegExp.prototype.exec",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.RegExp.prototype.toString",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.RegExp.prototype.toString",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.releaseEvents",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.releaseEvents",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Request",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.Request",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.Request",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.Request",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Request",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.Request.prototype.arrayBuffer",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Request.prototype.arrayBuffer",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Request.prototype.blob",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Request.prototype.blob",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Request.prototype.clone",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Request.prototype.clone",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Request.prototype.formData",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Request.prototype.formData",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Request.prototype.json",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Request.prototype.json",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Request.prototype.text",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Request.prototype.text",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.requestAnimationFrame",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.requestAnimationFrame",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.resizeBy",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.resizeBy",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.resizeTo",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.resizeTo",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Response",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.Response",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.Response",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.Response",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Response",
      "propertyName": "error",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.Response.error",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Response.error",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Response.prototype.arrayBuffer",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Response.prototype.arrayBuffer",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Response.prototype.blob",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Response.prototype.blob",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Response.prototype.clone",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Response.prototype.clone",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Response.prototype.formData",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Response.prototype.formData",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Response.prototype.json",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Response.prototype.json",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Response.prototype.text",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Response.prototype.text",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Response.redirect",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Response.redirect",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.RTCCertificate",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.RTCCertificate",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.RTCCertificate",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.RTCCertificate",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.RTCCertificate",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.RTCCertificate.prototype.getFingerprints",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.RTCCertificate.prototype.getFingerprints",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.RTCDataChannel",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.RTCDataChannel",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.RTCDataChannel",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.RTCDataChannel",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.RTCDataChannel",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.RTCDataChannel.prototype",
      "propertyName": "binaryType",
      "throughProperty": "binaryType",
      "prevProperty": "bufferedAmountLowThreshold"
    },
    {
      "path": "window.RTCDataChannel.prototype",
      "propertyName": "onopen",
      "throughProperty": "onopen",
      "prevProperty": "binaryType"
    },
    {
      "path": "window.RTCDataChannel.prototype",
      "propertyName": "onbufferedamountlow",
      "throughProperty": "onbufferedamountlow",
      "prevProperty": "onmessage"
    },
    {
      "path": "window.RTCDataChannel.prototype",
      "propertyName": "send",
      "throughProperty": "send",
      "prevProperty": "onbufferedamountlow"
    },
    {
      "path": "window.RTCDataChannel.prototype",
      "propertyName": "close",
      "throughProperty": "close",
      "prevProperty": "send"
    },
    {
      "path": "window.RTCDataChannel.prototype.close",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.RTCDataChannel.prototype.close",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.RTCDataChannel.prototype.send",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.RTCDataChannel.prototype.send",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.RTCDataChannelEvent",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.RTCDataChannelEvent",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.RTCDataChannelEvent",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.RTCDataChannelEvent",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.RTCDataChannelEvent",
      "propertyName": "NONE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.RTCIceCandidate",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.RTCIceCandidate",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.RTCIceCandidate",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.RTCIceCandidate",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.RTCIceCandidate",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.RTCIceCandidate.prototype.toJSON",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.RTCIceCandidate.prototype.toJSON",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.RTCIceTransport",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.RTCIceTransport",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.RTCIceTransport",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.RTCIceTransport",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.RTCIceTransport",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.RTCIceTransport.prototype",
      "propertyName": "state",
      "throughProperty": "state",
      "prevProperty": null
    },
    {
      "path": "window.RTCIceTransport.prototype",
      "propertyName": "gatheringState",
      "throughProperty": "gatheringState",
      "prevProperty": "state"
    },
    {
      "path": "window.RTCPeerConnectionIceEvent",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.RTCPeerConnectionIceEvent",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.RTCPeerConnectionIceEvent",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.RTCPeerConnectionIceEvent",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.RTCPeerConnectionIceEvent",
      "propertyName": "NONE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.RTCRtpReceiver",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.RTCRtpReceiver",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.RTCRtpReceiver",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.RTCRtpReceiver",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.RTCRtpReceiver",
      "propertyName": "getCapabilities",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.RTCRtpReceiver.getCapabilities",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.RTCRtpReceiver.getCapabilities",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.RTCRtpReceiver.prototype",
      "propertyName": "getContributingSources",
      "throughProperty": "getContributingSources",
      "prevProperty": "getParameters"
    },
    {
      "path": "window.RTCRtpReceiver.prototype",
      "propertyName": "getSynchronizationSources",
      "throughProperty": "getSynchronizationSources",
      "prevProperty": "getContributingSources"
    },
    {
      "path": "window.RTCRtpReceiver.prototype.getContributingSources",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.RTCRtpReceiver.prototype.getContributingSources",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.RTCRtpReceiver.prototype.getParameters",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.RTCRtpReceiver.prototype.getParameters",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.RTCRtpReceiver.prototype.getStats",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.RTCRtpReceiver.prototype.getStats",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.RTCRtpReceiver.prototype.getSynchronizationSources",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.RTCRtpReceiver.prototype.getSynchronizationSources",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.RTCRtpSender",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.RTCRtpSender",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.RTCRtpSender",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.RTCRtpSender",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.RTCRtpSender",
      "propertyName": "getCapabilities",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.RTCRtpSender.getCapabilities",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.RTCRtpSender.getCapabilities",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.RTCRtpSender.prototype",
      "propertyName": "getParameters",
      "throughProperty": "getParameters",
      "prevProperty": "track"
    },
    {
      "path": "window.RTCRtpSender.prototype",
      "propertyName": "setParameters",
      "throughProperty": "setParameters",
      "prevProperty": "getParameters"
    },
    {
      "path": "window.RTCRtpSender.prototype.getParameters",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.RTCRtpSender.prototype.getParameters",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.RTCRtpSender.prototype.getStats",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.RTCRtpSender.prototype.getStats",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.RTCRtpSender.prototype.replaceTrack",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.RTCRtpSender.prototype.replaceTrack",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.RTCRtpSender.prototype.setParameters",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.RTCRtpSender.prototype.setParameters",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.RTCRtpTransceiver",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.RTCRtpTransceiver",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.RTCRtpTransceiver",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.RTCRtpTransceiver",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.RTCRtpTransceiver",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.RTCSessionDescription",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.RTCSessionDescription",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.RTCSessionDescription",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.RTCSessionDescription",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.RTCSessionDescription",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.RTCSessionDescription.prototype.toJSON",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.RTCSessionDescription.prototype.toJSON",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.RTCStatsReport",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.RTCStatsReport",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.RTCStatsReport",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.RTCStatsReport",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.RTCStatsReport",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.RTCStatsReport.prototype",
      "propertyName": "keys",
      "throughProperty": "forEach",
      "prevProperty": "entries"
    },
    {
      "path": "window.RTCStatsReport.prototype",
      "propertyName": "get",
      "throughProperty": "get",
      "prevProperty": "size"
    },
    {
      "path": "window.RTCStatsReport.prototype",
      "propertyName": "has",
      "throughProperty": "has",
      "prevProperty": "get"
    },
    {
      "path": "window.RTCStatsReport.prototype",
      "propertyName": "entries",
      "throughProperty": "entries",
      "prevProperty": "has"
    },
    {
      "path": "window.RTCStatsReport.prototype.entries",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.RTCStatsReport.prototype.entries",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.RTCStatsReport.prototype.forEach",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.RTCStatsReport.prototype.forEach",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.RTCStatsReport.prototype.get",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.RTCStatsReport.prototype.get",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.RTCStatsReport.prototype.has",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.RTCStatsReport.prototype.has",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.RTCStatsReport.prototype.keys",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.RTCStatsReport.prototype.keys",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.RTCStatsReport.prototype.values",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.RTCStatsReport.prototype.values",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.RTCTrackEvent",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.RTCTrackEvent",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.RTCTrackEvent",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.RTCTrackEvent",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.RTCTrackEvent",
      "propertyName": "NONE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.screen",
      "propertyName": "height",
      "throughProperty": "height",
      "prevProperty": null
    },
    {
      "path": "window.screen",
      "propertyName": "availHeight",
      "throughProperty": "availHeight",
      "prevProperty": "availTop"
    },
    {
      "path": "window.screen",
      "propertyName": "availWidth",
      "throughProperty": "availWidth",
      "prevProperty": "availHeight"
    },
    {
      "path": "window.screen",
      "propertyName": "width",
      "throughProperty": "width",
      "prevProperty": "height"
    },
    {
      "path": "window.screen",
      "propertyName": "colorDepth",
      "throughProperty": "availTop",
      "prevProperty": "width"
    },
    {
      "path": "window.Screen",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.Screen",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.Screen",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.Screen",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Screen",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.Screen.prototype",
      "propertyName": "height",
      "throughProperty": "height",
      "prevProperty": null
    },
    {
      "path": "window.Screen.prototype",
      "propertyName": "colorDepth",
      "throughProperty": "availTop",
      "prevProperty": "width"
    },
    {
      "path": "window.Screen.prototype",
      "propertyName": "availHeight",
      "throughProperty": "availHeight",
      "prevProperty": "availTop"
    },
    {
      "path": "window.Screen.prototype",
      "propertyName": "availWidth",
      "throughProperty": "availWidth",
      "prevProperty": "availHeight"
    },
    {
      "path": "window.Screen.prototype",
      "propertyName": "width",
      "throughProperty": "width",
      "prevProperty": "height"
    },
    {
      "path": "window.ScriptProcessorNode",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.ScriptProcessorNode",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.ScriptProcessorNode",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.ScriptProcessorNode",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.ScriptProcessorNode",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.scroll",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.scroll",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.scrollBy",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.scrollBy",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.scrollTo",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.scrollTo",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SecurityPolicyViolationEvent",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.SecurityPolicyViolationEvent",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.SecurityPolicyViolationEvent",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.SecurityPolicyViolationEvent",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SecurityPolicyViolationEvent",
      "propertyName": "NONE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.Selection",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.Selection",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.Selection",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.Selection",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Selection",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.Selection.prototype",
      "propertyName": "collapse",
      "throughProperty": "collapse",
      "prevProperty": "extentOffset"
    },
    {
      "path": "window.Selection.prototype",
      "propertyName": "extend",
      "throughProperty": "extend",
      "prevProperty": "selectAllChildren"
    },
    {
      "path": "window.Selection.prototype",
      "propertyName": "getRangeAt",
      "throughProperty": "getRangeAt",
      "prevProperty": "extend"
    },
    {
      "path": "window.Selection.prototype",
      "propertyName": "removeAllRanges",
      "throughProperty": "removeAllRanges",
      "prevProperty": "getRangeAt"
    },
    {
      "path": "window.Selection.prototype",
      "propertyName": "addRange",
      "throughProperty": "addRange",
      "prevProperty": "removeAllRanges"
    },
    {
      "path": "window.Selection.prototype",
      "propertyName": "setPosition",
      "throughProperty": "setPosition",
      "prevProperty": "setBaseAndExtent"
    },
    {
      "path": "window.Selection.prototype",
      "propertyName": "empty",
      "throughProperty": "empty",
      "prevProperty": "setPosition"
    },
    {
      "path": "window.Selection.prototype",
      "propertyName": "collapseToEnd",
      "throughProperty": "collapseToEnd",
      "prevProperty": "collapse"
    },
    {
      "path": "window.Selection.prototype",
      "propertyName": "collapseToStart",
      "throughProperty": "collapseToStart",
      "prevProperty": "collapseToEnd"
    },
    {
      "path": "window.Selection.prototype",
      "propertyName": "toString",
      "throughProperty": "toString",
      "prevProperty": "addRange"
    },
    {
      "path": "window.Selection.prototype",
      "propertyName": "setBaseAndExtent",
      "throughProperty": "setBaseAndExtent",
      "prevProperty": "toString"
    },
    {
      "path": "window.Selection.prototype",
      "propertyName": "deleteFromDocument",
      "throughProperty": "containsNode",
      "prevProperty": "collapseToStart"
    },
    {
      "path": "window.Selection.prototype",
      "propertyName": "selectAllChildren",
      "throughProperty": "selectAllChildren",
      "prevProperty": "containsNode"
    },
    {
      "path": "window.Selection.prototype",
      "propertyName": "modify",
      "throughProperty": "modify",
      "prevProperty": "empty"
    },
    {
      "path": "window.Selection.prototype.addRange",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Selection.prototype.addRange",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Selection.prototype.collapse",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Selection.prototype.collapse",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Selection.prototype.collapseToEnd",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Selection.prototype.collapseToEnd",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Selection.prototype.collapseToStart",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Selection.prototype.collapseToStart",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Selection.prototype.containsNode",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Selection.prototype.containsNode",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Selection.prototype.deleteFromDocument",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Selection.prototype.deleteFromDocument",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Selection.prototype.empty",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Selection.prototype.empty",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Selection.prototype.extend",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Selection.prototype.extend",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Selection.prototype.getRangeAt",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Selection.prototype.getRangeAt",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Selection.prototype.modify",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Selection.prototype.modify",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Selection.prototype.removeAllRanges",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Selection.prototype.removeAllRanges",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Selection.prototype.selectAllChildren",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Selection.prototype.selectAllChildren",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Selection.prototype.setBaseAndExtent",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Selection.prototype.setBaseAndExtent",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Selection.prototype.setPosition",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Selection.prototype.setPosition",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Selection.prototype.toString",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Selection.prototype.toString",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.ServiceWorker",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.ServiceWorker",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.ServiceWorker",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.ServiceWorker",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.ServiceWorker",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.ServiceWorker.prototype",
      "propertyName": "onstatechange",
      "throughProperty": "onstatechange",
      "prevProperty": "state"
    },
    {
      "path": "window.ServiceWorker.prototype",
      "propertyName": "onerror",
      "throughProperty": "onerror",
      "prevProperty": "onstatechange"
    },
    {
      "path": "window.ServiceWorker.prototype.postMessage",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.ServiceWorker.prototype.postMessage",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.ServiceWorkerContainer",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.ServiceWorkerContainer",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.ServiceWorkerContainer",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.ServiceWorkerContainer",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.ServiceWorkerContainer",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.ServiceWorkerContainer.prototype",
      "propertyName": "controller",
      "throughProperty": "controller",
      "prevProperty": null
    },
    {
      "path": "window.ServiceWorkerContainer.prototype",
      "propertyName": "ready",
      "throughProperty": "ready",
      "prevProperty": "controller"
    },
    {
      "path": "window.ServiceWorkerContainer.prototype.getRegistration",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.ServiceWorkerContainer.prototype.getRegistration",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.ServiceWorkerContainer.prototype.getRegistrations",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.ServiceWorkerContainer.prototype.getRegistrations",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.ServiceWorkerContainer.prototype.register",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.ServiceWorkerContainer.prototype.register",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.ServiceWorkerContainer.prototype.startMessages",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.ServiceWorkerContainer.prototype.startMessages",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.ServiceWorkerRegistration",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.ServiceWorkerRegistration",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.ServiceWorkerRegistration",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.ServiceWorkerRegistration",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.ServiceWorkerRegistration",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.ServiceWorkerRegistration.prototype",
      "propertyName": "scope",
      "throughProperty": "updateViaCache",
      "prevProperty": "active"
    },
    {
      "path": "window.ServiceWorkerRegistration.prototype",
      "propertyName": "installing",
      "throughProperty": "waiting",
      "prevProperty": null
    },
    {
      "path": "window.ServiceWorkerRegistration.prototype.unregister",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.ServiceWorkerRegistration.prototype.unregister",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.ServiceWorkerRegistration.prototype.update",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.ServiceWorkerRegistration.prototype.update",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Set",
      "propertyName": "name",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.Set",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "prototype"
    },
    {
      "path": "window.Set.prototype",
      "propertyName": "forEach",
      "throughProperty": "forEach",
      "prevProperty": null
    },
    {
      "path": "window.Set.prototype",
      "propertyName": "has",
      "throughProperty": "has",
      "prevProperty": "delete"
    },
    {
      "path": "window.Set.prototype",
      "propertyName": "entries",
      "throughProperty": "entries",
      "prevProperty": "forEach"
    },
    {
      "path": "window.Set.prototype",
      "propertyName": "add",
      "throughProperty": "add",
      "prevProperty": "entries"
    },
    {
      "path": "window.Set.prototype",
      "propertyName": "delete",
      "throughProperty": "delete",
      "prevProperty": "clear"
    },
    {
      "path": "window.Set.prototype",
      "propertyName": "values",
      "throughProperty": "keys",
      "prevProperty": "has"
    },
    {
      "path": "window.Set.prototype",
      "propertyName": "size",
      "throughProperty": "size",
      "prevProperty": "keys"
    },
    {
      "path": "window.Set.prototype.add",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Set.prototype.add",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Set.prototype.clear",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Set.prototype.clear",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Set.prototype.delete",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Set.prototype.delete",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Set.prototype.has",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Set.prototype.has",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.setInterval",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.setInterval",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.setTimeout",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.setTimeout",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.ShadowRoot",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.ShadowRoot",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.ShadowRoot",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.ShadowRoot",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.ShadowRoot",
      "propertyName": "ELEMENT_NODE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.ShadowRoot.prototype.elementFromPoint",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.ShadowRoot.prototype.elementFromPoint",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.ShadowRoot.prototype.elementsFromPoint",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.ShadowRoot.prototype.elementsFromPoint",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SourceBuffer",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.SourceBuffer",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.SourceBuffer",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.SourceBuffer",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SourceBuffer",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.SourceBuffer.prototype.abort",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.SourceBuffer.prototype.abort",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SourceBuffer.prototype.appendBuffer",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.SourceBuffer.prototype.appendBuffer",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SourceBuffer.prototype.changeType",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.SourceBuffer.prototype.changeType",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SourceBuffer.prototype.remove",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.SourceBuffer.prototype.remove",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SourceBufferList",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.SourceBufferList",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.SourceBufferList",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.SourceBufferList",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SourceBufferList",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.SpeechSynthesisEvent",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.SpeechSynthesisEvent",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.SpeechSynthesisEvent",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.SpeechSynthesisEvent",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SpeechSynthesisEvent",
      "propertyName": "NONE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.SpeechSynthesisUtterance",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.SpeechSynthesisUtterance",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.SpeechSynthesisUtterance",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.SpeechSynthesisUtterance",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SpeechSynthesisUtterance",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.StaticRange",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.StaticRange",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.StaticRange",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.StaticRange",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.StaticRange",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.StaticRange.prototype",
      "propertyName": "startOffset",
      "throughProperty": "startOffset",
      "prevProperty": null
    },
    {
      "path": "window.StaticRange.prototype",
      "propertyName": "startContainer",
      "throughProperty": "startContainer",
      "prevProperty": "endOffset"
    },
    {
      "path": "window.StaticRange.prototype",
      "propertyName": "endContainer",
      "throughProperty": "endContainer",
      "prevProperty": "startContainer"
    },
    {
      "path": "window.StaticRange.prototype",
      "propertyName": "endOffset",
      "throughProperty": "endOffset",
      "prevProperty": "startOffset"
    },
    {
      "path": "window.stop",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.stop",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Storage",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.Storage",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.Storage",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.Storage",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Storage",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.Storage.prototype.clear",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Storage.prototype.clear",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Storage.prototype.getItem",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Storage.prototype.getItem",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Storage.prototype.key",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Storage.prototype.key",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Storage.prototype.removeItem",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Storage.prototype.removeItem",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Storage.prototype.setItem",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Storage.prototype.setItem",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.StorageEvent",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.StorageEvent",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.StorageEvent",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.StorageEvent",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.StorageEvent",
      "propertyName": "NONE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.StorageEvent.prototype.initStorageEvent",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.StorageEvent.prototype.initStorageEvent",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.String",
      "propertyName": "fromCharCode",
      "throughProperty": "raw",
      "prevProperty": null
    },
    {
      "path": "window.String",
      "propertyName": "name",
      "throughProperty": "prototype",
      "prevProperty": "raw"
    },
    {
      "path": "window.String",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "prototype"
    },
    {
      "path": "window.String.fromCharCode",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.String.fromCharCode",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.String.fromCodePoint",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.String.fromCodePoint",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.String.prototype",
      "propertyName": "anchor",
      "throughProperty": "big",
      "prevProperty": "split"
    },
    {
      "path": "window.String.prototype",
      "propertyName": "bold",
      "throughProperty": "bold",
      "prevProperty": "big"
    },
    {
      "path": "window.String.prototype",
      "propertyName": "blink",
      "throughProperty": "blink",
      "prevProperty": "bold"
    },
    {
      "path": "window.String.prototype",
      "propertyName": "charAt",
      "throughProperty": "codePointAt",
      "prevProperty": "valueOf"
    },
    {
      "path": "window.String.prototype",
      "propertyName": "concat",
      "throughProperty": "concat",
      "prevProperty": "length"
    },
    {
      "path": "window.String.prototype",
      "propertyName": "startsWith",
      "throughProperty": "startsWith",
      "prevProperty": "trim"
    },
    {
      "path": "window.String.prototype",
      "propertyName": "endsWith",
      "throughProperty": "endsWith",
      "prevProperty": "startsWith"
    },
    {
      "path": "window.String.prototype",
      "propertyName": "fixed",
      "throughProperty": "fixed",
      "prevProperty": "blink"
    },
    {
      "path": "window.String.prototype",
      "propertyName": "fontcolor",
      "throughProperty": "fontsize",
      "prevProperty": "fixed"
    },
    {
      "path": "window.String.prototype",
      "propertyName": "includes",
      "throughProperty": "includes",
      "prevProperty": "endsWith"
    },
    {
      "path": "window.String.prototype",
      "propertyName": "indexOf",
      "throughProperty": "indexOf",
      "prevProperty": "codePointAt"
    },
    {
      "path": "window.String.prototype",
      "propertyName": "italics",
      "throughProperty": "italics",
      "prevProperty": "fontsize"
    },
    {
      "path": "window.String.prototype",
      "propertyName": "lastIndexOf",
      "throughProperty": "lastIndexOf",
      "prevProperty": "indexOf"
    },
    {
      "path": "window.String.prototype",
      "propertyName": "link",
      "throughProperty": "link",
      "prevProperty": "italics"
    },
    {
      "path": "window.String.prototype",
      "propertyName": "localeCompare",
      "throughProperty": "localeCompare",
      "prevProperty": "toUpperCase"
    },
    {
      "path": "window.String.prototype",
      "propertyName": "match",
      "throughProperty": "matchAll",
      "prevProperty": "concat"
    },
    {
      "path": "window.String.prototype",
      "propertyName": "normalize",
      "throughProperty": "normalize",
      "prevProperty": "includes"
    },
    {
      "path": "window.String.prototype",
      "propertyName": "padStart",
      "throughProperty": "padStart",
      "prevProperty": "matchAll"
    },
    {
      "path": "window.String.prototype",
      "propertyName": "padEnd",
      "throughProperty": "padEnd",
      "prevProperty": "padStart"
    },
    {
      "path": "window.String.prototype",
      "propertyName": "repeat",
      "throughProperty": "search",
      "prevProperty": "padEnd"
    },
    {
      "path": "window.String.prototype",
      "propertyName": "slice",
      "throughProperty": "slice",
      "prevProperty": "lastIndexOf"
    },
    {
      "path": "window.String.prototype",
      "propertyName": "small",
      "throughProperty": "small",
      "prevProperty": "link"
    },
    {
      "path": "window.String.prototype",
      "propertyName": "split",
      "throughProperty": "split",
      "prevProperty": "search"
    },
    {
      "path": "window.String.prototype",
      "propertyName": "strike",
      "throughProperty": "sub",
      "prevProperty": "small"
    },
    {
      "path": "window.String.prototype",
      "propertyName": "substr",
      "throughProperty": "substring",
      "prevProperty": "slice"
    },
    {
      "path": "window.String.prototype",
      "propertyName": "sup",
      "throughProperty": "sup",
      "prevProperty": "sub"
    },
    {
      "path": "window.String.prototype",
      "propertyName": "toString",
      "throughProperty": "toString",
      "prevProperty": "sup"
    },
    {
      "path": "window.String.prototype",
      "propertyName": "toLocaleLowerCase",
      "throughProperty": "toLocaleUpperCase",
      "prevProperty": "localeCompare"
    },
    {
      "path": "window.String.prototype",
      "propertyName": "trim",
      "throughProperty": "trim",
      "prevProperty": "toLocaleUpperCase"
    },
    {
      "path": "window.String.prototype",
      "propertyName": "trimStart",
      "throughProperty": "trimRight",
      "prevProperty": "normalize"
    },
    {
      "path": "window.String.prototype",
      "propertyName": "toLowerCase",
      "throughProperty": "toUpperCase",
      "prevProperty": "substring"
    },
    {
      "path": "window.String.prototype",
      "propertyName": "valueOf",
      "throughProperty": "valueOf",
      "prevProperty": "toString"
    },
    {
      "path": "window.String.prototype.charAt",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.String.prototype.charAt",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.String.prototype.charCodeAt",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.String.prototype.charCodeAt",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.String.prototype.codePointAt",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.String.prototype.codePointAt",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.String.prototype.endsWith",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.String.prototype.endsWith",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.String.prototype.includes",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.String.prototype.includes",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.String.prototype.indexOf",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.String.prototype.indexOf",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.String.prototype.lastIndexOf",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.String.prototype.lastIndexOf",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.String.prototype.localeCompare",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.String.prototype.localeCompare",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.String.prototype.normalize",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.String.prototype.normalize",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.String.prototype.slice",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.String.prototype.slice",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.String.prototype.startsWith",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.String.prototype.startsWith",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.String.prototype.substr",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.String.prototype.substr",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.String.prototype.substring",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.String.prototype.substring",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.String.prototype.Symbol(Symbol.iterator)",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.String.prototype.Symbol(Symbol.iterator)",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.String.prototype.toLocaleLowerCase",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.String.prototype.toLocaleLowerCase",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.String.prototype.toLocaleUpperCase",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.String.prototype.toLocaleUpperCase",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.String.prototype.toLowerCase",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.String.prototype.toLowerCase",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.String.prototype.toString",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.String.prototype.toString",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.String.prototype.toUpperCase",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.String.prototype.toUpperCase",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.String.prototype.trim",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.String.prototype.trim",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.String.prototype.trimEnd",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.String.prototype.trimEnd",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.String.prototype.trimStart",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.String.prototype.trimStart",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.String.prototype.valueOf",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.String.prototype.valueOf",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.StyleSheet",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.StyleSheet",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.StyleSheet",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.StyleSheet",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.StyleSheet",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.StyleSheet.prototype",
      "propertyName": "href",
      "throughProperty": "href",
      "prevProperty": "parentStyleSheet"
    },
    {
      "path": "window.StyleSheet.prototype",
      "propertyName": "title",
      "throughProperty": "media",
      "prevProperty": "href"
    },
    {
      "path": "window.StyleSheet.prototype",
      "propertyName": "disabled",
      "throughProperty": "disabled",
      "prevProperty": "type"
    },
    {
      "path": "window.StyleSheetList",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.StyleSheetList",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.StyleSheetList",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.StyleSheetList",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.StyleSheetList",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.StyleSheetList.prototype.item",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.StyleSheetList.prototype.item",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SubtleCrypto",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.SubtleCrypto",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.SubtleCrypto",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.SubtleCrypto",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SubtleCrypto",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.SubtleCrypto.prototype.decrypt",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.SubtleCrypto.prototype.decrypt",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SubtleCrypto.prototype.deriveBits",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.SubtleCrypto.prototype.deriveBits",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SubtleCrypto.prototype.deriveKey",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.SubtleCrypto.prototype.deriveKey",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SubtleCrypto.prototype.digest",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.SubtleCrypto.prototype.digest",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SubtleCrypto.prototype.encrypt",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.SubtleCrypto.prototype.encrypt",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SubtleCrypto.prototype.exportKey",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.SubtleCrypto.prototype.exportKey",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SubtleCrypto.prototype.generateKey",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.SubtleCrypto.prototype.generateKey",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SubtleCrypto.prototype.importKey",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.SubtleCrypto.prototype.importKey",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SubtleCrypto.prototype.sign",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.SubtleCrypto.prototype.sign",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SubtleCrypto.prototype.unwrapKey",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.SubtleCrypto.prototype.unwrapKey",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SubtleCrypto.prototype.verify",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.SubtleCrypto.prototype.verify",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SubtleCrypto.prototype.wrapKey",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.SubtleCrypto.prototype.wrapKey",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGAElement",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.SVGAElement",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.SVGAElement",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.SVGAElement",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGAElement",
      "propertyName": "ELEMENT_NODE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.SVGAngle",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.SVGAngle",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.SVGAngle",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.SVGAngle",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGAngle",
      "propertyName": "SVG_ANGLETYPE_UNKNOWN",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.SVGAngle.prototype",
      "propertyName": "unitType",
      "throughProperty": "convertToSpecifiedUnits",
      "prevProperty": null
    },
    {
      "path": "window.SVGAngle.prototype",
      "propertyName": "SVG_ANGLETYPE_UNKNOWN",
      "throughProperty": "SVG_ANGLETYPE_GRAD",
      "prevProperty": "convertToSpecifiedUnits"
    },
    {
      "path": "window.SVGAngle.prototype.convertToSpecifiedUnits",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.SVGAngle.prototype.convertToSpecifiedUnits",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGAngle.prototype.newValueSpecifiedUnits",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.SVGAngle.prototype.newValueSpecifiedUnits",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGAnimatedAngle",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.SVGAnimatedAngle",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.SVGAnimatedAngle",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.SVGAnimatedAngle",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGAnimatedAngle",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.SVGAnimatedBoolean",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.SVGAnimatedBoolean",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.SVGAnimatedBoolean",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.SVGAnimatedBoolean",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGAnimatedBoolean",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.SVGAnimatedEnumeration",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.SVGAnimatedEnumeration",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.SVGAnimatedEnumeration",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.SVGAnimatedEnumeration",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGAnimatedEnumeration",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.SVGAnimatedInteger",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.SVGAnimatedInteger",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.SVGAnimatedInteger",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.SVGAnimatedInteger",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGAnimatedInteger",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.SVGAnimatedLength",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.SVGAnimatedLength",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.SVGAnimatedLength",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.SVGAnimatedLength",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGAnimatedLength",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.SVGAnimatedLengthList",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.SVGAnimatedLengthList",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.SVGAnimatedLengthList",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.SVGAnimatedLengthList",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGAnimatedLengthList",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.SVGAnimatedNumber",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.SVGAnimatedNumber",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.SVGAnimatedNumber",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.SVGAnimatedNumber",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGAnimatedNumber",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.SVGAnimatedNumberList",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.SVGAnimatedNumberList",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.SVGAnimatedNumberList",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.SVGAnimatedNumberList",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGAnimatedNumberList",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.SVGAnimatedPreserveAspectRatio",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.SVGAnimatedPreserveAspectRatio",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.SVGAnimatedPreserveAspectRatio",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.SVGAnimatedPreserveAspectRatio",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGAnimatedPreserveAspectRatio",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.SVGAnimatedRect",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.SVGAnimatedRect",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.SVGAnimatedRect",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.SVGAnimatedRect",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGAnimatedRect",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.SVGAnimatedString",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.SVGAnimatedString",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.SVGAnimatedString",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.SVGAnimatedString",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGAnimatedString",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.SVGAnimatedTransformList",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.SVGAnimatedTransformList",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.SVGAnimatedTransformList",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.SVGAnimatedTransformList",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGAnimatedTransformList",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.SVGAnimateElement",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.SVGAnimateElement",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.SVGAnimateElement",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.SVGAnimateElement",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGAnimateElement",
      "propertyName": "ELEMENT_NODE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.SVGAnimateMotionElement",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.SVGAnimateMotionElement",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.SVGAnimateMotionElement",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.SVGAnimateMotionElement",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGAnimateMotionElement",
      "propertyName": "ELEMENT_NODE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.SVGAnimateTransformElement",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.SVGAnimateTransformElement",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.SVGAnimateTransformElement",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.SVGAnimateTransformElement",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGAnimateTransformElement",
      "propertyName": "ELEMENT_NODE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.SVGAnimationElement",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.SVGAnimationElement",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.SVGAnimationElement",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.SVGAnimationElement",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGAnimationElement",
      "propertyName": "ELEMENT_NODE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.SVGAnimationElement.prototype.beginElement",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.SVGAnimationElement.prototype.beginElement",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGAnimationElement.prototype.beginElementAt",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.SVGAnimationElement.prototype.beginElementAt",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGAnimationElement.prototype.endElement",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.SVGAnimationElement.prototype.endElement",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGAnimationElement.prototype.endElementAt",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.SVGAnimationElement.prototype.endElementAt",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGAnimationElement.prototype.getCurrentTime",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.SVGAnimationElement.prototype.getCurrentTime",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGAnimationElement.prototype.getSimpleDuration",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.SVGAnimationElement.prototype.getSimpleDuration",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGAnimationElement.prototype.getStartTime",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.SVGAnimationElement.prototype.getStartTime",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGCircleElement",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.SVGCircleElement",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.SVGCircleElement",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.SVGCircleElement",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGCircleElement",
      "propertyName": "ELEMENT_NODE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.SVGClipPathElement",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.SVGClipPathElement",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.SVGClipPathElement",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.SVGClipPathElement",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGClipPathElement",
      "propertyName": "ELEMENT_NODE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.SVGComponentTransferFunctionElement",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.SVGComponentTransferFunctionElement",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.SVGComponentTransferFunctionElement",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.SVGComponentTransferFunctionElement",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGComponentTransferFunctionElement",
      "propertyName": "SVG_FECOMPONENTTRANSFER_TYPE_LINEAR",
      "throughProperty": "SVG_FECOMPONENTTRANSFER_TYPE_LINEAR",
      "prevProperty": "SVG_FECOMPONENTTRANSFER_TYPE_DISCRETE"
    },
    {
      "path": "window.SVGComponentTransferFunctionElement",
      "propertyName": "SVG_FECOMPONENTTRANSFER_TYPE_GAMMA",
      "throughProperty": "SVG_FECOMPONENTTRANSFER_TYPE_GAMMA",
      "prevProperty": "SVG_FECOMPONENTTRANSFER_TYPE_LINEAR"
    },
    {
      "path": "window.SVGComponentTransferFunctionElement",
      "propertyName": "SVG_FECOMPONENTTRANSFER_TYPE_TABLE",
      "throughProperty": "SVG_FECOMPONENTTRANSFER_TYPE_TABLE",
      "prevProperty": "SVG_FECOMPONENTTRANSFER_TYPE_IDENTITY"
    },
    {
      "path": "window.SVGComponentTransferFunctionElement",
      "propertyName": "SVG_FECOMPONENTTRANSFER_TYPE_DISCRETE",
      "throughProperty": "SVG_FECOMPONENTTRANSFER_TYPE_DISCRETE",
      "prevProperty": "SVG_FECOMPONENTTRANSFER_TYPE_TABLE"
    },
    {
      "path": "window.SVGComponentTransferFunctionElement",
      "propertyName": "SVG_FECOMPONENTTRANSFER_TYPE_UNKNOWN",
      "throughProperty": "SVG_FECOMPONENTTRANSFER_TYPE_UNKNOWN",
      "prevProperty": "length"
    },
    {
      "path": "window.SVGComponentTransferFunctionElement",
      "propertyName": "SVG_FECOMPONENTTRANSFER_TYPE_IDENTITY",
      "throughProperty": "SVG_FECOMPONENTTRANSFER_TYPE_IDENTITY",
      "prevProperty": "SVG_FECOMPONENTTRANSFER_TYPE_UNKNOWN"
    },
    {
      "path": "window.SVGComponentTransferFunctionElement",
      "propertyName": "ELEMENT_NODE",
      "throughProperty": "new()",
      "prevProperty": "SVG_FECOMPONENTTRANSFER_TYPE_GAMMA"
    },
    {
      "path": "window.SVGComponentTransferFunctionElement.prototype",
      "propertyName": "SVG_FECOMPONENTTRANSFER_TYPE_UNKNOWN",
      "throughProperty": "SVG_FECOMPONENTTRANSFER_TYPE_UNKNOWN",
      "prevProperty": "offset"
    },
    {
      "path": "window.SVGComponentTransferFunctionElement.prototype",
      "propertyName": "type",
      "throughProperty": "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC",
      "prevProperty": null
    },
    {
      "path": "window.SVGComponentTransferFunctionElement.prototype",
      "propertyName": "SVG_FECOMPONENTTRANSFER_TYPE_LINEAR",
      "throughProperty": "SVG_FECOMPONENTTRANSFER_TYPE_LINEAR",
      "prevProperty": "SVG_FECOMPONENTTRANSFER_TYPE_DISCRETE"
    },
    {
      "path": "window.SVGComponentTransferFunctionElement.prototype",
      "propertyName": "SVG_FECOMPONENTTRANSFER_TYPE_GAMMA",
      "throughProperty": "SVG_FECOMPONENTTRANSFER_TYPE_GAMMA",
      "prevProperty": "SVG_FECOMPONENTTRANSFER_TYPE_LINEAR"
    },
    {
      "path": "window.SVGComponentTransferFunctionElement.prototype",
      "propertyName": "SVG_FECOMPONENTTRANSFER_TYPE_IDENTITY",
      "throughProperty": "SVG_FECOMPONENTTRANSFER_TYPE_IDENTITY",
      "prevProperty": "SVG_FECOMPONENTTRANSFER_TYPE_UNKNOWN"
    },
    {
      "path": "window.SVGComponentTransferFunctionElement.prototype",
      "propertyName": "SVG_FECOMPONENTTRANSFER_TYPE_TABLE",
      "throughProperty": "SVG_FECOMPONENTTRANSFER_TYPE_TABLE",
      "prevProperty": "SVG_FECOMPONENTTRANSFER_TYPE_IDENTITY"
    },
    {
      "path": "window.SVGComponentTransferFunctionElement.prototype",
      "propertyName": "SVG_FECOMPONENTTRANSFER_TYPE_DISCRETE",
      "throughProperty": "SVG_FECOMPONENTTRANSFER_TYPE_DISCRETE",
      "prevProperty": "SVG_FECOMPONENTTRANSFER_TYPE_TABLE"
    },
    {
      "path": "window.SVGDefsElement",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.SVGDefsElement",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.SVGDefsElement",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.SVGDefsElement",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGDefsElement",
      "propertyName": "ELEMENT_NODE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.SVGDescElement",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.SVGDescElement",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.SVGDescElement",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.SVGDescElement",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGDescElement",
      "propertyName": "ELEMENT_NODE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.SVGElement",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.SVGElement",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.SVGElement",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.SVGElement",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGElement",
      "propertyName": "ELEMENT_NODE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.SVGElement.prototype",
      "propertyName": "className",
      "throughProperty": "className",
      "prevProperty": "xmlspace"
    },
    {
      "path": "window.SVGElement.prototype",
      "propertyName": "ownerSVGElement",
      "throughProperty": "viewportElement",
      "prevProperty": null
    },
    {
      "path": "window.SVGElement.prototype",
      "propertyName": "ongotpointercapture",
      "throughProperty": "onpointerleave",
      "prevProperty": "onanimationcancel"
    },
    {
      "path": "window.SVGElement.prototype",
      "propertyName": "onanimationend",
      "throughProperty": "onanimationstart",
      "prevProperty": "ontransitioncancel"
    },
    {
      "path": "window.SVGElement.prototype",
      "propertyName": "focus",
      "throughProperty": "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC",
      "prevProperty": "getPresentationAttribute"
    },
    {
      "path": "window.SVGElement.prototype",
      "propertyName": "style",
      "throughProperty": "style",
      "prevProperty": "dataset"
    },
    {
      "path": "window.SVGElement.prototype",
      "propertyName": "onabort",
      "throughProperty": "onratechange",
      "prevProperty": "style"
    },
    {
      "path": "window.SVGElement.prototype",
      "propertyName": "onreset",
      "throughProperty": "ontoggle",
      "prevProperty": "onrejectionhandled"
    },
    {
      "path": "window.SVGElement.prototype",
      "propertyName": "onvolumechange",
      "throughProperty": "onwaiting",
      "prevProperty": "onunhandledrejection"
    },
    {
      "path": "window.SVGElement.prototype",
      "propertyName": "onwheel",
      "throughProperty": "onwheel",
      "prevProperty": "onsearch"
    },
    {
      "path": "window.SVGElement.prototype",
      "propertyName": "ontransitionend",
      "throughProperty": "ontransitionend",
      "prevProperty": "onwaiting"
    },
    {
      "path": "window.SVGElement.prototype",
      "propertyName": "tabIndex",
      "throughProperty": "tabIndex",
      "prevProperty": "className"
    },
    {
      "path": "window.SVGElement.prototype",
      "propertyName": "dataset",
      "throughProperty": "dataset",
      "prevProperty": "tabIndex"
    },
    {
      "path": "window.SVGElement.prototype.blur",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.SVGElement.prototype.blur",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGElement.prototype.focus",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.SVGElement.prototype.focus",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGEllipseElement",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.SVGEllipseElement",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.SVGEllipseElement",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.SVGEllipseElement",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGEllipseElement",
      "propertyName": "ELEMENT_NODE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.SVGFEBlendElement",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.SVGFEBlendElement",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.SVGFEBlendElement",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.SVGFEBlendElement",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGFEBlendElement",
      "propertyName": "SVG_FEBLEND_MODE_LUMINOSITY",
      "throughProperty": "SVG_FEBLEND_MODE_LUMINOSITY",
      "prevProperty": "SVG_FEBLEND_MODE_COLOR"
    },
    {
      "path": "window.SVGFEBlendElement",
      "propertyName": "SVG_FEBLEND_MODE_SOFT_LIGHT",
      "throughProperty": "SVG_FEBLEND_MODE_SOFT_LIGHT",
      "prevProperty": "SVG_FEBLEND_MODE_HARD_LIGHT"
    },
    {
      "path": "window.SVGFEBlendElement",
      "propertyName": "SVG_FEBLEND_MODE_DIFFERENCE",
      "throughProperty": "SVG_FEBLEND_MODE_DIFFERENCE",
      "prevProperty": "SVG_FEBLEND_MODE_SOFT_LIGHT"
    },
    {
      "path": "window.SVGFEBlendElement",
      "propertyName": "SVG_FEBLEND_MODE_EXCLUSION",
      "throughProperty": "SVG_FEBLEND_MODE_EXCLUSION",
      "prevProperty": "SVG_FEBLEND_MODE_DIFFERENCE"
    },
    {
      "path": "window.SVGFEBlendElement",
      "propertyName": "SVG_FEBLEND_MODE_HUE",
      "throughProperty": "SVG_FEBLEND_MODE_HUE",
      "prevProperty": "SVG_FEBLEND_MODE_EXCLUSION"
    },
    {
      "path": "window.SVGFEBlendElement",
      "propertyName": "SVG_FEBLEND_MODE_SATURATION",
      "throughProperty": "SVG_FEBLEND_MODE_SATURATION",
      "prevProperty": "SVG_FEBLEND_MODE_HUE"
    },
    {
      "path": "window.SVGFEBlendElement",
      "propertyName": "SVG_FEBLEND_MODE_COLOR",
      "throughProperty": "SVG_FEBLEND_MODE_COLOR",
      "prevProperty": "SVG_FEBLEND_MODE_SATURATION"
    },
    {
      "path": "window.SVGFEBlendElement",
      "propertyName": "SVG_FEBLEND_MODE_OVERLAY",
      "throughProperty": "SVG_FEBLEND_MODE_OVERLAY",
      "prevProperty": "SVG_FEBLEND_MODE_LIGHTEN"
    },
    {
      "path": "window.SVGFEBlendElement",
      "propertyName": "SVG_FEBLEND_MODE_COLOR_DODGE",
      "throughProperty": "SVG_FEBLEND_MODE_COLOR_DODGE",
      "prevProperty": "SVG_FEBLEND_MODE_OVERLAY"
    },
    {
      "path": "window.SVGFEBlendElement",
      "propertyName": "SVG_FEBLEND_MODE_COLOR_BURN",
      "throughProperty": "SVG_FEBLEND_MODE_COLOR_BURN",
      "prevProperty": "SVG_FEBLEND_MODE_COLOR_DODGE"
    },
    {
      "path": "window.SVGFEBlendElement",
      "propertyName": "SVG_FEBLEND_MODE_DARKEN",
      "throughProperty": "SVG_FEBLEND_MODE_DARKEN",
      "prevProperty": "SVG_FEBLEND_MODE_SCREEN"
    },
    {
      "path": "window.SVGFEBlendElement",
      "propertyName": "SVG_FEBLEND_MODE_LIGHTEN",
      "throughProperty": "SVG_FEBLEND_MODE_LIGHTEN",
      "prevProperty": "SVG_FEBLEND_MODE_DARKEN"
    },
    {
      "path": "window.SVGFEBlendElement",
      "propertyName": "SVG_FEBLEND_MODE_MULTIPLY",
      "throughProperty": "SVG_FEBLEND_MODE_MULTIPLY",
      "prevProperty": "SVG_FEBLEND_MODE_NORMAL"
    },
    {
      "path": "window.SVGFEBlendElement",
      "propertyName": "SVG_FEBLEND_MODE_SCREEN",
      "throughProperty": "SVG_FEBLEND_MODE_SCREEN",
      "prevProperty": "SVG_FEBLEND_MODE_MULTIPLY"
    },
    {
      "path": "window.SVGFEBlendElement",
      "propertyName": "SVG_FEBLEND_MODE_UNKNOWN",
      "throughProperty": "SVG_FEBLEND_MODE_UNKNOWN",
      "prevProperty": "length"
    },
    {
      "path": "window.SVGFEBlendElement",
      "propertyName": "SVG_FEBLEND_MODE_NORMAL",
      "throughProperty": "SVG_FEBLEND_MODE_NORMAL",
      "prevProperty": "SVG_FEBLEND_MODE_UNKNOWN"
    },
    {
      "path": "window.SVGFEBlendElement",
      "propertyName": "ELEMENT_NODE",
      "throughProperty": "new()",
      "prevProperty": "SVG_FEBLEND_MODE_LUMINOSITY"
    },
    {
      "path": "window.SVGFEBlendElement.prototype",
      "propertyName": "in1",
      "throughProperty": "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC",
      "prevProperty": null
    },
    {
      "path": "window.SVGFEBlendElement.prototype",
      "propertyName": "SVG_FEBLEND_MODE_SATURATION",
      "throughProperty": "SVG_FEBLEND_MODE_SATURATION",
      "prevProperty": "SVG_FEBLEND_MODE_HUE"
    },
    {
      "path": "window.SVGFEBlendElement.prototype",
      "propertyName": "SVG_FEBLEND_MODE_COLOR",
      "throughProperty": "SVG_FEBLEND_MODE_COLOR",
      "prevProperty": "SVG_FEBLEND_MODE_SATURATION"
    },
    {
      "path": "window.SVGFEBlendElement.prototype",
      "propertyName": "SVG_FEBLEND_MODE_LUMINOSITY",
      "throughProperty": "SVG_FEBLEND_MODE_LUMINOSITY",
      "prevProperty": "SVG_FEBLEND_MODE_COLOR"
    },
    {
      "path": "window.SVGFEBlendElement.prototype",
      "propertyName": "SVG_FEBLEND_MODE_DIFFERENCE",
      "throughProperty": "SVG_FEBLEND_MODE_DIFFERENCE",
      "prevProperty": "SVG_FEBLEND_MODE_SOFT_LIGHT"
    },
    {
      "path": "window.SVGFEBlendElement.prototype",
      "propertyName": "SVG_FEBLEND_MODE_EXCLUSION",
      "throughProperty": "SVG_FEBLEND_MODE_EXCLUSION",
      "prevProperty": "SVG_FEBLEND_MODE_DIFFERENCE"
    },
    {
      "path": "window.SVGFEBlendElement.prototype",
      "propertyName": "SVG_FEBLEND_MODE_HUE",
      "throughProperty": "SVG_FEBLEND_MODE_HUE",
      "prevProperty": "SVG_FEBLEND_MODE_EXCLUSION"
    },
    {
      "path": "window.SVGFEBlendElement.prototype",
      "propertyName": "SVG_FEBLEND_MODE_HARD_LIGHT",
      "throughProperty": "SVG_FEBLEND_MODE_HARD_LIGHT",
      "prevProperty": "SVG_FEBLEND_MODE_COLOR_BURN"
    },
    {
      "path": "window.SVGFEBlendElement.prototype",
      "propertyName": "SVG_FEBLEND_MODE_SOFT_LIGHT",
      "throughProperty": "SVG_FEBLEND_MODE_SOFT_LIGHT",
      "prevProperty": "SVG_FEBLEND_MODE_HARD_LIGHT"
    },
    {
      "path": "window.SVGFEBlendElement.prototype",
      "propertyName": "SVG_FEBLEND_MODE_COLOR_DODGE",
      "throughProperty": "SVG_FEBLEND_MODE_COLOR_DODGE",
      "prevProperty": "SVG_FEBLEND_MODE_OVERLAY"
    },
    {
      "path": "window.SVGFEBlendElement.prototype",
      "propertyName": "SVG_FEBLEND_MODE_COLOR_BURN",
      "throughProperty": "SVG_FEBLEND_MODE_COLOR_BURN",
      "prevProperty": "SVG_FEBLEND_MODE_COLOR_DODGE"
    },
    {
      "path": "window.SVGFEBlendElement.prototype",
      "propertyName": "SVG_FEBLEND_MODE_LIGHTEN",
      "throughProperty": "SVG_FEBLEND_MODE_LIGHTEN",
      "prevProperty": "SVG_FEBLEND_MODE_DARKEN"
    },
    {
      "path": "window.SVGFEBlendElement.prototype",
      "propertyName": "SVG_FEBLEND_MODE_OVERLAY",
      "throughProperty": "SVG_FEBLEND_MODE_OVERLAY",
      "prevProperty": "SVG_FEBLEND_MODE_LIGHTEN"
    },
    {
      "path": "window.SVGFEBlendElement.prototype",
      "propertyName": "SVG_FEBLEND_MODE_MULTIPLY",
      "throughProperty": "SVG_FEBLEND_MODE_MULTIPLY",
      "prevProperty": "SVG_FEBLEND_MODE_NORMAL"
    },
    {
      "path": "window.SVGFEBlendElement.prototype",
      "propertyName": "SVG_FEBLEND_MODE_SCREEN",
      "throughProperty": "SVG_FEBLEND_MODE_SCREEN",
      "prevProperty": "SVG_FEBLEND_MODE_MULTIPLY"
    },
    {
      "path": "window.SVGFEBlendElement.prototype",
      "propertyName": "SVG_FEBLEND_MODE_UNKNOWN",
      "throughProperty": "SVG_FEBLEND_MODE_UNKNOWN",
      "prevProperty": "result"
    },
    {
      "path": "window.SVGFEBlendElement.prototype",
      "propertyName": "SVG_FEBLEND_MODE_NORMAL",
      "throughProperty": "SVG_FEBLEND_MODE_NORMAL",
      "prevProperty": "SVG_FEBLEND_MODE_UNKNOWN"
    },
    {
      "path": "window.SVGFEColorMatrixElement",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.SVGFEColorMatrixElement",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.SVGFEColorMatrixElement",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.SVGFEColorMatrixElement",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGFEColorMatrixElement",
      "propertyName": "SVG_FECOLORMATRIX_TYPE_LUMINANCETOALPHA",
      "throughProperty": "SVG_FECOLORMATRIX_TYPE_LUMINANCETOALPHA",
      "prevProperty": "SVG_FECOLORMATRIX_TYPE_HUEROTATE"
    },
    {
      "path": "window.SVGFEColorMatrixElement",
      "propertyName": "SVG_FECOLORMATRIX_TYPE_UNKNOWN",
      "throughProperty": "SVG_FECOLORMATRIX_TYPE_UNKNOWN",
      "prevProperty": "length"
    },
    {
      "path": "window.SVGFEColorMatrixElement",
      "propertyName": "SVG_FECOLORMATRIX_TYPE_MATRIX",
      "throughProperty": "SVG_FECOLORMATRIX_TYPE_MATRIX",
      "prevProperty": "SVG_FECOLORMATRIX_TYPE_UNKNOWN"
    },
    {
      "path": "window.SVGFEColorMatrixElement",
      "propertyName": "SVG_FECOLORMATRIX_TYPE_SATURATE",
      "throughProperty": "SVG_FECOLORMATRIX_TYPE_SATURATE",
      "prevProperty": "SVG_FECOLORMATRIX_TYPE_MATRIX"
    },
    {
      "path": "window.SVGFEColorMatrixElement",
      "propertyName": "ELEMENT_NODE",
      "throughProperty": "new()",
      "prevProperty": "SVG_FECOLORMATRIX_TYPE_LUMINANCETOALPHA"
    },
    {
      "path": "window.SVGFEColorMatrixElement.prototype",
      "propertyName": "in1",
      "throughProperty": "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC",
      "prevProperty": null
    },
    {
      "path": "window.SVGFEColorMatrixElement.prototype",
      "propertyName": "SVG_FECOLORMATRIX_TYPE_SATURATE",
      "throughProperty": "SVG_FECOLORMATRIX_TYPE_SATURATE",
      "prevProperty": "SVG_FECOLORMATRIX_TYPE_MATRIX"
    },
    {
      "path": "window.SVGFEColorMatrixElement.prototype",
      "propertyName": "SVG_FECOLORMATRIX_TYPE_HUEROTATE",
      "throughProperty": "SVG_FECOLORMATRIX_TYPE_HUEROTATE",
      "prevProperty": "SVG_FECOLORMATRIX_TYPE_SATURATE"
    },
    {
      "path": "window.SVGFEColorMatrixElement.prototype",
      "propertyName": "SVG_FECOLORMATRIX_TYPE_LUMINANCETOALPHA",
      "throughProperty": "SVG_FECOLORMATRIX_TYPE_LUMINANCETOALPHA",
      "prevProperty": "SVG_FECOLORMATRIX_TYPE_HUEROTATE"
    },
    {
      "path": "window.SVGFEColorMatrixElement.prototype",
      "propertyName": "SVG_FECOLORMATRIX_TYPE_UNKNOWN",
      "throughProperty": "SVG_FECOLORMATRIX_TYPE_UNKNOWN",
      "prevProperty": "result"
    },
    {
      "path": "window.SVGFEColorMatrixElement.prototype",
      "propertyName": "SVG_FECOLORMATRIX_TYPE_MATRIX",
      "throughProperty": "SVG_FECOLORMATRIX_TYPE_MATRIX",
      "prevProperty": "SVG_FECOLORMATRIX_TYPE_UNKNOWN"
    },
    {
      "path": "window.SVGFEComponentTransferElement",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.SVGFEComponentTransferElement",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.SVGFEComponentTransferElement",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.SVGFEComponentTransferElement",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGFEComponentTransferElement",
      "propertyName": "ELEMENT_NODE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.SVGFECompositeElement",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.SVGFECompositeElement",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.SVGFECompositeElement",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.SVGFECompositeElement",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGFECompositeElement",
      "propertyName": "SVG_FECOMPOSITE_OPERATOR_XOR",
      "throughProperty": "SVG_FECOMPOSITE_OPERATOR_XOR",
      "prevProperty": "SVG_FECOMPOSITE_OPERATOR_ATOP"
    },
    {
      "path": "window.SVGFECompositeElement",
      "propertyName": "SVG_FECOMPOSITE_OPERATOR_ARITHMETIC",
      "throughProperty": "SVG_FECOMPOSITE_OPERATOR_ARITHMETIC",
      "prevProperty": "SVG_FECOMPOSITE_OPERATOR_XOR"
    },
    {
      "path": "window.SVGFECompositeElement",
      "propertyName": "SVG_FECOMPOSITE_OPERATOR_OVER",
      "throughProperty": "SVG_FECOMPOSITE_OPERATOR_OVER",
      "prevProperty": "SVG_FECOMPOSITE_OPERATOR_UNKNOWN"
    },
    {
      "path": "window.SVGFECompositeElement",
      "propertyName": "SVG_FECOMPOSITE_OPERATOR_IN",
      "throughProperty": "SVG_FECOMPOSITE_OPERATOR_IN",
      "prevProperty": "SVG_FECOMPOSITE_OPERATOR_OVER"
    },
    {
      "path": "window.SVGFECompositeElement",
      "propertyName": "SVG_FECOMPOSITE_OPERATOR_OUT",
      "throughProperty": "SVG_FECOMPOSITE_OPERATOR_OUT",
      "prevProperty": "SVG_FECOMPOSITE_OPERATOR_IN"
    },
    {
      "path": "window.SVGFECompositeElement",
      "propertyName": "SVG_FECOMPOSITE_OPERATOR_UNKNOWN",
      "throughProperty": "SVG_FECOMPOSITE_OPERATOR_UNKNOWN",
      "prevProperty": "length"
    },
    {
      "path": "window.SVGFECompositeElement",
      "propertyName": "ELEMENT_NODE",
      "throughProperty": "new()",
      "prevProperty": "SVG_FECOMPOSITE_OPERATOR_ARITHMETIC"
    },
    {
      "path": "window.SVGFECompositeElement.prototype",
      "propertyName": "in1",
      "throughProperty": "in1",
      "prevProperty": null
    },
    {
      "path": "window.SVGFECompositeElement.prototype",
      "propertyName": "SVG_FECOMPOSITE_OPERATOR_XOR",
      "throughProperty": "SVG_FECOMPOSITE_OPERATOR_XOR",
      "prevProperty": "SVG_FECOMPOSITE_OPERATOR_ATOP"
    },
    {
      "path": "window.SVGFECompositeElement.prototype",
      "propertyName": "SVG_FECOMPOSITE_OPERATOR_ARITHMETIC",
      "throughProperty": "SVG_FECOMPOSITE_OPERATOR_ARITHMETIC",
      "prevProperty": "SVG_FECOMPOSITE_OPERATOR_XOR"
    },
    {
      "path": "window.SVGFECompositeElement.prototype",
      "propertyName": "SVG_FECOMPOSITE_OPERATOR_IN",
      "throughProperty": "SVG_FECOMPOSITE_OPERATOR_IN",
      "prevProperty": "SVG_FECOMPOSITE_OPERATOR_OVER"
    },
    {
      "path": "window.SVGFECompositeElement.prototype",
      "propertyName": "SVG_FECOMPOSITE_OPERATOR_OUT",
      "throughProperty": "SVG_FECOMPOSITE_OPERATOR_OUT",
      "prevProperty": "SVG_FECOMPOSITE_OPERATOR_IN"
    },
    {
      "path": "window.SVGFECompositeElement.prototype",
      "propertyName": "SVG_FECOMPOSITE_OPERATOR_ATOP",
      "throughProperty": "SVG_FECOMPOSITE_OPERATOR_ATOP",
      "prevProperty": "SVG_FECOMPOSITE_OPERATOR_OUT"
    },
    {
      "path": "window.SVGFECompositeElement.prototype",
      "propertyName": "SVG_FECOMPOSITE_OPERATOR_UNKNOWN",
      "throughProperty": "SVG_FECOMPOSITE_OPERATOR_UNKNOWN",
      "prevProperty": "result"
    },
    {
      "path": "window.SVGFECompositeElement.prototype",
      "propertyName": "SVG_FECOMPOSITE_OPERATOR_OVER",
      "throughProperty": "SVG_FECOMPOSITE_OPERATOR_OVER",
      "prevProperty": "SVG_FECOMPOSITE_OPERATOR_UNKNOWN"
    },
    {
      "path": "window.SVGFECompositeElement.prototype",
      "propertyName": "in2",
      "throughProperty": "in2",
      "prevProperty": "in1"
    },
    {
      "path": "window.SVGFECompositeElement.prototype",
      "propertyName": "operator",
      "throughProperty": "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC",
      "prevProperty": "in2"
    },
    {
      "path": "window.SVGFEConvolveMatrixElement",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.SVGFEConvolveMatrixElement",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.SVGFEConvolveMatrixElement",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.SVGFEConvolveMatrixElement",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGFEConvolveMatrixElement",
      "propertyName": "SVG_EDGEMODE_WRAP",
      "throughProperty": "SVG_EDGEMODE_WRAP",
      "prevProperty": "SVG_EDGEMODE_DUPLICATE"
    },
    {
      "path": "window.SVGFEConvolveMatrixElement",
      "propertyName": "SVG_EDGEMODE_NONE",
      "throughProperty": "SVG_EDGEMODE_NONE",
      "prevProperty": "SVG_EDGEMODE_WRAP"
    },
    {
      "path": "window.SVGFEConvolveMatrixElement",
      "propertyName": "SVG_EDGEMODE_UNKNOWN",
      "throughProperty": "SVG_EDGEMODE_UNKNOWN",
      "prevProperty": "length"
    },
    {
      "path": "window.SVGFEConvolveMatrixElement",
      "propertyName": "SVG_EDGEMODE_DUPLICATE",
      "throughProperty": "SVG_EDGEMODE_DUPLICATE",
      "prevProperty": "SVG_EDGEMODE_UNKNOWN"
    },
    {
      "path": "window.SVGFEConvolveMatrixElement",
      "propertyName": "ELEMENT_NODE",
      "throughProperty": "new()",
      "prevProperty": "SVG_EDGEMODE_NONE"
    },
    {
      "path": "window.SVGFEConvolveMatrixElement.prototype",
      "propertyName": "in1",
      "throughProperty": "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC",
      "prevProperty": null
    },
    {
      "path": "window.SVGFEConvolveMatrixElement.prototype",
      "propertyName": "SVG_EDGEMODE_DUPLICATE",
      "throughProperty": "SVG_EDGEMODE_DUPLICATE",
      "prevProperty": "SVG_EDGEMODE_UNKNOWN"
    },
    {
      "path": "window.SVGFEConvolveMatrixElement.prototype",
      "propertyName": "SVG_EDGEMODE_WRAP",
      "throughProperty": "SVG_EDGEMODE_WRAP",
      "prevProperty": "SVG_EDGEMODE_DUPLICATE"
    },
    {
      "path": "window.SVGFEConvolveMatrixElement.prototype",
      "propertyName": "SVG_EDGEMODE_NONE",
      "throughProperty": "SVG_EDGEMODE_NONE",
      "prevProperty": "SVG_EDGEMODE_WRAP"
    },
    {
      "path": "window.SVGFEConvolveMatrixElement.prototype",
      "propertyName": "SVG_EDGEMODE_UNKNOWN",
      "throughProperty": "SVG_EDGEMODE_UNKNOWN",
      "prevProperty": "result"
    },
    {
      "path": "window.SVGFEDiffuseLightingElement",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.SVGFEDiffuseLightingElement",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.SVGFEDiffuseLightingElement",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.SVGFEDiffuseLightingElement",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGFEDiffuseLightingElement",
      "propertyName": "ELEMENT_NODE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.SVGFEDisplacementMapElement",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.SVGFEDisplacementMapElement",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.SVGFEDisplacementMapElement",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.SVGFEDisplacementMapElement",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGFEDisplacementMapElement",
      "propertyName": "SVG_CHANNEL_A",
      "throughProperty": "SVG_CHANNEL_A",
      "prevProperty": "SVG_CHANNEL_B"
    },
    {
      "path": "window.SVGFEDisplacementMapElement",
      "propertyName": "SVG_CHANNEL_R",
      "throughProperty": "SVG_CHANNEL_R",
      "prevProperty": "SVG_CHANNEL_UNKNOWN"
    },
    {
      "path": "window.SVGFEDisplacementMapElement",
      "propertyName": "SVG_CHANNEL_G",
      "throughProperty": "SVG_CHANNEL_G",
      "prevProperty": "SVG_CHANNEL_R"
    },
    {
      "path": "window.SVGFEDisplacementMapElement",
      "propertyName": "SVG_CHANNEL_UNKNOWN",
      "throughProperty": "SVG_CHANNEL_UNKNOWN",
      "prevProperty": "length"
    },
    {
      "path": "window.SVGFEDisplacementMapElement",
      "propertyName": "ELEMENT_NODE",
      "throughProperty": "new()",
      "prevProperty": "SVG_CHANNEL_A"
    },
    {
      "path": "window.SVGFEDisplacementMapElement.prototype",
      "propertyName": "in1",
      "throughProperty": "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC",
      "prevProperty": null
    },
    {
      "path": "window.SVGFEDisplacementMapElement.prototype",
      "propertyName": "SVG_CHANNEL_B",
      "throughProperty": "SVG_CHANNEL_B",
      "prevProperty": "SVG_CHANNEL_G"
    },
    {
      "path": "window.SVGFEDisplacementMapElement.prototype",
      "propertyName": "SVG_CHANNEL_A",
      "throughProperty": "SVG_CHANNEL_A",
      "prevProperty": "SVG_CHANNEL_B"
    },
    {
      "path": "window.SVGFEDisplacementMapElement.prototype",
      "propertyName": "SVG_CHANNEL_UNKNOWN",
      "throughProperty": "SVG_CHANNEL_UNKNOWN",
      "prevProperty": "result"
    },
    {
      "path": "window.SVGFEDisplacementMapElement.prototype",
      "propertyName": "SVG_CHANNEL_R",
      "throughProperty": "SVG_CHANNEL_R",
      "prevProperty": "SVG_CHANNEL_UNKNOWN"
    },
    {
      "path": "window.SVGFEDisplacementMapElement.prototype",
      "propertyName": "SVG_CHANNEL_G",
      "throughProperty": "SVG_CHANNEL_G",
      "prevProperty": "SVG_CHANNEL_R"
    },
    {
      "path": "window.SVGFEDistantLightElement",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.SVGFEDistantLightElement",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.SVGFEDistantLightElement",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.SVGFEDistantLightElement",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGFEDistantLightElement",
      "propertyName": "ELEMENT_NODE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.SVGFEDropShadowElement",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.SVGFEDropShadowElement",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.SVGFEDropShadowElement",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.SVGFEDropShadowElement",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGFEDropShadowElement",
      "propertyName": "ELEMENT_NODE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.SVGFEDropShadowElement.prototype.setStdDeviation",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.SVGFEDropShadowElement.prototype.setStdDeviation",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGFEFloodElement",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.SVGFEFloodElement",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.SVGFEFloodElement",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.SVGFEFloodElement",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGFEFloodElement",
      "propertyName": "ELEMENT_NODE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.SVGFEFuncAElement",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.SVGFEFuncAElement",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.SVGFEFuncAElement",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.SVGFEFuncAElement",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGFEFuncAElement",
      "propertyName": "SVG_FECOMPONENTTRANSFER_TYPE_LINEAR",
      "throughProperty": "SVG_FECOMPONENTTRANSFER_TYPE_LINEAR",
      "prevProperty": "SVG_FECOMPONENTTRANSFER_TYPE_DISCRETE"
    },
    {
      "path": "window.SVGFEFuncAElement",
      "propertyName": "SVG_FECOMPONENTTRANSFER_TYPE_GAMMA",
      "throughProperty": "SVG_FECOMPONENTTRANSFER_TYPE_GAMMA",
      "prevProperty": "SVG_FECOMPONENTTRANSFER_TYPE_LINEAR"
    },
    {
      "path": "window.SVGFEFuncAElement",
      "propertyName": "SVG_FECOMPONENTTRANSFER_TYPE_TABLE",
      "throughProperty": "SVG_FECOMPONENTTRANSFER_TYPE_TABLE",
      "prevProperty": "SVG_FECOMPONENTTRANSFER_TYPE_IDENTITY"
    },
    {
      "path": "window.SVGFEFuncAElement",
      "propertyName": "SVG_FECOMPONENTTRANSFER_TYPE_DISCRETE",
      "throughProperty": "SVG_FECOMPONENTTRANSFER_TYPE_DISCRETE",
      "prevProperty": "SVG_FECOMPONENTTRANSFER_TYPE_TABLE"
    },
    {
      "path": "window.SVGFEFuncAElement",
      "propertyName": "SVG_FECOMPONENTTRANSFER_TYPE_UNKNOWN",
      "throughProperty": "SVG_FECOMPONENTTRANSFER_TYPE_UNKNOWN",
      "prevProperty": "length"
    },
    {
      "path": "window.SVGFEFuncAElement",
      "propertyName": "SVG_FECOMPONENTTRANSFER_TYPE_IDENTITY",
      "throughProperty": "SVG_FECOMPONENTTRANSFER_TYPE_IDENTITY",
      "prevProperty": "SVG_FECOMPONENTTRANSFER_TYPE_UNKNOWN"
    },
    {
      "path": "window.SVGFEFuncAElement",
      "propertyName": "ELEMENT_NODE",
      "throughProperty": "new()",
      "prevProperty": "SVG_FECOMPONENTTRANSFER_TYPE_GAMMA"
    },
    {
      "path": "window.SVGFEFuncAElement.prototype",
      "propertyName": "SVG_FECOMPONENTTRANSFER_TYPE_UNKNOWN",
      "throughProperty": "SVG_FECOMPONENTTRANSFER_TYPE_UNKNOWN",
      "prevProperty": null
    },
    {
      "path": "window.SVGFEFuncAElement.prototype",
      "propertyName": "SVG_FECOMPONENTTRANSFER_TYPE_LINEAR",
      "throughProperty": "SVG_FECOMPONENTTRANSFER_TYPE_LINEAR",
      "prevProperty": "SVG_FECOMPONENTTRANSFER_TYPE_DISCRETE"
    },
    {
      "path": "window.SVGFEFuncAElement.prototype",
      "propertyName": "SVG_FECOMPONENTTRANSFER_TYPE_IDENTITY",
      "throughProperty": "SVG_FECOMPONENTTRANSFER_TYPE_IDENTITY",
      "prevProperty": "SVG_FECOMPONENTTRANSFER_TYPE_UNKNOWN"
    },
    {
      "path": "window.SVGFEFuncAElement.prototype",
      "propertyName": "SVG_FECOMPONENTTRANSFER_TYPE_TABLE",
      "throughProperty": "SVG_FECOMPONENTTRANSFER_TYPE_TABLE",
      "prevProperty": "SVG_FECOMPONENTTRANSFER_TYPE_IDENTITY"
    },
    {
      "path": "window.SVGFEFuncAElement.prototype",
      "propertyName": "onmouseenter",
      "throughProperty": "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC",
      "prevProperty": "SVG_FECOMPONENTTRANSFER_TYPE_GAMMA"
    },
    {
      "path": "window.SVGFEFuncBElement",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.SVGFEFuncBElement",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.SVGFEFuncBElement",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.SVGFEFuncBElement",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGFEFuncBElement",
      "propertyName": "SVG_FECOMPONENTTRANSFER_TYPE_DISCRETE",
      "throughProperty": "SVG_FECOMPONENTTRANSFER_TYPE_DISCRETE",
      "prevProperty": "SVG_FECOMPONENTTRANSFER_TYPE_TABLE"
    },
    {
      "path": "window.SVGFEFuncBElement",
      "propertyName": "SVG_FECOMPONENTTRANSFER_TYPE_LINEAR",
      "throughProperty": "SVG_FECOMPONENTTRANSFER_TYPE_LINEAR",
      "prevProperty": "SVG_FECOMPONENTTRANSFER_TYPE_DISCRETE"
    },
    {
      "path": "window.SVGFEFuncBElement",
      "propertyName": "SVG_FECOMPONENTTRANSFER_TYPE_GAMMA",
      "throughProperty": "SVG_FECOMPONENTTRANSFER_TYPE_GAMMA",
      "prevProperty": "SVG_FECOMPONENTTRANSFER_TYPE_LINEAR"
    },
    {
      "path": "window.SVGFEFuncBElement",
      "propertyName": "SVG_FECOMPONENTTRANSFER_TYPE_UNKNOWN",
      "throughProperty": "SVG_FECOMPONENTTRANSFER_TYPE_UNKNOWN",
      "prevProperty": "length"
    },
    {
      "path": "window.SVGFEFuncBElement",
      "propertyName": "SVG_FECOMPONENTTRANSFER_TYPE_IDENTITY",
      "throughProperty": "SVG_FECOMPONENTTRANSFER_TYPE_IDENTITY",
      "prevProperty": "SVG_FECOMPONENTTRANSFER_TYPE_UNKNOWN"
    },
    {
      "path": "window.SVGFEFuncBElement",
      "propertyName": "SVG_FECOMPONENTTRANSFER_TYPE_TABLE",
      "throughProperty": "SVG_FECOMPONENTTRANSFER_TYPE_TABLE",
      "prevProperty": "SVG_FECOMPONENTTRANSFER_TYPE_IDENTITY"
    },
    {
      "path": "window.SVGFEFuncBElement",
      "propertyName": "ELEMENT_NODE",
      "throughProperty": "new()",
      "prevProperty": "SVG_FECOMPONENTTRANSFER_TYPE_GAMMA"
    },
    {
      "path": "window.SVGFEFuncBElement.prototype",
      "propertyName": "SVG_FECOMPONENTTRANSFER_TYPE_UNKNOWN",
      "throughProperty": "SVG_FECOMPONENTTRANSFER_TYPE_UNKNOWN",
      "prevProperty": null
    },
    {
      "path": "window.SVGFEFuncBElement.prototype",
      "propertyName": "SVG_FECOMPONENTTRANSFER_TYPE_LINEAR",
      "throughProperty": "SVG_FECOMPONENTTRANSFER_TYPE_LINEAR",
      "prevProperty": "SVG_FECOMPONENTTRANSFER_TYPE_DISCRETE"
    },
    {
      "path": "window.SVGFEFuncBElement.prototype",
      "propertyName": "SVG_FECOMPONENTTRANSFER_TYPE_IDENTITY",
      "throughProperty": "SVG_FECOMPONENTTRANSFER_TYPE_IDENTITY",
      "prevProperty": "SVG_FECOMPONENTTRANSFER_TYPE_UNKNOWN"
    },
    {
      "path": "window.SVGFEFuncBElement.prototype",
      "propertyName": "SVG_FECOMPONENTTRANSFER_TYPE_TABLE",
      "throughProperty": "SVG_FECOMPONENTTRANSFER_TYPE_TABLE",
      "prevProperty": "SVG_FECOMPONENTTRANSFER_TYPE_IDENTITY"
    },
    {
      "path": "window.SVGFEFuncBElement.prototype",
      "propertyName": "onmouseenter",
      "throughProperty": "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC",
      "prevProperty": "SVG_FECOMPONENTTRANSFER_TYPE_GAMMA"
    },
    {
      "path": "window.SVGFEFuncGElement",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.SVGFEFuncGElement",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.SVGFEFuncGElement",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.SVGFEFuncGElement",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGFEFuncGElement",
      "propertyName": "SVG_FECOMPONENTTRANSFER_TYPE_DISCRETE",
      "throughProperty": "SVG_FECOMPONENTTRANSFER_TYPE_DISCRETE",
      "prevProperty": "SVG_FECOMPONENTTRANSFER_TYPE_TABLE"
    },
    {
      "path": "window.SVGFEFuncGElement",
      "propertyName": "SVG_FECOMPONENTTRANSFER_TYPE_LINEAR",
      "throughProperty": "SVG_FECOMPONENTTRANSFER_TYPE_LINEAR",
      "prevProperty": "SVG_FECOMPONENTTRANSFER_TYPE_DISCRETE"
    },
    {
      "path": "window.SVGFEFuncGElement",
      "propertyName": "SVG_FECOMPONENTTRANSFER_TYPE_GAMMA",
      "throughProperty": "SVG_FECOMPONENTTRANSFER_TYPE_GAMMA",
      "prevProperty": "SVG_FECOMPONENTTRANSFER_TYPE_LINEAR"
    },
    {
      "path": "window.SVGFEFuncGElement",
      "propertyName": "SVG_FECOMPONENTTRANSFER_TYPE_UNKNOWN",
      "throughProperty": "SVG_FECOMPONENTTRANSFER_TYPE_UNKNOWN",
      "prevProperty": "length"
    },
    {
      "path": "window.SVGFEFuncGElement",
      "propertyName": "SVG_FECOMPONENTTRANSFER_TYPE_IDENTITY",
      "throughProperty": "SVG_FECOMPONENTTRANSFER_TYPE_IDENTITY",
      "prevProperty": "SVG_FECOMPONENTTRANSFER_TYPE_UNKNOWN"
    },
    {
      "path": "window.SVGFEFuncGElement",
      "propertyName": "SVG_FECOMPONENTTRANSFER_TYPE_TABLE",
      "throughProperty": "SVG_FECOMPONENTTRANSFER_TYPE_TABLE",
      "prevProperty": "SVG_FECOMPONENTTRANSFER_TYPE_IDENTITY"
    },
    {
      "path": "window.SVGFEFuncGElement",
      "propertyName": "ELEMENT_NODE",
      "throughProperty": "new()",
      "prevProperty": "SVG_FECOMPONENTTRANSFER_TYPE_GAMMA"
    },
    {
      "path": "window.SVGFEFuncGElement.prototype",
      "propertyName": "SVG_FECOMPONENTTRANSFER_TYPE_UNKNOWN",
      "throughProperty": "SVG_FECOMPONENTTRANSFER_TYPE_UNKNOWN",
      "prevProperty": null
    },
    {
      "path": "window.SVGFEFuncGElement.prototype",
      "propertyName": "SVG_FECOMPONENTTRANSFER_TYPE_LINEAR",
      "throughProperty": "SVG_FECOMPONENTTRANSFER_TYPE_LINEAR",
      "prevProperty": "SVG_FECOMPONENTTRANSFER_TYPE_DISCRETE"
    },
    {
      "path": "window.SVGFEFuncGElement.prototype",
      "propertyName": "SVG_FECOMPONENTTRANSFER_TYPE_IDENTITY",
      "throughProperty": "SVG_FECOMPONENTTRANSFER_TYPE_IDENTITY",
      "prevProperty": "SVG_FECOMPONENTTRANSFER_TYPE_UNKNOWN"
    },
    {
      "path": "window.SVGFEFuncGElement.prototype",
      "propertyName": "SVG_FECOMPONENTTRANSFER_TYPE_TABLE",
      "throughProperty": "SVG_FECOMPONENTTRANSFER_TYPE_TABLE",
      "prevProperty": "SVG_FECOMPONENTTRANSFER_TYPE_IDENTITY"
    },
    {
      "path": "window.SVGFEFuncGElement.prototype",
      "propertyName": "onmouseenter",
      "throughProperty": "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC",
      "prevProperty": "SVG_FECOMPONENTTRANSFER_TYPE_GAMMA"
    },
    {
      "path": "window.SVGFEFuncRElement",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.SVGFEFuncRElement",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.SVGFEFuncRElement",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.SVGFEFuncRElement",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGFEFuncRElement",
      "propertyName": "SVG_FECOMPONENTTRANSFER_TYPE_LINEAR",
      "throughProperty": "SVG_FECOMPONENTTRANSFER_TYPE_LINEAR",
      "prevProperty": "SVG_FECOMPONENTTRANSFER_TYPE_DISCRETE"
    },
    {
      "path": "window.SVGFEFuncRElement",
      "propertyName": "SVG_FECOMPONENTTRANSFER_TYPE_GAMMA",
      "throughProperty": "SVG_FECOMPONENTTRANSFER_TYPE_GAMMA",
      "prevProperty": "SVG_FECOMPONENTTRANSFER_TYPE_LINEAR"
    },
    {
      "path": "window.SVGFEFuncRElement",
      "propertyName": "SVG_FECOMPONENTTRANSFER_TYPE_TABLE",
      "throughProperty": "SVG_FECOMPONENTTRANSFER_TYPE_TABLE",
      "prevProperty": "SVG_FECOMPONENTTRANSFER_TYPE_IDENTITY"
    },
    {
      "path": "window.SVGFEFuncRElement",
      "propertyName": "SVG_FECOMPONENTTRANSFER_TYPE_DISCRETE",
      "throughProperty": "SVG_FECOMPONENTTRANSFER_TYPE_DISCRETE",
      "prevProperty": "SVG_FECOMPONENTTRANSFER_TYPE_TABLE"
    },
    {
      "path": "window.SVGFEFuncRElement",
      "propertyName": "SVG_FECOMPONENTTRANSFER_TYPE_UNKNOWN",
      "throughProperty": "SVG_FECOMPONENTTRANSFER_TYPE_UNKNOWN",
      "prevProperty": "length"
    },
    {
      "path": "window.SVGFEFuncRElement",
      "propertyName": "SVG_FECOMPONENTTRANSFER_TYPE_IDENTITY",
      "throughProperty": "SVG_FECOMPONENTTRANSFER_TYPE_IDENTITY",
      "prevProperty": "SVG_FECOMPONENTTRANSFER_TYPE_UNKNOWN"
    },
    {
      "path": "window.SVGFEFuncRElement",
      "propertyName": "ELEMENT_NODE",
      "throughProperty": "new()",
      "prevProperty": "SVG_FECOMPONENTTRANSFER_TYPE_GAMMA"
    },
    {
      "path": "window.SVGFEFuncRElement.prototype",
      "propertyName": "SVG_FECOMPONENTTRANSFER_TYPE_UNKNOWN",
      "throughProperty": "SVG_FECOMPONENTTRANSFER_TYPE_UNKNOWN",
      "prevProperty": null
    },
    {
      "path": "window.SVGFEFuncRElement.prototype",
      "propertyName": "SVG_FECOMPONENTTRANSFER_TYPE_LINEAR",
      "throughProperty": "SVG_FECOMPONENTTRANSFER_TYPE_LINEAR",
      "prevProperty": "SVG_FECOMPONENTTRANSFER_TYPE_DISCRETE"
    },
    {
      "path": "window.SVGFEFuncRElement.prototype",
      "propertyName": "SVG_FECOMPONENTTRANSFER_TYPE_IDENTITY",
      "throughProperty": "SVG_FECOMPONENTTRANSFER_TYPE_IDENTITY",
      "prevProperty": "SVG_FECOMPONENTTRANSFER_TYPE_UNKNOWN"
    },
    {
      "path": "window.SVGFEFuncRElement.prototype",
      "propertyName": "SVG_FECOMPONENTTRANSFER_TYPE_TABLE",
      "throughProperty": "SVG_FECOMPONENTTRANSFER_TYPE_TABLE",
      "prevProperty": "SVG_FECOMPONENTTRANSFER_TYPE_IDENTITY"
    },
    {
      "path": "window.SVGFEFuncRElement.prototype",
      "propertyName": "onmouseenter",
      "throughProperty": "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC",
      "prevProperty": "SVG_FECOMPONENTTRANSFER_TYPE_GAMMA"
    },
    {
      "path": "window.SVGFEGaussianBlurElement",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.SVGFEGaussianBlurElement",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.SVGFEGaussianBlurElement",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.SVGFEGaussianBlurElement",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGFEGaussianBlurElement",
      "propertyName": "ELEMENT_NODE",
      "throughProperty": "new()",
      "prevProperty": "SVG_EDGEMODE_NONE"
    },
    {
      "path": "window.SVGFEGaussianBlurElement.prototype.setStdDeviation",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.SVGFEGaussianBlurElement.prototype.setStdDeviation",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGFEImageElement",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.SVGFEImageElement",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.SVGFEImageElement",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.SVGFEImageElement",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGFEImageElement",
      "propertyName": "ELEMENT_NODE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.SVGFEMergeElement",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.SVGFEMergeElement",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.SVGFEMergeElement",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.SVGFEMergeElement",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGFEMergeElement",
      "propertyName": "ELEMENT_NODE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.SVGFEMergeNodeElement",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.SVGFEMergeNodeElement",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.SVGFEMergeNodeElement",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.SVGFEMergeNodeElement",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGFEMergeNodeElement",
      "propertyName": "ELEMENT_NODE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.SVGFEMorphologyElement",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.SVGFEMorphologyElement",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.SVGFEMorphologyElement",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.SVGFEMorphologyElement",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGFEMorphologyElement",
      "propertyName": "SVG_MORPHOLOGY_OPERATOR_UNKNOWN",
      "throughProperty": "SVG_MORPHOLOGY_OPERATOR_UNKNOWN",
      "prevProperty": "length"
    },
    {
      "path": "window.SVGFEMorphologyElement",
      "propertyName": "SVG_MORPHOLOGY_OPERATOR_ERODE",
      "throughProperty": "SVG_MORPHOLOGY_OPERATOR_ERODE",
      "prevProperty": "SVG_MORPHOLOGY_OPERATOR_UNKNOWN"
    },
    {
      "path": "window.SVGFEMorphologyElement",
      "propertyName": "ELEMENT_NODE",
      "throughProperty": "new()",
      "prevProperty": "SVG_MORPHOLOGY_OPERATOR_DILATE"
    },
    {
      "path": "window.SVGFEMorphologyElement.prototype",
      "propertyName": "SVG_MORPHOLOGY_OPERATOR_UNKNOWN",
      "throughProperty": "SVG_MORPHOLOGY_OPERATOR_UNKNOWN",
      "prevProperty": "setRadius"
    },
    {
      "path": "window.SVGFEMorphologyElement.prototype",
      "propertyName": "in1",
      "throughProperty": "result",
      "prevProperty": null
    },
    {
      "path": "window.SVGFEMorphologyElement.prototype",
      "propertyName": "SVG_MORPHOLOGY_OPERATOR_ERODE",
      "throughProperty": "SVG_MORPHOLOGY_OPERATOR_ERODE",
      "prevProperty": "SVG_MORPHOLOGY_OPERATOR_UNKNOWN"
    },
    {
      "path": "window.SVGFEMorphologyElement.prototype",
      "propertyName": "SVG_MORPHOLOGY_OPERATOR_DILATE",
      "throughProperty": "SVG_MORPHOLOGY_OPERATOR_DILATE",
      "prevProperty": "SVG_MORPHOLOGY_OPERATOR_ERODE"
    },
    {
      "path": "window.SVGFEOffsetElement",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.SVGFEOffsetElement",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.SVGFEOffsetElement",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.SVGFEOffsetElement",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGFEOffsetElement",
      "propertyName": "ELEMENT_NODE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.SVGFEPointLightElement",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.SVGFEPointLightElement",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.SVGFEPointLightElement",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.SVGFEPointLightElement",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGFEPointLightElement",
      "propertyName": "ELEMENT_NODE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.SVGFESpecularLightingElement",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.SVGFESpecularLightingElement",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.SVGFESpecularLightingElement",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.SVGFESpecularLightingElement",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGFESpecularLightingElement",
      "propertyName": "ELEMENT_NODE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.SVGFESpotLightElement",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.SVGFESpotLightElement",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.SVGFESpotLightElement",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.SVGFESpotLightElement",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGFESpotLightElement",
      "propertyName": "ELEMENT_NODE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.SVGFETileElement",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.SVGFETileElement",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.SVGFETileElement",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.SVGFETileElement",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGFETileElement",
      "propertyName": "ELEMENT_NODE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.SVGFETurbulenceElement",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.SVGFETurbulenceElement",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.SVGFETurbulenceElement",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.SVGFETurbulenceElement",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGFETurbulenceElement",
      "propertyName": "SVG_STITCHTYPE_UNKNOWN",
      "throughProperty": "SVG_STITCHTYPE_UNKNOWN",
      "prevProperty": "SVG_TURBULENCE_TYPE_TURBULENCE"
    },
    {
      "path": "window.SVGFETurbulenceElement",
      "propertyName": "SVG_STITCHTYPE_STITCH",
      "throughProperty": "SVG_STITCHTYPE_STITCH",
      "prevProperty": "SVG_STITCHTYPE_UNKNOWN"
    },
    {
      "path": "window.SVGFETurbulenceElement",
      "propertyName": "SVG_STITCHTYPE_NOSTITCH",
      "throughProperty": "SVG_STITCHTYPE_NOSTITCH",
      "prevProperty": "SVG_STITCHTYPE_STITCH"
    },
    {
      "path": "window.SVGFETurbulenceElement",
      "propertyName": "SVG_TURBULENCE_TYPE_FRACTALNOISE",
      "throughProperty": "SVG_TURBULENCE_TYPE_FRACTALNOISE",
      "prevProperty": "SVG_TURBULENCE_TYPE_UNKNOWN"
    },
    {
      "path": "window.SVGFETurbulenceElement",
      "propertyName": "SVG_TURBULENCE_TYPE_TURBULENCE",
      "throughProperty": "SVG_TURBULENCE_TYPE_TURBULENCE",
      "prevProperty": "SVG_TURBULENCE_TYPE_FRACTALNOISE"
    },
    {
      "path": "window.SVGFETurbulenceElement",
      "propertyName": "SVG_TURBULENCE_TYPE_UNKNOWN",
      "throughProperty": "SVG_TURBULENCE_TYPE_UNKNOWN",
      "prevProperty": "length"
    },
    {
      "path": "window.SVGFETurbulenceElement",
      "propertyName": "ELEMENT_NODE",
      "throughProperty": "new()",
      "prevProperty": "SVG_STITCHTYPE_NOSTITCH"
    },
    {
      "path": "window.SVGFETurbulenceElement.prototype",
      "propertyName": "baseFrequencyX",
      "throughProperty": "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC",
      "prevProperty": null
    },
    {
      "path": "window.SVGFETurbulenceElement.prototype",
      "propertyName": "SVG_STITCHTYPE_STITCH",
      "throughProperty": "SVG_STITCHTYPE_STITCH",
      "prevProperty": "SVG_STITCHTYPE_UNKNOWN"
    },
    {
      "path": "window.SVGFETurbulenceElement.prototype",
      "propertyName": "SVG_STITCHTYPE_NOSTITCH",
      "throughProperty": "SVG_STITCHTYPE_NOSTITCH",
      "prevProperty": "SVG_STITCHTYPE_STITCH"
    },
    {
      "path": "window.SVGFETurbulenceElement.prototype",
      "propertyName": "SVG_TURBULENCE_TYPE_UNKNOWN",
      "throughProperty": "SVG_TURBULENCE_TYPE_UNKNOWN",
      "prevProperty": "result"
    },
    {
      "path": "window.SVGFETurbulenceElement.prototype",
      "propertyName": "SVG_TURBULENCE_TYPE_FRACTALNOISE",
      "throughProperty": "SVG_TURBULENCE_TYPE_FRACTALNOISE",
      "prevProperty": "SVG_TURBULENCE_TYPE_UNKNOWN"
    },
    {
      "path": "window.SVGFETurbulenceElement.prototype",
      "propertyName": "SVG_TURBULENCE_TYPE_TURBULENCE",
      "throughProperty": "SVG_TURBULENCE_TYPE_TURBULENCE",
      "prevProperty": "SVG_TURBULENCE_TYPE_FRACTALNOISE"
    },
    {
      "path": "window.SVGFETurbulenceElement.prototype",
      "propertyName": "SVG_STITCHTYPE_UNKNOWN",
      "throughProperty": "SVG_STITCHTYPE_UNKNOWN",
      "prevProperty": "SVG_TURBULENCE_TYPE_TURBULENCE"
    },
    {
      "path": "window.SVGFilterElement",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.SVGFilterElement",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.SVGFilterElement",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.SVGFilterElement",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGFilterElement",
      "propertyName": "ELEMENT_NODE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.SVGForeignObjectElement",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.SVGForeignObjectElement",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.SVGForeignObjectElement",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.SVGForeignObjectElement",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGForeignObjectElement",
      "propertyName": "ELEMENT_NODE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.SVGGElement",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.SVGGElement",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.SVGGElement",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.SVGGElement",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGGElement",
      "propertyName": "ELEMENT_NODE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.SVGGeometryElement",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.SVGGeometryElement",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.SVGGeometryElement",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.SVGGeometryElement",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGGeometryElement",
      "propertyName": "ELEMENT_NODE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.SVGGeometryElement.prototype.getPointAtLength",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.SVGGeometryElement.prototype.getPointAtLength",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGGeometryElement.prototype.getTotalLength",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.SVGGeometryElement.prototype.getTotalLength",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGGeometryElement.prototype.isPointInFill",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.SVGGeometryElement.prototype.isPointInFill",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGGeometryElement.prototype.isPointInStroke",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.SVGGeometryElement.prototype.isPointInStroke",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGGradientElement",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.SVGGradientElement",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.SVGGradientElement",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.SVGGradientElement",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGGradientElement",
      "propertyName": "SVG_SPREADMETHOD_PAD",
      "throughProperty": "SVG_SPREADMETHOD_PAD",
      "prevProperty": "SVG_SPREADMETHOD_UNKNOWN"
    },
    {
      "path": "window.SVGGradientElement",
      "propertyName": "SVG_SPREADMETHOD_REFLECT",
      "throughProperty": "SVG_SPREADMETHOD_REFLECT",
      "prevProperty": "SVG_SPREADMETHOD_PAD"
    },
    {
      "path": "window.SVGGradientElement",
      "propertyName": "SVG_SPREADMETHOD_REPEAT",
      "throughProperty": "SVG_SPREADMETHOD_REPEAT",
      "prevProperty": "SVG_SPREADMETHOD_REFLECT"
    },
    {
      "path": "window.SVGGradientElement",
      "propertyName": "SVG_SPREADMETHOD_UNKNOWN",
      "throughProperty": "SVG_SPREADMETHOD_UNKNOWN",
      "prevProperty": "length"
    },
    {
      "path": "window.SVGGradientElement",
      "propertyName": "ELEMENT_NODE",
      "throughProperty": "new()",
      "prevProperty": "SVG_SPREADMETHOD_REPEAT"
    },
    {
      "path": "window.SVGGradientElement.prototype",
      "propertyName": "gradientUnits",
      "throughProperty": "spreadMethod",
      "prevProperty": null
    },
    {
      "path": "window.SVGGradientElement.prototype",
      "propertyName": "href",
      "throughProperty": "href",
      "prevProperty": "externalResourcesRequired"
    },
    {
      "path": "window.SVGGradientElement.prototype",
      "propertyName": "SVG_SPREADMETHOD_PAD",
      "throughProperty": "SVG_SPREADMETHOD_PAD",
      "prevProperty": "SVG_SPREADMETHOD_UNKNOWN"
    },
    {
      "path": "window.SVGGradientElement.prototype",
      "propertyName": "SVG_SPREADMETHOD_REFLECT",
      "throughProperty": "SVG_SPREADMETHOD_REFLECT",
      "prevProperty": "SVG_SPREADMETHOD_PAD"
    },
    {
      "path": "window.SVGGradientElement.prototype",
      "propertyName": "SVG_SPREADMETHOD_REPEAT",
      "throughProperty": "SVG_SPREADMETHOD_REPEAT",
      "prevProperty": "SVG_SPREADMETHOD_REFLECT"
    },
    {
      "path": "window.SVGGradientElement.prototype",
      "propertyName": "SVG_SPREADMETHOD_UNKNOWN",
      "throughProperty": "SVG_SPREADMETHOD_UNKNOWN",
      "prevProperty": "href"
    },
    {
      "path": "window.SVGGraphicsElement",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.SVGGraphicsElement",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.SVGGraphicsElement",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.SVGGraphicsElement",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGGraphicsElement",
      "propertyName": "ELEMENT_NODE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.SVGGraphicsElement.prototype.getBBox",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.SVGGraphicsElement.prototype.getBBox",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGGraphicsElement.prototype.getCTM",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.SVGGraphicsElement.prototype.getCTM",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGGraphicsElement.prototype.getScreenCTM",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.SVGGraphicsElement.prototype.getScreenCTM",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGImageElement",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.SVGImageElement",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.SVGImageElement",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.SVGImageElement",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGImageElement",
      "propertyName": "ELEMENT_NODE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.SVGLength",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.SVGLength",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.SVGLength",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.SVGLength",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGLength",
      "propertyName": "SVG_LENGTHTYPE_UNKNOWN",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.SVGLength.prototype",
      "propertyName": "unitType",
      "throughProperty": "convertToSpecifiedUnits",
      "prevProperty": null
    },
    {
      "path": "window.SVGLength.prototype",
      "propertyName": "SVG_LENGTHTYPE_UNKNOWN",
      "throughProperty": "SVG_LENGTHTYPE_PC",
      "prevProperty": "convertToSpecifiedUnits"
    },
    {
      "path": "window.SVGLength.prototype.convertToSpecifiedUnits",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.SVGLength.prototype.convertToSpecifiedUnits",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGLength.prototype.newValueSpecifiedUnits",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.SVGLength.prototype.newValueSpecifiedUnits",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGLengthList",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.SVGLengthList",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.SVGLengthList",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.SVGLengthList",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGLengthList",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.SVGLengthList.prototype.appendItem",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.SVGLengthList.prototype.appendItem",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGLengthList.prototype.clear",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.SVGLengthList.prototype.clear",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGLengthList.prototype.getItem",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.SVGLengthList.prototype.getItem",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGLengthList.prototype.initialize",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.SVGLengthList.prototype.initialize",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGLengthList.prototype.insertItemBefore",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.SVGLengthList.prototype.insertItemBefore",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGLengthList.prototype.removeItem",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.SVGLengthList.prototype.removeItem",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGLengthList.prototype.replaceItem",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.SVGLengthList.prototype.replaceItem",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGLinearGradientElement",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.SVGLinearGradientElement",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.SVGLinearGradientElement",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.SVGLinearGradientElement",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGLinearGradientElement",
      "propertyName": "SVG_SPREADMETHOD_REPEAT",
      "throughProperty": "SVG_SPREADMETHOD_REPEAT",
      "prevProperty": "SVG_SPREADMETHOD_REFLECT"
    },
    {
      "path": "window.SVGLinearGradientElement",
      "propertyName": "SVG_SPREADMETHOD_UNKNOWN",
      "throughProperty": "SVG_SPREADMETHOD_UNKNOWN",
      "prevProperty": "length"
    },
    {
      "path": "window.SVGLinearGradientElement",
      "propertyName": "SVG_SPREADMETHOD_PAD",
      "throughProperty": "SVG_SPREADMETHOD_PAD",
      "prevProperty": "SVG_SPREADMETHOD_UNKNOWN"
    },
    {
      "path": "window.SVGLinearGradientElement",
      "propertyName": "SVG_SPREADMETHOD_REFLECT",
      "throughProperty": "SVG_SPREADMETHOD_REFLECT",
      "prevProperty": "SVG_SPREADMETHOD_PAD"
    },
    {
      "path": "window.SVGLinearGradientElement",
      "propertyName": "ELEMENT_NODE",
      "throughProperty": "new()",
      "prevProperty": "SVG_SPREADMETHOD_REPEAT"
    },
    {
      "path": "window.SVGLinearGradientElement.prototype",
      "propertyName": "SVG_SPREADMETHOD_UNKNOWN",
      "throughProperty": "SVG_SPREADMETHOD_UNKNOWN",
      "prevProperty": "y2"
    },
    {
      "path": "window.SVGLinearGradientElement.prototype",
      "propertyName": "SVG_SPREADMETHOD_PAD",
      "throughProperty": "SVG_SPREADMETHOD_PAD",
      "prevProperty": "SVG_SPREADMETHOD_UNKNOWN"
    },
    {
      "path": "window.SVGLinearGradientElement.prototype",
      "propertyName": "onmouseenter",
      "throughProperty": "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC",
      "prevProperty": "SVG_SPREADMETHOD_REPEAT"
    },
    {
      "path": "window.SVGLineElement",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.SVGLineElement",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.SVGLineElement",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.SVGLineElement",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGLineElement",
      "propertyName": "ELEMENT_NODE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.SVGMarkerElement",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.SVGMarkerElement",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.SVGMarkerElement",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.SVGMarkerElement",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGMarkerElement",
      "propertyName": "SVG_MARKERUNITS_UNKNOWN",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.SVGMarkerElement.prototype",
      "propertyName": "refX",
      "throughProperty": "orientAngle",
      "prevProperty": null
    },
    {
      "path": "window.SVGMarkerElement.prototype",
      "propertyName": "viewBox",
      "throughProperty": "setOrientToAngle",
      "prevProperty": "externalResourcesRequired"
    },
    {
      "path": "window.SVGMarkerElement.prototype",
      "propertyName": "SVG_MARKERUNITS_UNKNOWN",
      "throughProperty": "SVG_MARKER_ORIENT_ANGLE",
      "prevProperty": "setOrientToAngle"
    },
    {
      "path": "window.SVGMarkerElement.prototype.setOrientToAngle",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.SVGMarkerElement.prototype.setOrientToAngle",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGMarkerElement.prototype.setOrientToAuto",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.SVGMarkerElement.prototype.setOrientToAuto",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGMaskElement",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.SVGMaskElement",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.SVGMaskElement",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.SVGMaskElement",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGMaskElement",
      "propertyName": "ELEMENT_NODE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.SVGMatrix",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.SVGMatrix",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.SVGMatrix",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.SVGMatrix",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGMatrix",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.SVGMatrix.prototype.flipX",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.SVGMatrix.prototype.flipX",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGMatrix.prototype.flipY",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.SVGMatrix.prototype.flipY",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGMatrix.prototype.inverse",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.SVGMatrix.prototype.inverse",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGMatrix.prototype.multiply",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.SVGMatrix.prototype.multiply",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGMatrix.prototype.rotate",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.SVGMatrix.prototype.rotate",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGMatrix.prototype.rotateFromVector",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.SVGMatrix.prototype.rotateFromVector",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGMatrix.prototype.scale",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.SVGMatrix.prototype.scale",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGMatrix.prototype.scaleNonUniform",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.SVGMatrix.prototype.scaleNonUniform",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGMatrix.prototype.skewX",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.SVGMatrix.prototype.skewX",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGMatrix.prototype.skewY",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.SVGMatrix.prototype.skewY",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGMatrix.prototype.translate",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.SVGMatrix.prototype.translate",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGMetadataElement",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.SVGMetadataElement",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.SVGMetadataElement",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.SVGMetadataElement",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGMetadataElement",
      "propertyName": "ELEMENT_NODE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.SVGMPathElement",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.SVGMPathElement",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.SVGMPathElement",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.SVGMPathElement",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGMPathElement",
      "propertyName": "ELEMENT_NODE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.SVGNumber",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.SVGNumber",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.SVGNumber",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.SVGNumber",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGNumber",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.SVGNumberList",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.SVGNumberList",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.SVGNumberList",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.SVGNumberList",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGNumberList",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.SVGNumberList.prototype.appendItem",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.SVGNumberList.prototype.appendItem",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGNumberList.prototype.clear",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.SVGNumberList.prototype.clear",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGNumberList.prototype.getItem",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.SVGNumberList.prototype.getItem",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGNumberList.prototype.initialize",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.SVGNumberList.prototype.initialize",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGNumberList.prototype.insertItemBefore",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.SVGNumberList.prototype.insertItemBefore",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGNumberList.prototype.removeItem",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.SVGNumberList.prototype.removeItem",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGNumberList.prototype.replaceItem",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.SVGNumberList.prototype.replaceItem",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGPathElement",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.SVGPathElement",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.SVGPathElement",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.SVGPathElement",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGPathElement",
      "propertyName": "ELEMENT_NODE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.SVGPatternElement",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.SVGPatternElement",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.SVGPatternElement",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.SVGPatternElement",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGPatternElement",
      "propertyName": "ELEMENT_NODE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.SVGPoint",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.SVGPoint",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.SVGPoint",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.SVGPoint",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGPoint",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.SVGPoint.prototype.matrixTransform",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.SVGPoint.prototype.matrixTransform",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGPointList",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.SVGPointList",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.SVGPointList",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.SVGPointList",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGPointList",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.SVGPointList.prototype.appendItem",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.SVGPointList.prototype.appendItem",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGPointList.prototype.clear",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.SVGPointList.prototype.clear",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGPointList.prototype.getItem",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.SVGPointList.prototype.getItem",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGPointList.prototype.initialize",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.SVGPointList.prototype.initialize",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGPointList.prototype.insertItemBefore",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.SVGPointList.prototype.insertItemBefore",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGPointList.prototype.removeItem",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.SVGPointList.prototype.removeItem",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGPointList.prototype.replaceItem",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.SVGPointList.prototype.replaceItem",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGPolygonElement",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.SVGPolygonElement",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.SVGPolygonElement",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.SVGPolygonElement",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGPolygonElement",
      "propertyName": "ELEMENT_NODE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.SVGPolylineElement",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.SVGPolylineElement",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.SVGPolylineElement",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.SVGPolylineElement",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGPolylineElement",
      "propertyName": "ELEMENT_NODE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.SVGPreserveAspectRatio",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.SVGPreserveAspectRatio",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.SVGPreserveAspectRatio",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.SVGPreserveAspectRatio",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGPreserveAspectRatio",
      "propertyName": "SVG_PRESERVEASPECTRATIO_UNKNOWN",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.SVGPreserveAspectRatio.prototype",
      "propertyName": "align",
      "throughProperty": "meetOrSlice",
      "prevProperty": null
    },
    {
      "path": "window.SVGPreserveAspectRatio.prototype",
      "propertyName": "SVG_PRESERVEASPECTRATIO_UNKNOWN",
      "throughProperty": "SVG_MEETORSLICE_SLICE",
      "prevProperty": "meetOrSlice"
    },
    {
      "path": "window.SVGRadialGradientElement",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.SVGRadialGradientElement",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.SVGRadialGradientElement",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.SVGRadialGradientElement",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGRadialGradientElement",
      "propertyName": "SVG_SPREADMETHOD_PAD",
      "throughProperty": "SVG_SPREADMETHOD_PAD",
      "prevProperty": "SVG_SPREADMETHOD_UNKNOWN"
    },
    {
      "path": "window.SVGRadialGradientElement",
      "propertyName": "SVG_SPREADMETHOD_REFLECT",
      "throughProperty": "SVG_SPREADMETHOD_REFLECT",
      "prevProperty": "SVG_SPREADMETHOD_PAD"
    },
    {
      "path": "window.SVGRadialGradientElement",
      "propertyName": "SVG_SPREADMETHOD_REPEAT",
      "throughProperty": "SVG_SPREADMETHOD_REPEAT",
      "prevProperty": "SVG_SPREADMETHOD_REFLECT"
    },
    {
      "path": "window.SVGRadialGradientElement",
      "propertyName": "SVG_SPREADMETHOD_UNKNOWN",
      "throughProperty": "SVG_SPREADMETHOD_UNKNOWN",
      "prevProperty": "length"
    },
    {
      "path": "window.SVGRadialGradientElement",
      "propertyName": "ELEMENT_NODE",
      "throughProperty": "new()",
      "prevProperty": "SVG_SPREADMETHOD_REPEAT"
    },
    {
      "path": "window.SVGRadialGradientElement.prototype",
      "propertyName": "SVG_SPREADMETHOD_UNKNOWN",
      "throughProperty": "SVG_SPREADMETHOD_UNKNOWN",
      "prevProperty": "fr"
    },
    {
      "path": "window.SVGRadialGradientElement.prototype",
      "propertyName": "SVG_SPREADMETHOD_PAD",
      "throughProperty": "SVG_SPREADMETHOD_PAD",
      "prevProperty": "SVG_SPREADMETHOD_UNKNOWN"
    },
    {
      "path": "window.SVGRadialGradientElement.prototype",
      "propertyName": "onmouseenter",
      "throughProperty": "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC",
      "prevProperty": "SVG_SPREADMETHOD_REPEAT"
    },
    {
      "path": "window.SVGRect",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.SVGRect",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.SVGRect",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.SVGRect",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGRect",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.SVGRectElement",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.SVGRectElement",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.SVGRectElement",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.SVGRectElement",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGRectElement",
      "propertyName": "ELEMENT_NODE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.SVGScriptElement",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.SVGScriptElement",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.SVGScriptElement",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.SVGScriptElement",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGScriptElement",
      "propertyName": "ELEMENT_NODE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.SVGSetElement",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.SVGSetElement",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.SVGSetElement",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.SVGSetElement",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGSetElement",
      "propertyName": "ELEMENT_NODE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.SVGStopElement",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.SVGStopElement",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.SVGStopElement",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.SVGStopElement",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGStopElement",
      "propertyName": "ELEMENT_NODE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.SVGStringList",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.SVGStringList",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.SVGStringList",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.SVGStringList",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGStringList",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.SVGStringList.prototype.appendItem",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.SVGStringList.prototype.appendItem",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGStringList.prototype.clear",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.SVGStringList.prototype.clear",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGStringList.prototype.getItem",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.SVGStringList.prototype.getItem",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGStringList.prototype.initialize",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.SVGStringList.prototype.initialize",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGStringList.prototype.insertItemBefore",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.SVGStringList.prototype.insertItemBefore",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGStringList.prototype.removeItem",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.SVGStringList.prototype.removeItem",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGStringList.prototype.replaceItem",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.SVGStringList.prototype.replaceItem",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGStyleElement",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.SVGStyleElement",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.SVGStyleElement",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.SVGStyleElement",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGStyleElement",
      "propertyName": "ELEMENT_NODE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.SVGStyleElement.prototype",
      "propertyName": "disabled",
      "throughProperty": "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC",
      "prevProperty": null
    },
    {
      "path": "window.SVGStyleElement.prototype",
      "propertyName": "type",
      "throughProperty": "title",
      "prevProperty": "disabled"
    },
    {
      "path": "window.SVGSVGElement",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.SVGSVGElement",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.SVGSVGElement",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.SVGSVGElement",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGSVGElement",
      "propertyName": "SVG_ZOOMANDPAN_UNKNOWN",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.SVGSVGElement.prototype",
      "propertyName": "x",
      "throughProperty": "height",
      "prevProperty": null
    },
    {
      "path": "window.SVGSVGElement.prototype",
      "propertyName": "currentScale",
      "throughProperty": "currentTranslate",
      "prevProperty": "currentView"
    },
    {
      "path": "window.SVGSVGElement.prototype",
      "propertyName": "viewBox",
      "throughProperty": "zoomAndPan",
      "prevProperty": "externalResourcesRequired"
    },
    {
      "path": "window.SVGSVGElement.prototype",
      "propertyName": "getIntersectionList",
      "throughProperty": "getElementById",
      "prevProperty": "setCurrentTime"
    },
    {
      "path": "window.SVGSVGElement.prototype",
      "propertyName": "SVG_ZOOMANDPAN_UNKNOWN",
      "throughProperty": "SVG_ZOOMANDPAN_MAGNIFY",
      "prevProperty": "getElementById"
    },
    {
      "path": "window.SVGSVGElement.prototype",
      "propertyName": "suspendRedraw",
      "throughProperty": "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC",
      "prevProperty": "zoomAndPan"
    },
    {
      "path": "window.SVGSVGElement.prototype.animationsPaused",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.SVGSVGElement.prototype.animationsPaused",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGSVGElement.prototype.checkEnclosure",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.SVGSVGElement.prototype.checkEnclosure",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGSVGElement.prototype.checkIntersection",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.SVGSVGElement.prototype.checkIntersection",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGSVGElement.prototype.createSVGAngle",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.SVGSVGElement.prototype.createSVGAngle",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGSVGElement.prototype.createSVGLength",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.SVGSVGElement.prototype.createSVGLength",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGSVGElement.prototype.createSVGMatrix",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.SVGSVGElement.prototype.createSVGMatrix",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGSVGElement.prototype.createSVGNumber",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.SVGSVGElement.prototype.createSVGNumber",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGSVGElement.prototype.createSVGPoint",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.SVGSVGElement.prototype.createSVGPoint",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGSVGElement.prototype.createSVGRect",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.SVGSVGElement.prototype.createSVGRect",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGSVGElement.prototype.createSVGTransform",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.SVGSVGElement.prototype.createSVGTransform",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGSVGElement.prototype.createSVGTransformFromMatrix",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.SVGSVGElement.prototype.createSVGTransformFromMatrix",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGSVGElement.prototype.deselectAll",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.SVGSVGElement.prototype.deselectAll",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGSVGElement.prototype.forceRedraw",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.SVGSVGElement.prototype.forceRedraw",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGSVGElement.prototype.getCurrentTime",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.SVGSVGElement.prototype.getCurrentTime",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGSVGElement.prototype.getElementById",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.SVGSVGElement.prototype.getElementById",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGSVGElement.prototype.getEnclosureList",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.SVGSVGElement.prototype.getEnclosureList",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGSVGElement.prototype.getIntersectionList",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.SVGSVGElement.prototype.getIntersectionList",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGSVGElement.prototype.pauseAnimations",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.SVGSVGElement.prototype.pauseAnimations",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGSVGElement.prototype.setCurrentTime",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.SVGSVGElement.prototype.setCurrentTime",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGSVGElement.prototype.suspendRedraw",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.SVGSVGElement.prototype.suspendRedraw",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGSVGElement.prototype.unpauseAnimations",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.SVGSVGElement.prototype.unpauseAnimations",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGSVGElement.prototype.unsuspendRedraw",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.SVGSVGElement.prototype.unsuspendRedraw",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGSVGElement.prototype.unsuspendRedrawAll",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.SVGSVGElement.prototype.unsuspendRedrawAll",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGSwitchElement",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.SVGSwitchElement",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.SVGSwitchElement",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.SVGSwitchElement",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGSwitchElement",
      "propertyName": "ELEMENT_NODE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.SVGSymbolElement",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.SVGSymbolElement",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.SVGSymbolElement",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.SVGSymbolElement",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGSymbolElement",
      "propertyName": "ELEMENT_NODE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.SVGTextContentElement",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.SVGTextContentElement",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.SVGTextContentElement",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.SVGTextContentElement",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGTextContentElement",
      "propertyName": "LENGTHADJUST_UNKNOWN",
      "throughProperty": "LENGTHADJUST_UNKNOWN",
      "prevProperty": "length"
    },
    {
      "path": "window.SVGTextContentElement",
      "propertyName": "LENGTHADJUST_SPACING",
      "throughProperty": "LENGTHADJUST_SPACING",
      "prevProperty": "LENGTHADJUST_UNKNOWN"
    },
    {
      "path": "window.SVGTextContentElement",
      "propertyName": "ELEMENT_NODE",
      "throughProperty": "new()",
      "prevProperty": "LENGTHADJUST_SPACINGANDGLYPHS"
    },
    {
      "path": "window.SVGTextContentElement.prototype",
      "propertyName": "textLength",
      "throughProperty": "lengthAdjust",
      "prevProperty": null
    },
    {
      "path": "window.SVGTextContentElement.prototype",
      "propertyName": "getNumberOfChars",
      "throughProperty": "selectSubString",
      "prevProperty": "externalResourcesRequired"
    },
    {
      "path": "window.SVGTextContentElement.prototype",
      "propertyName": "LENGTHADJUST_UNKNOWN",
      "throughProperty": "LENGTHADJUST_UNKNOWN",
      "prevProperty": "selectSubString"
    },
    {
      "path": "window.SVGTextContentElement.prototype",
      "propertyName": "LENGTHADJUST_SPACING",
      "throughProperty": "LENGTHADJUST_SPACING",
      "prevProperty": "LENGTHADJUST_UNKNOWN"
    },
    {
      "path": "window.SVGTextContentElement.prototype",
      "propertyName": "LENGTHADJUST_SPACINGANDGLYPHS",
      "throughProperty": "LENGTHADJUST_SPACINGANDGLYPHS",
      "prevProperty": "LENGTHADJUST_SPACING"
    },
    {
      "path": "window.SVGTextContentElement.prototype.getCharNumAtPosition",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.SVGTextContentElement.prototype.getCharNumAtPosition",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGTextContentElement.prototype.getComputedTextLength",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.SVGTextContentElement.prototype.getComputedTextLength",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGTextContentElement.prototype.getEndPositionOfChar",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.SVGTextContentElement.prototype.getEndPositionOfChar",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGTextContentElement.prototype.getExtentOfChar",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.SVGTextContentElement.prototype.getExtentOfChar",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGTextContentElement.prototype.getNumberOfChars",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.SVGTextContentElement.prototype.getNumberOfChars",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGTextContentElement.prototype.getRotationOfChar",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.SVGTextContentElement.prototype.getRotationOfChar",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGTextContentElement.prototype.getStartPositionOfChar",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.SVGTextContentElement.prototype.getStartPositionOfChar",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGTextContentElement.prototype.getSubStringLength",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.SVGTextContentElement.prototype.getSubStringLength",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGTextContentElement.prototype.selectSubString",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.SVGTextContentElement.prototype.selectSubString",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGTextElement",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.SVGTextElement",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.SVGTextElement",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.SVGTextElement",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGTextElement",
      "propertyName": "LENGTHADJUST_UNKNOWN",
      "throughProperty": "LENGTHADJUST_UNKNOWN",
      "prevProperty": "length"
    },
    {
      "path": "window.SVGTextElement",
      "propertyName": "LENGTHADJUST_SPACING",
      "throughProperty": "LENGTHADJUST_SPACING",
      "prevProperty": "LENGTHADJUST_UNKNOWN"
    },
    {
      "path": "window.SVGTextElement",
      "propertyName": "ELEMENT_NODE",
      "throughProperty": "new()",
      "prevProperty": "LENGTHADJUST_SPACINGANDGLYPHS"
    },
    {
      "path": "window.SVGTextElement.prototype",
      "propertyName": "LENGTHADJUST_UNKNOWN",
      "throughProperty": "LENGTHADJUST_UNKNOWN",
      "prevProperty": null
    },
    {
      "path": "window.SVGTextElement.prototype",
      "propertyName": "LENGTHADJUST_SPACING",
      "throughProperty": "LENGTHADJUST_SPACING",
      "prevProperty": "LENGTHADJUST_UNKNOWN"
    },
    {
      "path": "window.SVGTextElement.prototype",
      "propertyName": "onmouseenter",
      "throughProperty": "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC",
      "prevProperty": "LENGTHADJUST_SPACINGANDGLYPHS"
    },
    {
      "path": "window.SVGTextPathElement",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.SVGTextPathElement",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.SVGTextPathElement",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.SVGTextPathElement",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGTextPathElement",
      "propertyName": "TEXTPATH_SPACINGTYPE_AUTO",
      "throughProperty": "TEXTPATH_SPACINGTYPE_AUTO",
      "prevProperty": "TEXTPATH_SPACINGTYPE_UNKNOWN"
    },
    {
      "path": "window.SVGTextPathElement",
      "propertyName": "TEXTPATH_SPACINGTYPE_EXACT",
      "throughProperty": "TEXTPATH_SPACINGTYPE_EXACT",
      "prevProperty": "TEXTPATH_SPACINGTYPE_AUTO"
    },
    {
      "path": "window.SVGTextPathElement",
      "propertyName": "TEXTPATH_METHODTYPE_STRETCH",
      "throughProperty": "TEXTPATH_METHODTYPE_STRETCH",
      "prevProperty": "TEXTPATH_METHODTYPE_ALIGN"
    },
    {
      "path": "window.SVGTextPathElement",
      "propertyName": "TEXTPATH_SPACINGTYPE_UNKNOWN",
      "throughProperty": "TEXTPATH_SPACINGTYPE_UNKNOWN",
      "prevProperty": "TEXTPATH_METHODTYPE_STRETCH"
    },
    {
      "path": "window.SVGTextPathElement",
      "propertyName": "TEXTPATH_METHODTYPE_UNKNOWN",
      "throughProperty": "TEXTPATH_METHODTYPE_UNKNOWN",
      "prevProperty": "length"
    },
    {
      "path": "window.SVGTextPathElement",
      "propertyName": "TEXTPATH_METHODTYPE_ALIGN",
      "throughProperty": "TEXTPATH_METHODTYPE_ALIGN",
      "prevProperty": "TEXTPATH_METHODTYPE_UNKNOWN"
    },
    {
      "path": "window.SVGTextPathElement",
      "propertyName": "LENGTHADJUST_UNKNOWN",
      "throughProperty": "LENGTHADJUST_UNKNOWN",
      "prevProperty": "TEXTPATH_SPACINGTYPE_EXACT"
    },
    {
      "path": "window.SVGTextPathElement",
      "propertyName": "LENGTHADJUST_SPACING",
      "throughProperty": "LENGTHADJUST_SPACING",
      "prevProperty": "LENGTHADJUST_UNKNOWN"
    },
    {
      "path": "window.SVGTextPathElement",
      "propertyName": "ELEMENT_NODE",
      "throughProperty": "new()",
      "prevProperty": "LENGTHADJUST_SPACINGANDGLYPHS"
    },
    {
      "path": "window.SVGTextPathElement.prototype",
      "propertyName": "startOffset",
      "throughProperty": "href",
      "prevProperty": null
    },
    {
      "path": "window.SVGTextPathElement.prototype",
      "propertyName": "TEXTPATH_SPACINGTYPE_UNKNOWN",
      "throughProperty": "TEXTPATH_SPACINGTYPE_UNKNOWN",
      "prevProperty": "TEXTPATH_METHODTYPE_STRETCH"
    },
    {
      "path": "window.SVGTextPathElement.prototype",
      "propertyName": "TEXTPATH_SPACINGTYPE_AUTO",
      "throughProperty": "TEXTPATH_SPACINGTYPE_AUTO",
      "prevProperty": "TEXTPATH_SPACINGTYPE_UNKNOWN"
    },
    {
      "path": "window.SVGTextPathElement.prototype",
      "propertyName": "TEXTPATH_SPACINGTYPE_EXACT",
      "throughProperty": "TEXTPATH_SPACINGTYPE_EXACT",
      "prevProperty": "TEXTPATH_SPACINGTYPE_AUTO"
    },
    {
      "path": "window.SVGTextPathElement.prototype",
      "propertyName": "TEXTPATH_METHODTYPE_ALIGN",
      "throughProperty": "TEXTPATH_METHODTYPE_ALIGN",
      "prevProperty": "TEXTPATH_METHODTYPE_UNKNOWN"
    },
    {
      "path": "window.SVGTextPathElement.prototype",
      "propertyName": "TEXTPATH_METHODTYPE_STRETCH",
      "throughProperty": "TEXTPATH_METHODTYPE_STRETCH",
      "prevProperty": "TEXTPATH_METHODTYPE_ALIGN"
    },
    {
      "path": "window.SVGTextPathElement.prototype",
      "propertyName": "TEXTPATH_METHODTYPE_UNKNOWN",
      "throughProperty": "TEXTPATH_METHODTYPE_UNKNOWN",
      "prevProperty": "href"
    },
    {
      "path": "window.SVGTextPathElement.prototype",
      "propertyName": "LENGTHADJUST_UNKNOWN",
      "throughProperty": "LENGTHADJUST_UNKNOWN",
      "prevProperty": "TEXTPATH_SPACINGTYPE_EXACT"
    },
    {
      "path": "window.SVGTextPathElement.prototype",
      "propertyName": "LENGTHADJUST_SPACING",
      "throughProperty": "LENGTHADJUST_SPACING",
      "prevProperty": "LENGTHADJUST_UNKNOWN"
    },
    {
      "path": "window.SVGTextPathElement.prototype",
      "propertyName": "onmouseenter",
      "throughProperty": "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC",
      "prevProperty": "LENGTHADJUST_SPACINGANDGLYPHS"
    },
    {
      "path": "window.SVGTextPositioningElement",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.SVGTextPositioningElement",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.SVGTextPositioningElement",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.SVGTextPositioningElement",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGTextPositioningElement",
      "propertyName": "LENGTHADJUST_UNKNOWN",
      "throughProperty": "LENGTHADJUST_UNKNOWN",
      "prevProperty": "length"
    },
    {
      "path": "window.SVGTextPositioningElement",
      "propertyName": "LENGTHADJUST_SPACING",
      "throughProperty": "LENGTHADJUST_SPACING",
      "prevProperty": "LENGTHADJUST_UNKNOWN"
    },
    {
      "path": "window.SVGTextPositioningElement",
      "propertyName": "ELEMENT_NODE",
      "throughProperty": "new()",
      "prevProperty": "LENGTHADJUST_SPACINGANDGLYPHS"
    },
    {
      "path": "window.SVGTextPositioningElement.prototype",
      "propertyName": "LENGTHADJUST_UNKNOWN",
      "throughProperty": "LENGTHADJUST_UNKNOWN",
      "prevProperty": "rotate"
    },
    {
      "path": "window.SVGTextPositioningElement.prototype",
      "propertyName": "LENGTHADJUST_SPACING",
      "throughProperty": "LENGTHADJUST_SPACING",
      "prevProperty": "LENGTHADJUST_UNKNOWN"
    },
    {
      "path": "window.SVGTextPositioningElement.prototype",
      "propertyName": "onmouseenter",
      "throughProperty": "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC",
      "prevProperty": "LENGTHADJUST_SPACINGANDGLYPHS"
    },
    {
      "path": "window.SVGTitleElement",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.SVGTitleElement",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.SVGTitleElement",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.SVGTitleElement",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGTitleElement",
      "propertyName": "ELEMENT_NODE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.SVGTransform",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.SVGTransform",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.SVGTransform",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.SVGTransform",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGTransform",
      "propertyName": "SVG_TRANSFORM_UNKNOWN",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.SVGTransform.prototype",
      "propertyName": "type",
      "throughProperty": "setSkewY",
      "prevProperty": null
    },
    {
      "path": "window.SVGTransform.prototype",
      "propertyName": "SVG_TRANSFORM_UNKNOWN",
      "throughProperty": "SVG_TRANSFORM_SKEWY",
      "prevProperty": "setSkewY"
    },
    {
      "path": "window.SVGTransform.prototype.setMatrix",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.SVGTransform.prototype.setMatrix",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGTransform.prototype.setRotate",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.SVGTransform.prototype.setRotate",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGTransform.prototype.setScale",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.SVGTransform.prototype.setScale",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGTransform.prototype.setSkewX",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.SVGTransform.prototype.setSkewX",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGTransform.prototype.setSkewY",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.SVGTransform.prototype.setSkewY",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGTransform.prototype.setTranslate",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.SVGTransform.prototype.setTranslate",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGTransformList",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.SVGTransformList",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.SVGTransformList",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.SVGTransformList",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGTransformList",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.SVGTransformList.prototype.appendItem",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.SVGTransformList.prototype.appendItem",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGTransformList.prototype.clear",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.SVGTransformList.prototype.clear",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGTransformList.prototype.consolidate",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.SVGTransformList.prototype.consolidate",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGTransformList.prototype.createSVGTransformFromMatrix",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.SVGTransformList.prototype.createSVGTransformFromMatrix",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGTransformList.prototype.getItem",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.SVGTransformList.prototype.getItem",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGTransformList.prototype.initialize",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.SVGTransformList.prototype.initialize",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGTransformList.prototype.insertItemBefore",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.SVGTransformList.prototype.insertItemBefore",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGTransformList.prototype.removeItem",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.SVGTransformList.prototype.removeItem",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGTransformList.prototype.replaceItem",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.SVGTransformList.prototype.replaceItem",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGTSpanElement",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.SVGTSpanElement",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.SVGTSpanElement",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.SVGTSpanElement",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGTSpanElement",
      "propertyName": "LENGTHADJUST_UNKNOWN",
      "throughProperty": "LENGTHADJUST_UNKNOWN",
      "prevProperty": "length"
    },
    {
      "path": "window.SVGTSpanElement",
      "propertyName": "LENGTHADJUST_SPACING",
      "throughProperty": "LENGTHADJUST_SPACING",
      "prevProperty": "LENGTHADJUST_UNKNOWN"
    },
    {
      "path": "window.SVGTSpanElement",
      "propertyName": "ELEMENT_NODE",
      "throughProperty": "new()",
      "prevProperty": "LENGTHADJUST_SPACINGANDGLYPHS"
    },
    {
      "path": "window.SVGTSpanElement.prototype",
      "propertyName": "LENGTHADJUST_UNKNOWN",
      "throughProperty": "LENGTHADJUST_UNKNOWN",
      "prevProperty": null
    },
    {
      "path": "window.SVGTSpanElement.prototype",
      "propertyName": "LENGTHADJUST_SPACING",
      "throughProperty": "LENGTHADJUST_SPACING",
      "prevProperty": "LENGTHADJUST_UNKNOWN"
    },
    {
      "path": "window.SVGTSpanElement.prototype",
      "propertyName": "onmouseenter",
      "throughProperty": "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC",
      "prevProperty": "LENGTHADJUST_SPACINGANDGLYPHS"
    },
    {
      "path": "window.SVGUnitTypes",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.SVGUnitTypes",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.SVGUnitTypes",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.SVGUnitTypes",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGUnitTypes",
      "propertyName": "SVG_UNIT_TYPE_UNKNOWN",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.SVGUseElement",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.SVGUseElement",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.SVGUseElement",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.SVGUseElement",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGUseElement",
      "propertyName": "ELEMENT_NODE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.SVGViewElement",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.SVGViewElement",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.SVGViewElement",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.SVGViewElement",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SVGViewElement",
      "propertyName": "SVG_ZOOMANDPAN_UNKNOWN",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.SVGViewElement.prototype",
      "propertyName": "viewBox",
      "throughProperty": "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC",
      "prevProperty": "externalResourcesRequired"
    },
    {
      "path": "window.SVGViewElement.prototype",
      "propertyName": "SVG_ZOOMANDPAN_UNKNOWN",
      "throughProperty": "SVG_ZOOMANDPAN_MAGNIFY",
      "prevProperty": "zoomAndPan"
    },
    {
      "path": "window.Symbol",
      "propertyName": "for",
      "throughProperty": "keyFor",
      "prevProperty": null
    },
    {
      "path": "window.Symbol",
      "propertyName": "name",
      "throughProperty": "prototype",
      "prevProperty": "keyFor"
    },
    {
      "path": "window.Symbol",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "prototype"
    },
    {
      "path": "window.Symbol",
      "propertyName": "hasInstance",
      "throughProperty": "isConcatSpreadable",
      "prevProperty": "length"
    },
    {
      "path": "window.Symbol",
      "propertyName": "asyncIterator",
      "throughProperty": "asyncIterator",
      "prevProperty": "isConcatSpreadable"
    },
    {
      "path": "window.Symbol.for",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Symbol.for",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Symbol.keyFor",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Symbol.keyFor",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Symbol.prototype",
      "propertyName": "description",
      "throughProperty": "description",
      "prevProperty": null
    },
    {
      "path": "window.Symbol.prototype",
      "propertyName": "toString",
      "throughProperty": "valueOf",
      "prevProperty": "description"
    },
    {
      "path": "window.Symbol.prototype.Symbol(Symbol.toPrimitive)",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Symbol.prototype.Symbol(Symbol.toPrimitive)",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Symbol.prototype.toString",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Symbol.prototype.toString",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Symbol.prototype.valueOf",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Symbol.prototype.valueOf",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SyntaxError",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.SyntaxError",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.SyntaxError.prototype",
      "propertyName": "toString",
      "throughProperty": "toString",
      "prevProperty": null
    },
    {
      "path": "window.SyntaxError.prototype",
      "propertyName": "name",
      "throughProperty": "message",
      "prevProperty": "toString"
    },
    {
      "path": "window.Text",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.Text",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.Text",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.Text",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Text",
      "propertyName": "ELEMENT_NODE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.Text.prototype.splitText",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Text.prototype.splitText",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.TextDecoder",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.TextDecoder",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.TextDecoder",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.TextDecoder",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.TextDecoder",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.TextDecoder.prototype.decode",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.TextDecoder.prototype.decode",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.TextEncoder",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.TextEncoder",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.TextEncoder",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.TextEncoder",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.TextEncoder",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.TextEncoder.prototype.encode",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.TextEncoder.prototype.encode",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.TextEvent",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.TextEvent",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.TextEvent",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.TextEvent",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.TextEvent",
      "propertyName": "NONE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.TextEvent.prototype.initTextEvent",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.TextEvent.prototype.initTextEvent",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.TextMetrics",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.TextMetrics",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.TextMetrics",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.TextMetrics",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.TextMetrics",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.TextTrack",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.TextTrack",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.TextTrack",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.TextTrack",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.TextTrack",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.TextTrack.prototype",
      "propertyName": "id",
      "throughProperty": "id",
      "prevProperty": null
    },
    {
      "path": "window.TextTrack.prototype",
      "propertyName": "mode",
      "throughProperty": "oncuechange",
      "prevProperty": "inBandMetadataTrackDispatchType"
    },
    {
      "path": "window.TextTrack.prototype",
      "propertyName": "addCue",
      "throughProperty": "removeCue",
      "prevProperty": "sourceBuffer"
    },
    {
      "path": "window.TextTrack.prototype",
      "propertyName": "kind",
      "throughProperty": "language",
      "prevProperty": "id"
    },
    {
      "path": "window.TextTrack.prototype.addCue",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.TextTrack.prototype.addCue",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.TextTrack.prototype.removeCue",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.TextTrack.prototype.removeCue",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.TextTrackCue",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.TextTrackCue",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.TextTrackCue",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.TextTrackCue",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.TextTrackCue",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.TextTrackCueList",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.TextTrackCueList",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.TextTrackCueList",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.TextTrackCueList",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.TextTrackCueList",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.TextTrackCueList.prototype.getCueById",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.TextTrackCueList.prototype.getCueById",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.TextTrackList",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.TextTrackList",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.TextTrackList",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.TextTrackList",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.TextTrackList",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.TextTrackList.prototype",
      "propertyName": "onaddtrack",
      "throughProperty": "onaddtrack",
      "prevProperty": "length"
    },
    {
      "path": "window.TextTrackList.prototype",
      "propertyName": "onchange",
      "throughProperty": "onchange",
      "prevProperty": "onaddtrack"
    },
    {
      "path": "window.TextTrackList.prototype",
      "propertyName": "getTrackById",
      "throughProperty": "getTrackById",
      "prevProperty": "item"
    },
    {
      "path": "window.TextTrackList.prototype.getTrackById",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.TextTrackList.prototype.getTrackById",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.TimeRanges",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.TimeRanges",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.TimeRanges",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.TimeRanges",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.TimeRanges",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.TimeRanges.prototype.end",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.TimeRanges.prototype.end",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.TimeRanges.prototype.start",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.TimeRanges.prototype.start",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.TrackEvent",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.TrackEvent",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.TrackEvent",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.TrackEvent",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.TrackEvent",
      "propertyName": "NONE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.TransitionEvent",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.TransitionEvent",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.TransitionEvent",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.TransitionEvent",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.TransitionEvent",
      "propertyName": "NONE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.TreeWalker",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.TreeWalker",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.TreeWalker",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.TreeWalker",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.TreeWalker",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.TreeWalker.prototype.firstChild",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.TreeWalker.prototype.firstChild",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.TreeWalker.prototype.lastChild",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.TreeWalker.prototype.lastChild",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.TreeWalker.prototype.nextNode",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.TreeWalker.prototype.nextNode",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.TreeWalker.prototype.nextSibling",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.TreeWalker.prototype.nextSibling",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.TreeWalker.prototype.parentNode",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.TreeWalker.prototype.parentNode",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.TreeWalker.prototype.previousNode",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.TreeWalker.prototype.previousNode",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.TreeWalker.prototype.previousSibling",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.TreeWalker.prototype.previousSibling",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.TypeError",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.TypeError",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.TypeError.prototype",
      "propertyName": "toString",
      "throughProperty": "toString",
      "prevProperty": null
    },
    {
      "path": "window.TypeError.prototype",
      "propertyName": "name",
      "throughProperty": "message",
      "prevProperty": "toString"
    },
    {
      "path": "window.UIEvent",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.UIEvent",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.UIEvent",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.UIEvent",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.UIEvent",
      "propertyName": "NONE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.UIEvent.prototype.initUIEvent",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.UIEvent.prototype.initUIEvent",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Uint16Array",
      "propertyName": "name",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.Uint16Array",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "prototype"
    },
    {
      "path": "window.Uint32Array",
      "propertyName": "name",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.Uint32Array",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "prototype"
    },
    {
      "path": "window.Uint8Array",
      "propertyName": "name",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.Uint8Array",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "prototype"
    },
    {
      "path": "window.Uint8ClampedArray",
      "propertyName": "name",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.Uint8ClampedArray",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "prototype"
    },
    {
      "path": "window.unescape",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.unescape",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.URIError",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.URIError",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.URIError.prototype",
      "propertyName": "toString",
      "throughProperty": "toString",
      "prevProperty": null
    },
    {
      "path": "window.URIError.prototype",
      "propertyName": "name",
      "throughProperty": "message",
      "prevProperty": "toString"
    },
    {
      "path": "window.URL",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.URL",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.URL",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.URL",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.URL",
      "propertyName": "createObjectURL",
      "throughProperty": "createObjectURL",
      "prevProperty": "length"
    },
    {
      "path": "window.URL",
      "propertyName": "revokeObjectURL",
      "throughProperty": "revokeObjectURL",
      "prevProperty": "createObjectURL"
    },
    {
      "path": "window.URL",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "revokeObjectURL"
    },
    {
      "path": "window.URL.createObjectURL",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.URL.createObjectURL",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.URL.prototype",
      "propertyName": "hash",
      "throughProperty": "hash",
      "prevProperty": "pathname"
    },
    {
      "path": "window.URL.prototype",
      "propertyName": "search",
      "throughProperty": "searchParams",
      "prevProperty": "hash"
    },
    {
      "path": "window.URL.prototype.toJSON",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.URL.prototype.toJSON",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.URL.prototype.toString",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.URL.prototype.toString",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.URL.revokeObjectURL",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.URL.revokeObjectURL",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.URLSearchParams",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.URLSearchParams",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.URLSearchParams",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.URLSearchParams",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.URLSearchParams",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.URLSearchParams.prototype",
      "propertyName": "toString",
      "throughProperty": "entries",
      "prevProperty": "sort"
    },
    {
      "path": "window.URLSearchParams.prototype",
      "propertyName": "keys",
      "throughProperty": "forEach",
      "prevProperty": "entries"
    },
    {
      "path": "window.URLSearchParams.prototype.append",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.URLSearchParams.prototype.append",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.URLSearchParams.prototype.delete",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.URLSearchParams.prototype.delete",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.URLSearchParams.prototype.entries",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.URLSearchParams.prototype.entries",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.URLSearchParams.prototype.forEach",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.URLSearchParams.prototype.forEach",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.URLSearchParams.prototype.get",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.URLSearchParams.prototype.get",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.URLSearchParams.prototype.getAll",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.URLSearchParams.prototype.getAll",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.URLSearchParams.prototype.has",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.URLSearchParams.prototype.has",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.URLSearchParams.prototype.keys",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.URLSearchParams.prototype.keys",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.URLSearchParams.prototype.set",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.URLSearchParams.prototype.set",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.URLSearchParams.prototype.sort",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.URLSearchParams.prototype.sort",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.URLSearchParams.prototype.toString",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.URLSearchParams.prototype.toString",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.URLSearchParams.prototype.values",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.URLSearchParams.prototype.values",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.ValidityState",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.ValidityState",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.ValidityState",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.ValidityState",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.ValidityState",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.ValidityState.prototype",
      "propertyName": "tooShort",
      "throughProperty": "tooShort",
      "prevProperty": "patternMismatch"
    },
    {
      "path": "window.ValidityState.prototype",
      "propertyName": "tooLong",
      "throughProperty": "tooLong",
      "prevProperty": "tooShort"
    },
    {
      "path": "window.VisualViewport",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.VisualViewport",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.VisualViewport",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.VisualViewport",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.VisualViewport",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.VTTCue",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.VTTCue",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.VTTCue",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.VTTCue",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.VTTCue",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.VTTCue.prototype.getCueAsHTML",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.VTTCue.prototype.getCueAsHTML",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WaveShaperNode",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.WaveShaperNode",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.WaveShaperNode",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.WaveShaperNode",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WaveShaperNode",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.WeakMap",
      "propertyName": "name",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.WeakMap",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "prototype"
    },
    {
      "path": "window.WeakMap.prototype",
      "propertyName": "has",
      "throughProperty": "has",
      "prevProperty": "get"
    },
    {
      "path": "window.WeakMap.prototype",
      "propertyName": "set",
      "throughProperty": "set",
      "prevProperty": "has"
    },
    {
      "path": "window.WeakMap.prototype.delete",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.WeakMap.prototype.delete",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WeakMap.prototype.get",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.WeakMap.prototype.get",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WeakMap.prototype.has",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.WeakMap.prototype.has",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WeakMap.prototype.set",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.WeakMap.prototype.set",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WeakSet",
      "propertyName": "name",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.WeakSet",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "prototype"
    },
    {
      "path": "window.WeakSet.prototype.add",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.WeakSet.prototype.add",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WeakSet.prototype.delete",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.WeakSet.prototype.delete",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WeakSet.prototype.has",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.WeakSet.prototype.has",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WebAssembly",
      "propertyName": "Module",
      "throughProperty": "Module",
      "prevProperty": "Memory"
    },
    {
      "path": "window.WebAssembly",
      "propertyName": "CompileError",
      "throughProperty": "CompileError",
      "prevProperty": null
    },
    {
      "path": "window.WebAssembly",
      "propertyName": "LinkError",
      "throughProperty": "LinkError",
      "prevProperty": "Instance"
    },
    {
      "path": "window.WebAssembly",
      "propertyName": "RuntimeError",
      "throughProperty": "RuntimeError",
      "prevProperty": "Module"
    },
    {
      "path": "window.WebAssembly",
      "propertyName": "Table",
      "throughProperty": "Table",
      "prevProperty": "RuntimeError"
    },
    {
      "path": "window.WebAssembly.CompileError",
      "propertyName": "name",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.WebAssembly.CompileError",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "prototype"
    },
    {
      "path": "window.WebAssembly.Instance",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.WebAssembly.Instance",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.WebAssembly.Instance",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.WebAssembly.Instance",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": "name"
    },
    {
      "path": "window.WebAssembly.Instance",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "prototype"
    },
    {
      "path": "window.WebAssembly.Instance",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.WebAssembly.LinkError",
      "propertyName": "name",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.WebAssembly.LinkError",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "prototype"
    },
    {
      "path": "window.WebAssembly.Memory",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.WebAssembly.Memory",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.WebAssembly.Memory",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.WebAssembly.Memory",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": "name"
    },
    {
      "path": "window.WebAssembly.Memory",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "prototype"
    },
    {
      "path": "window.WebAssembly.Memory",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.WebAssembly.Memory.prototype.grow",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.WebAssembly.Memory.prototype.grow",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.WebAssembly.Memory.prototype.grow",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.WebAssembly.Memory.prototype.grow",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": null
    },
    {
      "path": "window.WebAssembly.Memory.prototype.grow",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WebAssembly.Module",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.WebAssembly.Module",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.WebAssembly.Module",
      "propertyName": "customSections",
      "throughProperty": "customSections",
      "prevProperty": null
    },
    {
      "path": "window.WebAssembly.Module",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "prototype"
    },
    {
      "path": "window.WebAssembly.Module",
      "propertyName": "imports",
      "throughProperty": "exports",
      "prevProperty": "customSections"
    },
    {
      "path": "window.WebAssembly.Module",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": "exports"
    },
    {
      "path": "window.WebAssembly.Module",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.WebAssembly.Module.customSections",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.WebAssembly.Module.customSections",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.WebAssembly.Module.customSections",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.WebAssembly.Module.customSections",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": null
    },
    {
      "path": "window.WebAssembly.Module.customSections",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WebAssembly.Module.exports",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.WebAssembly.Module.exports",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.WebAssembly.Module.exports",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.WebAssembly.Module.exports",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": null
    },
    {
      "path": "window.WebAssembly.Module.exports",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WebAssembly.Module.imports",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.WebAssembly.Module.imports",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.WebAssembly.Module.imports",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.WebAssembly.Module.imports",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": null
    },
    {
      "path": "window.WebAssembly.Module.imports",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WebAssembly.RuntimeError",
      "propertyName": "name",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.WebAssembly.RuntimeError",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "prototype"
    },
    {
      "path": "window.WebAssembly.Table",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.WebAssembly.Table",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.WebAssembly.Table",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.WebAssembly.Table",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": "name"
    },
    {
      "path": "window.WebAssembly.Table",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "prototype"
    },
    {
      "path": "window.WebAssembly.Table",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.WebAssembly.Table.prototype.get",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.WebAssembly.Table.prototype.get",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.WebAssembly.Table.prototype.get",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.WebAssembly.Table.prototype.get",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": null
    },
    {
      "path": "window.WebAssembly.Table.prototype.get",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WebAssembly.Table.prototype.grow",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.WebAssembly.Table.prototype.grow",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.WebAssembly.Table.prototype.grow",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.WebAssembly.Table.prototype.grow",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": null
    },
    {
      "path": "window.WebAssembly.Table.prototype.grow",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WebAssembly.Table.prototype.set",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.WebAssembly.Table.prototype.set",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.WebAssembly.Table.prototype.set",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.WebAssembly.Table.prototype.set",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": null
    },
    {
      "path": "window.WebAssembly.Table.prototype.set",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WebGLActiveInfo",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.WebGLActiveInfo",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.WebGLActiveInfo",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.WebGLActiveInfo",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WebGLActiveInfo",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.WebGLBuffer",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.WebGLBuffer",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.WebGLBuffer",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.WebGLBuffer",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WebGLBuffer",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.WebGLContextEvent",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.WebGLContextEvent",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.WebGLContextEvent",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.WebGLContextEvent",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WebGLContextEvent",
      "propertyName": "NONE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.WebGLFramebuffer",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.WebGLFramebuffer",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.WebGLFramebuffer",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.WebGLFramebuffer",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WebGLFramebuffer",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.WebGLProgram",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.WebGLProgram",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.WebGLProgram",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.WebGLProgram",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WebGLProgram",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.WebGLQuery",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.WebGLQuery",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.WebGLQuery",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.WebGLQuery",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WebGLQuery",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.WebGLRenderbuffer",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.WebGLRenderbuffer",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.WebGLRenderbuffer",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.WebGLRenderbuffer",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WebGLRenderbuffer",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.WebGLRenderingContext",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.WebGLRenderingContext",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.WebGLRenderingContext",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.WebGLRenderingContext",
      "propertyName": "STENCIL_INDEX8",
      "throughProperty": "new()",
      "prevProperty": "STENCIL_INDEX"
    },
    {
      "path": "window.WebGLRenderingContext",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WebGLRenderingContext",
      "propertyName": "DEPTH_BUFFER_BIT",
      "throughProperty": "DEPTH_COMPONENT16",
      "prevProperty": "length"
    },
    {
      "path": "window.WebGLRenderingContext.prototype",
      "propertyName": "STENCIL_INDEX8",
      "throughProperty": "BROWSER_DEFAULT_WEBGL",
      "prevProperty": "STENCIL_INDEX"
    },
    {
      "path": "window.WebGLRenderingContext.prototype",
      "propertyName": "canvas",
      "throughProperty": "drawingBufferHeight",
      "prevProperty": null
    },
    {
      "path": "window.WebGLRenderingContext.prototype",
      "propertyName": "renderbufferStorage",
      "throughProperty": "texParameteri",
      "prevProperty": "releaseShaderCompiler"
    },
    {
      "path": "window.WebGLRenderingContext.prototype",
      "propertyName": "DEPTH_BUFFER_BIT",
      "throughProperty": "DEPTH_COMPONENT16",
      "prevProperty": "viewport"
    },
    {
      "path": "window.WebGLRenderingContext.prototype",
      "propertyName": "compressedTexImage2D",
      "throughProperty": "compressedTexImage2D",
      "prevProperty": "texSubImage2D"
    },
    {
      "path": "window.WebGLRenderingContext.prototype",
      "propertyName": "activeTexture",
      "throughProperty": "compileShader",
      "prevProperty": "compressedTexImage2D"
    },
    {
      "path": "window.WebGLRenderingContext.prototype",
      "propertyName": "compressedTexSubImage2D",
      "throughProperty": "getError",
      "prevProperty": "compileShader"
    },
    {
      "path": "window.WebGLRenderingContext.prototype",
      "propertyName": "getSupportedExtensions",
      "throughProperty": "getSupportedExtensions",
      "prevProperty": "getError"
    },
    {
      "path": "window.WebGLRenderingContext.prototype",
      "propertyName": "getExtension",
      "throughProperty": "getShaderSource",
      "prevProperty": "getSupportedExtensions"
    },
    {
      "path": "window.WebGLRenderingContext.prototype",
      "propertyName": "getTexParameter",
      "throughProperty": "readPixels",
      "prevProperty": "getShaderSource"
    },
    {
      "path": "window.WebGLRenderingContext.prototype",
      "propertyName": "texImage2D",
      "throughProperty": "texSubImage2D",
      "prevProperty": "drawingBufferHeight"
    },
    {
      "path": "window.WebGLRenderingContext.prototype",
      "propertyName": "uniform1f",
      "throughProperty": "uniform1f",
      "prevProperty": "texParameteri"
    },
    {
      "path": "window.WebGLRenderingContext.prototype",
      "propertyName": "uniform1fv",
      "throughProperty": "uniform1fv",
      "prevProperty": "uniform4i"
    },
    {
      "path": "window.WebGLRenderingContext.prototype",
      "propertyName": "uniform1i",
      "throughProperty": "uniform1i",
      "prevProperty": "uniform4f"
    },
    {
      "path": "window.WebGLRenderingContext.prototype",
      "propertyName": "uniform1iv",
      "throughProperty": "uniform1iv",
      "prevProperty": "uniform4fv"
    },
    {
      "path": "window.WebGLRenderingContext.prototype",
      "propertyName": "uniform2f",
      "throughProperty": "uniform2f",
      "prevProperty": "uniform1f"
    },
    {
      "path": "window.WebGLRenderingContext.prototype",
      "propertyName": "uniform2fv",
      "throughProperty": "uniform2fv",
      "prevProperty": "uniform1fv"
    },
    {
      "path": "window.WebGLRenderingContext.prototype",
      "propertyName": "uniform2i",
      "throughProperty": "uniform2i",
      "prevProperty": "uniform1i"
    },
    {
      "path": "window.WebGLRenderingContext.prototype",
      "propertyName": "uniform2iv",
      "throughProperty": "uniform2iv",
      "prevProperty": "uniform1iv"
    },
    {
      "path": "window.WebGLRenderingContext.prototype",
      "propertyName": "uniform3f",
      "throughProperty": "uniform3f",
      "prevProperty": "uniform2f"
    },
    {
      "path": "window.WebGLRenderingContext.prototype",
      "propertyName": "uniform3fv",
      "throughProperty": "uniform3fv",
      "prevProperty": "uniform2fv"
    },
    {
      "path": "window.WebGLRenderingContext.prototype",
      "propertyName": "uniform3i",
      "throughProperty": "uniform3i",
      "prevProperty": "uniform2i"
    },
    {
      "path": "window.WebGLRenderingContext.prototype",
      "propertyName": "uniform3iv",
      "throughProperty": "uniform3iv",
      "prevProperty": "uniform2iv"
    },
    {
      "path": "window.WebGLRenderingContext.prototype",
      "propertyName": "uniform4f",
      "throughProperty": "uniform4f",
      "prevProperty": "uniform3f"
    },
    {
      "path": "window.WebGLRenderingContext.prototype",
      "propertyName": "uniform4fv",
      "throughProperty": "uniform4fv",
      "prevProperty": "uniform3fv"
    },
    {
      "path": "window.WebGLRenderingContext.prototype",
      "propertyName": "uniform4i",
      "throughProperty": "uniform4i",
      "prevProperty": "uniform3i"
    },
    {
      "path": "window.WebGLRenderingContext.prototype",
      "propertyName": "uniform4iv",
      "throughProperty": "vertexAttrib1f",
      "prevProperty": "uniform3iv"
    },
    {
      "path": "window.WebGLRenderingContext.prototype",
      "propertyName": "vertexAttrib4f",
      "throughProperty": "vertexAttrib4f",
      "prevProperty": "vertexAttrib3f"
    },
    {
      "path": "window.WebGLRenderingContext.prototype",
      "propertyName": "vertexAttrib1fv",
      "throughProperty": "vertexAttrib1fv",
      "prevProperty": "vertexAttrib4f"
    },
    {
      "path": "window.WebGLRenderingContext.prototype",
      "propertyName": "vertexAttrib2f",
      "throughProperty": "vertexAttrib2f",
      "prevProperty": "vertexAttrib1f"
    },
    {
      "path": "window.WebGLRenderingContext.prototype",
      "propertyName": "vertexAttrib2fv",
      "throughProperty": "vertexAttrib2fv",
      "prevProperty": "vertexAttrib1fv"
    },
    {
      "path": "window.WebGLRenderingContext.prototype",
      "propertyName": "vertexAttrib3f",
      "throughProperty": "vertexAttrib3f",
      "prevProperty": "vertexAttrib2f"
    },
    {
      "path": "window.WebGLRenderingContext.prototype",
      "propertyName": "vertexAttrib3fv",
      "throughProperty": "vertexAttrib3fv",
      "prevProperty": "vertexAttrib2fv"
    },
    {
      "path": "window.WebGLRenderingContext.prototype",
      "propertyName": "vertexAttrib4fv",
      "throughProperty": "viewport",
      "prevProperty": "vertexAttrib3fv"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.activeTexture",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.WebGLRenderingContext.prototype.activeTexture",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.attachShader",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.WebGLRenderingContext.prototype.attachShader",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.bindAttribLocation",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.WebGLRenderingContext.prototype.bindAttribLocation",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.bindBuffer",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.WebGLRenderingContext.prototype.bindBuffer",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.bindFramebuffer",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.WebGLRenderingContext.prototype.bindFramebuffer",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.bindRenderbuffer",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.WebGLRenderingContext.prototype.bindRenderbuffer",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.bindTexture",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.WebGLRenderingContext.prototype.bindTexture",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.blendColor",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.WebGLRenderingContext.prototype.blendColor",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.blendEquation",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.WebGLRenderingContext.prototype.blendEquation",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.blendEquationSeparate",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.WebGLRenderingContext.prototype.blendEquationSeparate",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.blendFunc",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.WebGLRenderingContext.prototype.blendFunc",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.blendFuncSeparate",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.WebGLRenderingContext.prototype.blendFuncSeparate",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.bufferData",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.WebGLRenderingContext.prototype.bufferData",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.bufferSubData",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.WebGLRenderingContext.prototype.bufferSubData",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.checkFramebufferStatus",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.WebGLRenderingContext.prototype.checkFramebufferStatus",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.clear",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.WebGLRenderingContext.prototype.clear",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.clearColor",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.WebGLRenderingContext.prototype.clearColor",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.clearDepth",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.WebGLRenderingContext.prototype.clearDepth",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.clearStencil",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.WebGLRenderingContext.prototype.clearStencil",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.colorMask",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.WebGLRenderingContext.prototype.colorMask",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.compileShader",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.WebGLRenderingContext.prototype.compileShader",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.compressedTexImage2D",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.WebGLRenderingContext.prototype.compressedTexImage2D",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.compressedTexSubImage2D",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.WebGLRenderingContext.prototype.compressedTexSubImage2D",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.copyTexImage2D",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.WebGLRenderingContext.prototype.copyTexImage2D",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.copyTexSubImage2D",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.WebGLRenderingContext.prototype.copyTexSubImage2D",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.createBuffer",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.WebGLRenderingContext.prototype.createBuffer",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.createFramebuffer",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.WebGLRenderingContext.prototype.createFramebuffer",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.createProgram",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.WebGLRenderingContext.prototype.createProgram",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.createRenderbuffer",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.WebGLRenderingContext.prototype.createRenderbuffer",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.createShader",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.WebGLRenderingContext.prototype.createShader",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.createTexture",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.WebGLRenderingContext.prototype.createTexture",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.cullFace",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.WebGLRenderingContext.prototype.cullFace",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.deleteBuffer",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.WebGLRenderingContext.prototype.deleteBuffer",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.deleteFramebuffer",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.WebGLRenderingContext.prototype.deleteFramebuffer",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.deleteProgram",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.WebGLRenderingContext.prototype.deleteProgram",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.deleteRenderbuffer",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.WebGLRenderingContext.prototype.deleteRenderbuffer",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.deleteShader",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.WebGLRenderingContext.prototype.deleteShader",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.deleteTexture",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.WebGLRenderingContext.prototype.deleteTexture",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.depthFunc",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.WebGLRenderingContext.prototype.depthFunc",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.depthMask",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.WebGLRenderingContext.prototype.depthMask",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.depthRange",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.WebGLRenderingContext.prototype.depthRange",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.detachShader",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.WebGLRenderingContext.prototype.detachShader",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.disable",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.WebGLRenderingContext.prototype.disable",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.disableVertexAttribArray",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.WebGLRenderingContext.prototype.disableVertexAttribArray",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.drawArrays",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.WebGLRenderingContext.prototype.drawArrays",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.drawElements",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.WebGLRenderingContext.prototype.drawElements",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.enable",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.WebGLRenderingContext.prototype.enable",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.enableVertexAttribArray",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.WebGLRenderingContext.prototype.enableVertexAttribArray",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.finish",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.WebGLRenderingContext.prototype.finish",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.flush",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.WebGLRenderingContext.prototype.flush",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.framebufferRenderbuffer",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.WebGLRenderingContext.prototype.framebufferRenderbuffer",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.framebufferTexture2D",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.WebGLRenderingContext.prototype.framebufferTexture2D",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.frontFace",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.WebGLRenderingContext.prototype.frontFace",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.generateMipmap",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.WebGLRenderingContext.prototype.generateMipmap",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.getActiveAttrib",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.WebGLRenderingContext.prototype.getActiveAttrib",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.getActiveUniform",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.WebGLRenderingContext.prototype.getActiveUniform",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.getAttachedShaders",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.WebGLRenderingContext.prototype.getAttachedShaders",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.getAttribLocation",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.WebGLRenderingContext.prototype.getAttribLocation",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.getBufferParameter",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.WebGLRenderingContext.prototype.getBufferParameter",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.getContextAttributes",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.WebGLRenderingContext.prototype.getContextAttributes",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.getError",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.WebGLRenderingContext.prototype.getError",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.getExtension",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.WebGLRenderingContext.prototype.getExtension",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.getFramebufferAttachmentParameter",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.WebGLRenderingContext.prototype.getFramebufferAttachmentParameter",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.getParameter",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.WebGLRenderingContext.prototype.getParameter",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.getProgramInfoLog",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.WebGLRenderingContext.prototype.getProgramInfoLog",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.getProgramParameter",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.WebGLRenderingContext.prototype.getProgramParameter",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.getRenderbufferParameter",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.WebGLRenderingContext.prototype.getRenderbufferParameter",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.getShaderInfoLog",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.WebGLRenderingContext.prototype.getShaderInfoLog",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.getShaderParameter",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.WebGLRenderingContext.prototype.getShaderParameter",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.getShaderPrecisionFormat",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.WebGLRenderingContext.prototype.getShaderPrecisionFormat",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.getShaderSource",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.WebGLRenderingContext.prototype.getShaderSource",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.getSupportedExtensions",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.WebGLRenderingContext.prototype.getSupportedExtensions",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.getTexParameter",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.WebGLRenderingContext.prototype.getTexParameter",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.getUniform",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.WebGLRenderingContext.prototype.getUniform",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.getUniformLocation",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.WebGLRenderingContext.prototype.getUniformLocation",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.getVertexAttrib",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.WebGLRenderingContext.prototype.getVertexAttrib",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.getVertexAttribOffset",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.WebGLRenderingContext.prototype.getVertexAttribOffset",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.hint",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.WebGLRenderingContext.prototype.hint",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.isBuffer",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.WebGLRenderingContext.prototype.isBuffer",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.isContextLost",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.WebGLRenderingContext.prototype.isContextLost",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.isEnabled",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.WebGLRenderingContext.prototype.isEnabled",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.isFramebuffer",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.WebGLRenderingContext.prototype.isFramebuffer",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.isProgram",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.WebGLRenderingContext.prototype.isProgram",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.isRenderbuffer",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.WebGLRenderingContext.prototype.isRenderbuffer",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.isShader",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.WebGLRenderingContext.prototype.isShader",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.isTexture",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.WebGLRenderingContext.prototype.isTexture",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.lineWidth",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.WebGLRenderingContext.prototype.lineWidth",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.linkProgram",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.WebGLRenderingContext.prototype.linkProgram",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.pixelStorei",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.WebGLRenderingContext.prototype.pixelStorei",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.polygonOffset",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.WebGLRenderingContext.prototype.polygonOffset",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.readPixels",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.WebGLRenderingContext.prototype.readPixels",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.renderbufferStorage",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.WebGLRenderingContext.prototype.renderbufferStorage",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.sampleCoverage",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.WebGLRenderingContext.prototype.sampleCoverage",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.scissor",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.WebGLRenderingContext.prototype.scissor",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.shaderSource",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.WebGLRenderingContext.prototype.shaderSource",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.stencilFunc",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.WebGLRenderingContext.prototype.stencilFunc",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.stencilFuncSeparate",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.WebGLRenderingContext.prototype.stencilFuncSeparate",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.stencilMask",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.WebGLRenderingContext.prototype.stencilMask",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.stencilMaskSeparate",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.WebGLRenderingContext.prototype.stencilMaskSeparate",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.stencilOp",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.WebGLRenderingContext.prototype.stencilOp",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.stencilOpSeparate",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.WebGLRenderingContext.prototype.stencilOpSeparate",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.texImage2D",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.WebGLRenderingContext.prototype.texImage2D",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.texParameterf",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.WebGLRenderingContext.prototype.texParameterf",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.texParameteri",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.WebGLRenderingContext.prototype.texParameteri",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.texSubImage2D",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.WebGLRenderingContext.prototype.texSubImage2D",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.uniform1f",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.WebGLRenderingContext.prototype.uniform1f",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.uniform1fv",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.WebGLRenderingContext.prototype.uniform1fv",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.uniform1i",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.WebGLRenderingContext.prototype.uniform1i",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.uniform1iv",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.WebGLRenderingContext.prototype.uniform1iv",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.uniform2f",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.WebGLRenderingContext.prototype.uniform2f",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.uniform2fv",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.WebGLRenderingContext.prototype.uniform2fv",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.uniform2i",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.WebGLRenderingContext.prototype.uniform2i",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.uniform2iv",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.WebGLRenderingContext.prototype.uniform2iv",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.uniform3f",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.WebGLRenderingContext.prototype.uniform3f",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.uniform3fv",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.WebGLRenderingContext.prototype.uniform3fv",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.uniform3i",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.WebGLRenderingContext.prototype.uniform3i",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.uniform3iv",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.WebGLRenderingContext.prototype.uniform3iv",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.uniform4f",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.WebGLRenderingContext.prototype.uniform4f",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.uniform4fv",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.WebGLRenderingContext.prototype.uniform4fv",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.uniform4i",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.WebGLRenderingContext.prototype.uniform4i",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.uniform4iv",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.WebGLRenderingContext.prototype.uniform4iv",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.uniformMatrix2fv",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.WebGLRenderingContext.prototype.uniformMatrix2fv",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.uniformMatrix3fv",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.WebGLRenderingContext.prototype.uniformMatrix3fv",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.uniformMatrix4fv",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.WebGLRenderingContext.prototype.uniformMatrix4fv",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.useProgram",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.WebGLRenderingContext.prototype.useProgram",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.validateProgram",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.WebGLRenderingContext.prototype.validateProgram",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.vertexAttrib1f",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.WebGLRenderingContext.prototype.vertexAttrib1f",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.vertexAttrib1fv",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.WebGLRenderingContext.prototype.vertexAttrib1fv",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.vertexAttrib2f",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.WebGLRenderingContext.prototype.vertexAttrib2f",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.vertexAttrib2fv",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.WebGLRenderingContext.prototype.vertexAttrib2fv",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.vertexAttrib3f",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.WebGLRenderingContext.prototype.vertexAttrib3f",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.vertexAttrib3fv",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.WebGLRenderingContext.prototype.vertexAttrib3fv",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.vertexAttrib4f",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.WebGLRenderingContext.prototype.vertexAttrib4f",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.vertexAttrib4fv",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.WebGLRenderingContext.prototype.vertexAttrib4fv",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.vertexAttribPointer",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.WebGLRenderingContext.prototype.vertexAttribPointer",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.viewport",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.WebGLRenderingContext.prototype.viewport",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WebGLSampler",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.WebGLSampler",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.WebGLSampler",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.WebGLSampler",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WebGLSampler",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.WebGLShader",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.WebGLShader",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.WebGLShader",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.WebGLShader",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WebGLShader",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.WebGLShaderPrecisionFormat",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.WebGLShaderPrecisionFormat",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.WebGLShaderPrecisionFormat",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.WebGLShaderPrecisionFormat",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WebGLShaderPrecisionFormat",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.WebGLSync",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.WebGLSync",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.WebGLSync",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.WebGLSync",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WebGLSync",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.WebGLTexture",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.WebGLTexture",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.WebGLTexture",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.WebGLTexture",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WebGLTexture",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.WebGLTransformFeedback",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.WebGLTransformFeedback",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.WebGLTransformFeedback",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.WebGLTransformFeedback",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WebGLTransformFeedback",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.WebGLUniformLocation",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.WebGLUniformLocation",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.WebGLUniformLocation",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.WebGLUniformLocation",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WebGLUniformLocation",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.webkitCancelAnimationFrame",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.webkitCancelAnimationFrame",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.webkitRequestAnimationFrame",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.webkitRequestAnimationFrame",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WebSocket",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.WebSocket",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.WebSocket",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.WebSocket",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WebSocket",
      "propertyName": "CONNECTING",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.WebSocket.prototype",
      "propertyName": "CONNECTING",
      "throughProperty": "CLOSED",
      "prevProperty": "close"
    },
    {
      "path": "window.WebSocket.prototype",
      "propertyName": "url",
      "throughProperty": "onopen",
      "prevProperty": "URL"
    },
    {
      "path": "window.WebSocket.prototype",
      "propertyName": "onerror",
      "throughProperty": "onclose",
      "prevProperty": "onmessage"
    },
    {
      "path": "window.WebSocket.prototype",
      "propertyName": "protocol",
      "throughProperty": "protocol",
      "prevProperty": "onclose"
    },
    {
      "path": "window.WebSocket.prototype",
      "propertyName": "extensions",
      "throughProperty": "extensions",
      "prevProperty": "protocol"
    },
    {
      "path": "window.WebSocket.prototype",
      "propertyName": "onmessage",
      "throughProperty": "onmessage",
      "prevProperty": "onopen"
    },
    {
      "path": "window.WebSocket.prototype",
      "propertyName": "binaryType",
      "throughProperty": "binaryType",
      "prevProperty": "extensions"
    },
    {
      "path": "window.WebSocket.prototype",
      "propertyName": "send",
      "throughProperty": "send",
      "prevProperty": "binaryType"
    },
    {
      "path": "window.WebSocket.prototype",
      "propertyName": "close",
      "throughProperty": "close",
      "prevProperty": "send"
    },
    {
      "path": "window.WebSocket.prototype.close",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.WebSocket.prototype.close",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WebSocket.prototype.send",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.WebSocket.prototype.send",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WheelEvent",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.WheelEvent",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.WheelEvent",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.WheelEvent",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.WheelEvent",
      "propertyName": "DOM_DELTA_PIXEL",
      "throughProperty": "DOM_DELTA_PAGE",
      "prevProperty": "length"
    },
    {
      "path": "window.WheelEvent.prototype",
      "propertyName": "DOM_DELTA_PIXEL",
      "throughProperty": "DOM_DELTA_PAGE",
      "prevProperty": "initWebKitWheelEvent"
    },
    {
      "path": "window.WheelEvent.prototype",
      "propertyName": "deltaX",
      "throughProperty": "BUBBLING_PHASE",
      "prevProperty": null
    },
    {
      "path": "window.Window",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.Window",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.Window",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.Window",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Window",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.Worker",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.Worker",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.Worker",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.Worker",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Worker",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.Worker.prototype.postMessage",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Worker.prototype.postMessage",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.Worker.prototype.terminate",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.Worker.prototype.terminate",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.XMLDocument",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.XMLDocument",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.XMLDocument",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.XMLDocument",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.XMLDocument",
      "propertyName": "ELEMENT_NODE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.XMLHttpRequest",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.XMLHttpRequest",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.XMLHttpRequest",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.XMLHttpRequest",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.XMLHttpRequest",
      "propertyName": "UNSENT",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.XMLHttpRequest.prototype",
      "propertyName": "onreadystatechange",
      "throughProperty": "overrideMimeType",
      "prevProperty": null
    },
    {
      "path": "window.XMLHttpRequest.prototype",
      "propertyName": "UNSENT",
      "throughProperty": "DONE",
      "prevProperty": "overrideMimeType"
    },
    {
      "path": "window.XMLHttpRequest.prototype.abort",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.XMLHttpRequest.prototype.abort",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.XMLHttpRequest.prototype.getAllResponseHeaders",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.XMLHttpRequest.prototype.getAllResponseHeaders",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.XMLHttpRequest.prototype.getResponseHeader",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.XMLHttpRequest.prototype.getResponseHeader",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.XMLHttpRequest.prototype.open",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.XMLHttpRequest.prototype.open",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.XMLHttpRequest.prototype.overrideMimeType",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.XMLHttpRequest.prototype.overrideMimeType",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.XMLHttpRequest.prototype.send",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.XMLHttpRequest.prototype.send",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.XMLHttpRequest.prototype.setRequestHeader",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.XMLHttpRequest.prototype.setRequestHeader",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.XMLHttpRequestEventTarget",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.XMLHttpRequestEventTarget",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.XMLHttpRequestEventTarget",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.XMLHttpRequestEventTarget",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.XMLHttpRequestEventTarget",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.XMLHttpRequestUpload",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.XMLHttpRequestUpload",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.XMLHttpRequestUpload",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.XMLHttpRequestUpload",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.XMLHttpRequestUpload",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.XMLSerializer",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.XMLSerializer",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.XMLSerializer",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.XMLSerializer",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.XMLSerializer",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.XMLSerializer.prototype.serializeToString",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.XMLSerializer.prototype.serializeToString",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.XPathEvaluator",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.XPathEvaluator",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.XPathEvaluator",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.XPathEvaluator",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.XPathEvaluator",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.XPathEvaluator.prototype.createExpression",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.XPathEvaluator.prototype.createExpression",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.XPathEvaluator.prototype.createNSResolver",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.XPathEvaluator.prototype.createNSResolver",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.XPathEvaluator.prototype.evaluate",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.XPathEvaluator.prototype.evaluate",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.XPathExpression",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.XPathExpression",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.XPathExpression",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.XPathExpression",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.XPathExpression",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.XPathExpression.prototype.evaluate",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.XPathExpression.prototype.evaluate",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.XPathResult",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.XPathResult",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.XPathResult",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.XPathResult",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.XPathResult",
      "propertyName": "ANY_TYPE",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.XPathResult.prototype",
      "propertyName": "resultType",
      "throughProperty": "snapshotItem",
      "prevProperty": null
    },
    {
      "path": "window.XPathResult.prototype",
      "propertyName": "ANY_TYPE",
      "throughProperty": "FIRST_ORDERED_NODE_TYPE",
      "prevProperty": "snapshotItem"
    },
    {
      "path": "window.XPathResult.prototype.iterateNext",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.XPathResult.prototype.iterateNext",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.XPathResult.prototype.snapshotItem",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.XPathResult.prototype.snapshotItem",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.XSLTProcessor",
      "propertyName": "arguments",
      "throughProperty": "arguments",
      "prevProperty": null
    },
    {
      "path": "window.XSLTProcessor",
      "propertyName": "caller",
      "throughProperty": "caller",
      "prevProperty": null
    },
    {
      "path": "window.XSLTProcessor",
      "propertyName": "prototype",
      "throughProperty": "prototype",
      "prevProperty": null
    },
    {
      "path": "window.XSLTProcessor",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.XSLTProcessor",
      "propertyName": "new()",
      "throughProperty": "new()",
      "prevProperty": "length"
    },
    {
      "path": "window.XSLTProcessor.prototype.clearParameters",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.XSLTProcessor.prototype.clearParameters",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.XSLTProcessor.prototype.getParameter",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.XSLTProcessor.prototype.getParameter",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.XSLTProcessor.prototype.importStylesheet",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.XSLTProcessor.prototype.importStylesheet",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.XSLTProcessor.prototype.removeParameter",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.XSLTProcessor.prototype.removeParameter",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.XSLTProcessor.prototype.reset",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.XSLTProcessor.prototype.reset",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.XSLTProcessor.prototype.setParameter",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.XSLTProcessor.prototype.setParameter",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.XSLTProcessor.prototype.transformToDocument",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.XSLTProcessor.prototype.transformToDocument",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    },
    {
      "path": "window.XSLTProcessor.prototype.transformToFragment",
      "propertyName": "name",
      "throughProperty": "name",
      "prevProperty": null
    },
    {
      "path": "window.XSLTProcessor.prototype.transformToFragment",
      "propertyName": "length",
      "throughProperty": "length",
      "prevProperty": "name"
    }
  ],
  "changes": [
    {
      "path": "window._protos",
      "propertyName": "1",
      "property": "EventTarget.prototype"
    },
    {
      "path": "window.document",
      "propertyName": "location",
      "property": {
        "_protos": ["Location.prototype", "Object.prototype"],
        "href": {
          "_type": "string",
          "_flags": "e",
          "_value": "<url>",
          "_get": "function href() {\n    [native code]\n}",
          "_set": "function href() {\n    [native code]\n}",
          "_getToStringToString": "function toString() {\n    [native code]\n}",
          "_setToStringToString": "function toString() {\n    [native code]\n}"
        },
        "protocol": {
          "_type": "string",
          "_flags": "e",
          "_value": "https:",
          "_get": "function protocol() {\n    [native code]\n}",
          "_set": "function protocol() {\n    [native code]\n}",
          "_getToStringToString": "function toString() {\n    [native code]\n}",
          "_setToStringToString": "function toString() {\n    [native code]\n}"
        },
        "host": {
          "_type": "string",
          "_flags": "e",
          "_value": "<host>",
          "_get": "function host() {\n    [native code]\n}",
          "_set": "function host() {\n    [native code]\n}",
          "_getToStringToString": "function toString() {\n    [native code]\n}",
          "_setToStringToString": "function toString() {\n    [native code]\n}"
        },
        "hostname": {
          "_type": "string",
          "_flags": "e",
          "_value": "<host>",
          "_get": "function hostname() {\n    [native code]\n}",
          "_set": "function hostname() {\n    [native code]\n}",
          "_getToStringToString": "function toString() {\n    [native code]\n}",
          "_setToStringToString": "function toString() {\n    [native code]\n}"
        },
        "port": {
          "_type": "string",
          "_flags": "e",
          "_value": "",
          "_get": "function port() {\n    [native code]\n}",
          "_set": "function port() {\n    [native code]\n}",
          "_getToStringToString": "function toString() {\n    [native code]\n}",
          "_setToStringToString": "function toString() {\n    [native code]\n}"
        },
        "pathname": {
          "_type": "string",
          "_flags": "e",
          "_value": "/results-page",
          "_get": "function pathname() {\n    [native code]\n}",
          "_set": "function pathname() {\n    [native code]\n}",
          "_getToStringToString": "function toString() {\n    [native code]\n}",
          "_setToStringToString": "function toString() {\n    [native code]\n}"
        },
        "search": {
          "_type": "string",
          "_flags": "e",
          "_value": "?sessionid=6",
          "_get": "function search() {\n    [native code]\n}",
          "_set": "function search() {\n    [native code]\n}",
          "_getToStringToString": "function toString() {\n    [native code]\n}",
          "_setToStringToString": "function toString() {\n    [native code]\n}"
        },
        "hash": {
          "_type": "string",
          "_flags": "e",
          "_value": "",
          "_get": "function hash() {\n    [native code]\n}",
          "_set": "function hash() {\n    [native code]\n}",
          "_getToStringToString": "function toString() {\n    [native code]\n}",
          "_setToStringToString": "function toString() {\n    [native code]\n}"
        },
        "origin": {
          "_type": "string",
          "_flags": "e",
          "_value": "https://<host>",
          "_get": "function origin() {\n    [native code]\n}",
          "_getToStringToString": "function toString() {\n    [native code]\n}"
        },
        "ancestorOrigins": {
          "_protos": ["DOMStringList.prototype", "Object.prototype"],
          "length": {
            "_type": "number",
            "_value": 0
          },
          "_type": "object",
          "_flags": "e",
          "_get": "function ancestorOrigins() {\n    [native code]\n}",
          "_getToStringToString": "function toString() {\n    [native code]\n}"
        },
        "assign": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "assign"
          },
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "_function": "function assign() {\n    [native code]\n}",
          "_flags": "e"
        },
        "replace": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "replace"
          },
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "_function": "function replace() {\n    [native code]\n}",
          "_flags": "e"
        },
        "reload": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "reload"
          },
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "_function": "function reload() {\n    [native code]\n}",
          "_flags": "e"
        },
        "toString": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "toString"
          },
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "_function": "function toString() {\n    [native code]\n}",
          "_invocation": "<url>",
          "_flags": "e"
        },
        "valueOf": "REF: window.Object.prototype.valueOf",
        "Symbol(Symbol.toPrimitive)": {
          "_flags": ""
        },
        "_type": "object",
        "_flags": "e",
        "_get": "function location() {\n    [native code]\n}",
        "_set": "function location() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      }
    },
    {
      "path": "window.document.readyState",
      "propertyName": "_value",
      "property": "complete"
    },
    {
      "path": "window.document",
      "propertyName": "_value",
      "property": "REF: window.document.documentElement.ownerDocument"
    },
    {
      "path": "window.document",
      "propertyName": "_get",
      "property": "function document() {\n    [native code]\n}"
    },
    {
      "path": "window.document",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.name",
      "propertyName": "_get",
      "property": "function name() {\n    [native code]\n}"
    },
    {
      "path": "window.name",
      "propertyName": "_set",
      "property": "function name() {\n    [native code]\n}"
    },
    {
      "path": "window.name",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.name",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window",
      "propertyName": "location",
      "property": "REF: window.document.location"
    },
    {
      "path": "window.history",
      "propertyName": "_get",
      "property": "function history() {\n    [native code]\n}"
    },
    {
      "path": "window.history",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.locationbar",
      "propertyName": "_get",
      "property": "function locationbar() {\n    [native code]\n}"
    },
    {
      "path": "window.locationbar",
      "propertyName": "_set",
      "property": "function locationbar() {\n    [native code]\n}"
    },
    {
      "path": "window.locationbar",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.locationbar",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.menubar",
      "propertyName": "_get",
      "property": "function menubar() {\n    [native code]\n}"
    },
    {
      "path": "window.menubar",
      "propertyName": "_set",
      "property": "function menubar() {\n    [native code]\n}"
    },
    {
      "path": "window.menubar",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.menubar",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.personalbar",
      "propertyName": "_get",
      "property": "function personalbar() {\n    [native code]\n}"
    },
    {
      "path": "window.personalbar",
      "propertyName": "_set",
      "property": "function personalbar() {\n    [native code]\n}"
    },
    {
      "path": "window.personalbar",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.personalbar",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.scrollbars",
      "propertyName": "_get",
      "property": "function scrollbars() {\n    [native code]\n}"
    },
    {
      "path": "window.scrollbars",
      "propertyName": "_set",
      "property": "function scrollbars() {\n    [native code]\n}"
    },
    {
      "path": "window.scrollbars",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.scrollbars",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.statusbar",
      "propertyName": "_get",
      "property": "function statusbar() {\n    [native code]\n}"
    },
    {
      "path": "window.statusbar",
      "propertyName": "_set",
      "property": "function statusbar() {\n    [native code]\n}"
    },
    {
      "path": "window.statusbar",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.statusbar",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.toolbar",
      "propertyName": "_get",
      "property": "function toolbar() {\n    [native code]\n}"
    },
    {
      "path": "window.toolbar",
      "propertyName": "_set",
      "property": "function toolbar() {\n    [native code]\n}"
    },
    {
      "path": "window.toolbar",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.toolbar",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.status",
      "propertyName": "_get",
      "property": "function status() {\n    [native code]\n}"
    },
    {
      "path": "window.status",
      "propertyName": "_set",
      "property": "function status() {\n    [native code]\n}"
    },
    {
      "path": "window.status",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.status",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.length",
      "propertyName": "_flags",
      "property": "ce"
    },
    {
      "path": "window.opener",
      "propertyName": "_flags",
      "property": "ce"
    },
    {
      "path": "window.frameElement",
      "propertyName": "_get",
      "property": "function frameElement() {\n    [native code]\n}"
    },
    {
      "path": "window.frameElement",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.navigator.geolocation._protos",
      "propertyName": "0",
      "property": "Object.prototype"
    },
    {
      "path": "window.navigator.vendor",
      "propertyName": "_value",
      "property": "Apple Computer, Inc."
    },
    {
      "path": "window.navigator",
      "propertyName": "_get",
      "property": "function navigator() {\n    [native code]\n}"
    },
    {
      "path": "window.navigator",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.applicationCache",
      "propertyName": "_get",
      "property": "function applicationCache() {\n    [native code]\n}"
    },
    {
      "path": "window.applicationCache",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.sessionStorage",
      "propertyName": "_get",
      "property": "function sessionStorage() {\n    [native code]\n}"
    },
    {
      "path": "window.sessionStorage",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.localStorage",
      "propertyName": "_get",
      "property": "function localStorage() {\n    [native code]\n}"
    },
    {
      "path": "window.localStorage",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.screen",
      "propertyName": "_get",
      "property": "function screen() {\n    [native code]\n}"
    },
    {
      "path": "window.screen",
      "propertyName": "_set",
      "property": "function screen() {\n    [native code]\n}"
    },
    {
      "path": "window.screen",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.screen",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.innerHeight",
      "propertyName": "_get",
      "property": "function innerHeight() {\n    [native code]\n}"
    },
    {
      "path": "window.innerHeight",
      "propertyName": "_set",
      "property": "function innerHeight() {\n    [native code]\n}"
    },
    {
      "path": "window.innerHeight",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.innerHeight",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.innerWidth",
      "propertyName": "_get",
      "property": "function innerWidth() {\n    [native code]\n}"
    },
    {
      "path": "window.innerWidth",
      "propertyName": "_set",
      "property": "function innerWidth() {\n    [native code]\n}"
    },
    {
      "path": "window.innerWidth",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.innerWidth",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.scrollX",
      "propertyName": "_get",
      "property": "function scrollX() {\n    [native code]\n}"
    },
    {
      "path": "window.scrollX",
      "propertyName": "_set",
      "property": "function scrollX() {\n    [native code]\n}"
    },
    {
      "path": "window.scrollX",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.scrollX",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.pageXOffset",
      "propertyName": "_get",
      "property": "function pageXOffset() {\n    [native code]\n}"
    },
    {
      "path": "window.pageXOffset",
      "propertyName": "_set",
      "property": "function pageXOffset() {\n    [native code]\n}"
    },
    {
      "path": "window.pageXOffset",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.pageXOffset",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.scrollY",
      "propertyName": "_get",
      "property": "function scrollY() {\n    [native code]\n}"
    },
    {
      "path": "window.scrollY",
      "propertyName": "_set",
      "property": "function scrollY() {\n    [native code]\n}"
    },
    {
      "path": "window.scrollY",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.scrollY",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.pageYOffset",
      "propertyName": "_get",
      "property": "function pageYOffset() {\n    [native code]\n}"
    },
    {
      "path": "window.pageYOffset",
      "propertyName": "_set",
      "property": "function pageYOffset() {\n    [native code]\n}"
    },
    {
      "path": "window.pageYOffset",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.pageYOffset",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.screenX",
      "propertyName": "_get",
      "property": "function screenX() {\n    [native code]\n}"
    },
    {
      "path": "window.screenX",
      "propertyName": "_set",
      "property": "function screenX() {\n    [native code]\n}"
    },
    {
      "path": "window.screenX",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.screenX",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.screenY",
      "propertyName": "_get",
      "property": "function screenY() {\n    [native code]\n}"
    },
    {
      "path": "window.screenY",
      "propertyName": "_set",
      "property": "function screenY() {\n    [native code]\n}"
    },
    {
      "path": "window.screenY",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.screenY",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.outerWidth",
      "propertyName": "_get",
      "property": "function outerWidth() {\n    [native code]\n}"
    },
    {
      "path": "window.outerWidth",
      "propertyName": "_set",
      "property": "function outerWidth() {\n    [native code]\n}"
    },
    {
      "path": "window.outerWidth",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.outerWidth",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.outerHeight",
      "propertyName": "_get",
      "property": "function outerHeight() {\n    [native code]\n}"
    },
    {
      "path": "window.outerHeight",
      "propertyName": "_set",
      "property": "function outerHeight() {\n    [native code]\n}"
    },
    {
      "path": "window.outerHeight",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.outerHeight",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.devicePixelRatio",
      "propertyName": "_get",
      "property": "function devicePixelRatio() {\n    [native code]\n}"
    },
    {
      "path": "window.devicePixelRatio",
      "propertyName": "_set",
      "property": "function devicePixelRatio() {\n    [native code]\n}"
    },
    {
      "path": "window.devicePixelRatio",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.devicePixelRatio",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.event",
      "propertyName": "_flags",
      "property": "ce"
    },
    {
      "path": "window.event",
      "propertyName": "_get",
      "property": "function event() {\n    [native code]\n}"
    },
    {
      "path": "window.event",
      "propertyName": "_set",
      "property": "function event() {\n    [native code]\n}"
    },
    {
      "path": "window.event",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.event",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.defaultStatus",
      "propertyName": "_get",
      "property": "function defaultStatus() {\n    [native code]\n}"
    },
    {
      "path": "window.defaultStatus",
      "propertyName": "_set",
      "property": "function defaultStatus() {\n    [native code]\n}"
    },
    {
      "path": "window.defaultStatus",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.defaultStatus",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.defaultstatus",
      "propertyName": "_get",
      "property": "function defaultstatus() {\n    [native code]\n}"
    },
    {
      "path": "window.defaultstatus",
      "propertyName": "_set",
      "property": "function defaultstatus() {\n    [native code]\n}"
    },
    {
      "path": "window.defaultstatus",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.defaultstatus",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.offscreenBuffering",
      "propertyName": "_flags",
      "property": "ce"
    },
    {
      "path": "window.offscreenBuffering",
      "propertyName": "_get",
      "property": "function offscreenBuffering() {\n    [native code]\n}"
    },
    {
      "path": "window.offscreenBuffering",
      "propertyName": "_set",
      "property": "function offscreenBuffering() {\n    [native code]\n}"
    },
    {
      "path": "window.offscreenBuffering",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.offscreenBuffering",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.screenLeft",
      "propertyName": "_get",
      "property": "function screenLeft() {\n    [native code]\n}"
    },
    {
      "path": "window.screenLeft",
      "propertyName": "_set",
      "property": "function screenLeft() {\n    [native code]\n}"
    },
    {
      "path": "window.screenLeft",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.screenLeft",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.screenTop",
      "propertyName": "_get",
      "property": "function screenTop() {\n    [native code]\n}"
    },
    {
      "path": "window.screenTop",
      "propertyName": "_set",
      "property": "function screenTop() {\n    [native code]\n}"
    },
    {
      "path": "window.screenTop",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.screenTop",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.styleMedia._protos",
      "propertyName": "0",
      "property": "Object.prototype"
    },
    {
      "path": "window.styleMedia",
      "propertyName": "_get",
      "property": "function styleMedia() {\n    [native code]\n}"
    },
    {
      "path": "window.styleMedia",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.onwebkitanimationend",
      "propertyName": "_flags",
      "property": "c"
    },
    {
      "path": "window.onwebkitanimationend",
      "propertyName": "_get",
      "property": "function onwebkitanimationend() {\n    [native code]\n}"
    },
    {
      "path": "window.onwebkitanimationend",
      "propertyName": "_set",
      "property": "function onwebkitanimationend() {\n    [native code]\n}"
    },
    {
      "path": "window.onwebkitanimationend",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.onwebkitanimationend",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.onwebkitanimationiteration",
      "propertyName": "_flags",
      "property": "c"
    },
    {
      "path": "window.onwebkitanimationiteration",
      "propertyName": "_get",
      "property": "function onwebkitanimationiteration() {\n    [native code]\n}"
    },
    {
      "path": "window.onwebkitanimationiteration",
      "propertyName": "_set",
      "property": "function onwebkitanimationiteration() {\n    [native code]\n}"
    },
    {
      "path": "window.onwebkitanimationiteration",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.onwebkitanimationiteration",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.onwebkitanimationstart",
      "propertyName": "_flags",
      "property": "c"
    },
    {
      "path": "window.onwebkitanimationstart",
      "propertyName": "_get",
      "property": "function onwebkitanimationstart() {\n    [native code]\n}"
    },
    {
      "path": "window.onwebkitanimationstart",
      "propertyName": "_set",
      "property": "function onwebkitanimationstart() {\n    [native code]\n}"
    },
    {
      "path": "window.onwebkitanimationstart",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.onwebkitanimationstart",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.onwebkittransitionend",
      "propertyName": "_flags",
      "property": "c"
    },
    {
      "path": "window.onwebkittransitionend",
      "propertyName": "_get",
      "property": "function onwebkittransitionend() {\n    [native code]\n}"
    },
    {
      "path": "window.onwebkittransitionend",
      "propertyName": "_set",
      "property": "function onwebkittransitionend() {\n    [native code]\n}"
    },
    {
      "path": "window.onwebkittransitionend",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.onwebkittransitionend",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.IDBCursor.prototype.source",
      "propertyName": "_accessException",
      "property": "TypeError: The IDBCursor.source getter can only be used on instances of IDBCursor"
    },
    {
      "path": "window.IDBCursor.prototype.source",
      "propertyName": "_get",
      "property": "function source() {\n    [native code]\n}"
    },
    {
      "path": "window.IDBCursor.prototype.source",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.IDBCursor.prototype.direction",
      "propertyName": "_accessException",
      "property": "TypeError: The IDBCursor.direction getter can only be used on instances of IDBCursor"
    },
    {
      "path": "window.IDBCursor.prototype.direction",
      "propertyName": "_get",
      "property": "function direction() {\n    [native code]\n}"
    },
    {
      "path": "window.IDBCursor.prototype.direction",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.IDBCursor.prototype.key",
      "propertyName": "_accessException",
      "property": "TypeError: The IDBCursor.key getter can only be used on instances of IDBCursor"
    },
    {
      "path": "window.IDBCursor.prototype.key",
      "propertyName": "_get",
      "property": "function key() {\n    [native code]\n}"
    },
    {
      "path": "window.IDBCursor.prototype.key",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.IDBCursor.prototype.primaryKey",
      "propertyName": "_accessException",
      "property": "TypeError: The IDBCursor.primaryKey getter can only be used on instances of IDBCursor"
    },
    {
      "path": "window.IDBCursor.prototype.primaryKey",
      "propertyName": "_get",
      "property": "function primaryKey() {\n    [native code]\n}"
    },
    {
      "path": "window.IDBCursor.prototype.primaryKey",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.IDBCursor.prototype.update",
      "propertyName": "_function",
      "property": "function update() {\n    [native code]\n}"
    },
    {
      "path": "window.IDBCursor.prototype.advance",
      "propertyName": "_function",
      "property": "function advance() {\n    [native code]\n}"
    },
    {
      "path": "window.IDBCursor.prototype.continue",
      "propertyName": "_function",
      "property": "function continue() {\n    [native code]\n}"
    },
    {
      "path": "window.IDBCursor.prototype.continuePrimaryKey",
      "propertyName": "_function",
      "property": "function continuePrimaryKey() {\n    [native code]\n}"
    },
    {
      "path": "window.IDBCursor.prototype.delete",
      "propertyName": "_function",
      "property": "function delete() {\n    [native code]\n}"
    },
    {
      "path": "window.IDBCursor",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.IDBCursor",
      "propertyName": "_function",
      "property": "function IDBCursor() {\n    [native code]\n}"
    },
    {
      "path": "window.IDBCursorWithValue.prototype.value",
      "propertyName": "_accessException",
      "property": "TypeError: The IDBCursorWithValue.value getter can only be used on instances of IDBCursorWithValue"
    },
    {
      "path": "window.IDBCursorWithValue.prototype.value",
      "propertyName": "_get",
      "property": "function value() {\n    [native code]\n}"
    },
    {
      "path": "window.IDBCursorWithValue.prototype.value",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.IDBCursorWithValue",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.IDBCursorWithValue",
      "propertyName": "_function",
      "property": "function IDBCursorWithValue() {\n    [native code]\n}"
    },
    {
      "path": "window.IDBDatabase.prototype.name",
      "propertyName": "_accessException",
      "property": "TypeError: The IDBDatabase.name getter can only be used on instances of IDBDatabase"
    },
    {
      "path": "window.IDBDatabase.prototype.name",
      "propertyName": "_get",
      "property": "function name() {\n    [native code]\n}"
    },
    {
      "path": "window.IDBDatabase.prototype.name",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.IDBDatabase.prototype.version",
      "propertyName": "_accessException",
      "property": "TypeError: The IDBDatabase.version getter can only be used on instances of IDBDatabase"
    },
    {
      "path": "window.IDBDatabase.prototype.version",
      "propertyName": "_get",
      "property": "function version() {\n    [native code]\n}"
    },
    {
      "path": "window.IDBDatabase.prototype.version",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.IDBDatabase.prototype.objectStoreNames",
      "propertyName": "_accessException",
      "property": "TypeError: The IDBDatabase.objectStoreNames getter can only be used on instances of IDBDatabase"
    },
    {
      "path": "window.IDBDatabase.prototype.objectStoreNames",
      "propertyName": "_get",
      "property": "function objectStoreNames() {\n    [native code]\n}"
    },
    {
      "path": "window.IDBDatabase.prototype.objectStoreNames",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.IDBDatabase.prototype.onabort",
      "propertyName": "_accessException",
      "property": "TypeError: The IDBDatabase.onabort getter can only be used on instances of IDBDatabase"
    },
    {
      "path": "window.IDBDatabase.prototype.onabort",
      "propertyName": "_get",
      "property": "function onabort() {\n    [native code]\n}"
    },
    {
      "path": "window.IDBDatabase.prototype.onabort",
      "propertyName": "_set",
      "property": "function onabort() {\n    [native code]\n}"
    },
    {
      "path": "window.IDBDatabase.prototype.onabort",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.IDBDatabase.prototype.onabort",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.IDBDatabase.prototype.onclose",
      "propertyName": "_accessException",
      "property": "TypeError: The IDBDatabase.onclose getter can only be used on instances of IDBDatabase"
    },
    {
      "path": "window.IDBDatabase.prototype.onclose",
      "propertyName": "_get",
      "property": "function onclose() {\n    [native code]\n}"
    },
    {
      "path": "window.IDBDatabase.prototype.onclose",
      "propertyName": "_set",
      "property": "function onclose() {\n    [native code]\n}"
    },
    {
      "path": "window.IDBDatabase.prototype.onclose",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.IDBDatabase.prototype.onclose",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.IDBDatabase.prototype.onerror",
      "propertyName": "_accessException",
      "property": "TypeError: The IDBDatabase.onerror getter can only be used on instances of IDBDatabase"
    },
    {
      "path": "window.IDBDatabase.prototype.onerror",
      "propertyName": "_get",
      "property": "function onerror() {\n    [native code]\n}"
    },
    {
      "path": "window.IDBDatabase.prototype.onerror",
      "propertyName": "_set",
      "property": "function onerror() {\n    [native code]\n}"
    },
    {
      "path": "window.IDBDatabase.prototype.onerror",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.IDBDatabase.prototype.onerror",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.IDBDatabase.prototype.onversionchange",
      "propertyName": "_accessException",
      "property": "TypeError: The IDBDatabase.onversionchange getter can only be used on instances of IDBDatabase"
    },
    {
      "path": "window.IDBDatabase.prototype.onversionchange",
      "propertyName": "_get",
      "property": "function onversionchange() {\n    [native code]\n}"
    },
    {
      "path": "window.IDBDatabase.prototype.onversionchange",
      "propertyName": "_set",
      "property": "function onversionchange() {\n    [native code]\n}"
    },
    {
      "path": "window.IDBDatabase.prototype.onversionchange",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.IDBDatabase.prototype.onversionchange",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.IDBDatabase.prototype.createObjectStore",
      "propertyName": "_function",
      "property": "function createObjectStore() {\n    [native code]\n}"
    },
    {
      "path": "window.IDBDatabase.prototype.deleteObjectStore",
      "propertyName": "_function",
      "property": "function deleteObjectStore() {\n    [native code]\n}"
    },
    {
      "path": "window.IDBDatabase.prototype.transaction",
      "propertyName": "_function",
      "property": "function transaction() {\n    [native code]\n}"
    },
    {
      "path": "window.IDBDatabase.prototype.close",
      "propertyName": "_function",
      "property": "function close() {\n    [native code]\n}"
    },
    {
      "path": "window.IDBDatabase",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.IDBDatabase",
      "propertyName": "_function",
      "property": "function IDBDatabase() {\n    [native code]\n}"
    },
    {
      "path": "window.IDBFactory.prototype.open",
      "propertyName": "_function",
      "property": "function open() {\n    [native code]\n}"
    },
    {
      "path": "window.IDBFactory.prototype.deleteDatabase",
      "propertyName": "_function",
      "property": "function deleteDatabase() {\n    [native code]\n}"
    },
    {
      "path": "window.IDBFactory.prototype.cmp",
      "propertyName": "_function",
      "property": "function cmp() {\n    [native code]\n}"
    },
    {
      "path": "window.IDBFactory",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.IDBFactory",
      "propertyName": "_function",
      "property": "function IDBFactory() {\n    [native code]\n}"
    },
    {
      "path": "window.IDBIndex.prototype.name",
      "propertyName": "_accessException",
      "property": "TypeError: The IDBIndex.name getter can only be used on instances of IDBIndex"
    },
    {
      "path": "window.IDBIndex.prototype.name",
      "propertyName": "_get",
      "property": "function name() {\n    [native code]\n}"
    },
    {
      "path": "window.IDBIndex.prototype.name",
      "propertyName": "_set",
      "property": "function name() {\n    [native code]\n}"
    },
    {
      "path": "window.IDBIndex.prototype.name",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.IDBIndex.prototype.name",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.IDBIndex.prototype.objectStore",
      "propertyName": "_accessException",
      "property": "TypeError: The IDBIndex.objectStore getter can only be used on instances of IDBIndex"
    },
    {
      "path": "window.IDBIndex.prototype.objectStore",
      "propertyName": "_get",
      "property": "function objectStore() {\n    [native code]\n}"
    },
    {
      "path": "window.IDBIndex.prototype.objectStore",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.IDBIndex.prototype.keyPath",
      "propertyName": "_accessException",
      "property": "TypeError: The IDBIndex.keyPath getter can only be used on instances of IDBIndex"
    },
    {
      "path": "window.IDBIndex.prototype.keyPath",
      "propertyName": "_get",
      "property": "function keyPath() {\n    [native code]\n}"
    },
    {
      "path": "window.IDBIndex.prototype.keyPath",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.IDBIndex.prototype.multiEntry",
      "propertyName": "_accessException",
      "property": "TypeError: The IDBIndex.multiEntry getter can only be used on instances of IDBIndex"
    },
    {
      "path": "window.IDBIndex.prototype.multiEntry",
      "propertyName": "_get",
      "property": "function multiEntry() {\n    [native code]\n}"
    },
    {
      "path": "window.IDBIndex.prototype.multiEntry",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.IDBIndex.prototype.unique",
      "propertyName": "_accessException",
      "property": "TypeError: The IDBIndex.unique getter can only be used on instances of IDBIndex"
    },
    {
      "path": "window.IDBIndex.prototype.unique",
      "propertyName": "_get",
      "property": "function unique() {\n    [native code]\n}"
    },
    {
      "path": "window.IDBIndex.prototype.unique",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.IDBIndex.prototype.openCursor",
      "propertyName": "_function",
      "property": "function openCursor() {\n    [native code]\n}"
    },
    {
      "path": "window.IDBIndex.prototype.openKeyCursor",
      "propertyName": "_function",
      "property": "function openKeyCursor() {\n    [native code]\n}"
    },
    {
      "path": "window.IDBIndex.prototype.get",
      "propertyName": "_function",
      "property": "function get() {\n    [native code]\n}"
    },
    {
      "path": "window.IDBIndex.prototype.getKey",
      "propertyName": "_function",
      "property": "function getKey() {\n    [native code]\n}"
    },
    {
      "path": "window.IDBIndex.prototype.getAll",
      "propertyName": "_function",
      "property": "function getAll() {\n    [native code]\n}"
    },
    {
      "path": "window.IDBIndex.prototype.getAllKeys",
      "propertyName": "_function",
      "property": "function getAllKeys() {\n    [native code]\n}"
    },
    {
      "path": "window.IDBIndex.prototype.count",
      "propertyName": "_function",
      "property": "function count() {\n    [native code]\n}"
    },
    {
      "path": "window.IDBIndex",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.IDBIndex",
      "propertyName": "_function",
      "property": "function IDBIndex() {\n    [native code]\n}"
    },
    {
      "path": "window.IDBKeyRange.prototype.lower",
      "propertyName": "_accessException",
      "property": "TypeError: The IDBKeyRange.lower getter can only be used on instances of IDBKeyRange"
    },
    {
      "path": "window.IDBKeyRange.prototype.lower",
      "propertyName": "_get",
      "property": "function lower() {\n    [native code]\n}"
    },
    {
      "path": "window.IDBKeyRange.prototype.lower",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.IDBKeyRange.prototype.upper",
      "propertyName": "_accessException",
      "property": "TypeError: The IDBKeyRange.upper getter can only be used on instances of IDBKeyRange"
    },
    {
      "path": "window.IDBKeyRange.prototype.upper",
      "propertyName": "_get",
      "property": "function upper() {\n    [native code]\n}"
    },
    {
      "path": "window.IDBKeyRange.prototype.upper",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.IDBKeyRange.prototype.lowerOpen",
      "propertyName": "_accessException",
      "property": "TypeError: The IDBKeyRange.lowerOpen getter can only be used on instances of IDBKeyRange"
    },
    {
      "path": "window.IDBKeyRange.prototype.lowerOpen",
      "propertyName": "_get",
      "property": "function lowerOpen() {\n    [native code]\n}"
    },
    {
      "path": "window.IDBKeyRange.prototype.lowerOpen",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.IDBKeyRange.prototype.upperOpen",
      "propertyName": "_accessException",
      "property": "TypeError: The IDBKeyRange.upperOpen getter can only be used on instances of IDBKeyRange"
    },
    {
      "path": "window.IDBKeyRange.prototype.upperOpen",
      "propertyName": "_get",
      "property": "function upperOpen() {\n    [native code]\n}"
    },
    {
      "path": "window.IDBKeyRange.prototype.upperOpen",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.IDBKeyRange.prototype.includes",
      "propertyName": "_function",
      "property": "function includes() {\n    [native code]\n}"
    },
    {
      "path": "window.IDBKeyRange.only",
      "propertyName": "_function",
      "property": "function only() {\n    [native code]\n}"
    },
    {
      "path": "window.IDBKeyRange.lowerBound",
      "propertyName": "_function",
      "property": "function lowerBound() {\n    [native code]\n}"
    },
    {
      "path": "window.IDBKeyRange.upperBound",
      "propertyName": "_function",
      "property": "function upperBound() {\n    [native code]\n}"
    },
    {
      "path": "window.IDBKeyRange.bound",
      "propertyName": "_function",
      "property": "function bound() {\n    [native code]\n}"
    },
    {
      "path": "window.IDBKeyRange",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.IDBKeyRange",
      "propertyName": "_function",
      "property": "function IDBKeyRange() {\n    [native code]\n}"
    },
    {
      "path": "window.IDBObjectStore.prototype.name",
      "propertyName": "_accessException",
      "property": "TypeError: The IDBObjectStore.name getter can only be used on instances of IDBObjectStore"
    },
    {
      "path": "window.IDBObjectStore.prototype.name",
      "propertyName": "_get",
      "property": "function name() {\n    [native code]\n}"
    },
    {
      "path": "window.IDBObjectStore.prototype.name",
      "propertyName": "_set",
      "property": "function name() {\n    [native code]\n}"
    },
    {
      "path": "window.IDBObjectStore.prototype.name",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.IDBObjectStore.prototype.name",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.IDBObjectStore.prototype.keyPath",
      "propertyName": "_accessException",
      "property": "TypeError: The IDBObjectStore.keyPath getter can only be used on instances of IDBObjectStore"
    },
    {
      "path": "window.IDBObjectStore.prototype.keyPath",
      "propertyName": "_get",
      "property": "function keyPath() {\n    [native code]\n}"
    },
    {
      "path": "window.IDBObjectStore.prototype.keyPath",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.IDBObjectStore.prototype.indexNames",
      "propertyName": "_accessException",
      "property": "TypeError: The IDBObjectStore.indexNames getter can only be used on instances of IDBObjectStore"
    },
    {
      "path": "window.IDBObjectStore.prototype.indexNames",
      "propertyName": "_get",
      "property": "function indexNames() {\n    [native code]\n}"
    },
    {
      "path": "window.IDBObjectStore.prototype.indexNames",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.IDBObjectStore.prototype.transaction",
      "propertyName": "_accessException",
      "property": "TypeError: The IDBObjectStore.transaction getter can only be used on instances of IDBObjectStore"
    },
    {
      "path": "window.IDBObjectStore.prototype.transaction",
      "propertyName": "_get",
      "property": "function transaction() {\n    [native code]\n}"
    },
    {
      "path": "window.IDBObjectStore.prototype.transaction",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.IDBObjectStore.prototype.autoIncrement",
      "propertyName": "_accessException",
      "property": "TypeError: The IDBObjectStore.autoIncrement getter can only be used on instances of IDBObjectStore"
    },
    {
      "path": "window.IDBObjectStore.prototype.autoIncrement",
      "propertyName": "_get",
      "property": "function autoIncrement() {\n    [native code]\n}"
    },
    {
      "path": "window.IDBObjectStore.prototype.autoIncrement",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.IDBObjectStore.prototype.put",
      "propertyName": "_function",
      "property": "function put() {\n    [native code]\n}"
    },
    {
      "path": "window.IDBObjectStore.prototype.add",
      "propertyName": "_function",
      "property": "function add() {\n    [native code]\n}"
    },
    {
      "path": "window.IDBObjectStore.prototype.delete",
      "propertyName": "_function",
      "property": "function delete() {\n    [native code]\n}"
    },
    {
      "path": "window.IDBObjectStore.prototype.get",
      "propertyName": "_function",
      "property": "function get() {\n    [native code]\n}"
    },
    {
      "path": "window.IDBObjectStore.prototype.getKey",
      "propertyName": "_function",
      "property": "function getKey() {\n    [native code]\n}"
    },
    {
      "path": "window.IDBObjectStore.prototype.clear",
      "propertyName": "_function",
      "property": "function clear() {\n    [native code]\n}"
    },
    {
      "path": "window.IDBObjectStore.prototype.openCursor",
      "propertyName": "_function",
      "property": "function openCursor() {\n    [native code]\n}"
    },
    {
      "path": "window.IDBObjectStore.prototype.openKeyCursor",
      "propertyName": "_function",
      "property": "function openKeyCursor() {\n    [native code]\n}"
    },
    {
      "path": "window.IDBObjectStore.prototype.getAll",
      "propertyName": "_function",
      "property": "function getAll() {\n    [native code]\n}"
    },
    {
      "path": "window.IDBObjectStore.prototype.getAllKeys",
      "propertyName": "_function",
      "property": "function getAllKeys() {\n    [native code]\n}"
    },
    {
      "path": "window.IDBObjectStore.prototype.createIndex",
      "propertyName": "_function",
      "property": "function createIndex() {\n    [native code]\n}"
    },
    {
      "path": "window.IDBObjectStore.prototype.index",
      "propertyName": "_function",
      "property": "function index() {\n    [native code]\n}"
    },
    {
      "path": "window.IDBObjectStore.prototype.deleteIndex",
      "propertyName": "_function",
      "property": "function deleteIndex() {\n    [native code]\n}"
    },
    {
      "path": "window.IDBObjectStore.prototype.count",
      "propertyName": "_function",
      "property": "function count() {\n    [native code]\n}"
    },
    {
      "path": "window.IDBObjectStore",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.IDBObjectStore",
      "propertyName": "_function",
      "property": "function IDBObjectStore() {\n    [native code]\n}"
    },
    {
      "path": "window.IDBOpenDBRequest.prototype.onblocked",
      "propertyName": "_accessException",
      "property": "TypeError: The IDBOpenDBRequest.onblocked getter can only be used on instances of IDBOpenDBRequest"
    },
    {
      "path": "window.IDBOpenDBRequest.prototype.onblocked",
      "propertyName": "_get",
      "property": "function onblocked() {\n    [native code]\n}"
    },
    {
      "path": "window.IDBOpenDBRequest.prototype.onblocked",
      "propertyName": "_set",
      "property": "function onblocked() {\n    [native code]\n}"
    },
    {
      "path": "window.IDBOpenDBRequest.prototype.onblocked",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.IDBOpenDBRequest.prototype.onblocked",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.IDBOpenDBRequest.prototype.onupgradeneeded",
      "propertyName": "_accessException",
      "property": "TypeError: The IDBOpenDBRequest.onupgradeneeded getter can only be used on instances of IDBOpenDBRequest"
    },
    {
      "path": "window.IDBOpenDBRequest.prototype.onupgradeneeded",
      "propertyName": "_get",
      "property": "function onupgradeneeded() {\n    [native code]\n}"
    },
    {
      "path": "window.IDBOpenDBRequest.prototype.onupgradeneeded",
      "propertyName": "_set",
      "property": "function onupgradeneeded() {\n    [native code]\n}"
    },
    {
      "path": "window.IDBOpenDBRequest.prototype.onupgradeneeded",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.IDBOpenDBRequest.prototype.onupgradeneeded",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.IDBOpenDBRequest",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.IDBOpenDBRequest",
      "propertyName": "_function",
      "property": "function IDBOpenDBRequest() {\n    [native code]\n}"
    },
    {
      "path": "window.IDBRequest.prototype.result",
      "propertyName": "_accessException",
      "property": "TypeError: The IDBRequest.result getter can only be used on instances of IDBRequest"
    },
    {
      "path": "window.IDBRequest.prototype.result",
      "propertyName": "_get",
      "property": "function result() {\n    [native code]\n}"
    },
    {
      "path": "window.IDBRequest.prototype.result",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.IDBRequest.prototype.error",
      "propertyName": "_accessException",
      "property": "TypeError: The IDBRequest.error getter can only be used on instances of IDBRequest"
    },
    {
      "path": "window.IDBRequest.prototype.error",
      "propertyName": "_get",
      "property": "function error() {\n    [native code]\n}"
    },
    {
      "path": "window.IDBRequest.prototype.error",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.IDBRequest.prototype.source",
      "propertyName": "_accessException",
      "property": "TypeError: The IDBRequest.source getter can only be used on instances of IDBRequest"
    },
    {
      "path": "window.IDBRequest.prototype.source",
      "propertyName": "_get",
      "property": "function source() {\n    [native code]\n}"
    },
    {
      "path": "window.IDBRequest.prototype.source",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.IDBRequest.prototype.transaction",
      "propertyName": "_accessException",
      "property": "TypeError: The IDBRequest.transaction getter can only be used on instances of IDBRequest"
    },
    {
      "path": "window.IDBRequest.prototype.transaction",
      "propertyName": "_get",
      "property": "function transaction() {\n    [native code]\n}"
    },
    {
      "path": "window.IDBRequest.prototype.transaction",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.IDBRequest.prototype.readyState",
      "propertyName": "_accessException",
      "property": "TypeError: The IDBRequest.readyState getter can only be used on instances of IDBRequest"
    },
    {
      "path": "window.IDBRequest.prototype.readyState",
      "propertyName": "_get",
      "property": "function readyState() {\n    [native code]\n}"
    },
    {
      "path": "window.IDBRequest.prototype.readyState",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.IDBRequest.prototype.onsuccess",
      "propertyName": "_accessException",
      "property": "TypeError: The IDBRequest.onsuccess getter can only be used on instances of IDBRequest"
    },
    {
      "path": "window.IDBRequest.prototype.onsuccess",
      "propertyName": "_get",
      "property": "function onsuccess() {\n    [native code]\n}"
    },
    {
      "path": "window.IDBRequest.prototype.onsuccess",
      "propertyName": "_set",
      "property": "function onsuccess() {\n    [native code]\n}"
    },
    {
      "path": "window.IDBRequest.prototype.onsuccess",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.IDBRequest.prototype.onsuccess",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.IDBRequest.prototype.onerror",
      "propertyName": "_accessException",
      "property": "TypeError: The IDBRequest.onerror getter can only be used on instances of IDBRequest"
    },
    {
      "path": "window.IDBRequest.prototype.onerror",
      "propertyName": "_get",
      "property": "function onerror() {\n    [native code]\n}"
    },
    {
      "path": "window.IDBRequest.prototype.onerror",
      "propertyName": "_set",
      "property": "function onerror() {\n    [native code]\n}"
    },
    {
      "path": "window.IDBRequest.prototype.onerror",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.IDBRequest.prototype.onerror",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.IDBRequest",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.IDBRequest",
      "propertyName": "_function",
      "property": "function IDBRequest() {\n    [native code]\n}"
    },
    {
      "path": "window.IDBTransaction.prototype.objectStoreNames",
      "propertyName": "_accessException",
      "property": "TypeError: The IDBTransaction.objectStoreNames getter can only be used on instances of IDBTransaction"
    },
    {
      "path": "window.IDBTransaction.prototype.objectStoreNames",
      "propertyName": "_get",
      "property": "function objectStoreNames() {\n    [native code]\n}"
    },
    {
      "path": "window.IDBTransaction.prototype.objectStoreNames",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.IDBTransaction.prototype.mode",
      "propertyName": "_accessException",
      "property": "TypeError: The IDBTransaction.mode getter can only be used on instances of IDBTransaction"
    },
    {
      "path": "window.IDBTransaction.prototype.mode",
      "propertyName": "_get",
      "property": "function mode() {\n    [native code]\n}"
    },
    {
      "path": "window.IDBTransaction.prototype.mode",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.IDBTransaction.prototype.db",
      "propertyName": "_accessException",
      "property": "TypeError: The IDBTransaction.db getter can only be used on instances of IDBTransaction"
    },
    {
      "path": "window.IDBTransaction.prototype.db",
      "propertyName": "_get",
      "property": "function db() {\n    [native code]\n}"
    },
    {
      "path": "window.IDBTransaction.prototype.db",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.IDBTransaction.prototype.error",
      "propertyName": "_accessException",
      "property": "TypeError: The IDBTransaction.error getter can only be used on instances of IDBTransaction"
    },
    {
      "path": "window.IDBTransaction.prototype.error",
      "propertyName": "_get",
      "property": "function error() {\n    [native code]\n}"
    },
    {
      "path": "window.IDBTransaction.prototype.error",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.IDBTransaction.prototype.onabort",
      "propertyName": "_accessException",
      "property": "TypeError: The IDBTransaction.onabort getter can only be used on instances of IDBTransaction"
    },
    {
      "path": "window.IDBTransaction.prototype.onabort",
      "propertyName": "_get",
      "property": "function onabort() {\n    [native code]\n}"
    },
    {
      "path": "window.IDBTransaction.prototype.onabort",
      "propertyName": "_set",
      "property": "function onabort() {\n    [native code]\n}"
    },
    {
      "path": "window.IDBTransaction.prototype.onabort",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.IDBTransaction.prototype.onabort",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.IDBTransaction.prototype.oncomplete",
      "propertyName": "_accessException",
      "property": "TypeError: The IDBTransaction.oncomplete getter can only be used on instances of IDBTransaction"
    },
    {
      "path": "window.IDBTransaction.prototype.oncomplete",
      "propertyName": "_get",
      "property": "function oncomplete() {\n    [native code]\n}"
    },
    {
      "path": "window.IDBTransaction.prototype.oncomplete",
      "propertyName": "_set",
      "property": "function oncomplete() {\n    [native code]\n}"
    },
    {
      "path": "window.IDBTransaction.prototype.oncomplete",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.IDBTransaction.prototype.oncomplete",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.IDBTransaction.prototype.onerror",
      "propertyName": "_accessException",
      "property": "TypeError: The IDBTransaction.onerror getter can only be used on instances of IDBTransaction"
    },
    {
      "path": "window.IDBTransaction.prototype.onerror",
      "propertyName": "_get",
      "property": "function onerror() {\n    [native code]\n}"
    },
    {
      "path": "window.IDBTransaction.prototype.onerror",
      "propertyName": "_set",
      "property": "function onerror() {\n    [native code]\n}"
    },
    {
      "path": "window.IDBTransaction.prototype.onerror",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.IDBTransaction.prototype.onerror",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.IDBTransaction.prototype.objectStore",
      "propertyName": "_function",
      "property": "function objectStore() {\n    [native code]\n}"
    },
    {
      "path": "window.IDBTransaction.prototype.abort",
      "propertyName": "_function",
      "property": "function abort() {\n    [native code]\n}"
    },
    {
      "path": "window.IDBTransaction",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.IDBTransaction",
      "propertyName": "_function",
      "property": "function IDBTransaction() {\n    [native code]\n}"
    },
    {
      "path": "window.IDBVersionChangeEvent.prototype.oldVersion",
      "propertyName": "_accessException",
      "property": "TypeError: The IDBVersionChangeEvent.oldVersion getter can only be used on instances of IDBVersionChangeEvent"
    },
    {
      "path": "window.IDBVersionChangeEvent.prototype.oldVersion",
      "propertyName": "_get",
      "property": "function oldVersion() {\n    [native code]\n}"
    },
    {
      "path": "window.IDBVersionChangeEvent.prototype.oldVersion",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.IDBVersionChangeEvent.prototype.newVersion",
      "propertyName": "_accessException",
      "property": "TypeError: The IDBVersionChangeEvent.newVersion getter can only be used on instances of IDBVersionChangeEvent"
    },
    {
      "path": "window.IDBVersionChangeEvent.prototype.newVersion",
      "propertyName": "_get",
      "property": "function newVersion() {\n    [native code]\n}"
    },
    {
      "path": "window.IDBVersionChangeEvent.prototype.newVersion",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.IDBVersionChangeEvent",
      "propertyName": "new()",
      "property": "TypeError: Not enough arguments"
    },
    {
      "path": "window.IDBVersionChangeEvent",
      "propertyName": "_function",
      "property": "function IDBVersionChangeEvent() {\n    [native code]\n}"
    },
    {
      "path": "window.SourceBuffer.prototype.mode",
      "propertyName": "_accessException",
      "property": "TypeError: The SourceBuffer.mode getter can only be used on instances of SourceBuffer"
    },
    {
      "path": "window.SourceBuffer.prototype.mode",
      "propertyName": "_get",
      "property": "function mode() {\n    [native code]\n}"
    },
    {
      "path": "window.SourceBuffer.prototype.mode",
      "propertyName": "_set",
      "property": "function mode() {\n    [native code]\n}"
    },
    {
      "path": "window.SourceBuffer.prototype.mode",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SourceBuffer.prototype.mode",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SourceBuffer.prototype.updating",
      "propertyName": "_accessException",
      "property": "TypeError: The SourceBuffer.updating getter can only be used on instances of SourceBuffer"
    },
    {
      "path": "window.SourceBuffer.prototype.updating",
      "propertyName": "_get",
      "property": "function updating() {\n    [native code]\n}"
    },
    {
      "path": "window.SourceBuffer.prototype.updating",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SourceBuffer.prototype.buffered",
      "propertyName": "_accessException",
      "property": "TypeError: The SourceBuffer.buffered getter can only be used on instances of SourceBuffer"
    },
    {
      "path": "window.SourceBuffer.prototype.buffered",
      "propertyName": "_get",
      "property": "function buffered() {\n    [native code]\n}"
    },
    {
      "path": "window.SourceBuffer.prototype.buffered",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SourceBuffer.prototype.timestampOffset",
      "propertyName": "_accessException",
      "property": "TypeError: The SourceBuffer.timestampOffset getter can only be used on instances of SourceBuffer"
    },
    {
      "path": "window.SourceBuffer.prototype.timestampOffset",
      "propertyName": "_get",
      "property": "function timestampOffset() {\n    [native code]\n}"
    },
    {
      "path": "window.SourceBuffer.prototype.timestampOffset",
      "propertyName": "_set",
      "property": "function timestampOffset() {\n    [native code]\n}"
    },
    {
      "path": "window.SourceBuffer.prototype.timestampOffset",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SourceBuffer.prototype.timestampOffset",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SourceBuffer.prototype.appendWindowStart",
      "propertyName": "_accessException",
      "property": "TypeError: The SourceBuffer.appendWindowStart getter can only be used on instances of SourceBuffer"
    },
    {
      "path": "window.SourceBuffer.prototype.appendWindowStart",
      "propertyName": "_get",
      "property": "function appendWindowStart() {\n    [native code]\n}"
    },
    {
      "path": "window.SourceBuffer.prototype.appendWindowStart",
      "propertyName": "_set",
      "property": "function appendWindowStart() {\n    [native code]\n}"
    },
    {
      "path": "window.SourceBuffer.prototype.appendWindowStart",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SourceBuffer.prototype.appendWindowStart",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SourceBuffer.prototype.appendWindowEnd",
      "propertyName": "_accessException",
      "property": "TypeError: The SourceBuffer.appendWindowEnd getter can only be used on instances of SourceBuffer"
    },
    {
      "path": "window.SourceBuffer.prototype.appendWindowEnd",
      "propertyName": "_get",
      "property": "function appendWindowEnd() {\n    [native code]\n}"
    },
    {
      "path": "window.SourceBuffer.prototype.appendWindowEnd",
      "propertyName": "_set",
      "property": "function appendWindowEnd() {\n    [native code]\n}"
    },
    {
      "path": "window.SourceBuffer.prototype.appendWindowEnd",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SourceBuffer.prototype.appendWindowEnd",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SourceBuffer.prototype.onupdatestart",
      "propertyName": "_accessException",
      "property": "TypeError: The SourceBuffer.onupdatestart getter can only be used on instances of SourceBuffer"
    },
    {
      "path": "window.SourceBuffer.prototype.onupdatestart",
      "propertyName": "_get",
      "property": "function onupdatestart() {\n    [native code]\n}"
    },
    {
      "path": "window.SourceBuffer.prototype.onupdatestart",
      "propertyName": "_set",
      "property": "function onupdatestart() {\n    [native code]\n}"
    },
    {
      "path": "window.SourceBuffer.prototype.onupdatestart",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SourceBuffer.prototype.onupdatestart",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SourceBuffer.prototype.onupdate",
      "propertyName": "_accessException",
      "property": "TypeError: The SourceBuffer.onupdate getter can only be used on instances of SourceBuffer"
    },
    {
      "path": "window.SourceBuffer.prototype.onupdate",
      "propertyName": "_get",
      "property": "function onupdate() {\n    [native code]\n}"
    },
    {
      "path": "window.SourceBuffer.prototype.onupdate",
      "propertyName": "_set",
      "property": "function onupdate() {\n    [native code]\n}"
    },
    {
      "path": "window.SourceBuffer.prototype.onupdate",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SourceBuffer.prototype.onupdate",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SourceBuffer.prototype.onupdateend",
      "propertyName": "_accessException",
      "property": "TypeError: The SourceBuffer.onupdateend getter can only be used on instances of SourceBuffer"
    },
    {
      "path": "window.SourceBuffer.prototype.onupdateend",
      "propertyName": "_get",
      "property": "function onupdateend() {\n    [native code]\n}"
    },
    {
      "path": "window.SourceBuffer.prototype.onupdateend",
      "propertyName": "_set",
      "property": "function onupdateend() {\n    [native code]\n}"
    },
    {
      "path": "window.SourceBuffer.prototype.onupdateend",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SourceBuffer.prototype.onupdateend",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SourceBuffer.prototype.onerror",
      "propertyName": "_accessException",
      "property": "TypeError: The SourceBuffer.onerror getter can only be used on instances of SourceBuffer"
    },
    {
      "path": "window.SourceBuffer.prototype.onerror",
      "propertyName": "_get",
      "property": "function onerror() {\n    [native code]\n}"
    },
    {
      "path": "window.SourceBuffer.prototype.onerror",
      "propertyName": "_set",
      "property": "function onerror() {\n    [native code]\n}"
    },
    {
      "path": "window.SourceBuffer.prototype.onerror",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SourceBuffer.prototype.onerror",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SourceBuffer.prototype.onabort",
      "propertyName": "_accessException",
      "property": "TypeError: The SourceBuffer.onabort getter can only be used on instances of SourceBuffer"
    },
    {
      "path": "window.SourceBuffer.prototype.onabort",
      "propertyName": "_get",
      "property": "function onabort() {\n    [native code]\n}"
    },
    {
      "path": "window.SourceBuffer.prototype.onabort",
      "propertyName": "_set",
      "property": "function onabort() {\n    [native code]\n}"
    },
    {
      "path": "window.SourceBuffer.prototype.onabort",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SourceBuffer.prototype.onabort",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SourceBuffer.prototype.appendBuffer",
      "propertyName": "_function",
      "property": "function appendBuffer() {\n    [native code]\n}"
    },
    {
      "path": "window.SourceBuffer.prototype.abort",
      "propertyName": "_function",
      "property": "function abort() {\n    [native code]\n}"
    },
    {
      "path": "window.SourceBuffer.prototype.remove",
      "propertyName": "_function",
      "property": "function remove() {\n    [native code]\n}"
    },
    {
      "path": "window.SourceBuffer.prototype.changeType",
      "propertyName": "_function",
      "property": "function changeType() {\n    [native code]\n}"
    },
    {
      "path": "window.SourceBuffer",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.SourceBuffer",
      "propertyName": "_function",
      "property": "function SourceBuffer() {\n    [native code]\n}"
    },
    {
      "path": "window.SourceBufferList.prototype.length",
      "propertyName": "_accessException",
      "property": "TypeError: The SourceBufferList.length getter can only be used on instances of SourceBufferList"
    },
    {
      "path": "window.SourceBufferList.prototype.length",
      "propertyName": "_get",
      "property": "function length() {\n    [native code]\n}"
    },
    {
      "path": "window.SourceBufferList.prototype.length",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SourceBufferList.prototype.onaddsourcebuffer",
      "propertyName": "_accessException",
      "property": "TypeError: The SourceBufferList.onaddsourcebuffer getter can only be used on instances of SourceBufferList"
    },
    {
      "path": "window.SourceBufferList.prototype.onaddsourcebuffer",
      "propertyName": "_get",
      "property": "function onaddsourcebuffer() {\n    [native code]\n}"
    },
    {
      "path": "window.SourceBufferList.prototype.onaddsourcebuffer",
      "propertyName": "_set",
      "property": "function onaddsourcebuffer() {\n    [native code]\n}"
    },
    {
      "path": "window.SourceBufferList.prototype.onaddsourcebuffer",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SourceBufferList.prototype.onaddsourcebuffer",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SourceBufferList.prototype.onremovesourcebuffer",
      "propertyName": "_accessException",
      "property": "TypeError: The SourceBufferList.onremovesourcebuffer getter can only be used on instances of SourceBufferList"
    },
    {
      "path": "window.SourceBufferList.prototype.onremovesourcebuffer",
      "propertyName": "_get",
      "property": "function onremovesourcebuffer() {\n    [native code]\n}"
    },
    {
      "path": "window.SourceBufferList.prototype.onremovesourcebuffer",
      "propertyName": "_set",
      "property": "function onremovesourcebuffer() {\n    [native code]\n}"
    },
    {
      "path": "window.SourceBufferList.prototype.onremovesourcebuffer",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SourceBufferList.prototype.onremovesourcebuffer",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SourceBufferList.prototype",
      "propertyName": "Symbol.iterator",
      "property": "REF: window.DOMStringList.prototype.Symbol(Symbol.iterator)"
    },
    {
      "path": "window.SourceBufferList",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.SourceBufferList",
      "propertyName": "_function",
      "property": "function SourceBufferList() {\n    [native code]\n}"
    },
    {
      "path": "window.CanvasCaptureMediaStreamTrack.prototype.canvas",
      "propertyName": "_accessException",
      "property": "TypeError: The CanvasCaptureMediaStreamTrack.canvas getter can only be used on instances of CanvasCaptureMediaStreamTrack"
    },
    {
      "path": "window.CanvasCaptureMediaStreamTrack.prototype.canvas",
      "propertyName": "_get",
      "property": "function canvas() {\n    [native code]\n}"
    },
    {
      "path": "window.CanvasCaptureMediaStreamTrack.prototype.canvas",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.CanvasCaptureMediaStreamTrack.prototype.requestFrame",
      "propertyName": "_function",
      "property": "function requestFrame() {\n    [native code]\n}"
    },
    {
      "path": "window.CanvasCaptureMediaStreamTrack",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.CanvasCaptureMediaStreamTrack",
      "propertyName": "_function",
      "property": "function CanvasCaptureMediaStreamTrack() {\n    [native code]\n}"
    },
    {
      "path": "window.MediaDeviceInfo.prototype.deviceId",
      "propertyName": "_accessException",
      "property": "TypeError: The MediaDeviceInfo.deviceId getter can only be used on instances of MediaDeviceInfo"
    },
    {
      "path": "window.MediaDeviceInfo.prototype.deviceId",
      "propertyName": "_get",
      "property": "function deviceId() {\n    [native code]\n}"
    },
    {
      "path": "window.MediaDeviceInfo.prototype.deviceId",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.MediaDeviceInfo.prototype.kind",
      "propertyName": "_accessException",
      "property": "TypeError: The MediaDeviceInfo.kind getter can only be used on instances of MediaDeviceInfo"
    },
    {
      "path": "window.MediaDeviceInfo.prototype.kind",
      "propertyName": "_get",
      "property": "function kind() {\n    [native code]\n}"
    },
    {
      "path": "window.MediaDeviceInfo.prototype.kind",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.MediaDeviceInfo.prototype.label",
      "propertyName": "_accessException",
      "property": "TypeError: The MediaDeviceInfo.label getter can only be used on instances of MediaDeviceInfo"
    },
    {
      "path": "window.MediaDeviceInfo.prototype.label",
      "propertyName": "_get",
      "property": "function label() {\n    [native code]\n}"
    },
    {
      "path": "window.MediaDeviceInfo.prototype.label",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.MediaDeviceInfo.prototype.groupId",
      "propertyName": "_accessException",
      "property": "TypeError: The MediaDeviceInfo.groupId getter can only be used on instances of MediaDeviceInfo"
    },
    {
      "path": "window.MediaDeviceInfo.prototype.groupId",
      "propertyName": "_get",
      "property": "function groupId() {\n    [native code]\n}"
    },
    {
      "path": "window.MediaDeviceInfo.prototype.groupId",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.MediaDeviceInfo.prototype.toJSON.name",
      "propertyName": "_value",
      "property": "toJSON"
    },
    {
      "path": "window.MediaDeviceInfo.prototype.toJSON",
      "propertyName": "_function",
      "property": "function toJSON() {\n    [native code]\n}"
    },
    {
      "path": "window.MediaDeviceInfo",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.MediaDeviceInfo",
      "propertyName": "_function",
      "property": "function MediaDeviceInfo() {\n    [native code]\n}"
    },
    {
      "path": "window.MediaDevices.prototype.ondevicechange",
      "propertyName": "_accessException",
      "property": "TypeError: The MediaDevices.ondevicechange getter can only be used on instances of MediaDevices"
    },
    {
      "path": "window.MediaDevices.prototype.ondevicechange",
      "propertyName": "_get",
      "property": "function ondevicechange() {\n    [native code]\n}"
    },
    {
      "path": "window.MediaDevices.prototype.ondevicechange",
      "propertyName": "_set",
      "property": "function ondevicechange() {\n    [native code]\n}"
    },
    {
      "path": "window.MediaDevices.prototype.ondevicechange",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.MediaDevices.prototype.ondevicechange",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.MediaDevices.prototype.enumerateDevices.name",
      "propertyName": "_value",
      "property": "enumerateDevices"
    },
    {
      "path": "window.MediaDevices.prototype.enumerateDevices",
      "propertyName": "_function",
      "property": "function enumerateDevices() {\n    [native code]\n}"
    },
    {
      "path": "window.MediaDevices.prototype.getSupportedConstraints.name",
      "propertyName": "_value",
      "property": "getSupportedConstraints"
    },
    {
      "path": "window.MediaDevices.prototype.getSupportedConstraints",
      "propertyName": "_function",
      "property": "function getSupportedConstraints() {\n    [native code]\n}"
    },
    {
      "path": "window.MediaDevices.prototype.getUserMedia.name",
      "propertyName": "_value",
      "property": "getUserMedia"
    },
    {
      "path": "window.MediaDevices.prototype.getUserMedia",
      "propertyName": "_function",
      "property": "function getUserMedia() {\n    [native code]\n}"
    },
    {
      "path": "window.MediaDevices.prototype.getDisplayMedia.name",
      "propertyName": "_value",
      "property": "getDisplayMedia"
    },
    {
      "path": "window.MediaDevices.prototype.getDisplayMedia",
      "propertyName": "_function",
      "property": "function getDisplayMedia() {\n    [native code]\n}"
    },
    {
      "path": "window.MediaDevices",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.MediaDevices",
      "propertyName": "_function",
      "property": "function MediaDevices() {\n    [native code]\n}"
    },
    {
      "path": "window",
      "propertyName": "MediaStream",
      "property": {
        "prototype": {
          "_protos": ["EventTarget.prototype", "Object.prototype"],
          "id": {
            "_flags": "ce",
            "_accessException": "TypeError: The MediaStream.id getter can only be used on instances of MediaStream",
            "_get": "function id() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "active": {
            "_flags": "ce",
            "_accessException": "TypeError: The MediaStream.active getter can only be used on instances of MediaStream",
            "_get": "function active() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onaddtrack": {
            "_flags": "ce",
            "_accessException": "TypeError: The MediaStream.onaddtrack getter can only be used on instances of MediaStream",
            "_get": "function onaddtrack() {\n    [native code]\n}",
            "_set": "function onaddtrack() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onremovetrack": {
            "_flags": "ce",
            "_accessException": "TypeError: The MediaStream.onremovetrack getter can only be used on instances of MediaStream",
            "_get": "function onremovetrack() {\n    [native code]\n}",
            "_set": "function onremovetrack() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "getAudioTracks": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getAudioTracks"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function getAudioTracks() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "getVideoTracks": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getVideoTracks"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function getVideoTracks() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "getTracks": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getTracks"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function getTracks() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "getTrackById": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getTrackById"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function getTrackById() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "addTrack": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "addTrack"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function addTrack() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "removeTrack": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "removeTrack"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function removeTrack() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "clone": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "clone"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function clone() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "MediaStream"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": {
          "_protos": ["MediaStream.prototype", "EventTarget.prototype", "Object.prototype"],
          "id": {
            "_type": "string",
            "_value": "586852f5-0ace-4fb7-8e77-9dc06e99fc0e"
          },
          "active": {
            "_type": "boolean",
            "_value": false
          },
          "onaddtrack": {
            "_type": "object",
            "_value": null
          },
          "onremovetrack": {
            "_type": "object",
            "_value": null
          }
        },
        "_function": "function MediaStream() {\n    [native code]\n}",
        "_flags": "cw"
      }
    },
    {
      "path": "window.MediaStreamTrack.prototype.kind",
      "propertyName": "_accessException",
      "property": "TypeError: The MediaStreamTrack.kind getter can only be used on instances of MediaStreamTrack"
    },
    {
      "path": "window.MediaStreamTrack.prototype.kind",
      "propertyName": "_get",
      "property": "function kind() {\n    [native code]\n}"
    },
    {
      "path": "window.MediaStreamTrack.prototype.kind",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.MediaStreamTrack.prototype.id",
      "propertyName": "_accessException",
      "property": "TypeError: The MediaStreamTrack.id getter can only be used on instances of MediaStreamTrack"
    },
    {
      "path": "window.MediaStreamTrack.prototype.id",
      "propertyName": "_get",
      "property": "function id() {\n    [native code]\n}"
    },
    {
      "path": "window.MediaStreamTrack.prototype.id",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.MediaStreamTrack.prototype.label",
      "propertyName": "_accessException",
      "property": "TypeError: The MediaStreamTrack.label getter can only be used on instances of MediaStreamTrack"
    },
    {
      "path": "window.MediaStreamTrack.prototype.label",
      "propertyName": "_get",
      "property": "function label() {\n    [native code]\n}"
    },
    {
      "path": "window.MediaStreamTrack.prototype.label",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.MediaStreamTrack.prototype.enabled",
      "propertyName": "_accessException",
      "property": "TypeError: The MediaStreamTrack.enabled getter can only be used on instances of MediaStreamTrack"
    },
    {
      "path": "window.MediaStreamTrack.prototype.enabled",
      "propertyName": "_get",
      "property": "function enabled() {\n    [native code]\n}"
    },
    {
      "path": "window.MediaStreamTrack.prototype.enabled",
      "propertyName": "_set",
      "property": "function enabled() {\n    [native code]\n}"
    },
    {
      "path": "window.MediaStreamTrack.prototype.enabled",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.MediaStreamTrack.prototype.enabled",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.MediaStreamTrack.prototype.contentHint",
      "propertyName": "_accessException",
      "property": "TypeError: The MediaStreamTrack.contentHint getter can only be used on instances of MediaStreamTrack"
    },
    {
      "path": "window.MediaStreamTrack.prototype.contentHint",
      "propertyName": "_get",
      "property": "function contentHint() {\n    [native code]\n}"
    },
    {
      "path": "window.MediaStreamTrack.prototype.contentHint",
      "propertyName": "_set",
      "property": "function contentHint() {\n    [native code]\n}"
    },
    {
      "path": "window.MediaStreamTrack.prototype.contentHint",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.MediaStreamTrack.prototype.contentHint",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.MediaStreamTrack.prototype.muted",
      "propertyName": "_accessException",
      "property": "TypeError: The MediaStreamTrack.muted getter can only be used on instances of MediaStreamTrack"
    },
    {
      "path": "window.MediaStreamTrack.prototype.muted",
      "propertyName": "_get",
      "property": "function muted() {\n    [native code]\n}"
    },
    {
      "path": "window.MediaStreamTrack.prototype.muted",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.MediaStreamTrack.prototype.onmute",
      "propertyName": "_accessException",
      "property": "TypeError: The MediaStreamTrack.onmute getter can only be used on instances of MediaStreamTrack"
    },
    {
      "path": "window.MediaStreamTrack.prototype.onmute",
      "propertyName": "_get",
      "property": "function onmute() {\n    [native code]\n}"
    },
    {
      "path": "window.MediaStreamTrack.prototype.onmute",
      "propertyName": "_set",
      "property": "function onmute() {\n    [native code]\n}"
    },
    {
      "path": "window.MediaStreamTrack.prototype.onmute",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.MediaStreamTrack.prototype.onmute",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.MediaStreamTrack.prototype.onunmute",
      "propertyName": "_accessException",
      "property": "TypeError: The MediaStreamTrack.onunmute getter can only be used on instances of MediaStreamTrack"
    },
    {
      "path": "window.MediaStreamTrack.prototype.onunmute",
      "propertyName": "_get",
      "property": "function onunmute() {\n    [native code]\n}"
    },
    {
      "path": "window.MediaStreamTrack.prototype.onunmute",
      "propertyName": "_set",
      "property": "function onunmute() {\n    [native code]\n}"
    },
    {
      "path": "window.MediaStreamTrack.prototype.onunmute",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.MediaStreamTrack.prototype.onunmute",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.MediaStreamTrack.prototype.readyState",
      "propertyName": "_accessException",
      "property": "TypeError: The MediaStreamTrack.readyState getter can only be used on instances of MediaStreamTrack"
    },
    {
      "path": "window.MediaStreamTrack.prototype.readyState",
      "propertyName": "_get",
      "property": "function readyState() {\n    [native code]\n}"
    },
    {
      "path": "window.MediaStreamTrack.prototype.readyState",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.MediaStreamTrack.prototype.onended",
      "propertyName": "_accessException",
      "property": "TypeError: The MediaStreamTrack.onended getter can only be used on instances of MediaStreamTrack"
    },
    {
      "path": "window.MediaStreamTrack.prototype.onended",
      "propertyName": "_get",
      "property": "function onended() {\n    [native code]\n}"
    },
    {
      "path": "window.MediaStreamTrack.prototype.onended",
      "propertyName": "_set",
      "property": "function onended() {\n    [native code]\n}"
    },
    {
      "path": "window.MediaStreamTrack.prototype.onended",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.MediaStreamTrack.prototype.onended",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.MediaStreamTrack.prototype.clone",
      "propertyName": "_function",
      "property": "function clone() {\n    [native code]\n}"
    },
    {
      "path": "window.MediaStreamTrack.prototype.stop",
      "propertyName": "_function",
      "property": "function stop() {\n    [native code]\n}"
    },
    {
      "path": "window.MediaStreamTrack.prototype.getCapabilities",
      "propertyName": "_function",
      "property": "function getCapabilities() {\n    [native code]\n}"
    },
    {
      "path": "window.MediaStreamTrack.prototype.getConstraints",
      "propertyName": "_function",
      "property": "function getConstraints() {\n    [native code]\n}"
    },
    {
      "path": "window.MediaStreamTrack.prototype.getSettings",
      "propertyName": "_function",
      "property": "function getSettings() {\n    [native code]\n}"
    },
    {
      "path": "window.MediaStreamTrack.prototype.applyConstraints",
      "propertyName": "_function",
      "property": "function applyConstraints() {\n    [native code]\n}"
    },
    {
      "path": "window.MediaStreamTrack",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.MediaStreamTrack",
      "propertyName": "_function",
      "property": "function MediaStreamTrack() {\n    [native code]\n}"
    },
    {
      "path": "window.MediaStreamTrackEvent.prototype.track",
      "propertyName": "_accessException",
      "property": "TypeError: The MediaStreamTrackEvent.track getter can only be used on instances of MediaStreamTrackEvent"
    },
    {
      "path": "window.MediaStreamTrackEvent.prototype.track",
      "propertyName": "_get",
      "property": "function track() {\n    [native code]\n}"
    },
    {
      "path": "window.MediaStreamTrackEvent.prototype.track",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.MediaStreamTrackEvent",
      "propertyName": "new()",
      "property": "TypeError: Not enough arguments"
    },
    {
      "path": "window.MediaStreamTrackEvent",
      "propertyName": "_function",
      "property": "function MediaStreamTrackEvent() {\n    [native code]\n}"
    },
    {
      "path": "window.OverconstrainedError.prototype._protos",
      "propertyName": "0",
      "property": "Error.prototype"
    },
    {
      "path": "window.OverconstrainedError.prototype.message",
      "propertyName": "_accessException",
      "property": "TypeError: The OverconstrainedError.message getter can only be used on instances of OverconstrainedError"
    },
    {
      "path": "window.OverconstrainedError.prototype.message",
      "propertyName": "_get",
      "property": "function message() {\n    [native code]\n}"
    },
    {
      "path": "window.OverconstrainedError.prototype.message",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.OverconstrainedError.prototype.constraint",
      "propertyName": "_accessException",
      "property": "TypeError: The OverconstrainedError.constraint getter can only be used on instances of OverconstrainedError"
    },
    {
      "path": "window.OverconstrainedError.prototype.constraint",
      "propertyName": "_get",
      "property": "function constraint() {\n    [native code]\n}"
    },
    {
      "path": "window.OverconstrainedError.prototype.constraint",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.OverconstrainedError",
      "propertyName": "new()",
      "property": {
        "_protos": ["OverconstrainedError.prototype", "Error.prototype", "Object.prototype"],
        "message": {
          "_type": "string",
          "_value": ""
        },
        "constraint": {
          "_type": "string",
          "_value": ""
        }
      }
    },
    {
      "path": "window.OverconstrainedError",
      "propertyName": "_function",
      "property": "function OverconstrainedError() {\n    [native code]\n}"
    },
    {
      "path": "window.Notification.prototype.onclick",
      "propertyName": "_accessException",
      "property": "TypeError: The Notification.onclick getter can only be used on instances of Notification"
    },
    {
      "path": "window.Notification.prototype.onclick",
      "propertyName": "_get",
      "property": "function onclick() {\n    [native code]\n}"
    },
    {
      "path": "window.Notification.prototype.onclick",
      "propertyName": "_set",
      "property": "function onclick() {\n    [native code]\n}"
    },
    {
      "path": "window.Notification.prototype.onclick",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Notification.prototype.onclick",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Notification.prototype.onerror",
      "propertyName": "_accessException",
      "property": "TypeError: The Notification.onerror getter can only be used on instances of Notification"
    },
    {
      "path": "window.Notification.prototype.onerror",
      "propertyName": "_get",
      "property": "function onerror() {\n    [native code]\n}"
    },
    {
      "path": "window.Notification.prototype.onerror",
      "propertyName": "_set",
      "property": "function onerror() {\n    [native code]\n}"
    },
    {
      "path": "window.Notification.prototype.onerror",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Notification.prototype.onerror",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Notification.prototype.title",
      "propertyName": "_accessException",
      "property": "TypeError: The Notification.title getter can only be used on instances of Notification"
    },
    {
      "path": "window.Notification.prototype.title",
      "propertyName": "_get",
      "property": "function title() {\n    [native code]\n}"
    },
    {
      "path": "window.Notification.prototype.title",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Notification.prototype.dir",
      "propertyName": "_accessException",
      "property": "TypeError: The Notification.dir getter can only be used on instances of Notification"
    },
    {
      "path": "window.Notification.prototype.dir",
      "propertyName": "_get",
      "property": "function dir() {\n    [native code]\n}"
    },
    {
      "path": "window.Notification.prototype.dir",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Notification.prototype.lang",
      "propertyName": "_accessException",
      "property": "TypeError: The Notification.lang getter can only be used on instances of Notification"
    },
    {
      "path": "window.Notification.prototype.lang",
      "propertyName": "_get",
      "property": "function lang() {\n    [native code]\n}"
    },
    {
      "path": "window.Notification.prototype.lang",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Notification.prototype.body",
      "propertyName": "_accessException",
      "property": "TypeError: The Notification.body getter can only be used on instances of Notification"
    },
    {
      "path": "window.Notification.prototype.body",
      "propertyName": "_get",
      "property": "function body() {\n    [native code]\n}"
    },
    {
      "path": "window.Notification.prototype.body",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Notification.prototype.tag",
      "propertyName": "_accessException",
      "property": "TypeError: The Notification.tag getter can only be used on instances of Notification"
    },
    {
      "path": "window.Notification.prototype.tag",
      "propertyName": "_get",
      "property": "function tag() {\n    [native code]\n}"
    },
    {
      "path": "window.Notification.prototype.tag",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Notification.prototype.icon",
      "propertyName": "_accessException",
      "property": "TypeError: The Notification.icon getter can only be used on instances of Notification"
    },
    {
      "path": "window.Notification.prototype.icon",
      "propertyName": "_get",
      "property": "function icon() {\n    [native code]\n}"
    },
    {
      "path": "window.Notification.prototype.icon",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Notification.prototype.onclose",
      "propertyName": "_accessException",
      "property": "TypeError: The Notification.onclose getter can only be used on instances of Notification"
    },
    {
      "path": "window.Notification.prototype.onclose",
      "propertyName": "_get",
      "property": "function onclose() {\n    [native code]\n}"
    },
    {
      "path": "window.Notification.prototype.onclose",
      "propertyName": "_set",
      "property": "function onclose() {\n    [native code]\n}"
    },
    {
      "path": "window.Notification.prototype.onclose",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Notification.prototype.onclose",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Notification.prototype.onshow",
      "propertyName": "_accessException",
      "property": "TypeError: The Notification.onshow getter can only be used on instances of Notification"
    },
    {
      "path": "window.Notification.prototype.onshow",
      "propertyName": "_get",
      "property": "function onshow() {\n    [native code]\n}"
    },
    {
      "path": "window.Notification.prototype.onshow",
      "propertyName": "_set",
      "property": "function onshow() {\n    [native code]\n}"
    },
    {
      "path": "window.Notification.prototype.onshow",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Notification.prototype.onshow",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Notification.prototype.close",
      "propertyName": "_function",
      "property": "function close() {\n    [native code]\n}"
    },
    {
      "path": "window.Notification.requestPermission.name",
      "propertyName": "_value",
      "property": "requestPermission"
    },
    {
      "path": "window.Notification.requestPermission",
      "propertyName": "_function",
      "property": "function requestPermission() {\n    [native code]\n}"
    },
    {
      "path": "window.Notification",
      "propertyName": "new()",
      "property": "TypeError: Not enough arguments"
    },
    {
      "path": "window.Notification",
      "propertyName": "_function",
      "property": "function Notification() {\n    [native code]\n}"
    },
    {
      "path": "window.SpeechSynthesisEvent.prototype.charIndex",
      "propertyName": "_accessException",
      "property": "TypeError: The SpeechSynthesisEvent.charIndex getter can only be used on instances of SpeechSynthesisEvent"
    },
    {
      "path": "window.SpeechSynthesisEvent.prototype.charIndex",
      "propertyName": "_get",
      "property": "function charIndex() {\n    [native code]\n}"
    },
    {
      "path": "window.SpeechSynthesisEvent.prototype.charIndex",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SpeechSynthesisEvent.prototype.elapsedTime",
      "propertyName": "_accessException",
      "property": "TypeError: The SpeechSynthesisEvent.elapsedTime getter can only be used on instances of SpeechSynthesisEvent"
    },
    {
      "path": "window.SpeechSynthesisEvent.prototype.elapsedTime",
      "propertyName": "_get",
      "property": "function elapsedTime() {\n    [native code]\n}"
    },
    {
      "path": "window.SpeechSynthesisEvent.prototype.elapsedTime",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SpeechSynthesisEvent.prototype.name",
      "propertyName": "_accessException",
      "property": "TypeError: The SpeechSynthesisEvent.name getter can only be used on instances of SpeechSynthesisEvent"
    },
    {
      "path": "window.SpeechSynthesisEvent.prototype.name",
      "propertyName": "_get",
      "property": "function name() {\n    [native code]\n}"
    },
    {
      "path": "window.SpeechSynthesisEvent.prototype.name",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SpeechSynthesisEvent",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.SpeechSynthesisEvent",
      "propertyName": "_function",
      "property": "function SpeechSynthesisEvent() {\n    [native code]\n}"
    },
    {
      "path": "window.SpeechSynthesisUtterance.prototype.text",
      "propertyName": "_accessException",
      "property": "TypeError: The SpeechSynthesisUtterance.text getter can only be used on instances of SpeechSynthesisUtterance"
    },
    {
      "path": "window.SpeechSynthesisUtterance.prototype.text",
      "propertyName": "_get",
      "property": "function text() {\n    [native code]\n}"
    },
    {
      "path": "window.SpeechSynthesisUtterance.prototype.text",
      "propertyName": "_set",
      "property": "function text() {\n    [native code]\n}"
    },
    {
      "path": "window.SpeechSynthesisUtterance.prototype.text",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SpeechSynthesisUtterance.prototype.text",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SpeechSynthesisUtterance.prototype.lang",
      "propertyName": "_accessException",
      "property": "TypeError: The SpeechSynthesisUtterance.lang getter can only be used on instances of SpeechSynthesisUtterance"
    },
    {
      "path": "window.SpeechSynthesisUtterance.prototype.lang",
      "propertyName": "_get",
      "property": "function lang() {\n    [native code]\n}"
    },
    {
      "path": "window.SpeechSynthesisUtterance.prototype.lang",
      "propertyName": "_set",
      "property": "function lang() {\n    [native code]\n}"
    },
    {
      "path": "window.SpeechSynthesisUtterance.prototype.lang",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SpeechSynthesisUtterance.prototype.lang",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SpeechSynthesisUtterance.prototype.voice",
      "propertyName": "_accessException",
      "property": "TypeError: The SpeechSynthesisUtterance.voice getter can only be used on instances of SpeechSynthesisUtterance"
    },
    {
      "path": "window.SpeechSynthesisUtterance.prototype.voice",
      "propertyName": "_get",
      "property": "function voice() {\n    [native code]\n}"
    },
    {
      "path": "window.SpeechSynthesisUtterance.prototype.voice",
      "propertyName": "_set",
      "property": "function voice() {\n    [native code]\n}"
    },
    {
      "path": "window.SpeechSynthesisUtterance.prototype.voice",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SpeechSynthesisUtterance.prototype.voice",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SpeechSynthesisUtterance.prototype.volume",
      "propertyName": "_accessException",
      "property": "TypeError: The SpeechSynthesisUtterance.volume getter can only be used on instances of SpeechSynthesisUtterance"
    },
    {
      "path": "window.SpeechSynthesisUtterance.prototype.volume",
      "propertyName": "_get",
      "property": "function volume() {\n    [native code]\n}"
    },
    {
      "path": "window.SpeechSynthesisUtterance.prototype.volume",
      "propertyName": "_set",
      "property": "function volume() {\n    [native code]\n}"
    },
    {
      "path": "window.SpeechSynthesisUtterance.prototype.volume",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SpeechSynthesisUtterance.prototype.volume",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SpeechSynthesisUtterance.prototype.rate",
      "propertyName": "_accessException",
      "property": "TypeError: The SpeechSynthesisUtterance.rate getter can only be used on instances of SpeechSynthesisUtterance"
    },
    {
      "path": "window.SpeechSynthesisUtterance.prototype.rate",
      "propertyName": "_get",
      "property": "function rate() {\n    [native code]\n}"
    },
    {
      "path": "window.SpeechSynthesisUtterance.prototype.rate",
      "propertyName": "_set",
      "property": "function rate() {\n    [native code]\n}"
    },
    {
      "path": "window.SpeechSynthesisUtterance.prototype.rate",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SpeechSynthesisUtterance.prototype.rate",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SpeechSynthesisUtterance.prototype.pitch",
      "propertyName": "_accessException",
      "property": "TypeError: The SpeechSynthesisUtterance.pitch getter can only be used on instances of SpeechSynthesisUtterance"
    },
    {
      "path": "window.SpeechSynthesisUtterance.prototype.pitch",
      "propertyName": "_get",
      "property": "function pitch() {\n    [native code]\n}"
    },
    {
      "path": "window.SpeechSynthesisUtterance.prototype.pitch",
      "propertyName": "_set",
      "property": "function pitch() {\n    [native code]\n}"
    },
    {
      "path": "window.SpeechSynthesisUtterance.prototype.pitch",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SpeechSynthesisUtterance.prototype.pitch",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SpeechSynthesisUtterance.prototype.onstart",
      "propertyName": "_accessException",
      "property": "TypeError: The SpeechSynthesisUtterance.onstart getter can only be used on instances of SpeechSynthesisUtterance"
    },
    {
      "path": "window.SpeechSynthesisUtterance.prototype.onstart",
      "propertyName": "_get",
      "property": "function onstart() {\n    [native code]\n}"
    },
    {
      "path": "window.SpeechSynthesisUtterance.prototype.onstart",
      "propertyName": "_set",
      "property": "function onstart() {\n    [native code]\n}"
    },
    {
      "path": "window.SpeechSynthesisUtterance.prototype.onstart",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SpeechSynthesisUtterance.prototype.onstart",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SpeechSynthesisUtterance.prototype.onend",
      "propertyName": "_accessException",
      "property": "TypeError: The SpeechSynthesisUtterance.onend getter can only be used on instances of SpeechSynthesisUtterance"
    },
    {
      "path": "window.SpeechSynthesisUtterance.prototype.onend",
      "propertyName": "_get",
      "property": "function onend() {\n    [native code]\n}"
    },
    {
      "path": "window.SpeechSynthesisUtterance.prototype.onend",
      "propertyName": "_set",
      "property": "function onend() {\n    [native code]\n}"
    },
    {
      "path": "window.SpeechSynthesisUtterance.prototype.onend",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SpeechSynthesisUtterance.prototype.onend",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SpeechSynthesisUtterance.prototype.onerror",
      "propertyName": "_accessException",
      "property": "TypeError: The SpeechSynthesisUtterance.onerror getter can only be used on instances of SpeechSynthesisUtterance"
    },
    {
      "path": "window.SpeechSynthesisUtterance.prototype.onerror",
      "propertyName": "_get",
      "property": "function onerror() {\n    [native code]\n}"
    },
    {
      "path": "window.SpeechSynthesisUtterance.prototype.onerror",
      "propertyName": "_set",
      "property": "function onerror() {\n    [native code]\n}"
    },
    {
      "path": "window.SpeechSynthesisUtterance.prototype.onerror",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SpeechSynthesisUtterance.prototype.onerror",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SpeechSynthesisUtterance.prototype.onpause",
      "propertyName": "_accessException",
      "property": "TypeError: The SpeechSynthesisUtterance.onpause getter can only be used on instances of SpeechSynthesisUtterance"
    },
    {
      "path": "window.SpeechSynthesisUtterance.prototype.onpause",
      "propertyName": "_get",
      "property": "function onpause() {\n    [native code]\n}"
    },
    {
      "path": "window.SpeechSynthesisUtterance.prototype.onpause",
      "propertyName": "_set",
      "property": "function onpause() {\n    [native code]\n}"
    },
    {
      "path": "window.SpeechSynthesisUtterance.prototype.onpause",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SpeechSynthesisUtterance.prototype.onpause",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SpeechSynthesisUtterance.prototype.onresume",
      "propertyName": "_accessException",
      "property": "TypeError: The SpeechSynthesisUtterance.onresume getter can only be used on instances of SpeechSynthesisUtterance"
    },
    {
      "path": "window.SpeechSynthesisUtterance.prototype.onresume",
      "propertyName": "_get",
      "property": "function onresume() {\n    [native code]\n}"
    },
    {
      "path": "window.SpeechSynthesisUtterance.prototype.onresume",
      "propertyName": "_set",
      "property": "function onresume() {\n    [native code]\n}"
    },
    {
      "path": "window.SpeechSynthesisUtterance.prototype.onresume",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SpeechSynthesisUtterance.prototype.onresume",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SpeechSynthesisUtterance.prototype.onmark",
      "propertyName": "_accessException",
      "property": "TypeError: The SpeechSynthesisUtterance.onmark getter can only be used on instances of SpeechSynthesisUtterance"
    },
    {
      "path": "window.SpeechSynthesisUtterance.prototype.onmark",
      "propertyName": "_get",
      "property": "function onmark() {\n    [native code]\n}"
    },
    {
      "path": "window.SpeechSynthesisUtterance.prototype.onmark",
      "propertyName": "_set",
      "property": "function onmark() {\n    [native code]\n}"
    },
    {
      "path": "window.SpeechSynthesisUtterance.prototype.onmark",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SpeechSynthesisUtterance.prototype.onmark",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SpeechSynthesisUtterance.prototype.onboundary",
      "propertyName": "_accessException",
      "property": "TypeError: The SpeechSynthesisUtterance.onboundary getter can only be used on instances of SpeechSynthesisUtterance"
    },
    {
      "path": "window.SpeechSynthesisUtterance.prototype.onboundary",
      "propertyName": "_get",
      "property": "function onboundary() {\n    [native code]\n}"
    },
    {
      "path": "window.SpeechSynthesisUtterance.prototype.onboundary",
      "propertyName": "_set",
      "property": "function onboundary() {\n    [native code]\n}"
    },
    {
      "path": "window.SpeechSynthesisUtterance.prototype.onboundary",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SpeechSynthesisUtterance.prototype.onboundary",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SpeechSynthesisUtterance.new().volume",
      "propertyName": "_value",
      "property": 1
    },
    {
      "path": "window.SpeechSynthesisUtterance.new().rate",
      "propertyName": "_value",
      "property": 1
    },
    {
      "path": "window.SpeechSynthesisUtterance.new().pitch",
      "propertyName": "_value",
      "property": 1
    },
    {
      "path": "window.SpeechSynthesisUtterance",
      "propertyName": "_function",
      "property": "function SpeechSynthesisUtterance() {\n    [native code]\n}"
    },
    {
      "path": "window.ByteLengthQueuingStrategy.prototype.size",
      "propertyName": "_flags",
      "property": "cew"
    },
    {
      "path": "window.ByteLengthQueuingStrategy",
      "propertyName": "new()",
      "property": "TypeError: undefined is not an object"
    },
    {
      "path": "window.ByteLengthQueuingStrategy",
      "propertyName": "_function",
      "property": "function ByteLengthQueuingStrategy() {\n    [native code]\n}"
    },
    {
      "path": "window.CountQueuingStrategy.prototype.size",
      "propertyName": "_flags",
      "property": "cew"
    },
    {
      "path": "window.CountQueuingStrategy",
      "propertyName": "new()",
      "property": "TypeError: undefined is not an object"
    },
    {
      "path": "window.CountQueuingStrategy",
      "propertyName": "_function",
      "property": "function CountQueuingStrategy() {\n    [native code]\n}"
    },
    {
      "path": "window.ReadableStream.prototype.locked",
      "propertyName": "_accessException",
      "property": "TypeError: The ReadableStream.locked getter can only be used on instances of ReadableStream"
    },
    {
      "path": "window.ReadableStream.prototype.locked",
      "propertyName": "_get",
      "property": "function get locked() {\n    [native code]\n}"
    },
    {
      "path": "window.ReadableStream.prototype.locked",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.ReadableStream.prototype.cancel",
      "propertyName": "_function",
      "property": "function cancel() {\n    [native code]\n}"
    },
    {
      "path": "window.ReadableStream.prototype.getReader",
      "propertyName": "_function",
      "property": "function getReader() {\n    [native code]\n}"
    },
    {
      "path": "window.ReadableStream.prototype.pipeTo",
      "propertyName": "_function",
      "property": "function pipeTo() {\n    [native code]\n}"
    },
    {
      "path": "window.ReadableStream.prototype.pipeThrough",
      "propertyName": "_function",
      "property": "function pipeThrough() {\n    [native code]\n}"
    },
    {
      "path": "window.ReadableStream.prototype.tee",
      "propertyName": "_function",
      "property": "function tee() {\n    [native code]\n}"
    },
    {
      "path": "window.ReadableStream",
      "propertyName": "_function",
      "property": "function ReadableStream() {\n    [native code]\n}"
    },
    {
      "path": "window.AnalyserNode.prototype.fftSize",
      "propertyName": "_accessException",
      "property": "TypeError: The AnalyserNode.fftSize getter can only be used on instances of AnalyserNode"
    },
    {
      "path": "window.AnalyserNode.prototype.fftSize",
      "propertyName": "_get",
      "property": "function fftSize() {\n    [native code]\n}"
    },
    {
      "path": "window.AnalyserNode.prototype.fftSize",
      "propertyName": "_set",
      "property": "function fftSize() {\n    [native code]\n}"
    },
    {
      "path": "window.AnalyserNode.prototype.fftSize",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.AnalyserNode.prototype.fftSize",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.AnalyserNode.prototype.frequencyBinCount",
      "propertyName": "_accessException",
      "property": "TypeError: The AnalyserNode.frequencyBinCount getter can only be used on instances of AnalyserNode"
    },
    {
      "path": "window.AnalyserNode.prototype.frequencyBinCount",
      "propertyName": "_get",
      "property": "function frequencyBinCount() {\n    [native code]\n}"
    },
    {
      "path": "window.AnalyserNode.prototype.frequencyBinCount",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.AnalyserNode.prototype.minDecibels",
      "propertyName": "_accessException",
      "property": "TypeError: The AnalyserNode.minDecibels getter can only be used on instances of AnalyserNode"
    },
    {
      "path": "window.AnalyserNode.prototype.minDecibels",
      "propertyName": "_get",
      "property": "function minDecibels() {\n    [native code]\n}"
    },
    {
      "path": "window.AnalyserNode.prototype.minDecibels",
      "propertyName": "_set",
      "property": "function minDecibels() {\n    [native code]\n}"
    },
    {
      "path": "window.AnalyserNode.prototype.minDecibels",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.AnalyserNode.prototype.minDecibels",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.AnalyserNode.prototype.maxDecibels",
      "propertyName": "_accessException",
      "property": "TypeError: The AnalyserNode.maxDecibels getter can only be used on instances of AnalyserNode"
    },
    {
      "path": "window.AnalyserNode.prototype.maxDecibels",
      "propertyName": "_get",
      "property": "function maxDecibels() {\n    [native code]\n}"
    },
    {
      "path": "window.AnalyserNode.prototype.maxDecibels",
      "propertyName": "_set",
      "property": "function maxDecibels() {\n    [native code]\n}"
    },
    {
      "path": "window.AnalyserNode.prototype.maxDecibels",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.AnalyserNode.prototype.maxDecibels",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.AnalyserNode.prototype.smoothingTimeConstant",
      "propertyName": "_accessException",
      "property": "TypeError: The AnalyserNode.smoothingTimeConstant getter can only be used on instances of AnalyserNode"
    },
    {
      "path": "window.AnalyserNode.prototype.smoothingTimeConstant",
      "propertyName": "_get",
      "property": "function smoothingTimeConstant() {\n    [native code]\n}"
    },
    {
      "path": "window.AnalyserNode.prototype.smoothingTimeConstant",
      "propertyName": "_set",
      "property": "function smoothingTimeConstant() {\n    [native code]\n}"
    },
    {
      "path": "window.AnalyserNode.prototype.smoothingTimeConstant",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.AnalyserNode.prototype.smoothingTimeConstant",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.AnalyserNode.prototype.getFloatFrequencyData",
      "propertyName": "_function",
      "property": "function getFloatFrequencyData() {\n    [native code]\n}"
    },
    {
      "path": "window.AnalyserNode.prototype.getByteFrequencyData",
      "propertyName": "_function",
      "property": "function getByteFrequencyData() {\n    [native code]\n}"
    },
    {
      "path": "window.AnalyserNode.prototype.getByteTimeDomainData",
      "propertyName": "_function",
      "property": "function getByteTimeDomainData() {\n    [native code]\n}"
    },
    {
      "path": "window.AnalyserNode",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.AnalyserNode",
      "propertyName": "_function",
      "property": "function AnalyserNode() {\n    [native code]\n}"
    },
    {
      "path": "window.AudioBuffer.prototype.length",
      "propertyName": "_accessException",
      "property": "TypeError: The AudioBuffer.length getter can only be used on instances of AudioBuffer"
    },
    {
      "path": "window.AudioBuffer.prototype.length",
      "propertyName": "_get",
      "property": "function length() {\n    [native code]\n}"
    },
    {
      "path": "window.AudioBuffer.prototype.length",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.AudioBuffer.prototype.duration",
      "propertyName": "_accessException",
      "property": "TypeError: The AudioBuffer.duration getter can only be used on instances of AudioBuffer"
    },
    {
      "path": "window.AudioBuffer.prototype.duration",
      "propertyName": "_get",
      "property": "function duration() {\n    [native code]\n}"
    },
    {
      "path": "window.AudioBuffer.prototype.duration",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.AudioBuffer.prototype.sampleRate",
      "propertyName": "_accessException",
      "property": "TypeError: The AudioBuffer.sampleRate getter can only be used on instances of AudioBuffer"
    },
    {
      "path": "window.AudioBuffer.prototype.sampleRate",
      "propertyName": "_get",
      "property": "function sampleRate() {\n    [native code]\n}"
    },
    {
      "path": "window.AudioBuffer.prototype.sampleRate",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.AudioBuffer.prototype.numberOfChannels",
      "propertyName": "_accessException",
      "property": "TypeError: The AudioBuffer.numberOfChannels getter can only be used on instances of AudioBuffer"
    },
    {
      "path": "window.AudioBuffer.prototype.numberOfChannels",
      "propertyName": "_get",
      "property": "function numberOfChannels() {\n    [native code]\n}"
    },
    {
      "path": "window.AudioBuffer.prototype.numberOfChannels",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.AudioBuffer.prototype.getChannelData",
      "propertyName": "_function",
      "property": "function getChannelData() {\n    [native code]\n}"
    },
    {
      "path": "window.AudioBuffer",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.AudioBuffer",
      "propertyName": "_function",
      "property": "function AudioBuffer() {\n    [native code]\n}"
    },
    {
      "path": "window.AudioBufferSourceNode.prototype._protos",
      "propertyName": "0",
      "property": "AudioNode.prototype"
    },
    {
      "path": "window.AudioBufferSourceNode.prototype._protos",
      "propertyName": "1",
      "property": "EventTarget.prototype"
    },
    {
      "path": "window.AudioBufferSourceNode.prototype._protos",
      "propertyName": "2",
      "property": "Object.prototype"
    },
    {
      "path": "window.AudioBufferSourceNode.prototype.buffer",
      "propertyName": "_accessException",
      "property": "TypeError: The AudioBufferSourceNode.buffer getter can only be used on instances of AudioBufferSourceNode"
    },
    {
      "path": "window.AudioBufferSourceNode.prototype.buffer",
      "propertyName": "_get",
      "property": "function buffer() {\n    [native code]\n}"
    },
    {
      "path": "window.AudioBufferSourceNode.prototype.buffer",
      "propertyName": "_set",
      "property": "function buffer() {\n    [native code]\n}"
    },
    {
      "path": "window.AudioBufferSourceNode.prototype.buffer",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.AudioBufferSourceNode.prototype.buffer",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.AudioBufferSourceNode.prototype.playbackRate",
      "propertyName": "_accessException",
      "property": "TypeError: The AudioBufferSourceNode.playbackRate getter can only be used on instances of AudioBufferSourceNode"
    },
    {
      "path": "window.AudioBufferSourceNode.prototype.playbackRate",
      "propertyName": "_get",
      "property": "function playbackRate() {\n    [native code]\n}"
    },
    {
      "path": "window.AudioBufferSourceNode.prototype.playbackRate",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.AudioBufferSourceNode.prototype.loop",
      "propertyName": "_accessException",
      "property": "TypeError: The AudioBufferSourceNode.loop getter can only be used on instances of AudioBufferSourceNode"
    },
    {
      "path": "window.AudioBufferSourceNode.prototype.loop",
      "propertyName": "_get",
      "property": "function loop() {\n    [native code]\n}"
    },
    {
      "path": "window.AudioBufferSourceNode.prototype.loop",
      "propertyName": "_set",
      "property": "function loop() {\n    [native code]\n}"
    },
    {
      "path": "window.AudioBufferSourceNode.prototype.loop",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.AudioBufferSourceNode.prototype.loop",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.AudioBufferSourceNode.prototype.loopStart",
      "propertyName": "_accessException",
      "property": "TypeError: The AudioBufferSourceNode.loopStart getter can only be used on instances of AudioBufferSourceNode"
    },
    {
      "path": "window.AudioBufferSourceNode.prototype.loopStart",
      "propertyName": "_get",
      "property": "function loopStart() {\n    [native code]\n}"
    },
    {
      "path": "window.AudioBufferSourceNode.prototype.loopStart",
      "propertyName": "_set",
      "property": "function loopStart() {\n    [native code]\n}"
    },
    {
      "path": "window.AudioBufferSourceNode.prototype.loopStart",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.AudioBufferSourceNode.prototype.loopStart",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.AudioBufferSourceNode.prototype.loopEnd",
      "propertyName": "_accessException",
      "property": "TypeError: The AudioBufferSourceNode.loopEnd getter can only be used on instances of AudioBufferSourceNode"
    },
    {
      "path": "window.AudioBufferSourceNode.prototype.loopEnd",
      "propertyName": "_get",
      "property": "function loopEnd() {\n    [native code]\n}"
    },
    {
      "path": "window.AudioBufferSourceNode.prototype.loopEnd",
      "propertyName": "_set",
      "property": "function loopEnd() {\n    [native code]\n}"
    },
    {
      "path": "window.AudioBufferSourceNode.prototype.loopEnd",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.AudioBufferSourceNode.prototype.loopEnd",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.AudioBufferSourceNode.prototype.start",
      "propertyName": "_function",
      "property": "function start() {\n    [native code]\n}"
    },
    {
      "path": "window.AudioBufferSourceNode",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.AudioBufferSourceNode",
      "propertyName": "_function",
      "property": "function AudioBufferSourceNode() {\n    [native code]\n}"
    },
    {
      "path": "window.AudioDestinationNode.prototype.maxChannelCount",
      "propertyName": "_accessException",
      "property": "TypeError: The AudioDestinationNode.maxChannelCount getter can only be used on instances of AudioDestinationNode"
    },
    {
      "path": "window.AudioDestinationNode.prototype.maxChannelCount",
      "propertyName": "_get",
      "property": "function maxChannelCount() {\n    [native code]\n}"
    },
    {
      "path": "window.AudioDestinationNode.prototype.maxChannelCount",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.AudioDestinationNode",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.AudioDestinationNode",
      "propertyName": "_function",
      "property": "function AudioDestinationNode() {\n    [native code]\n}"
    },
    {
      "path": "window.AudioListener.prototype.setPosition",
      "propertyName": "_function",
      "property": "function setPosition() {\n    [native code]\n}"
    },
    {
      "path": "window.AudioListener.prototype.setOrientation",
      "propertyName": "_function",
      "property": "function setOrientation() {\n    [native code]\n}"
    },
    {
      "path": "window.AudioListener",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.AudioListener",
      "propertyName": "_function",
      "property": "function AudioListener() {\n    [native code]\n}"
    },
    {
      "path": "window.AudioNode.prototype.context",
      "propertyName": "_accessException",
      "property": "TypeError: The AudioNode.context getter can only be used on instances of AudioNode"
    },
    {
      "path": "window.AudioNode.prototype.context",
      "propertyName": "_get",
      "property": "function context() {\n    [native code]\n}"
    },
    {
      "path": "window.AudioNode.prototype.context",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.AudioNode.prototype.numberOfInputs",
      "propertyName": "_accessException",
      "property": "TypeError: The AudioNode.numberOfInputs getter can only be used on instances of AudioNode"
    },
    {
      "path": "window.AudioNode.prototype.numberOfInputs",
      "propertyName": "_get",
      "property": "function numberOfInputs() {\n    [native code]\n}"
    },
    {
      "path": "window.AudioNode.prototype.numberOfInputs",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.AudioNode.prototype.numberOfOutputs",
      "propertyName": "_accessException",
      "property": "TypeError: The AudioNode.numberOfOutputs getter can only be used on instances of AudioNode"
    },
    {
      "path": "window.AudioNode.prototype.numberOfOutputs",
      "propertyName": "_get",
      "property": "function numberOfOutputs() {\n    [native code]\n}"
    },
    {
      "path": "window.AudioNode.prototype.numberOfOutputs",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.AudioNode.prototype.channelCount",
      "propertyName": "_accessException",
      "property": "TypeError: The AudioNode.channelCount getter can only be used on instances of AudioNode"
    },
    {
      "path": "window.AudioNode.prototype.channelCount",
      "propertyName": "_get",
      "property": "function channelCount() {\n    [native code]\n}"
    },
    {
      "path": "window.AudioNode.prototype.channelCount",
      "propertyName": "_set",
      "property": "function channelCount() {\n    [native code]\n}"
    },
    {
      "path": "window.AudioNode.prototype.channelCount",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.AudioNode.prototype.channelCount",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.AudioNode.prototype.channelCountMode",
      "propertyName": "_accessException",
      "property": "TypeError: The AudioNode.channelCountMode getter can only be used on instances of AudioNode"
    },
    {
      "path": "window.AudioNode.prototype.channelCountMode",
      "propertyName": "_get",
      "property": "function channelCountMode() {\n    [native code]\n}"
    },
    {
      "path": "window.AudioNode.prototype.channelCountMode",
      "propertyName": "_set",
      "property": "function channelCountMode() {\n    [native code]\n}"
    },
    {
      "path": "window.AudioNode.prototype.channelCountMode",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.AudioNode.prototype.channelCountMode",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.AudioNode.prototype.channelInterpretation",
      "propertyName": "_accessException",
      "property": "TypeError: The AudioNode.channelInterpretation getter can only be used on instances of AudioNode"
    },
    {
      "path": "window.AudioNode.prototype.channelInterpretation",
      "propertyName": "_get",
      "property": "function channelInterpretation() {\n    [native code]\n}"
    },
    {
      "path": "window.AudioNode.prototype.channelInterpretation",
      "propertyName": "_set",
      "property": "function channelInterpretation() {\n    [native code]\n}"
    },
    {
      "path": "window.AudioNode.prototype.channelInterpretation",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.AudioNode.prototype.channelInterpretation",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.AudioNode.prototype.connect",
      "propertyName": "_function",
      "property": "function connect() {\n    [native code]\n}"
    },
    {
      "path": "window.AudioNode.prototype.disconnect",
      "propertyName": "_function",
      "property": "function disconnect() {\n    [native code]\n}"
    },
    {
      "path": "window.AudioNode",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.AudioNode",
      "propertyName": "_function",
      "property": "function AudioNode() {\n    [native code]\n}"
    },
    {
      "path": "window.AudioParam.prototype.value",
      "propertyName": "_accessException",
      "property": "TypeError: The AudioParam.value getter can only be used on instances of AudioParam"
    },
    {
      "path": "window.AudioParam.prototype.value",
      "propertyName": "_get",
      "property": "function value() {\n    [native code]\n}"
    },
    {
      "path": "window.AudioParam.prototype.value",
      "propertyName": "_set",
      "property": "function value() {\n    [native code]\n}"
    },
    {
      "path": "window.AudioParam.prototype.value",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.AudioParam.prototype.value",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.AudioParam.prototype.minValue",
      "propertyName": "_accessException",
      "property": "TypeError: The AudioParam.minValue getter can only be used on instances of AudioParam"
    },
    {
      "path": "window.AudioParam.prototype.minValue",
      "propertyName": "_get",
      "property": "function minValue() {\n    [native code]\n}"
    },
    {
      "path": "window.AudioParam.prototype.minValue",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.AudioParam.prototype.maxValue",
      "propertyName": "_accessException",
      "property": "TypeError: The AudioParam.maxValue getter can only be used on instances of AudioParam"
    },
    {
      "path": "window.AudioParam.prototype.maxValue",
      "propertyName": "_get",
      "property": "function maxValue() {\n    [native code]\n}"
    },
    {
      "path": "window.AudioParam.prototype.maxValue",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.AudioParam.prototype.defaultValue",
      "propertyName": "_accessException",
      "property": "TypeError: The AudioParam.defaultValue getter can only be used on instances of AudioParam"
    },
    {
      "path": "window.AudioParam.prototype.defaultValue",
      "propertyName": "_get",
      "property": "function defaultValue() {\n    [native code]\n}"
    },
    {
      "path": "window.AudioParam.prototype.defaultValue",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.AudioParam.prototype.setValueAtTime",
      "propertyName": "_function",
      "property": "function setValueAtTime() {\n    [native code]\n}"
    },
    {
      "path": "window.AudioParam.prototype.linearRampToValueAtTime",
      "propertyName": "_function",
      "property": "function linearRampToValueAtTime() {\n    [native code]\n}"
    },
    {
      "path": "window.AudioParam.prototype.exponentialRampToValueAtTime",
      "propertyName": "_function",
      "property": "function exponentialRampToValueAtTime() {\n    [native code]\n}"
    },
    {
      "path": "window.AudioParam.prototype.setTargetAtTime",
      "propertyName": "_function",
      "property": "function setTargetAtTime() {\n    [native code]\n}"
    },
    {
      "path": "window.AudioParam.prototype.setValueCurveAtTime",
      "propertyName": "_function",
      "property": "function setValueCurveAtTime() {\n    [native code]\n}"
    },
    {
      "path": "window.AudioParam.prototype.cancelScheduledValues",
      "propertyName": "_function",
      "property": "function cancelScheduledValues() {\n    [native code]\n}"
    },
    {
      "path": "window.AudioParam",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.AudioParam",
      "propertyName": "_function",
      "property": "function AudioParam() {\n    [native code]\n}"
    },
    {
      "path": "window.AudioProcessingEvent.prototype.playbackTime",
      "propertyName": "_accessException",
      "property": "TypeError: The AudioProcessingEvent.playbackTime getter can only be used on instances of AudioProcessingEvent"
    },
    {
      "path": "window.AudioProcessingEvent.prototype.playbackTime",
      "propertyName": "_get",
      "property": "function playbackTime() {\n    [native code]\n}"
    },
    {
      "path": "window.AudioProcessingEvent.prototype.playbackTime",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.AudioProcessingEvent.prototype.inputBuffer",
      "propertyName": "_accessException",
      "property": "TypeError: The AudioProcessingEvent.inputBuffer getter can only be used on instances of AudioProcessingEvent"
    },
    {
      "path": "window.AudioProcessingEvent.prototype.inputBuffer",
      "propertyName": "_get",
      "property": "function inputBuffer() {\n    [native code]\n}"
    },
    {
      "path": "window.AudioProcessingEvent.prototype.inputBuffer",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.AudioProcessingEvent.prototype.outputBuffer",
      "propertyName": "_accessException",
      "property": "TypeError: The AudioProcessingEvent.outputBuffer getter can only be used on instances of AudioProcessingEvent"
    },
    {
      "path": "window.AudioProcessingEvent.prototype.outputBuffer",
      "propertyName": "_get",
      "property": "function outputBuffer() {\n    [native code]\n}"
    },
    {
      "path": "window.AudioProcessingEvent.prototype.outputBuffer",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.AudioProcessingEvent",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.AudioProcessingEvent",
      "propertyName": "_function",
      "property": "function AudioProcessingEvent() {\n    [native code]\n}"
    },
    {
      "path": "window.BiquadFilterNode.prototype.type",
      "propertyName": "_accessException",
      "property": "TypeError: The BiquadFilterNode.type getter can only be used on instances of BiquadFilterNode"
    },
    {
      "path": "window.BiquadFilterNode.prototype.type",
      "propertyName": "_get",
      "property": "function type() {\n    [native code]\n}"
    },
    {
      "path": "window.BiquadFilterNode.prototype.type",
      "propertyName": "_set",
      "property": "function type() {\n    [native code]\n}"
    },
    {
      "path": "window.BiquadFilterNode.prototype.type",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.BiquadFilterNode.prototype.type",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.BiquadFilterNode.prototype.frequency",
      "propertyName": "_accessException",
      "property": "TypeError: The BiquadFilterNode.frequency getter can only be used on instances of BiquadFilterNode"
    },
    {
      "path": "window.BiquadFilterNode.prototype.frequency",
      "propertyName": "_get",
      "property": "function frequency() {\n    [native code]\n}"
    },
    {
      "path": "window.BiquadFilterNode.prototype.frequency",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.BiquadFilterNode.prototype.detune",
      "propertyName": "_accessException",
      "property": "TypeError: The BiquadFilterNode.detune getter can only be used on instances of BiquadFilterNode"
    },
    {
      "path": "window.BiquadFilterNode.prototype.detune",
      "propertyName": "_get",
      "property": "function detune() {\n    [native code]\n}"
    },
    {
      "path": "window.BiquadFilterNode.prototype.detune",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.BiquadFilterNode.prototype.Q",
      "propertyName": "_accessException",
      "property": "TypeError: The BiquadFilterNode.Q getter can only be used on instances of BiquadFilterNode"
    },
    {
      "path": "window.BiquadFilterNode.prototype.Q",
      "propertyName": "_get",
      "property": "function Q() {\n    [native code]\n}"
    },
    {
      "path": "window.BiquadFilterNode.prototype.Q",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.BiquadFilterNode.prototype.gain",
      "propertyName": "_accessException",
      "property": "TypeError: The BiquadFilterNode.gain getter can only be used on instances of BiquadFilterNode"
    },
    {
      "path": "window.BiquadFilterNode.prototype.gain",
      "propertyName": "_get",
      "property": "function gain() {\n    [native code]\n}"
    },
    {
      "path": "window.BiquadFilterNode.prototype.gain",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.BiquadFilterNode.prototype.getFrequencyResponse",
      "propertyName": "_function",
      "property": "function getFrequencyResponse() {\n    [native code]\n}"
    },
    {
      "path": "window.BiquadFilterNode",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.BiquadFilterNode",
      "propertyName": "_function",
      "property": "function BiquadFilterNode() {\n    [native code]\n}"
    },
    {
      "path": "window.ChannelMergerNode",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.ChannelMergerNode",
      "propertyName": "_function",
      "property": "function ChannelMergerNode() {\n    [native code]\n}"
    },
    {
      "path": "window.ChannelSplitterNode",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.ChannelSplitterNode",
      "propertyName": "_function",
      "property": "function ChannelSplitterNode() {\n    [native code]\n}"
    },
    {
      "path": "window.ConvolverNode.prototype.buffer",
      "propertyName": "_accessException",
      "property": "TypeError: The ConvolverNode.buffer getter can only be used on instances of ConvolverNode"
    },
    {
      "path": "window.ConvolverNode.prototype.buffer",
      "propertyName": "_get",
      "property": "function buffer() {\n    [native code]\n}"
    },
    {
      "path": "window.ConvolverNode.prototype.buffer",
      "propertyName": "_set",
      "property": "function buffer() {\n    [native code]\n}"
    },
    {
      "path": "window.ConvolverNode.prototype.buffer",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.ConvolverNode.prototype.buffer",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.ConvolverNode.prototype.normalize",
      "propertyName": "_accessException",
      "property": "TypeError: The ConvolverNode.normalize getter can only be used on instances of ConvolverNode"
    },
    {
      "path": "window.ConvolverNode.prototype.normalize",
      "propertyName": "_get",
      "property": "function normalize() {\n    [native code]\n}"
    },
    {
      "path": "window.ConvolverNode.prototype.normalize",
      "propertyName": "_set",
      "property": "function normalize() {\n    [native code]\n}"
    },
    {
      "path": "window.ConvolverNode.prototype.normalize",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.ConvolverNode.prototype.normalize",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.ConvolverNode",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.ConvolverNode",
      "propertyName": "_function",
      "property": "function ConvolverNode() {\n    [native code]\n}"
    },
    {
      "path": "window.DelayNode.prototype.delayTime",
      "propertyName": "_accessException",
      "property": "TypeError: The DelayNode.delayTime getter can only be used on instances of DelayNode"
    },
    {
      "path": "window.DelayNode.prototype.delayTime",
      "propertyName": "_get",
      "property": "function delayTime() {\n    [native code]\n}"
    },
    {
      "path": "window.DelayNode.prototype.delayTime",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.DelayNode",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.DelayNode",
      "propertyName": "_function",
      "property": "function DelayNode() {\n    [native code]\n}"
    },
    {
      "path": "window.DynamicsCompressorNode.prototype.threshold",
      "propertyName": "_accessException",
      "property": "TypeError: The DynamicsCompressorNode.threshold getter can only be used on instances of DynamicsCompressorNode"
    },
    {
      "path": "window.DynamicsCompressorNode.prototype.threshold",
      "propertyName": "_get",
      "property": "function threshold() {\n    [native code]\n}"
    },
    {
      "path": "window.DynamicsCompressorNode.prototype.threshold",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.DynamicsCompressorNode.prototype.knee",
      "propertyName": "_accessException",
      "property": "TypeError: The DynamicsCompressorNode.knee getter can only be used on instances of DynamicsCompressorNode"
    },
    {
      "path": "window.DynamicsCompressorNode.prototype.knee",
      "propertyName": "_get",
      "property": "function knee() {\n    [native code]\n}"
    },
    {
      "path": "window.DynamicsCompressorNode.prototype.knee",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.DynamicsCompressorNode.prototype.ratio",
      "propertyName": "_accessException",
      "property": "TypeError: The DynamicsCompressorNode.ratio getter can only be used on instances of DynamicsCompressorNode"
    },
    {
      "path": "window.DynamicsCompressorNode.prototype.ratio",
      "propertyName": "_get",
      "property": "function ratio() {\n    [native code]\n}"
    },
    {
      "path": "window.DynamicsCompressorNode.prototype.ratio",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.DynamicsCompressorNode.prototype.reduction",
      "propertyName": "_accessException",
      "property": "TypeError: The DynamicsCompressorNode.reduction getter can only be used on instances of DynamicsCompressorNode"
    },
    {
      "path": "window.DynamicsCompressorNode.prototype.reduction",
      "propertyName": "_get",
      "property": "function reduction() {\n    [native code]\n}"
    },
    {
      "path": "window.DynamicsCompressorNode.prototype.reduction",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.DynamicsCompressorNode.prototype.attack",
      "propertyName": "_accessException",
      "property": "TypeError: The DynamicsCompressorNode.attack getter can only be used on instances of DynamicsCompressorNode"
    },
    {
      "path": "window.DynamicsCompressorNode.prototype.attack",
      "propertyName": "_get",
      "property": "function attack() {\n    [native code]\n}"
    },
    {
      "path": "window.DynamicsCompressorNode.prototype.attack",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.DynamicsCompressorNode.prototype.release",
      "propertyName": "_accessException",
      "property": "TypeError: The DynamicsCompressorNode.release getter can only be used on instances of DynamicsCompressorNode"
    },
    {
      "path": "window.DynamicsCompressorNode.prototype.release",
      "propertyName": "_get",
      "property": "function release() {\n    [native code]\n}"
    },
    {
      "path": "window.DynamicsCompressorNode.prototype.release",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.DynamicsCompressorNode",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.DynamicsCompressorNode",
      "propertyName": "_function",
      "property": "function DynamicsCompressorNode() {\n    [native code]\n}"
    },
    {
      "path": "window.GainNode.prototype.gain",
      "propertyName": "_accessException",
      "property": "TypeError: The GainNode.gain getter can only be used on instances of GainNode"
    },
    {
      "path": "window.GainNode.prototype.gain",
      "propertyName": "_get",
      "property": "function gain() {\n    [native code]\n}"
    },
    {
      "path": "window.GainNode.prototype.gain",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.GainNode",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.GainNode",
      "propertyName": "_function",
      "property": "function GainNode() {\n    [native code]\n}"
    },
    {
      "path": "window.MediaElementAudioSourceNode.prototype.mediaElement",
      "propertyName": "_accessException",
      "property": "TypeError: The MediaElementAudioSourceNode.mediaElement getter can only be used on instances of MediaElementAudioSourceNode"
    },
    {
      "path": "window.MediaElementAudioSourceNode.prototype.mediaElement",
      "propertyName": "_get",
      "property": "function mediaElement() {\n    [native code]\n}"
    },
    {
      "path": "window.MediaElementAudioSourceNode.prototype.mediaElement",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.MediaElementAudioSourceNode",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.MediaElementAudioSourceNode",
      "propertyName": "_function",
      "property": "function MediaElementAudioSourceNode() {\n    [native code]\n}"
    },
    {
      "path": "window.MediaStreamAudioDestinationNode.prototype.stream",
      "propertyName": "_accessException",
      "property": "TypeError: The MediaStreamAudioDestinationNode.stream getter can only be used on instances of MediaStreamAudioDestinationNode"
    },
    {
      "path": "window.MediaStreamAudioDestinationNode.prototype.stream",
      "propertyName": "_get",
      "property": "function stream() {\n    [native code]\n}"
    },
    {
      "path": "window.MediaStreamAudioDestinationNode.prototype.stream",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.MediaStreamAudioDestinationNode",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.MediaStreamAudioDestinationNode",
      "propertyName": "_function",
      "property": "function MediaStreamAudioDestinationNode() {\n    [native code]\n}"
    },
    {
      "path": "window.MediaStreamAudioSourceNode.prototype.mediaStream",
      "propertyName": "_accessException",
      "property": "TypeError: The MediaStreamAudioSourceNode.mediaStream getter can only be used on instances of MediaStreamAudioSourceNode"
    },
    {
      "path": "window.MediaStreamAudioSourceNode.prototype.mediaStream",
      "propertyName": "_get",
      "property": "function mediaStream() {\n    [native code]\n}"
    },
    {
      "path": "window.MediaStreamAudioSourceNode.prototype.mediaStream",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.MediaStreamAudioSourceNode",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.MediaStreamAudioSourceNode",
      "propertyName": "_function",
      "property": "function MediaStreamAudioSourceNode() {\n    [native code]\n}"
    },
    {
      "path": "window.OfflineAudioCompletionEvent.prototype.renderedBuffer",
      "propertyName": "_accessException",
      "property": "TypeError: The OfflineAudioCompletionEvent.renderedBuffer getter can only be used on instances of OfflineAudioCompletionEvent"
    },
    {
      "path": "window.OfflineAudioCompletionEvent.prototype.renderedBuffer",
      "propertyName": "_get",
      "property": "function renderedBuffer() {\n    [native code]\n}"
    },
    {
      "path": "window.OfflineAudioCompletionEvent.prototype.renderedBuffer",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.OfflineAudioCompletionEvent",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.OfflineAudioCompletionEvent",
      "propertyName": "_function",
      "property": "function OfflineAudioCompletionEvent() {\n    [native code]\n}"
    },
    {
      "path": "window.OscillatorNode.prototype._protos",
      "propertyName": "0",
      "property": "AudioNode.prototype"
    },
    {
      "path": "window.OscillatorNode.prototype._protos",
      "propertyName": "1",
      "property": "EventTarget.prototype"
    },
    {
      "path": "window.OscillatorNode.prototype._protos",
      "propertyName": "2",
      "property": "Object.prototype"
    },
    {
      "path": "window.OscillatorNode.prototype.type",
      "propertyName": "_accessException",
      "property": "TypeError: The OscillatorNode.type getter can only be used on instances of OscillatorNode"
    },
    {
      "path": "window.OscillatorNode.prototype.type",
      "propertyName": "_get",
      "property": "function type() {\n    [native code]\n}"
    },
    {
      "path": "window.OscillatorNode.prototype.type",
      "propertyName": "_set",
      "property": "function type() {\n    [native code]\n}"
    },
    {
      "path": "window.OscillatorNode.prototype.type",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.OscillatorNode.prototype.type",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.OscillatorNode.prototype.frequency",
      "propertyName": "_accessException",
      "property": "TypeError: The OscillatorNode.frequency getter can only be used on instances of OscillatorNode"
    },
    {
      "path": "window.OscillatorNode.prototype.frequency",
      "propertyName": "_get",
      "property": "function frequency() {\n    [native code]\n}"
    },
    {
      "path": "window.OscillatorNode.prototype.frequency",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.OscillatorNode.prototype.detune",
      "propertyName": "_accessException",
      "property": "TypeError: The OscillatorNode.detune getter can only be used on instances of OscillatorNode"
    },
    {
      "path": "window.OscillatorNode.prototype.detune",
      "propertyName": "_get",
      "property": "function detune() {\n    [native code]\n}"
    },
    {
      "path": "window.OscillatorNode.prototype.detune",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.OscillatorNode.prototype.setPeriodicWave",
      "propertyName": "_function",
      "property": "function setPeriodicWave() {\n    [native code]\n}"
    },
    {
      "path": "window.OscillatorNode",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.OscillatorNode",
      "propertyName": "_function",
      "property": "function OscillatorNode() {\n    [native code]\n}"
    },
    {
      "path": "window.PeriodicWave",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.PeriodicWave",
      "propertyName": "_function",
      "property": "function PeriodicWave() {\n    [native code]\n}"
    },
    {
      "path": "window.ScriptProcessorNode.prototype.onaudioprocess",
      "propertyName": "_accessException",
      "property": "TypeError: The ScriptProcessorNode.onaudioprocess getter can only be used on instances of ScriptProcessorNode"
    },
    {
      "path": "window.ScriptProcessorNode.prototype.onaudioprocess",
      "propertyName": "_get",
      "property": "function onaudioprocess() {\n    [native code]\n}"
    },
    {
      "path": "window.ScriptProcessorNode.prototype.onaudioprocess",
      "propertyName": "_set",
      "property": "function onaudioprocess() {\n    [native code]\n}"
    },
    {
      "path": "window.ScriptProcessorNode.prototype.onaudioprocess",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.ScriptProcessorNode.prototype.onaudioprocess",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.ScriptProcessorNode.prototype.bufferSize",
      "propertyName": "_accessException",
      "property": "TypeError: The ScriptProcessorNode.bufferSize getter can only be used on instances of ScriptProcessorNode"
    },
    {
      "path": "window.ScriptProcessorNode.prototype.bufferSize",
      "propertyName": "_get",
      "property": "function bufferSize() {\n    [native code]\n}"
    },
    {
      "path": "window.ScriptProcessorNode.prototype.bufferSize",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.ScriptProcessorNode",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.ScriptProcessorNode",
      "propertyName": "_function",
      "property": "function ScriptProcessorNode() {\n    [native code]\n}"
    },
    {
      "path": "window.WaveShaperNode.prototype.curve",
      "propertyName": "_accessException",
      "property": "TypeError: The WaveShaperNode.curve getter can only be used on instances of WaveShaperNode"
    },
    {
      "path": "window.WaveShaperNode.prototype.curve",
      "propertyName": "_get",
      "property": "function curve() {\n    [native code]\n}"
    },
    {
      "path": "window.WaveShaperNode.prototype.curve",
      "propertyName": "_set",
      "property": "function curve() {\n    [native code]\n}"
    },
    {
      "path": "window.WaveShaperNode.prototype.curve",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.WaveShaperNode.prototype.curve",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.WaveShaperNode.prototype.oversample",
      "propertyName": "_accessException",
      "property": "TypeError: The WaveShaperNode.oversample getter can only be used on instances of WaveShaperNode"
    },
    {
      "path": "window.WaveShaperNode.prototype.oversample",
      "propertyName": "_get",
      "property": "function oversample() {\n    [native code]\n}"
    },
    {
      "path": "window.WaveShaperNode.prototype.oversample",
      "propertyName": "_set",
      "property": "function oversample() {\n    [native code]\n}"
    },
    {
      "path": "window.WaveShaperNode.prototype.oversample",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.WaveShaperNode.prototype.oversample",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.WaveShaperNode",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.WaveShaperNode",
      "propertyName": "_function",
      "property": "function WaveShaperNode() {\n    [native code]\n}"
    },
    {
      "path": "window.CloseEvent.prototype.wasClean",
      "propertyName": "_accessException",
      "property": "TypeError: The CloseEvent.wasClean getter can only be used on instances of CloseEvent"
    },
    {
      "path": "window.CloseEvent.prototype.wasClean",
      "propertyName": "_get",
      "property": "function wasClean() {\n    [native code]\n}"
    },
    {
      "path": "window.CloseEvent.prototype.wasClean",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.CloseEvent.prototype.code",
      "propertyName": "_accessException",
      "property": "TypeError: The CloseEvent.code getter can only be used on instances of CloseEvent"
    },
    {
      "path": "window.CloseEvent.prototype.code",
      "propertyName": "_get",
      "property": "function code() {\n    [native code]\n}"
    },
    {
      "path": "window.CloseEvent.prototype.code",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.CloseEvent.prototype.reason",
      "propertyName": "_accessException",
      "property": "TypeError: The CloseEvent.reason getter can only be used on instances of CloseEvent"
    },
    {
      "path": "window.CloseEvent.prototype.reason",
      "propertyName": "_get",
      "property": "function reason() {\n    [native code]\n}"
    },
    {
      "path": "window.CloseEvent.prototype.reason",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.CloseEvent",
      "propertyName": "new()",
      "property": "TypeError: Not enough arguments"
    },
    {
      "path": "window.CloseEvent",
      "propertyName": "_function",
      "property": "function CloseEvent() {\n    [native code]\n}"
    },
    {
      "path": "window.CryptoKey.prototype.type",
      "propertyName": "_accessException",
      "property": "TypeError: The CryptoKey.type getter can only be used on instances of CryptoKey"
    },
    {
      "path": "window.CryptoKey.prototype.type",
      "propertyName": "_get",
      "property": "function type() {\n    [native code]\n}"
    },
    {
      "path": "window.CryptoKey.prototype.type",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.CryptoKey.prototype.extractable",
      "propertyName": "_accessException",
      "property": "TypeError: The CryptoKey.extractable getter can only be used on instances of CryptoKey"
    },
    {
      "path": "window.CryptoKey.prototype.extractable",
      "propertyName": "_get",
      "property": "function extractable() {\n    [native code]\n}"
    },
    {
      "path": "window.CryptoKey.prototype.extractable",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.CryptoKey.prototype.algorithm",
      "propertyName": "_accessException",
      "property": "TypeError: The CryptoKey.algorithm getter can only be used on instances of CryptoKey"
    },
    {
      "path": "window.CryptoKey.prototype.algorithm",
      "propertyName": "_get",
      "property": "function algorithm() {\n    [native code]\n}"
    },
    {
      "path": "window.CryptoKey.prototype.algorithm",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.CryptoKey.prototype.usages",
      "propertyName": "_accessException",
      "property": "TypeError: The CryptoKey.usages getter can only be used on instances of CryptoKey"
    },
    {
      "path": "window.CryptoKey.prototype.usages",
      "propertyName": "_get",
      "property": "function usages() {\n    [native code]\n}"
    },
    {
      "path": "window.CryptoKey.prototype.usages",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.CryptoKey",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.CryptoKey",
      "propertyName": "_function",
      "property": "function CryptoKey() {\n    [native code]\n}"
    },
    {
      "path": "window.SubtleCrypto.prototype.encrypt",
      "propertyName": "_function",
      "property": "function encrypt() {\n    [native code]\n}"
    },
    {
      "path": "window.SubtleCrypto.prototype.decrypt",
      "propertyName": "_function",
      "property": "function decrypt() {\n    [native code]\n}"
    },
    {
      "path": "window.SubtleCrypto.prototype.sign",
      "propertyName": "_function",
      "property": "function sign() {\n    [native code]\n}"
    },
    {
      "path": "window.SubtleCrypto.prototype.verify",
      "propertyName": "_function",
      "property": "function verify() {\n    [native code]\n}"
    },
    {
      "path": "window.SubtleCrypto.prototype.digest",
      "propertyName": "_function",
      "property": "function digest() {\n    [native code]\n}"
    },
    {
      "path": "window.SubtleCrypto.prototype.generateKey",
      "propertyName": "_function",
      "property": "function generateKey() {\n    [native code]\n}"
    },
    {
      "path": "window.SubtleCrypto.prototype.deriveKey",
      "propertyName": "_function",
      "property": "function deriveKey() {\n    [native code]\n}"
    },
    {
      "path": "window.SubtleCrypto.prototype.deriveBits",
      "propertyName": "_function",
      "property": "function deriveBits() {\n    [native code]\n}"
    },
    {
      "path": "window.SubtleCrypto.prototype.importKey",
      "propertyName": "_function",
      "property": "function importKey() {\n    [native code]\n}"
    },
    {
      "path": "window.SubtleCrypto.prototype.exportKey",
      "propertyName": "_function",
      "property": "function exportKey() {\n    [native code]\n}"
    },
    {
      "path": "window.SubtleCrypto.prototype.wrapKey",
      "propertyName": "_function",
      "property": "function wrapKey() {\n    [native code]\n}"
    },
    {
      "path": "window.SubtleCrypto.prototype.unwrapKey",
      "propertyName": "_function",
      "property": "function unwrapKey() {\n    [native code]\n}"
    },
    {
      "path": "window.SubtleCrypto",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.SubtleCrypto",
      "propertyName": "_function",
      "property": "function SubtleCrypto() {\n    [native code]\n}"
    },
    {
      "path": "window.CSSFontFaceRule.prototype.style",
      "propertyName": "_accessException",
      "property": "TypeError: The CSSFontFaceRule.style getter can only be used on instances of CSSFontFaceRule"
    },
    {
      "path": "window.CSSFontFaceRule.prototype.style",
      "propertyName": "_get",
      "property": "function style() {\n    [native code]\n}"
    },
    {
      "path": "window.CSSFontFaceRule.prototype.style",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.CSSFontFaceRule",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.CSSFontFaceRule",
      "propertyName": "_function",
      "property": "function CSSFontFaceRule() {\n    [native code]\n}"
    },
    {
      "path": "window.CSSImportRule.prototype.href",
      "propertyName": "_accessException",
      "property": "TypeError: The CSSImportRule.href getter can only be used on instances of CSSImportRule"
    },
    {
      "path": "window.CSSImportRule.prototype.href",
      "propertyName": "_get",
      "property": "function href() {\n    [native code]\n}"
    },
    {
      "path": "window.CSSImportRule.prototype.href",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.CSSImportRule.prototype.media",
      "propertyName": "_accessException",
      "property": "TypeError: The CSSImportRule.media getter can only be used on instances of CSSImportRule"
    },
    {
      "path": "window.CSSImportRule.prototype.media",
      "propertyName": "_get",
      "property": "function media() {\n    [native code]\n}"
    },
    {
      "path": "window.CSSImportRule.prototype.media",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.CSSImportRule.prototype.styleSheet",
      "propertyName": "_accessException",
      "property": "TypeError: The CSSImportRule.styleSheet getter can only be used on instances of CSSImportRule"
    },
    {
      "path": "window.CSSImportRule.prototype.styleSheet",
      "propertyName": "_get",
      "property": "function styleSheet() {\n    [native code]\n}"
    },
    {
      "path": "window.CSSImportRule.prototype.styleSheet",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.CSSImportRule",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.CSSImportRule",
      "propertyName": "_function",
      "property": "function CSSImportRule() {\n    [native code]\n}"
    },
    {
      "path": "window.CSSKeyframeRule.prototype.keyText",
      "propertyName": "_accessException",
      "property": "TypeError: The CSSKeyframeRule.keyText getter can only be used on instances of CSSKeyframeRule"
    },
    {
      "path": "window.CSSKeyframeRule.prototype.keyText",
      "propertyName": "_get",
      "property": "function keyText() {\n    [native code]\n}"
    },
    {
      "path": "window.CSSKeyframeRule.prototype.keyText",
      "propertyName": "_set",
      "property": "function keyText() {\n    [native code]\n}"
    },
    {
      "path": "window.CSSKeyframeRule.prototype.keyText",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.CSSKeyframeRule.prototype.keyText",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.CSSKeyframeRule.prototype.style",
      "propertyName": "_accessException",
      "property": "TypeError: The CSSKeyframeRule.style getter can only be used on instances of CSSKeyframeRule"
    },
    {
      "path": "window.CSSKeyframeRule.prototype.style",
      "propertyName": "_get",
      "property": "function style() {\n    [native code]\n}"
    },
    {
      "path": "window.CSSKeyframeRule.prototype.style",
      "propertyName": "_set",
      "property": "function style() {\n    [native code]\n}"
    },
    {
      "path": "window.CSSKeyframeRule.prototype.style",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.CSSKeyframeRule.prototype.style",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.CSSKeyframeRule",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.CSSKeyframeRule",
      "propertyName": "_function",
      "property": "function CSSKeyframeRule() {\n    [native code]\n}"
    },
    {
      "path": "window.CSSKeyframesRule.prototype.name",
      "propertyName": "_accessException",
      "property": "TypeError: The CSSKeyframesRule.name getter can only be used on instances of CSSKeyframesRule"
    },
    {
      "path": "window.CSSKeyframesRule.prototype.name",
      "propertyName": "_get",
      "property": "function name() {\n    [native code]\n}"
    },
    {
      "path": "window.CSSKeyframesRule.prototype.name",
      "propertyName": "_set",
      "property": "function name() {\n    [native code]\n}"
    },
    {
      "path": "window.CSSKeyframesRule.prototype.name",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.CSSKeyframesRule.prototype.name",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.CSSKeyframesRule.prototype.cssRules",
      "propertyName": "_accessException",
      "property": "TypeError: The CSSKeyframesRule.cssRules getter can only be used on instances of CSSKeyframesRule"
    },
    {
      "path": "window.CSSKeyframesRule.prototype.cssRules",
      "propertyName": "_get",
      "property": "function cssRules() {\n    [native code]\n}"
    },
    {
      "path": "window.CSSKeyframesRule.prototype.cssRules",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.CSSKeyframesRule.prototype.appendRule",
      "propertyName": "_function",
      "property": "function appendRule() {\n    [native code]\n}"
    },
    {
      "path": "window.CSSKeyframesRule.prototype.deleteRule",
      "propertyName": "_function",
      "property": "function deleteRule() {\n    [native code]\n}"
    },
    {
      "path": "window.CSSKeyframesRule.prototype.findRule",
      "propertyName": "_function",
      "property": "function findRule() {\n    [native code]\n}"
    },
    {
      "path": "window.CSSKeyframesRule",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.CSSKeyframesRule",
      "propertyName": "_function",
      "property": "function CSSKeyframesRule() {\n    [native code]\n}"
    },
    {
      "path": "window.CSSMediaRule.prototype._protos",
      "propertyName": "0",
      "property": "CSSRule.prototype"
    },
    {
      "path": "window.CSSMediaRule.prototype._protos",
      "propertyName": "1",
      "property": "Object.prototype"
    },
    {
      "path": "window.CSSMediaRule.prototype.media",
      "propertyName": "_accessException",
      "property": "TypeError: The CSSMediaRule.media getter can only be used on instances of CSSMediaRule"
    },
    {
      "path": "window.CSSMediaRule.prototype.media",
      "propertyName": "_get",
      "property": "function media() {\n    [native code]\n}"
    },
    {
      "path": "window.CSSMediaRule.prototype.media",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.CSSMediaRule",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.CSSMediaRule",
      "propertyName": "_function",
      "property": "function CSSMediaRule() {\n    [native code]\n}"
    },
    {
      "path": "window.CSSNamespaceRule.prototype.namespaceURI",
      "propertyName": "_accessException",
      "property": "TypeError: The CSSNamespaceRule.namespaceURI getter can only be used on instances of CSSNamespaceRule"
    },
    {
      "path": "window.CSSNamespaceRule.prototype.namespaceURI",
      "propertyName": "_get",
      "property": "function namespaceURI() {\n    [native code]\n}"
    },
    {
      "path": "window.CSSNamespaceRule.prototype.namespaceURI",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.CSSNamespaceRule.prototype.prefix",
      "propertyName": "_accessException",
      "property": "TypeError: The CSSNamespaceRule.prefix getter can only be used on instances of CSSNamespaceRule"
    },
    {
      "path": "window.CSSNamespaceRule.prototype.prefix",
      "propertyName": "_get",
      "property": "function prefix() {\n    [native code]\n}"
    },
    {
      "path": "window.CSSNamespaceRule.prototype.prefix",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.CSSNamespaceRule",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.CSSNamespaceRule",
      "propertyName": "_function",
      "property": "function CSSNamespaceRule() {\n    [native code]\n}"
    },
    {
      "path": "window.CSSPageRule.prototype.selectorText",
      "propertyName": "_accessException",
      "property": "TypeError: The CSSPageRule.selectorText getter can only be used on instances of CSSPageRule"
    },
    {
      "path": "window.CSSPageRule.prototype.selectorText",
      "propertyName": "_get",
      "property": "function selectorText() {\n    [native code]\n}"
    },
    {
      "path": "window.CSSPageRule.prototype.selectorText",
      "propertyName": "_set",
      "property": "function selectorText() {\n    [native code]\n}"
    },
    {
      "path": "window.CSSPageRule.prototype.selectorText",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.CSSPageRule.prototype.selectorText",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.CSSPageRule.prototype.style",
      "propertyName": "_accessException",
      "property": "TypeError: The CSSPageRule.style getter can only be used on instances of CSSPageRule"
    },
    {
      "path": "window.CSSPageRule.prototype.style",
      "propertyName": "_get",
      "property": "function style() {\n    [native code]\n}"
    },
    {
      "path": "window.CSSPageRule.prototype.style",
      "propertyName": "_set",
      "property": "function style() {\n    [native code]\n}"
    },
    {
      "path": "window.CSSPageRule.prototype.style",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.CSSPageRule.prototype.style",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.CSSPageRule",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.CSSPageRule",
      "propertyName": "_function",
      "property": "function CSSPageRule() {\n    [native code]\n}"
    },
    {
      "path": "window.CSSRule.prototype.type",
      "propertyName": "_accessException",
      "property": "TypeError: The CSSRule.type getter can only be used on instances of CSSRule"
    },
    {
      "path": "window.CSSRule.prototype.type",
      "propertyName": "_get",
      "property": "function type() {\n    [native code]\n}"
    },
    {
      "path": "window.CSSRule.prototype.type",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.CSSRule.prototype.cssText",
      "propertyName": "_accessException",
      "property": "TypeError: The CSSRule.cssText getter can only be used on instances of CSSRule"
    },
    {
      "path": "window.CSSRule.prototype.cssText",
      "propertyName": "_get",
      "property": "function cssText() {\n    [native code]\n}"
    },
    {
      "path": "window.CSSRule.prototype.cssText",
      "propertyName": "_set",
      "property": "function cssText() {\n    [native code]\n}"
    },
    {
      "path": "window.CSSRule.prototype.cssText",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.CSSRule.prototype.cssText",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.CSSRule.prototype.parentStyleSheet",
      "propertyName": "_accessException",
      "property": "TypeError: The CSSRule.parentStyleSheet getter can only be used on instances of CSSRule"
    },
    {
      "path": "window.CSSRule.prototype.parentStyleSheet",
      "propertyName": "_get",
      "property": "function parentStyleSheet() {\n    [native code]\n}"
    },
    {
      "path": "window.CSSRule.prototype.parentStyleSheet",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.CSSRule.prototype.parentRule",
      "propertyName": "_accessException",
      "property": "TypeError: The CSSRule.parentRule getter can only be used on instances of CSSRule"
    },
    {
      "path": "window.CSSRule.prototype.parentRule",
      "propertyName": "_get",
      "property": "function parentRule() {\n    [native code]\n}"
    },
    {
      "path": "window.CSSRule.prototype.parentRule",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.CSSRule",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.CSSRule",
      "propertyName": "_function",
      "property": "function CSSRule() {\n    [native code]\n}"
    },
    {
      "path": "window.CSSRuleList.prototype.length",
      "propertyName": "_accessException",
      "property": "TypeError: The CSSRuleList.length getter can only be used on instances of CSSRuleList"
    },
    {
      "path": "window.CSSRuleList.prototype.length",
      "propertyName": "_get",
      "property": "function length() {\n    [native code]\n}"
    },
    {
      "path": "window.CSSRuleList.prototype.length",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.CSSRuleList.prototype.item",
      "propertyName": "_function",
      "property": "function item() {\n    [native code]\n}"
    },
    {
      "path": "window.CSSRuleList.prototype",
      "propertyName": "Symbol.iterator",
      "property": "REF: window.DOMStringList.prototype.Symbol(Symbol.iterator)"
    },
    {
      "path": "window.CSSRuleList",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.CSSRuleList",
      "propertyName": "_function",
      "property": "function CSSRuleList() {\n    [native code]\n}"
    },
    {
      "path": "window.CSSStyleDeclaration.prototype.cssText",
      "propertyName": "_accessException",
      "property": "TypeError: The CSSStyleDeclaration.cssText getter can only be used on instances of CSSStyleDeclaration"
    },
    {
      "path": "window.CSSStyleDeclaration.prototype.cssText",
      "propertyName": "_get",
      "property": "function cssText() {\n    [native code]\n}"
    },
    {
      "path": "window.CSSStyleDeclaration.prototype.cssText",
      "propertyName": "_set",
      "property": "function cssText() {\n    [native code]\n}"
    },
    {
      "path": "window.CSSStyleDeclaration.prototype.cssText",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.CSSStyleDeclaration.prototype.cssText",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.CSSStyleDeclaration.prototype.length",
      "propertyName": "_accessException",
      "property": "TypeError: The CSSStyleDeclaration.length getter can only be used on instances of CSSStyleDeclaration"
    },
    {
      "path": "window.CSSStyleDeclaration.prototype.length",
      "propertyName": "_get",
      "property": "function length() {\n    [native code]\n}"
    },
    {
      "path": "window.CSSStyleDeclaration.prototype.length",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.CSSStyleDeclaration.prototype.parentRule",
      "propertyName": "_accessException",
      "property": "TypeError: The CSSStyleDeclaration.parentRule getter can only be used on instances of CSSStyleDeclaration"
    },
    {
      "path": "window.CSSStyleDeclaration.prototype.parentRule",
      "propertyName": "_get",
      "property": "function parentRule() {\n    [native code]\n}"
    },
    {
      "path": "window.CSSStyleDeclaration.prototype.parentRule",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.CSSStyleDeclaration.prototype.cssFloat",
      "propertyName": "_accessException",
      "property": "TypeError: The CSSStyleDeclaration.cssFloat getter can only be used on instances of CSSStyleDeclaration"
    },
    {
      "path": "window.CSSStyleDeclaration.prototype.cssFloat",
      "propertyName": "_get",
      "property": "function cssFloat() {\n    [native code]\n}"
    },
    {
      "path": "window.CSSStyleDeclaration.prototype.cssFloat",
      "propertyName": "_set",
      "property": "function cssFloat() {\n    [native code]\n}"
    },
    {
      "path": "window.CSSStyleDeclaration.prototype.cssFloat",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.CSSStyleDeclaration.prototype.cssFloat",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.CSSStyleDeclaration.prototype.getPropertyValue",
      "propertyName": "_function",
      "property": "function getPropertyValue() {\n    [native code]\n}"
    },
    {
      "path": "window.CSSStyleDeclaration.prototype.removeProperty",
      "propertyName": "_function",
      "property": "function removeProperty() {\n    [native code]\n}"
    },
    {
      "path": "window.CSSStyleDeclaration.prototype.getPropertyPriority",
      "propertyName": "_function",
      "property": "function getPropertyPriority() {\n    [native code]\n}"
    },
    {
      "path": "window.CSSStyleDeclaration.prototype.setProperty",
      "propertyName": "_function",
      "property": "function setProperty() {\n    [native code]\n}"
    },
    {
      "path": "window.CSSStyleDeclaration.prototype.item",
      "propertyName": "_function",
      "property": "function item() {\n    [native code]\n}"
    },
    {
      "path": "window.CSSStyleDeclaration.prototype",
      "propertyName": "Symbol.iterator",
      "property": "REF: window.DOMStringList.prototype.Symbol(Symbol.iterator)"
    },
    {
      "path": "window.CSSStyleDeclaration",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.CSSStyleDeclaration",
      "propertyName": "_function",
      "property": "function CSSStyleDeclaration() {\n    [native code]\n}"
    },
    {
      "path": "window.CSSStyleRule.prototype.selectorText",
      "propertyName": "_accessException",
      "property": "TypeError: The CSSStyleRule.selectorText getter can only be used on instances of CSSStyleRule"
    },
    {
      "path": "window.CSSStyleRule.prototype.selectorText",
      "propertyName": "_get",
      "property": "function selectorText() {\n    [native code]\n}"
    },
    {
      "path": "window.CSSStyleRule.prototype.selectorText",
      "propertyName": "_set",
      "property": "function selectorText() {\n    [native code]\n}"
    },
    {
      "path": "window.CSSStyleRule.prototype.selectorText",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.CSSStyleRule.prototype.selectorText",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.CSSStyleRule.prototype.style",
      "propertyName": "_accessException",
      "property": "TypeError: The CSSStyleRule.style getter can only be used on instances of CSSStyleRule"
    },
    {
      "path": "window.CSSStyleRule.prototype.style",
      "propertyName": "_get",
      "property": "function style() {\n    [native code]\n}"
    },
    {
      "path": "window.CSSStyleRule.prototype.style",
      "propertyName": "_set",
      "property": "function style() {\n    [native code]\n}"
    },
    {
      "path": "window.CSSStyleRule.prototype.style",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.CSSStyleRule.prototype.style",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.CSSStyleRule",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.CSSStyleRule",
      "propertyName": "_function",
      "property": "function CSSStyleRule() {\n    [native code]\n}"
    },
    {
      "path": "window.CSSStyleSheet.prototype.ownerRule",
      "propertyName": "_accessException",
      "property": "TypeError: The CSSStyleSheet.ownerRule getter can only be used on instances of CSSStyleSheet"
    },
    {
      "path": "window.CSSStyleSheet.prototype.ownerRule",
      "propertyName": "_get",
      "property": "function ownerRule() {\n    [native code]\n}"
    },
    {
      "path": "window.CSSStyleSheet.prototype.ownerRule",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.CSSStyleSheet.prototype.cssRules",
      "propertyName": "_accessException",
      "property": "TypeError: The CSSStyleSheet.cssRules getter can only be used on instances of CSSStyleSheet"
    },
    {
      "path": "window.CSSStyleSheet.prototype.cssRules",
      "propertyName": "_get",
      "property": "function cssRules() {\n    [native code]\n}"
    },
    {
      "path": "window.CSSStyleSheet.prototype.cssRules",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.CSSStyleSheet.prototype.rules",
      "propertyName": "_accessException",
      "property": "TypeError: The CSSStyleSheet.rules getter can only be used on instances of CSSStyleSheet"
    },
    {
      "path": "window.CSSStyleSheet.prototype.rules",
      "propertyName": "_get",
      "property": "function rules() {\n    [native code]\n}"
    },
    {
      "path": "window.CSSStyleSheet.prototype.rules",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.CSSStyleSheet.prototype.insertRule",
      "propertyName": "_function",
      "property": "function insertRule() {\n    [native code]\n}"
    },
    {
      "path": "window.CSSStyleSheet.prototype.deleteRule",
      "propertyName": "_function",
      "property": "function deleteRule() {\n    [native code]\n}"
    },
    {
      "path": "window.CSSStyleSheet.prototype.addRule",
      "propertyName": "_function",
      "property": "function addRule() {\n    [native code]\n}"
    },
    {
      "path": "window.CSSStyleSheet.prototype.removeRule",
      "propertyName": "_function",
      "property": "function removeRule() {\n    [native code]\n}"
    },
    {
      "path": "window.CSSStyleSheet",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.CSSStyleSheet",
      "propertyName": "_function",
      "property": "function CSSStyleSheet() {\n    [native code]\n}"
    },
    {
      "path": "window.CSSSupportsRule.prototype._protos",
      "propertyName": "0",
      "property": "CSSRule.prototype"
    },
    {
      "path": "window.CSSSupportsRule.prototype._protos",
      "propertyName": "1",
      "property": "Object.prototype"
    },
    {
      "path": "window.CSSSupportsRule",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.CSSSupportsRule",
      "propertyName": "_function",
      "property": "function CSSSupportsRule() {\n    [native code]\n}"
    },
    {
      "path": "window.CSS.supports",
      "propertyName": "_function",
      "property": "function supports() {\n    [native code]\n}"
    },
    {
      "path": "window.CSS.escape",
      "propertyName": "_function",
      "property": "function escape() {\n    [native code]\n}"
    },
    {
      "path": "window.CSS",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.CSS",
      "propertyName": "_function",
      "property": "function CSS() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrix.prototype.a",
      "propertyName": "_accessException",
      "property": "TypeError: The DOMMatrix.a getter can only be used on instances of DOMMatrix"
    },
    {
      "path": "window.DOMMatrix.prototype.a",
      "propertyName": "_get",
      "property": "function a() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrix.prototype.a",
      "propertyName": "_set",
      "property": "function a() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrix.prototype.a",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrix.prototype.a",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrix.prototype.b",
      "propertyName": "_accessException",
      "property": "TypeError: The DOMMatrix.b getter can only be used on instances of DOMMatrix"
    },
    {
      "path": "window.DOMMatrix.prototype.b",
      "propertyName": "_get",
      "property": "function b() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrix.prototype.b",
      "propertyName": "_set",
      "property": "function b() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrix.prototype.b",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrix.prototype.b",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrix.prototype.c",
      "propertyName": "_accessException",
      "property": "TypeError: The DOMMatrix.c getter can only be used on instances of DOMMatrix"
    },
    {
      "path": "window.DOMMatrix.prototype.c",
      "propertyName": "_get",
      "property": "function c() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrix.prototype.c",
      "propertyName": "_set",
      "property": "function c() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrix.prototype.c",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrix.prototype.c",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrix.prototype.d",
      "propertyName": "_accessException",
      "property": "TypeError: The DOMMatrix.d getter can only be used on instances of DOMMatrix"
    },
    {
      "path": "window.DOMMatrix.prototype.d",
      "propertyName": "_get",
      "property": "function d() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrix.prototype.d",
      "propertyName": "_set",
      "property": "function d() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrix.prototype.d",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrix.prototype.d",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrix.prototype.e",
      "propertyName": "_accessException",
      "property": "TypeError: The DOMMatrix.e getter can only be used on instances of DOMMatrix"
    },
    {
      "path": "window.DOMMatrix.prototype.e",
      "propertyName": "_get",
      "property": "function e() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrix.prototype.e",
      "propertyName": "_set",
      "property": "function e() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrix.prototype.e",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrix.prototype.e",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrix.prototype.f",
      "propertyName": "_accessException",
      "property": "TypeError: The DOMMatrix.f getter can only be used on instances of DOMMatrix"
    },
    {
      "path": "window.DOMMatrix.prototype.f",
      "propertyName": "_get",
      "property": "function f() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrix.prototype.f",
      "propertyName": "_set",
      "property": "function f() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrix.prototype.f",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrix.prototype.f",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrix.prototype.m11",
      "propertyName": "_accessException",
      "property": "TypeError: The DOMMatrix.m11 getter can only be used on instances of DOMMatrix"
    },
    {
      "path": "window.DOMMatrix.prototype.m11",
      "propertyName": "_get",
      "property": "function m11() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrix.prototype.m11",
      "propertyName": "_set",
      "property": "function m11() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrix.prototype.m11",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrix.prototype.m11",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrix.prototype.m12",
      "propertyName": "_accessException",
      "property": "TypeError: The DOMMatrix.m12 getter can only be used on instances of DOMMatrix"
    },
    {
      "path": "window.DOMMatrix.prototype.m12",
      "propertyName": "_get",
      "property": "function m12() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrix.prototype.m12",
      "propertyName": "_set",
      "property": "function m12() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrix.prototype.m12",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrix.prototype.m12",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrix.prototype.m13",
      "propertyName": "_accessException",
      "property": "TypeError: The DOMMatrix.m13 getter can only be used on instances of DOMMatrix"
    },
    {
      "path": "window.DOMMatrix.prototype.m13",
      "propertyName": "_get",
      "property": "function m13() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrix.prototype.m13",
      "propertyName": "_set",
      "property": "function m13() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrix.prototype.m13",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrix.prototype.m13",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrix.prototype.m14",
      "propertyName": "_accessException",
      "property": "TypeError: The DOMMatrix.m14 getter can only be used on instances of DOMMatrix"
    },
    {
      "path": "window.DOMMatrix.prototype.m14",
      "propertyName": "_get",
      "property": "function m14() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrix.prototype.m14",
      "propertyName": "_set",
      "property": "function m14() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrix.prototype.m14",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrix.prototype.m14",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrix.prototype.m21",
      "propertyName": "_accessException",
      "property": "TypeError: The DOMMatrix.m21 getter can only be used on instances of DOMMatrix"
    },
    {
      "path": "window.DOMMatrix.prototype.m21",
      "propertyName": "_get",
      "property": "function m21() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrix.prototype.m21",
      "propertyName": "_set",
      "property": "function m21() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrix.prototype.m21",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrix.prototype.m21",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrix.prototype.m22",
      "propertyName": "_accessException",
      "property": "TypeError: The DOMMatrix.m22 getter can only be used on instances of DOMMatrix"
    },
    {
      "path": "window.DOMMatrix.prototype.m22",
      "propertyName": "_get",
      "property": "function m22() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrix.prototype.m22",
      "propertyName": "_set",
      "property": "function m22() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrix.prototype.m22",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrix.prototype.m22",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrix.prototype.m23",
      "propertyName": "_accessException",
      "property": "TypeError: The DOMMatrix.m23 getter can only be used on instances of DOMMatrix"
    },
    {
      "path": "window.DOMMatrix.prototype.m23",
      "propertyName": "_get",
      "property": "function m23() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrix.prototype.m23",
      "propertyName": "_set",
      "property": "function m23() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrix.prototype.m23",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrix.prototype.m23",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrix.prototype.m24",
      "propertyName": "_accessException",
      "property": "TypeError: The DOMMatrix.m24 getter can only be used on instances of DOMMatrix"
    },
    {
      "path": "window.DOMMatrix.prototype.m24",
      "propertyName": "_get",
      "property": "function m24() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrix.prototype.m24",
      "propertyName": "_set",
      "property": "function m24() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrix.prototype.m24",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrix.prototype.m24",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrix.prototype.m31",
      "propertyName": "_accessException",
      "property": "TypeError: The DOMMatrix.m31 getter can only be used on instances of DOMMatrix"
    },
    {
      "path": "window.DOMMatrix.prototype.m31",
      "propertyName": "_get",
      "property": "function m31() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrix.prototype.m31",
      "propertyName": "_set",
      "property": "function m31() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrix.prototype.m31",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrix.prototype.m31",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrix.prototype.m32",
      "propertyName": "_accessException",
      "property": "TypeError: The DOMMatrix.m32 getter can only be used on instances of DOMMatrix"
    },
    {
      "path": "window.DOMMatrix.prototype.m32",
      "propertyName": "_get",
      "property": "function m32() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrix.prototype.m32",
      "propertyName": "_set",
      "property": "function m32() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrix.prototype.m32",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrix.prototype.m32",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrix.prototype.m33",
      "propertyName": "_accessException",
      "property": "TypeError: The DOMMatrix.m33 getter can only be used on instances of DOMMatrix"
    },
    {
      "path": "window.DOMMatrix.prototype.m33",
      "propertyName": "_get",
      "property": "function m33() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrix.prototype.m33",
      "propertyName": "_set",
      "property": "function m33() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrix.prototype.m33",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrix.prototype.m33",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrix.prototype.m34",
      "propertyName": "_accessException",
      "property": "TypeError: The DOMMatrix.m34 getter can only be used on instances of DOMMatrix"
    },
    {
      "path": "window.DOMMatrix.prototype.m34",
      "propertyName": "_get",
      "property": "function m34() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrix.prototype.m34",
      "propertyName": "_set",
      "property": "function m34() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrix.prototype.m34",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrix.prototype.m34",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrix.prototype.m41",
      "propertyName": "_accessException",
      "property": "TypeError: The DOMMatrix.m41 getter can only be used on instances of DOMMatrix"
    },
    {
      "path": "window.DOMMatrix.prototype.m41",
      "propertyName": "_get",
      "property": "function m41() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrix.prototype.m41",
      "propertyName": "_set",
      "property": "function m41() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrix.prototype.m41",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrix.prototype.m41",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrix.prototype.m42",
      "propertyName": "_accessException",
      "property": "TypeError: The DOMMatrix.m42 getter can only be used on instances of DOMMatrix"
    },
    {
      "path": "window.DOMMatrix.prototype.m42",
      "propertyName": "_get",
      "property": "function m42() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrix.prototype.m42",
      "propertyName": "_set",
      "property": "function m42() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrix.prototype.m42",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrix.prototype.m42",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrix.prototype.m43",
      "propertyName": "_accessException",
      "property": "TypeError: The DOMMatrix.m43 getter can only be used on instances of DOMMatrix"
    },
    {
      "path": "window.DOMMatrix.prototype.m43",
      "propertyName": "_get",
      "property": "function m43() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrix.prototype.m43",
      "propertyName": "_set",
      "property": "function m43() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrix.prototype.m43",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrix.prototype.m43",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrix.prototype.m44",
      "propertyName": "_accessException",
      "property": "TypeError: The DOMMatrix.m44 getter can only be used on instances of DOMMatrix"
    },
    {
      "path": "window.DOMMatrix.prototype.m44",
      "propertyName": "_get",
      "property": "function m44() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrix.prototype.m44",
      "propertyName": "_set",
      "property": "function m44() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrix.prototype.m44",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrix.prototype.m44",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrix.prototype.multiplySelf",
      "propertyName": "_function",
      "property": "function multiplySelf() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrix.prototype.preMultiplySelf",
      "propertyName": "_function",
      "property": "function preMultiplySelf() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrix.prototype.translateSelf",
      "propertyName": "_function",
      "property": "function translateSelf() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrix.prototype.scaleSelf",
      "propertyName": "_function",
      "property": "function scaleSelf() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrix.prototype.scale3dSelf",
      "propertyName": "_function",
      "property": "function scale3dSelf() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrix.prototype.rotateSelf",
      "propertyName": "_function",
      "property": "function rotateSelf() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrix.prototype.rotateFromVectorSelf",
      "propertyName": "_function",
      "property": "function rotateFromVectorSelf() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrix.prototype.rotateAxisAngleSelf",
      "propertyName": "_function",
      "property": "function rotateAxisAngleSelf() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrix.prototype.skewXSelf",
      "propertyName": "_function",
      "property": "function skewXSelf() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrix.prototype.skewYSelf",
      "propertyName": "_function",
      "property": "function skewYSelf() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrix.prototype.invertSelf",
      "propertyName": "_function",
      "property": "function invertSelf() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrix.prototype.setMatrixValue.name",
      "propertyName": "_value",
      "property": "setMatrixValue"
    },
    {
      "path": "window.DOMMatrix.prototype.setMatrixValue",
      "propertyName": "_function",
      "property": "function setMatrixValue() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrix.fromMatrix",
      "propertyName": "_function",
      "property": "function fromMatrix() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrix.fromFloat32Array",
      "propertyName": "_function",
      "property": "function fromFloat32Array() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrix.fromFloat64Array",
      "propertyName": "_function",
      "property": "function fromFloat64Array() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrix",
      "propertyName": "_function",
      "property": "function DOMMatrix() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrixReadOnly.prototype.a",
      "propertyName": "_accessException",
      "property": "TypeError: The DOMMatrixReadOnly.a getter can only be used on instances of DOMMatrixReadOnly"
    },
    {
      "path": "window.DOMMatrixReadOnly.prototype.a",
      "propertyName": "_get",
      "property": "function a() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrixReadOnly.prototype.a",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrixReadOnly.prototype.b",
      "propertyName": "_accessException",
      "property": "TypeError: The DOMMatrixReadOnly.b getter can only be used on instances of DOMMatrixReadOnly"
    },
    {
      "path": "window.DOMMatrixReadOnly.prototype.b",
      "propertyName": "_get",
      "property": "function b() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrixReadOnly.prototype.b",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrixReadOnly.prototype.c",
      "propertyName": "_accessException",
      "property": "TypeError: The DOMMatrixReadOnly.c getter can only be used on instances of DOMMatrixReadOnly"
    },
    {
      "path": "window.DOMMatrixReadOnly.prototype.c",
      "propertyName": "_get",
      "property": "function c() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrixReadOnly.prototype.c",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrixReadOnly.prototype.d",
      "propertyName": "_accessException",
      "property": "TypeError: The DOMMatrixReadOnly.d getter can only be used on instances of DOMMatrixReadOnly"
    },
    {
      "path": "window.DOMMatrixReadOnly.prototype.d",
      "propertyName": "_get",
      "property": "function d() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrixReadOnly.prototype.d",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrixReadOnly.prototype.e",
      "propertyName": "_accessException",
      "property": "TypeError: The DOMMatrixReadOnly.e getter can only be used on instances of DOMMatrixReadOnly"
    },
    {
      "path": "window.DOMMatrixReadOnly.prototype.e",
      "propertyName": "_get",
      "property": "function e() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrixReadOnly.prototype.e",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrixReadOnly.prototype.f",
      "propertyName": "_accessException",
      "property": "TypeError: The DOMMatrixReadOnly.f getter can only be used on instances of DOMMatrixReadOnly"
    },
    {
      "path": "window.DOMMatrixReadOnly.prototype.f",
      "propertyName": "_get",
      "property": "function f() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrixReadOnly.prototype.f",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrixReadOnly.prototype.m11",
      "propertyName": "_accessException",
      "property": "TypeError: The DOMMatrixReadOnly.m11 getter can only be used on instances of DOMMatrixReadOnly"
    },
    {
      "path": "window.DOMMatrixReadOnly.prototype.m11",
      "propertyName": "_get",
      "property": "function m11() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrixReadOnly.prototype.m11",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrixReadOnly.prototype.m12",
      "propertyName": "_accessException",
      "property": "TypeError: The DOMMatrixReadOnly.m12 getter can only be used on instances of DOMMatrixReadOnly"
    },
    {
      "path": "window.DOMMatrixReadOnly.prototype.m12",
      "propertyName": "_get",
      "property": "function m12() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrixReadOnly.prototype.m12",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrixReadOnly.prototype.m13",
      "propertyName": "_accessException",
      "property": "TypeError: The DOMMatrixReadOnly.m13 getter can only be used on instances of DOMMatrixReadOnly"
    },
    {
      "path": "window.DOMMatrixReadOnly.prototype.m13",
      "propertyName": "_get",
      "property": "function m13() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrixReadOnly.prototype.m13",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrixReadOnly.prototype.m14",
      "propertyName": "_accessException",
      "property": "TypeError: The DOMMatrixReadOnly.m14 getter can only be used on instances of DOMMatrixReadOnly"
    },
    {
      "path": "window.DOMMatrixReadOnly.prototype.m14",
      "propertyName": "_get",
      "property": "function m14() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrixReadOnly.prototype.m14",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrixReadOnly.prototype.m21",
      "propertyName": "_accessException",
      "property": "TypeError: The DOMMatrixReadOnly.m21 getter can only be used on instances of DOMMatrixReadOnly"
    },
    {
      "path": "window.DOMMatrixReadOnly.prototype.m21",
      "propertyName": "_get",
      "property": "function m21() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrixReadOnly.prototype.m21",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrixReadOnly.prototype.m22",
      "propertyName": "_accessException",
      "property": "TypeError: The DOMMatrixReadOnly.m22 getter can only be used on instances of DOMMatrixReadOnly"
    },
    {
      "path": "window.DOMMatrixReadOnly.prototype.m22",
      "propertyName": "_get",
      "property": "function m22() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrixReadOnly.prototype.m22",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrixReadOnly.prototype.m23",
      "propertyName": "_accessException",
      "property": "TypeError: The DOMMatrixReadOnly.m23 getter can only be used on instances of DOMMatrixReadOnly"
    },
    {
      "path": "window.DOMMatrixReadOnly.prototype.m23",
      "propertyName": "_get",
      "property": "function m23() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrixReadOnly.prototype.m23",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrixReadOnly.prototype.m24",
      "propertyName": "_accessException",
      "property": "TypeError: The DOMMatrixReadOnly.m24 getter can only be used on instances of DOMMatrixReadOnly"
    },
    {
      "path": "window.DOMMatrixReadOnly.prototype.m24",
      "propertyName": "_get",
      "property": "function m24() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrixReadOnly.prototype.m24",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrixReadOnly.prototype.m31",
      "propertyName": "_accessException",
      "property": "TypeError: The DOMMatrixReadOnly.m31 getter can only be used on instances of DOMMatrixReadOnly"
    },
    {
      "path": "window.DOMMatrixReadOnly.prototype.m31",
      "propertyName": "_get",
      "property": "function m31() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrixReadOnly.prototype.m31",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrixReadOnly.prototype.m32",
      "propertyName": "_accessException",
      "property": "TypeError: The DOMMatrixReadOnly.m32 getter can only be used on instances of DOMMatrixReadOnly"
    },
    {
      "path": "window.DOMMatrixReadOnly.prototype.m32",
      "propertyName": "_get",
      "property": "function m32() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrixReadOnly.prototype.m32",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrixReadOnly.prototype.m33",
      "propertyName": "_accessException",
      "property": "TypeError: The DOMMatrixReadOnly.m33 getter can only be used on instances of DOMMatrixReadOnly"
    },
    {
      "path": "window.DOMMatrixReadOnly.prototype.m33",
      "propertyName": "_get",
      "property": "function m33() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrixReadOnly.prototype.m33",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrixReadOnly.prototype.m34",
      "propertyName": "_accessException",
      "property": "TypeError: The DOMMatrixReadOnly.m34 getter can only be used on instances of DOMMatrixReadOnly"
    },
    {
      "path": "window.DOMMatrixReadOnly.prototype.m34",
      "propertyName": "_get",
      "property": "function m34() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrixReadOnly.prototype.m34",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrixReadOnly.prototype.m41",
      "propertyName": "_accessException",
      "property": "TypeError: The DOMMatrixReadOnly.m41 getter can only be used on instances of DOMMatrixReadOnly"
    },
    {
      "path": "window.DOMMatrixReadOnly.prototype.m41",
      "propertyName": "_get",
      "property": "function m41() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrixReadOnly.prototype.m41",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrixReadOnly.prototype.m42",
      "propertyName": "_accessException",
      "property": "TypeError: The DOMMatrixReadOnly.m42 getter can only be used on instances of DOMMatrixReadOnly"
    },
    {
      "path": "window.DOMMatrixReadOnly.prototype.m42",
      "propertyName": "_get",
      "property": "function m42() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrixReadOnly.prototype.m42",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrixReadOnly.prototype.m43",
      "propertyName": "_accessException",
      "property": "TypeError: The DOMMatrixReadOnly.m43 getter can only be used on instances of DOMMatrixReadOnly"
    },
    {
      "path": "window.DOMMatrixReadOnly.prototype.m43",
      "propertyName": "_get",
      "property": "function m43() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrixReadOnly.prototype.m43",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrixReadOnly.prototype.m44",
      "propertyName": "_accessException",
      "property": "TypeError: The DOMMatrixReadOnly.m44 getter can only be used on instances of DOMMatrixReadOnly"
    },
    {
      "path": "window.DOMMatrixReadOnly.prototype.m44",
      "propertyName": "_get",
      "property": "function m44() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrixReadOnly.prototype.m44",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrixReadOnly.prototype.is2D",
      "propertyName": "_accessException",
      "property": "TypeError: The DOMMatrixReadOnly.is2D getter can only be used on instances of DOMMatrixReadOnly"
    },
    {
      "path": "window.DOMMatrixReadOnly.prototype.is2D",
      "propertyName": "_get",
      "property": "function is2D() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrixReadOnly.prototype.is2D",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrixReadOnly.prototype.isIdentity",
      "propertyName": "_accessException",
      "property": "TypeError: The DOMMatrixReadOnly.isIdentity getter can only be used on instances of DOMMatrixReadOnly"
    },
    {
      "path": "window.DOMMatrixReadOnly.prototype.isIdentity",
      "propertyName": "_get",
      "property": "function isIdentity() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrixReadOnly.prototype.isIdentity",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrixReadOnly.prototype.translate",
      "propertyName": "_function",
      "property": "function translate() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrixReadOnly.prototype.scale",
      "propertyName": "_function",
      "property": "function scale() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrixReadOnly.prototype.scale3d",
      "propertyName": "_function",
      "property": "function scale3d() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrixReadOnly.prototype.rotate",
      "propertyName": "_function",
      "property": "function rotate() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrixReadOnly.prototype.rotateFromVector",
      "propertyName": "_function",
      "property": "function rotateFromVector() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrixReadOnly.prototype.rotateAxisAngle",
      "propertyName": "_function",
      "property": "function rotateAxisAngle() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrixReadOnly.prototype.skewX",
      "propertyName": "_function",
      "property": "function skewX() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrixReadOnly.prototype.skewY",
      "propertyName": "_function",
      "property": "function skewY() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrixReadOnly.prototype.multiply",
      "propertyName": "_function",
      "property": "function multiply() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrixReadOnly.prototype.flipX",
      "propertyName": "_function",
      "property": "function flipX() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrixReadOnly.prototype.flipY",
      "propertyName": "_function",
      "property": "function flipY() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrixReadOnly.prototype.inverse",
      "propertyName": "_function",
      "property": "function inverse() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrixReadOnly.prototype.transformPoint",
      "propertyName": "_function",
      "property": "function transformPoint() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrixReadOnly.prototype.toFloat32Array",
      "propertyName": "_function",
      "property": "function toFloat32Array() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrixReadOnly.prototype.toFloat64Array",
      "propertyName": "_function",
      "property": "function toFloat64Array() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrixReadOnly.prototype.toString.name",
      "propertyName": "_value",
      "property": "toString"
    },
    {
      "path": "window.DOMMatrixReadOnly.prototype.toString",
      "propertyName": "_function",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrixReadOnly.prototype.toJSON",
      "propertyName": "_function",
      "property": "function toJSON() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrixReadOnly.fromMatrix",
      "propertyName": "_function",
      "property": "function fromMatrix() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrixReadOnly.fromFloat32Array",
      "propertyName": "_function",
      "property": "function fromFloat32Array() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrixReadOnly.fromFloat64Array",
      "propertyName": "_function",
      "property": "function fromFloat64Array() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMMatrixReadOnly",
      "propertyName": "_function",
      "property": "function DOMMatrixReadOnly() {\n    [native code]\n}"
    },
    {
      "path": "window.FontFace.prototype.family",
      "propertyName": "_accessException",
      "property": "TypeError: The FontFace.family getter can only be used on instances of FontFace"
    },
    {
      "path": "window.FontFace.prototype.family",
      "propertyName": "_get",
      "property": "function family() {\n    [native code]\n}"
    },
    {
      "path": "window.FontFace.prototype.family",
      "propertyName": "_set",
      "property": "function family() {\n    [native code]\n}"
    },
    {
      "path": "window.FontFace.prototype.family",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.FontFace.prototype.family",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.FontFace.prototype.style",
      "propertyName": "_accessException",
      "property": "TypeError: The FontFace.style getter can only be used on instances of FontFace"
    },
    {
      "path": "window.FontFace.prototype.style",
      "propertyName": "_get",
      "property": "function style() {\n    [native code]\n}"
    },
    {
      "path": "window.FontFace.prototype.style",
      "propertyName": "_set",
      "property": "function style() {\n    [native code]\n}"
    },
    {
      "path": "window.FontFace.prototype.style",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.FontFace.prototype.style",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.FontFace.prototype.weight",
      "propertyName": "_accessException",
      "property": "TypeError: The FontFace.weight getter can only be used on instances of FontFace"
    },
    {
      "path": "window.FontFace.prototype.weight",
      "propertyName": "_get",
      "property": "function weight() {\n    [native code]\n}"
    },
    {
      "path": "window.FontFace.prototype.weight",
      "propertyName": "_set",
      "property": "function weight() {\n    [native code]\n}"
    },
    {
      "path": "window.FontFace.prototype.weight",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.FontFace.prototype.weight",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.FontFace.prototype.stretch",
      "propertyName": "_accessException",
      "property": "TypeError: The FontFace.stretch getter can only be used on instances of FontFace"
    },
    {
      "path": "window.FontFace.prototype.stretch",
      "propertyName": "_get",
      "property": "function stretch() {\n    [native code]\n}"
    },
    {
      "path": "window.FontFace.prototype.stretch",
      "propertyName": "_set",
      "property": "function stretch() {\n    [native code]\n}"
    },
    {
      "path": "window.FontFace.prototype.stretch",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.FontFace.prototype.stretch",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.FontFace.prototype.unicodeRange",
      "propertyName": "_accessException",
      "property": "TypeError: The FontFace.unicodeRange getter can only be used on instances of FontFace"
    },
    {
      "path": "window.FontFace.prototype.unicodeRange",
      "propertyName": "_get",
      "property": "function unicodeRange() {\n    [native code]\n}"
    },
    {
      "path": "window.FontFace.prototype.unicodeRange",
      "propertyName": "_set",
      "property": "function unicodeRange() {\n    [native code]\n}"
    },
    {
      "path": "window.FontFace.prototype.unicodeRange",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.FontFace.prototype.unicodeRange",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.FontFace.prototype.variant",
      "propertyName": "_accessException",
      "property": "TypeError: The FontFace.variant getter can only be used on instances of FontFace"
    },
    {
      "path": "window.FontFace.prototype.variant",
      "propertyName": "_get",
      "property": "function variant() {\n    [native code]\n}"
    },
    {
      "path": "window.FontFace.prototype.variant",
      "propertyName": "_set",
      "property": "function variant() {\n    [native code]\n}"
    },
    {
      "path": "window.FontFace.prototype.variant",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.FontFace.prototype.variant",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.FontFace.prototype.featureSettings",
      "propertyName": "_accessException",
      "property": "TypeError: The FontFace.featureSettings getter can only be used on instances of FontFace"
    },
    {
      "path": "window.FontFace.prototype.featureSettings",
      "propertyName": "_get",
      "property": "function featureSettings() {\n    [native code]\n}"
    },
    {
      "path": "window.FontFace.prototype.featureSettings",
      "propertyName": "_set",
      "property": "function featureSettings() {\n    [native code]\n}"
    },
    {
      "path": "window.FontFace.prototype.featureSettings",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.FontFace.prototype.featureSettings",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.FontFace.prototype.display",
      "propertyName": "_accessException",
      "property": "TypeError: The FontFace.display getter can only be used on instances of FontFace"
    },
    {
      "path": "window.FontFace.prototype.display",
      "propertyName": "_get",
      "property": "function display() {\n    [native code]\n}"
    },
    {
      "path": "window.FontFace.prototype.display",
      "propertyName": "_set",
      "property": "function display() {\n    [native code]\n}"
    },
    {
      "path": "window.FontFace.prototype.display",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.FontFace.prototype.display",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.FontFace.prototype.status",
      "propertyName": "_accessException",
      "property": "TypeError: The FontFace.status getter can only be used on instances of FontFace"
    },
    {
      "path": "window.FontFace.prototype.status",
      "propertyName": "_get",
      "property": "function status() {\n    [native code]\n}"
    },
    {
      "path": "window.FontFace.prototype.status",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.FontFace.prototype.loaded",
      "propertyName": "_accessException",
      "property": "TypeError: The FontFace.loaded getter can only be used on instances of FontFace"
    },
    {
      "path": "window.FontFace.prototype.loaded",
      "propertyName": "_get",
      "property": "function loaded() {\n    [native code]\n}"
    },
    {
      "path": "window.FontFace.prototype.loaded",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.FontFace.prototype.load",
      "propertyName": "_function",
      "property": "function load() {\n    [native code]\n}"
    },
    {
      "path": "window.FontFace",
      "propertyName": "new()",
      "property": "TypeError: Not enough arguments"
    },
    {
      "path": "window.FontFace",
      "propertyName": "_function",
      "property": "function FontFace() {\n    [native code]\n}"
    },
    {
      "path": "window.MediaList.prototype.mediaText",
      "propertyName": "_accessException",
      "property": "TypeError: The MediaList.mediaText getter can only be used on instances of MediaList"
    },
    {
      "path": "window.MediaList.prototype.mediaText",
      "propertyName": "_get",
      "property": "function mediaText() {\n    [native code]\n}"
    },
    {
      "path": "window.MediaList.prototype.mediaText",
      "propertyName": "_set",
      "property": "function mediaText() {\n    [native code]\n}"
    },
    {
      "path": "window.MediaList.prototype.mediaText",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.MediaList.prototype.mediaText",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.MediaList.prototype.length",
      "propertyName": "_accessException",
      "property": "TypeError: The MediaList.length getter can only be used on instances of MediaList"
    },
    {
      "path": "window.MediaList.prototype.length",
      "propertyName": "_get",
      "property": "function length() {\n    [native code]\n}"
    },
    {
      "path": "window.MediaList.prototype.length",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.MediaList.prototype.item",
      "propertyName": "_function",
      "property": "function item() {\n    [native code]\n}"
    },
    {
      "path": "window.MediaList.prototype.deleteMedium",
      "propertyName": "_function",
      "property": "function deleteMedium() {\n    [native code]\n}"
    },
    {
      "path": "window.MediaList.prototype.appendMedium",
      "propertyName": "_function",
      "property": "function appendMedium() {\n    [native code]\n}"
    },
    {
      "path": "window.MediaList.prototype",
      "propertyName": "Symbol.iterator",
      "property": "REF: window.DOMStringList.prototype.Symbol(Symbol.iterator)"
    },
    {
      "path": "window.MediaList",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.MediaList",
      "propertyName": "_function",
      "property": "function MediaList() {\n    [native code]\n}"
    },
    {
      "path": "window.StyleSheet.prototype.type",
      "propertyName": "_accessException",
      "property": "TypeError: The StyleSheet.type getter can only be used on instances of StyleSheet"
    },
    {
      "path": "window.StyleSheet.prototype.type",
      "propertyName": "_get",
      "property": "function type() {\n    [native code]\n}"
    },
    {
      "path": "window.StyleSheet.prototype.type",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.StyleSheet.prototype.disabled",
      "propertyName": "_accessException",
      "property": "TypeError: The StyleSheet.disabled getter can only be used on instances of StyleSheet"
    },
    {
      "path": "window.StyleSheet.prototype.disabled",
      "propertyName": "_get",
      "property": "function disabled() {\n    [native code]\n}"
    },
    {
      "path": "window.StyleSheet.prototype.disabled",
      "propertyName": "_set",
      "property": "function disabled() {\n    [native code]\n}"
    },
    {
      "path": "window.StyleSheet.prototype.disabled",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.StyleSheet.prototype.disabled",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.StyleSheet.prototype.ownerNode",
      "propertyName": "_accessException",
      "property": "TypeError: The StyleSheet.ownerNode getter can only be used on instances of StyleSheet"
    },
    {
      "path": "window.StyleSheet.prototype.ownerNode",
      "propertyName": "_get",
      "property": "function ownerNode() {\n    [native code]\n}"
    },
    {
      "path": "window.StyleSheet.prototype.ownerNode",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.StyleSheet.prototype.parentStyleSheet",
      "propertyName": "_accessException",
      "property": "TypeError: The StyleSheet.parentStyleSheet getter can only be used on instances of StyleSheet"
    },
    {
      "path": "window.StyleSheet.prototype.parentStyleSheet",
      "propertyName": "_get",
      "property": "function parentStyleSheet() {\n    [native code]\n}"
    },
    {
      "path": "window.StyleSheet.prototype.parentStyleSheet",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.StyleSheet.prototype.href",
      "propertyName": "_accessException",
      "property": "TypeError: The StyleSheet.href getter can only be used on instances of StyleSheet"
    },
    {
      "path": "window.StyleSheet.prototype.href",
      "propertyName": "_get",
      "property": "function href() {\n    [native code]\n}"
    },
    {
      "path": "window.StyleSheet.prototype.href",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.StyleSheet.prototype.title",
      "propertyName": "_accessException",
      "property": "TypeError: The StyleSheet.title getter can only be used on instances of StyleSheet"
    },
    {
      "path": "window.StyleSheet.prototype.title",
      "propertyName": "_get",
      "property": "function title() {\n    [native code]\n}"
    },
    {
      "path": "window.StyleSheet.prototype.title",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.StyleSheet.prototype.media",
      "propertyName": "_accessException",
      "property": "TypeError: The StyleSheet.media getter can only be used on instances of StyleSheet"
    },
    {
      "path": "window.StyleSheet.prototype.media",
      "propertyName": "_get",
      "property": "function media() {\n    [native code]\n}"
    },
    {
      "path": "window.StyleSheet.prototype.media",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.StyleSheet",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.StyleSheet",
      "propertyName": "_function",
      "property": "function StyleSheet() {\n    [native code]\n}"
    },
    {
      "path": "window.StyleSheetList.prototype.length",
      "propertyName": "_accessException",
      "property": "TypeError: The StyleSheetList.length getter can only be used on instances of StyleSheetList"
    },
    {
      "path": "window.StyleSheetList.prototype.length",
      "propertyName": "_get",
      "property": "function length() {\n    [native code]\n}"
    },
    {
      "path": "window.StyleSheetList.prototype.length",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.StyleSheetList.prototype.item",
      "propertyName": "_function",
      "property": "function item() {\n    [native code]\n}"
    },
    {
      "path": "window.StyleSheetList.prototype",
      "propertyName": "Symbol.iterator",
      "property": "REF: window.DOMStringList.prototype.Symbol(Symbol.iterator)"
    },
    {
      "path": "window.StyleSheetList",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.StyleSheetList",
      "propertyName": "_function",
      "property": "function StyleSheetList() {\n    [native code]\n}"
    },
    {
      "path": "window",
      "propertyName": "WebKitCSSMatrix",
      "property": {
        "prototype": {
          "_protos": ["Object.prototype"],
          "a": {
            "_flags": "ce",
            "_accessException": "TypeError: The WebKitCSSMatrix.a getter can only be used on instances of WebKitCSSMatrix",
            "_get": "function a() {\n    [native code]\n}",
            "_set": "function a() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "b": {
            "_flags": "ce",
            "_accessException": "TypeError: The WebKitCSSMatrix.b getter can only be used on instances of WebKitCSSMatrix",
            "_get": "function b() {\n    [native code]\n}",
            "_set": "function b() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "c": {
            "_flags": "ce",
            "_accessException": "TypeError: The WebKitCSSMatrix.c getter can only be used on instances of WebKitCSSMatrix",
            "_get": "function c() {\n    [native code]\n}",
            "_set": "function c() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "d": {
            "_flags": "ce",
            "_accessException": "TypeError: The WebKitCSSMatrix.d getter can only be used on instances of WebKitCSSMatrix",
            "_get": "function d() {\n    [native code]\n}",
            "_set": "function d() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "e": {
            "_flags": "ce",
            "_accessException": "TypeError: The WebKitCSSMatrix.e getter can only be used on instances of WebKitCSSMatrix",
            "_get": "function e() {\n    [native code]\n}",
            "_set": "function e() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "f": {
            "_flags": "ce",
            "_accessException": "TypeError: The WebKitCSSMatrix.f getter can only be used on instances of WebKitCSSMatrix",
            "_get": "function f() {\n    [native code]\n}",
            "_set": "function f() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "m11": {
            "_flags": "ce",
            "_accessException": "TypeError: The WebKitCSSMatrix.m11 getter can only be used on instances of WebKitCSSMatrix",
            "_get": "function m11() {\n    [native code]\n}",
            "_set": "function m11() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "m12": {
            "_flags": "ce",
            "_accessException": "TypeError: The WebKitCSSMatrix.m12 getter can only be used on instances of WebKitCSSMatrix",
            "_get": "function m12() {\n    [native code]\n}",
            "_set": "function m12() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "m13": {
            "_flags": "ce",
            "_accessException": "TypeError: The WebKitCSSMatrix.m13 getter can only be used on instances of WebKitCSSMatrix",
            "_get": "function m13() {\n    [native code]\n}",
            "_set": "function m13() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "m14": {
            "_flags": "ce",
            "_accessException": "TypeError: The WebKitCSSMatrix.m14 getter can only be used on instances of WebKitCSSMatrix",
            "_get": "function m14() {\n    [native code]\n}",
            "_set": "function m14() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "m21": {
            "_flags": "ce",
            "_accessException": "TypeError: The WebKitCSSMatrix.m21 getter can only be used on instances of WebKitCSSMatrix",
            "_get": "function m21() {\n    [native code]\n}",
            "_set": "function m21() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "m22": {
            "_flags": "ce",
            "_accessException": "TypeError: The WebKitCSSMatrix.m22 getter can only be used on instances of WebKitCSSMatrix",
            "_get": "function m22() {\n    [native code]\n}",
            "_set": "function m22() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "m23": {
            "_flags": "ce",
            "_accessException": "TypeError: The WebKitCSSMatrix.m23 getter can only be used on instances of WebKitCSSMatrix",
            "_get": "function m23() {\n    [native code]\n}",
            "_set": "function m23() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "m24": {
            "_flags": "ce",
            "_accessException": "TypeError: The WebKitCSSMatrix.m24 getter can only be used on instances of WebKitCSSMatrix",
            "_get": "function m24() {\n    [native code]\n}",
            "_set": "function m24() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "m31": {
            "_flags": "ce",
            "_accessException": "TypeError: The WebKitCSSMatrix.m31 getter can only be used on instances of WebKitCSSMatrix",
            "_get": "function m31() {\n    [native code]\n}",
            "_set": "function m31() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "m32": {
            "_flags": "ce",
            "_accessException": "TypeError: The WebKitCSSMatrix.m32 getter can only be used on instances of WebKitCSSMatrix",
            "_get": "function m32() {\n    [native code]\n}",
            "_set": "function m32() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "m33": {
            "_flags": "ce",
            "_accessException": "TypeError: The WebKitCSSMatrix.m33 getter can only be used on instances of WebKitCSSMatrix",
            "_get": "function m33() {\n    [native code]\n}",
            "_set": "function m33() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "m34": {
            "_flags": "ce",
            "_accessException": "TypeError: The WebKitCSSMatrix.m34 getter can only be used on instances of WebKitCSSMatrix",
            "_get": "function m34() {\n    [native code]\n}",
            "_set": "function m34() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "m41": {
            "_flags": "ce",
            "_accessException": "TypeError: The WebKitCSSMatrix.m41 getter can only be used on instances of WebKitCSSMatrix",
            "_get": "function m41() {\n    [native code]\n}",
            "_set": "function m41() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "m42": {
            "_flags": "ce",
            "_accessException": "TypeError: The WebKitCSSMatrix.m42 getter can only be used on instances of WebKitCSSMatrix",
            "_get": "function m42() {\n    [native code]\n}",
            "_set": "function m42() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "m43": {
            "_flags": "ce",
            "_accessException": "TypeError: The WebKitCSSMatrix.m43 getter can only be used on instances of WebKitCSSMatrix",
            "_get": "function m43() {\n    [native code]\n}",
            "_set": "function m43() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "m44": {
            "_flags": "ce",
            "_accessException": "TypeError: The WebKitCSSMatrix.m44 getter can only be used on instances of WebKitCSSMatrix",
            "_get": "function m44() {\n    [native code]\n}",
            "_set": "function m44() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "setMatrixValue": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "setMatrixValue"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function setMatrixValue() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "multiply": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "multiply"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function multiply() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "inverse": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "inverse"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function inverse() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "translate": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "translate"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function translate() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "scale": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "scale"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function scale() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "rotate": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "rotate"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function rotate() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "rotateAxisAngle": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "rotateAxisAngle"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function rotateAxisAngle() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "skewX": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "skewX"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function skewX() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "skewY": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "skewY"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function skewY() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "toString": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "toString"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function toString() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "WebKitCSSMatrix"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": {
          "_protos": ["WebKitCSSMatrix.prototype", "Object.prototype"],
          "a": {
            "_type": "number",
            "_value": 1
          },
          "b": {
            "_type": "number",
            "_value": 0
          },
          "c": {
            "_type": "number",
            "_value": 0
          },
          "d": {
            "_type": "number",
            "_value": 1
          },
          "e": {
            "_type": "number",
            "_value": 0
          },
          "f": {
            "_type": "number",
            "_value": 0
          },
          "m11": {
            "_type": "number",
            "_value": 1
          },
          "m12": {
            "_type": "number",
            "_value": 0
          },
          "m13": {
            "_type": "number",
            "_value": 0
          },
          "m14": {
            "_type": "number",
            "_value": 0
          },
          "m21": {
            "_type": "number",
            "_value": 0
          },
          "m22": {
            "_type": "number",
            "_value": 1
          },
          "m23": {
            "_type": "number",
            "_value": 0
          },
          "m24": {
            "_type": "number",
            "_value": 0
          },
          "m31": {
            "_type": "number",
            "_value": 0
          },
          "m32": {
            "_type": "number",
            "_value": 0
          },
          "m33": {
            "_type": "number",
            "_value": 1
          },
          "m34": {
            "_type": "number",
            "_value": 0
          },
          "m41": {
            "_type": "number",
            "_value": 0
          },
          "m42": {
            "_type": "number",
            "_value": 0
          },
          "m43": {
            "_type": "number",
            "_value": 0
          },
          "m44": {
            "_type": "number",
            "_value": 1
          }
        },
        "_function": "function WebKitCSSMatrix() {\n    [native code]\n}",
        "_flags": "cw"
      }
    },
    {
      "path": "window.AbortController.prototype.signal",
      "propertyName": "_accessException",
      "property": "TypeError: The AbortController.signal getter can only be used on instances of AbortController"
    },
    {
      "path": "window.AbortController.prototype.signal",
      "propertyName": "_get",
      "property": "function signal() {\n    [native code]\n}"
    },
    {
      "path": "window.AbortController.prototype.signal",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.AbortController.prototype.abort",
      "propertyName": "_function",
      "property": "function abort() {\n    [native code]\n}"
    },
    {
      "path": "window.AbortController",
      "propertyName": "_function",
      "property": "function AbortController() {\n    [native code]\n}"
    },
    {
      "path": "window.AbortSignal.prototype.aborted",
      "propertyName": "_accessException",
      "property": "TypeError: The AbortSignal.aborted getter can only be used on instances of AbortSignal"
    },
    {
      "path": "window.AbortSignal.prototype.aborted",
      "propertyName": "_get",
      "property": "function aborted() {\n    [native code]\n}"
    },
    {
      "path": "window.AbortSignal.prototype.aborted",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.AbortSignal.prototype.onabort",
      "propertyName": "_accessException",
      "property": "TypeError: The AbortSignal.onabort getter can only be used on instances of AbortSignal"
    },
    {
      "path": "window.AbortSignal.prototype.onabort",
      "propertyName": "_get",
      "property": "function onabort() {\n    [native code]\n}"
    },
    {
      "path": "window.AbortSignal.prototype.onabort",
      "propertyName": "_set",
      "property": "function onabort() {\n    [native code]\n}"
    },
    {
      "path": "window.AbortSignal.prototype.onabort",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.AbortSignal.prototype.onabort",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.AbortSignal",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.AbortSignal",
      "propertyName": "_function",
      "property": "function AbortSignal() {\n    [native code]\n}"
    },
    {
      "path": "window.AnimationEvent.prototype.animationName",
      "propertyName": "_accessException",
      "property": "TypeError: The AnimationEvent.animationName getter can only be used on instances of AnimationEvent"
    },
    {
      "path": "window.AnimationEvent.prototype.animationName",
      "propertyName": "_get",
      "property": "function animationName() {\n    [native code]\n}"
    },
    {
      "path": "window.AnimationEvent.prototype.animationName",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.AnimationEvent.prototype.elapsedTime",
      "propertyName": "_accessException",
      "property": "TypeError: The AnimationEvent.elapsedTime getter can only be used on instances of AnimationEvent"
    },
    {
      "path": "window.AnimationEvent.prototype.elapsedTime",
      "propertyName": "_get",
      "property": "function elapsedTime() {\n    [native code]\n}"
    },
    {
      "path": "window.AnimationEvent.prototype.elapsedTime",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.AnimationEvent",
      "propertyName": "new()",
      "property": "TypeError: Not enough arguments"
    },
    {
      "path": "window.AnimationEvent",
      "propertyName": "_function",
      "property": "function AnimationEvent() {\n    [native code]\n}"
    },
    {
      "path": "window.Attr.prototype.namespaceURI",
      "propertyName": "_accessException",
      "property": "TypeError: The Attr.namespaceURI getter can only be used on instances of Attr"
    },
    {
      "path": "window.Attr.prototype.namespaceURI",
      "propertyName": "_get",
      "property": "function namespaceURI() {\n    [native code]\n}"
    },
    {
      "path": "window.Attr.prototype.namespaceURI",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Attr.prototype.prefix",
      "propertyName": "_accessException",
      "property": "TypeError: The Attr.prefix getter can only be used on instances of Attr"
    },
    {
      "path": "window.Attr.prototype.prefix",
      "propertyName": "_get",
      "property": "function prefix() {\n    [native code]\n}"
    },
    {
      "path": "window.Attr.prototype.prefix",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Attr.prototype.localName",
      "propertyName": "_accessException",
      "property": "TypeError: The Attr.localName getter can only be used on instances of Attr"
    },
    {
      "path": "window.Attr.prototype.localName",
      "propertyName": "_get",
      "property": "function localName() {\n    [native code]\n}"
    },
    {
      "path": "window.Attr.prototype.localName",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Attr.prototype.name",
      "propertyName": "_accessException",
      "property": "TypeError: The Attr.name getter can only be used on instances of Attr"
    },
    {
      "path": "window.Attr.prototype.name",
      "propertyName": "_get",
      "property": "function name() {\n    [native code]\n}"
    },
    {
      "path": "window.Attr.prototype.name",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Attr.prototype.value",
      "propertyName": "_accessException",
      "property": "TypeError: The Attr.value getter can only be used on instances of Attr"
    },
    {
      "path": "window.Attr.prototype.value",
      "propertyName": "_get",
      "property": "function value() {\n    [native code]\n}"
    },
    {
      "path": "window.Attr.prototype.value",
      "propertyName": "_set",
      "property": "function value() {\n    [native code]\n}"
    },
    {
      "path": "window.Attr.prototype.value",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Attr.prototype.value",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Attr.prototype.ownerElement",
      "propertyName": "_accessException",
      "property": "TypeError: The Attr.ownerElement getter can only be used on instances of Attr"
    },
    {
      "path": "window.Attr.prototype.ownerElement",
      "propertyName": "_get",
      "property": "function ownerElement() {\n    [native code]\n}"
    },
    {
      "path": "window.Attr.prototype.ownerElement",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Attr.prototype.specified",
      "propertyName": "_accessException",
      "property": "TypeError: The Attr.specified getter can only be used on instances of Attr"
    },
    {
      "path": "window.Attr.prototype.specified",
      "propertyName": "_get",
      "property": "function specified() {\n    [native code]\n}"
    },
    {
      "path": "window.Attr.prototype.specified",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Attr",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.Attr",
      "propertyName": "_function",
      "property": "function Attr() {\n    [native code]\n}"
    },
    {
      "path": "window.BeforeUnloadEvent.prototype.returnValue",
      "propertyName": "_accessException",
      "property": "TypeError: The BeforeUnloadEvent.returnValue getter can only be used on instances of BeforeUnloadEvent"
    },
    {
      "path": "window.BeforeUnloadEvent.prototype.returnValue",
      "propertyName": "_get",
      "property": "function returnValue() {\n    [native code]\n}"
    },
    {
      "path": "window.BeforeUnloadEvent.prototype.returnValue",
      "propertyName": "_set",
      "property": "function returnValue() {\n    [native code]\n}"
    },
    {
      "path": "window.BeforeUnloadEvent.prototype.returnValue",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.BeforeUnloadEvent.prototype.returnValue",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.BeforeUnloadEvent",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.BeforeUnloadEvent",
      "propertyName": "_function",
      "property": "function BeforeUnloadEvent() {\n    [native code]\n}"
    },
    {
      "path": "window.CDATASection",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.CDATASection",
      "propertyName": "_function",
      "property": "function CDATASection() {\n    [native code]\n}"
    },
    {
      "path": "window.CharacterData.prototype.data",
      "propertyName": "_accessException",
      "property": "TypeError: The CharacterData.data getter can only be used on instances of CharacterData"
    },
    {
      "path": "window.CharacterData.prototype.data",
      "propertyName": "_get",
      "property": "function data() {\n    [native code]\n}"
    },
    {
      "path": "window.CharacterData.prototype.data",
      "propertyName": "_set",
      "property": "function data() {\n    [native code]\n}"
    },
    {
      "path": "window.CharacterData.prototype.data",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.CharacterData.prototype.data",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.CharacterData.prototype.length",
      "propertyName": "_accessException",
      "property": "TypeError: The CharacterData.length getter can only be used on instances of CharacterData"
    },
    {
      "path": "window.CharacterData.prototype.length",
      "propertyName": "_get",
      "property": "function length() {\n    [native code]\n}"
    },
    {
      "path": "window.CharacterData.prototype.length",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.CharacterData.prototype.previousElementSibling",
      "propertyName": "_accessException",
      "property": "TypeError: The CharacterData.previousElementSibling getter can only be used on instances of CharacterData"
    },
    {
      "path": "window.CharacterData.prototype.previousElementSibling",
      "propertyName": "_get",
      "property": "function previousElementSibling() {\n    [native code]\n}"
    },
    {
      "path": "window.CharacterData.prototype.previousElementSibling",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.CharacterData.prototype.nextElementSibling",
      "propertyName": "_accessException",
      "property": "TypeError: The CharacterData.nextElementSibling getter can only be used on instances of CharacterData"
    },
    {
      "path": "window.CharacterData.prototype.nextElementSibling",
      "propertyName": "_get",
      "property": "function nextElementSibling() {\n    [native code]\n}"
    },
    {
      "path": "window.CharacterData.prototype.nextElementSibling",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.CharacterData.prototype.substringData",
      "propertyName": "_function",
      "property": "function substringData() {\n    [native code]\n}"
    },
    {
      "path": "window.CharacterData.prototype.appendData",
      "propertyName": "_function",
      "property": "function appendData() {\n    [native code]\n}"
    },
    {
      "path": "window.CharacterData.prototype.insertData",
      "propertyName": "_function",
      "property": "function insertData() {\n    [native code]\n}"
    },
    {
      "path": "window.CharacterData.prototype.deleteData",
      "propertyName": "_function",
      "property": "function deleteData() {\n    [native code]\n}"
    },
    {
      "path": "window.CharacterData.prototype.replaceData",
      "propertyName": "_function",
      "property": "function replaceData() {\n    [native code]\n}"
    },
    {
      "path": "window.CharacterData.prototype.before",
      "propertyName": "_function",
      "property": "function before() {\n    [native code]\n}"
    },
    {
      "path": "window.CharacterData.prototype.after",
      "propertyName": "_function",
      "property": "function after() {\n    [native code]\n}"
    },
    {
      "path": "window.CharacterData.prototype.replaceWith",
      "propertyName": "_function",
      "property": "function replaceWith() {\n    [native code]\n}"
    },
    {
      "path": "window.CharacterData.prototype.remove",
      "propertyName": "_function",
      "property": "function remove() {\n    [native code]\n}"
    },
    {
      "path": "window.CharacterData.prototype",
      "propertyName": "Symbol.unscopables._flags",
      "property": "c"
    },
    {
      "path": "window.CharacterData",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.CharacterData",
      "propertyName": "_function",
      "property": "function CharacterData() {\n    [native code]\n}"
    },
    {
      "path": "window.ClipboardEvent.prototype.clipboardData",
      "propertyName": "_accessException",
      "property": "TypeError: The ClipboardEvent.clipboardData getter can only be used on instances of ClipboardEvent"
    },
    {
      "path": "window.ClipboardEvent.prototype.clipboardData",
      "propertyName": "_get",
      "property": "function clipboardData() {\n    [native code]\n}"
    },
    {
      "path": "window.ClipboardEvent.prototype.clipboardData",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.ClipboardEvent",
      "propertyName": "new()",
      "property": "TypeError: Not enough arguments"
    },
    {
      "path": "window.ClipboardEvent",
      "propertyName": "_function",
      "property": "function ClipboardEvent() {\n    [native code]\n}"
    },
    {
      "path": "window.Comment",
      "propertyName": "_function",
      "property": "function Comment() {\n    [native code]\n}"
    },
    {
      "path": "window.CompositionEvent.prototype.data",
      "propertyName": "_accessException",
      "property": "TypeError: The CompositionEvent.data getter can only be used on instances of CompositionEvent"
    },
    {
      "path": "window.CompositionEvent.prototype.data",
      "propertyName": "_get",
      "property": "function data() {\n    [native code]\n}"
    },
    {
      "path": "window.CompositionEvent.prototype.data",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.CompositionEvent.prototype.initCompositionEvent",
      "propertyName": "_function",
      "property": "function initCompositionEvent() {\n    [native code]\n}"
    },
    {
      "path": "window.CompositionEvent",
      "propertyName": "new()",
      "property": "TypeError: Not enough arguments"
    },
    {
      "path": "window.CompositionEvent",
      "propertyName": "_function",
      "property": "function CompositionEvent() {\n    [native code]\n}"
    },
    {
      "path": "window.CustomEvent.prototype.detail",
      "propertyName": "_accessException",
      "property": "TypeError: The CustomEvent.detail getter can only be used on instances of CustomEvent"
    },
    {
      "path": "window.CustomEvent.prototype.detail",
      "propertyName": "_get",
      "property": "function detail() {\n    [native code]\n}"
    },
    {
      "path": "window.CustomEvent.prototype.detail",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.CustomEvent.prototype.initCustomEvent",
      "propertyName": "_function",
      "property": "function initCustomEvent() {\n    [native code]\n}"
    },
    {
      "path": "window.CustomEvent",
      "propertyName": "new()",
      "property": "TypeError: Not enough arguments"
    },
    {
      "path": "window.CustomEvent",
      "propertyName": "_function",
      "property": "function CustomEvent() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMException.prototype.code",
      "propertyName": "_accessException",
      "property": "TypeError: The DOMException.code getter can only be used on instances of DOMException"
    },
    {
      "path": "window.DOMException.prototype.code",
      "propertyName": "_get",
      "property": "function code() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMException.prototype.code",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMException.prototype.name",
      "propertyName": "_accessException",
      "property": "TypeError: The DOMException.name getter can only be used on instances of DOMException"
    },
    {
      "path": "window.DOMException.prototype.name",
      "propertyName": "_get",
      "property": "function name() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMException.prototype.name",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMException.prototype.message",
      "propertyName": "_accessException",
      "property": "TypeError: The DOMException.message getter can only be used on instances of DOMException"
    },
    {
      "path": "window.DOMException.prototype.message",
      "propertyName": "_get",
      "property": "function message() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMException.prototype.message",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMException",
      "propertyName": "_function",
      "property": "function DOMException() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMImplementation.prototype.createDocumentType",
      "propertyName": "_function",
      "property": "function createDocumentType() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMImplementation.prototype.createDocument",
      "propertyName": "_function",
      "property": "function createDocument() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMImplementation.prototype.createHTMLDocument",
      "propertyName": "_function",
      "property": "function createHTMLDocument() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMImplementation.prototype.hasFeature",
      "propertyName": "_function",
      "property": "function hasFeature() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMImplementation",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.DOMImplementation",
      "propertyName": "_function",
      "property": "function DOMImplementation() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMPoint.prototype.x",
      "propertyName": "_accessException",
      "property": "TypeError: The DOMPoint.x getter can only be used on instances of DOMPoint"
    },
    {
      "path": "window.DOMPoint.prototype.x",
      "propertyName": "_get",
      "property": "function x() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMPoint.prototype.x",
      "propertyName": "_set",
      "property": "function x() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMPoint.prototype.x",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMPoint.prototype.x",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMPoint.prototype.y",
      "propertyName": "_accessException",
      "property": "TypeError: The DOMPoint.y getter can only be used on instances of DOMPoint"
    },
    {
      "path": "window.DOMPoint.prototype.y",
      "propertyName": "_get",
      "property": "function y() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMPoint.prototype.y",
      "propertyName": "_set",
      "property": "function y() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMPoint.prototype.y",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMPoint.prototype.y",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMPoint.prototype.z",
      "propertyName": "_accessException",
      "property": "TypeError: The DOMPoint.z getter can only be used on instances of DOMPoint"
    },
    {
      "path": "window.DOMPoint.prototype.z",
      "propertyName": "_get",
      "property": "function z() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMPoint.prototype.z",
      "propertyName": "_set",
      "property": "function z() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMPoint.prototype.z",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMPoint.prototype.z",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMPoint.prototype.w",
      "propertyName": "_accessException",
      "property": "TypeError: The DOMPoint.w getter can only be used on instances of DOMPoint"
    },
    {
      "path": "window.DOMPoint.prototype.w",
      "propertyName": "_get",
      "property": "function w() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMPoint.prototype.w",
      "propertyName": "_set",
      "property": "function w() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMPoint.prototype.w",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMPoint.prototype.w",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMPoint.fromPoint",
      "propertyName": "_function",
      "property": "function fromPoint() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMPoint",
      "propertyName": "_function",
      "property": "function DOMPoint() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMPointReadOnly.prototype.x",
      "propertyName": "_accessException",
      "property": "TypeError: The DOMPointReadOnly.x getter can only be used on instances of DOMPointReadOnly"
    },
    {
      "path": "window.DOMPointReadOnly.prototype.x",
      "propertyName": "_get",
      "property": "function x() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMPointReadOnly.prototype.x",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMPointReadOnly.prototype.y",
      "propertyName": "_accessException",
      "property": "TypeError: The DOMPointReadOnly.y getter can only be used on instances of DOMPointReadOnly"
    },
    {
      "path": "window.DOMPointReadOnly.prototype.y",
      "propertyName": "_get",
      "property": "function y() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMPointReadOnly.prototype.y",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMPointReadOnly.prototype.z",
      "propertyName": "_accessException",
      "property": "TypeError: The DOMPointReadOnly.z getter can only be used on instances of DOMPointReadOnly"
    },
    {
      "path": "window.DOMPointReadOnly.prototype.z",
      "propertyName": "_get",
      "property": "function z() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMPointReadOnly.prototype.z",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMPointReadOnly.prototype.w",
      "propertyName": "_accessException",
      "property": "TypeError: The DOMPointReadOnly.w getter can only be used on instances of DOMPointReadOnly"
    },
    {
      "path": "window.DOMPointReadOnly.prototype.w",
      "propertyName": "_get",
      "property": "function w() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMPointReadOnly.prototype.w",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMPointReadOnly.prototype.matrixTransform",
      "propertyName": "_function",
      "property": "function matrixTransform() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMPointReadOnly.prototype.toJSON",
      "propertyName": "_function",
      "property": "function toJSON() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMPointReadOnly.fromPoint",
      "propertyName": "_function",
      "property": "function fromPoint() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMPointReadOnly",
      "propertyName": "_function",
      "property": "function DOMPointReadOnly() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMQuad.prototype.p1",
      "propertyName": "_accessException",
      "property": "TypeError: The DOMQuad.p1 getter can only be used on instances of DOMQuad"
    },
    {
      "path": "window.DOMQuad.prototype.p1",
      "propertyName": "_get",
      "property": "function p1() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMQuad.prototype.p1",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMQuad.prototype.p2",
      "propertyName": "_accessException",
      "property": "TypeError: The DOMQuad.p2 getter can only be used on instances of DOMQuad"
    },
    {
      "path": "window.DOMQuad.prototype.p2",
      "propertyName": "_get",
      "property": "function p2() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMQuad.prototype.p2",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMQuad.prototype.p3",
      "propertyName": "_accessException",
      "property": "TypeError: The DOMQuad.p3 getter can only be used on instances of DOMQuad"
    },
    {
      "path": "window.DOMQuad.prototype.p3",
      "propertyName": "_get",
      "property": "function p3() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMQuad.prototype.p3",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMQuad.prototype.p4",
      "propertyName": "_accessException",
      "property": "TypeError: The DOMQuad.p4 getter can only be used on instances of DOMQuad"
    },
    {
      "path": "window.DOMQuad.prototype.p4",
      "propertyName": "_get",
      "property": "function p4() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMQuad.prototype.p4",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMQuad.prototype.getBounds",
      "propertyName": "_function",
      "property": "function getBounds() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMQuad.prototype.toJSON",
      "propertyName": "_function",
      "property": "function toJSON() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMQuad.fromRect",
      "propertyName": "_function",
      "property": "function fromRect() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMQuad.fromQuad",
      "propertyName": "_function",
      "property": "function fromQuad() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMQuad",
      "propertyName": "_function",
      "property": "function DOMQuad() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMRect.prototype.x",
      "propertyName": "_accessException",
      "property": "TypeError: The DOMRect.x getter can only be used on instances of DOMRect"
    },
    {
      "path": "window.DOMRect.prototype.x",
      "propertyName": "_get",
      "property": "function x() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMRect.prototype.x",
      "propertyName": "_set",
      "property": "function x() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMRect.prototype.x",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMRect.prototype.x",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMRect.prototype.y",
      "propertyName": "_accessException",
      "property": "TypeError: The DOMRect.y getter can only be used on instances of DOMRect"
    },
    {
      "path": "window.DOMRect.prototype.y",
      "propertyName": "_get",
      "property": "function y() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMRect.prototype.y",
      "propertyName": "_set",
      "property": "function y() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMRect.prototype.y",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMRect.prototype.y",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMRect.prototype.width",
      "propertyName": "_accessException",
      "property": "TypeError: The DOMRect.width getter can only be used on instances of DOMRect"
    },
    {
      "path": "window.DOMRect.prototype.width",
      "propertyName": "_get",
      "property": "function width() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMRect.prototype.width",
      "propertyName": "_set",
      "property": "function width() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMRect.prototype.width",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMRect.prototype.width",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMRect.prototype.height",
      "propertyName": "_accessException",
      "property": "TypeError: The DOMRect.height getter can only be used on instances of DOMRect"
    },
    {
      "path": "window.DOMRect.prototype.height",
      "propertyName": "_get",
      "property": "function height() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMRect.prototype.height",
      "propertyName": "_set",
      "property": "function height() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMRect.prototype.height",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMRect.prototype.height",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMRect.fromRect",
      "propertyName": "_function",
      "property": "function fromRect() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMRect",
      "propertyName": "_function",
      "property": "function DOMRect() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMRectList.prototype.length",
      "propertyName": "_accessException",
      "property": "TypeError: The DOMRectList.length getter can only be used on instances of DOMRectList"
    },
    {
      "path": "window.DOMRectList.prototype.length",
      "propertyName": "_get",
      "property": "function length() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMRectList.prototype.length",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMRectList.prototype.item",
      "propertyName": "_function",
      "property": "function item() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMRectList.prototype",
      "propertyName": "Symbol.iterator",
      "property": "REF: window.DOMStringList.prototype.Symbol(Symbol.iterator)"
    },
    {
      "path": "window.DOMRectList",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.DOMRectList",
      "propertyName": "_function",
      "property": "function DOMRectList() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMRectReadOnly.prototype.x",
      "propertyName": "_accessException",
      "property": "TypeError: The DOMRectReadOnly.x getter can only be used on instances of DOMRectReadOnly"
    },
    {
      "path": "window.DOMRectReadOnly.prototype.x",
      "propertyName": "_get",
      "property": "function x() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMRectReadOnly.prototype.x",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMRectReadOnly.prototype.y",
      "propertyName": "_accessException",
      "property": "TypeError: The DOMRectReadOnly.y getter can only be used on instances of DOMRectReadOnly"
    },
    {
      "path": "window.DOMRectReadOnly.prototype.y",
      "propertyName": "_get",
      "property": "function y() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMRectReadOnly.prototype.y",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMRectReadOnly.prototype.width",
      "propertyName": "_accessException",
      "property": "TypeError: The DOMRectReadOnly.width getter can only be used on instances of DOMRectReadOnly"
    },
    {
      "path": "window.DOMRectReadOnly.prototype.width",
      "propertyName": "_get",
      "property": "function width() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMRectReadOnly.prototype.width",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMRectReadOnly.prototype.height",
      "propertyName": "_accessException",
      "property": "TypeError: The DOMRectReadOnly.height getter can only be used on instances of DOMRectReadOnly"
    },
    {
      "path": "window.DOMRectReadOnly.prototype.height",
      "propertyName": "_get",
      "property": "function height() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMRectReadOnly.prototype.height",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMRectReadOnly.prototype.top",
      "propertyName": "_accessException",
      "property": "TypeError: The DOMRectReadOnly.top getter can only be used on instances of DOMRectReadOnly"
    },
    {
      "path": "window.DOMRectReadOnly.prototype.top",
      "propertyName": "_get",
      "property": "function top() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMRectReadOnly.prototype.top",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMRectReadOnly.prototype.right",
      "propertyName": "_accessException",
      "property": "TypeError: The DOMRectReadOnly.right getter can only be used on instances of DOMRectReadOnly"
    },
    {
      "path": "window.DOMRectReadOnly.prototype.right",
      "propertyName": "_get",
      "property": "function right() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMRectReadOnly.prototype.right",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMRectReadOnly.prototype.bottom",
      "propertyName": "_accessException",
      "property": "TypeError: The DOMRectReadOnly.bottom getter can only be used on instances of DOMRectReadOnly"
    },
    {
      "path": "window.DOMRectReadOnly.prototype.bottom",
      "propertyName": "_get",
      "property": "function bottom() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMRectReadOnly.prototype.bottom",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMRectReadOnly.prototype.left",
      "propertyName": "_accessException",
      "property": "TypeError: The DOMRectReadOnly.left getter can only be used on instances of DOMRectReadOnly"
    },
    {
      "path": "window.DOMRectReadOnly.prototype.left",
      "propertyName": "_get",
      "property": "function left() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMRectReadOnly.prototype.left",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMRectReadOnly.prototype.toJSON",
      "propertyName": "_function",
      "property": "function toJSON() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMRectReadOnly.fromRect",
      "propertyName": "_function",
      "property": "function fromRect() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMRectReadOnly",
      "propertyName": "_function",
      "property": "function DOMRectReadOnly() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMStringList.prototype.length",
      "propertyName": "_accessException",
      "property": "TypeError: The DOMStringList.length getter can only be used on instances of DOMStringList"
    },
    {
      "path": "window.DOMStringList.prototype.length",
      "propertyName": "_get",
      "property": "function length() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMStringList.prototype.length",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMStringList.prototype.item",
      "propertyName": "_function",
      "property": "function item() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMStringList.prototype.contains",
      "propertyName": "_function",
      "property": "function contains() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMStringList.prototype",
      "propertyName": "Symbol.iterator",
      "property": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "values"
        },
        "_function": "function values() {\n    [native code]\n}",
        "_invocation": "[object Array Iterator]",
        "_flags": "cw"
      }
    },
    {
      "path": "window.DOMStringList",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.DOMStringList",
      "propertyName": "_function",
      "property": "function DOMStringList() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMStringMap",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.DOMStringMap",
      "propertyName": "_function",
      "property": "function DOMStringMap() {\n    [native code]\n}"
    },
    {
      "path": "window.DataTransfer.prototype.dropEffect",
      "propertyName": "_accessException",
      "property": "TypeError: The DataTransfer.dropEffect getter can only be used on instances of DataTransfer"
    },
    {
      "path": "window.DataTransfer.prototype.dropEffect",
      "propertyName": "_get",
      "property": "function dropEffect() {\n    [native code]\n}"
    },
    {
      "path": "window.DataTransfer.prototype.dropEffect",
      "propertyName": "_set",
      "property": "function dropEffect() {\n    [native code]\n}"
    },
    {
      "path": "window.DataTransfer.prototype.dropEffect",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.DataTransfer.prototype.dropEffect",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.DataTransfer.prototype.effectAllowed",
      "propertyName": "_accessException",
      "property": "TypeError: The DataTransfer.effectAllowed getter can only be used on instances of DataTransfer"
    },
    {
      "path": "window.DataTransfer.prototype.effectAllowed",
      "propertyName": "_get",
      "property": "function effectAllowed() {\n    [native code]\n}"
    },
    {
      "path": "window.DataTransfer.prototype.effectAllowed",
      "propertyName": "_set",
      "property": "function effectAllowed() {\n    [native code]\n}"
    },
    {
      "path": "window.DataTransfer.prototype.effectAllowed",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.DataTransfer.prototype.effectAllowed",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.DataTransfer.prototype.items",
      "propertyName": "_accessException",
      "property": "TypeError: The DataTransfer.items getter can only be used on instances of DataTransfer"
    },
    {
      "path": "window.DataTransfer.prototype.items",
      "propertyName": "_get",
      "property": "function items() {\n    [native code]\n}"
    },
    {
      "path": "window.DataTransfer.prototype.items",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.DataTransfer.prototype.types",
      "propertyName": "_accessException",
      "property": "TypeError: The DataTransfer.types getter can only be used on instances of DataTransfer"
    },
    {
      "path": "window.DataTransfer.prototype.types",
      "propertyName": "_get",
      "property": "function types() {\n    [native code]\n}"
    },
    {
      "path": "window.DataTransfer.prototype.types",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.DataTransfer.prototype.files",
      "propertyName": "_accessException",
      "property": "TypeError: The DataTransfer.files getter can only be used on instances of DataTransfer"
    },
    {
      "path": "window.DataTransfer.prototype.files",
      "propertyName": "_get",
      "property": "function files() {\n    [native code]\n}"
    },
    {
      "path": "window.DataTransfer.prototype.files",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.DataTransfer.prototype.setDragImage",
      "propertyName": "_function",
      "property": "function setDragImage() {\n    [native code]\n}"
    },
    {
      "path": "window.DataTransfer.prototype.getData",
      "propertyName": "_function",
      "property": "function getData() {\n    [native code]\n}"
    },
    {
      "path": "window.DataTransfer.prototype.setData",
      "propertyName": "_function",
      "property": "function setData() {\n    [native code]\n}"
    },
    {
      "path": "window.DataTransfer.prototype.clearData",
      "propertyName": "_function",
      "property": "function clearData() {\n    [native code]\n}"
    },
    {
      "path": "window.DataTransfer",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.DataTransfer",
      "propertyName": "_function",
      "property": "function DataTransfer() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.implementation",
      "propertyName": "_accessException",
      "property": "TypeError: The Document.implementation getter can only be used on instances of Document"
    },
    {
      "path": "window.Document.prototype.implementation",
      "propertyName": "_get",
      "property": "function implementation() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.implementation",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.URL",
      "propertyName": "_accessException",
      "property": "TypeError: The Document.URL getter can only be used on instances of Document"
    },
    {
      "path": "window.Document.prototype.URL",
      "propertyName": "_get",
      "property": "function URL() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.URL",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.documentURI",
      "propertyName": "_accessException",
      "property": "TypeError: The Document.documentURI getter can only be used on instances of Document"
    },
    {
      "path": "window.Document.prototype.documentURI",
      "propertyName": "_get",
      "property": "function documentURI() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.documentURI",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.compatMode",
      "propertyName": "_accessException",
      "property": "TypeError: The Document.compatMode getter can only be used on instances of Document"
    },
    {
      "path": "window.Document.prototype.compatMode",
      "propertyName": "_get",
      "property": "function compatMode() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.compatMode",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.characterSet",
      "propertyName": "_accessException",
      "property": "TypeError: The Document.characterSet getter can only be used on instances of Document"
    },
    {
      "path": "window.Document.prototype.characterSet",
      "propertyName": "_get",
      "property": "function characterSet() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.characterSet",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.charset",
      "propertyName": "_accessException",
      "property": "TypeError: The Document.charset getter can only be used on instances of Document"
    },
    {
      "path": "window.Document.prototype.charset",
      "propertyName": "_get",
      "property": "function charset() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.charset",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.inputEncoding",
      "propertyName": "_accessException",
      "property": "TypeError: The Document.inputEncoding getter can only be used on instances of Document"
    },
    {
      "path": "window.Document.prototype.inputEncoding",
      "propertyName": "_get",
      "property": "function inputEncoding() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.inputEncoding",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.contentType",
      "propertyName": "_accessException",
      "property": "TypeError: The Document.contentType getter can only be used on instances of Document"
    },
    {
      "path": "window.Document.prototype.contentType",
      "propertyName": "_get",
      "property": "function contentType() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.contentType",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.doctype",
      "propertyName": "_accessException",
      "property": "TypeError: The Document.doctype getter can only be used on instances of Document"
    },
    {
      "path": "window.Document.prototype.doctype",
      "propertyName": "_get",
      "property": "function doctype() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.doctype",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.documentElement",
      "propertyName": "_accessException",
      "property": "TypeError: The Document.documentElement getter can only be used on instances of Document"
    },
    {
      "path": "window.Document.prototype.documentElement",
      "propertyName": "_get",
      "property": "function documentElement() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.documentElement",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.domain",
      "propertyName": "_accessException",
      "property": "TypeError: The Document.domain getter can only be used on instances of Document"
    },
    {
      "path": "window.Document.prototype.domain",
      "propertyName": "_get",
      "property": "function domain() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.domain",
      "propertyName": "_set",
      "property": "function domain() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.domain",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.domain",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.referrer",
      "propertyName": "_accessException",
      "property": "TypeError: The Document.referrer getter can only be used on instances of Document"
    },
    {
      "path": "window.Document.prototype.referrer",
      "propertyName": "_get",
      "property": "function referrer() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.referrer",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.cookie",
      "propertyName": "_accessException",
      "property": "TypeError: The Document.cookie getter can only be used on instances of Document"
    },
    {
      "path": "window.Document.prototype.cookie",
      "propertyName": "_get",
      "property": "function cookie() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.cookie",
      "propertyName": "_set",
      "property": "function cookie() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.cookie",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.cookie",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.lastModified",
      "propertyName": "_accessException",
      "property": "TypeError: The Document.lastModified getter can only be used on instances of Document"
    },
    {
      "path": "window.Document.prototype.lastModified",
      "propertyName": "_get",
      "property": "function lastModified() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.lastModified",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.readyState",
      "propertyName": "_accessException",
      "property": "TypeError: The Document.readyState getter can only be used on instances of Document"
    },
    {
      "path": "window.Document.prototype.readyState",
      "propertyName": "_get",
      "property": "function readyState() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.readyState",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.title",
      "propertyName": "_accessException",
      "property": "TypeError: The Document.title getter can only be used on instances of Document"
    },
    {
      "path": "window.Document.prototype.title",
      "propertyName": "_get",
      "property": "function title() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.title",
      "propertyName": "_set",
      "property": "function title() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.title",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.title",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.dir",
      "propertyName": "_accessException",
      "property": "TypeError: The Document.dir getter can only be used on instances of Document"
    },
    {
      "path": "window.Document.prototype.dir",
      "propertyName": "_get",
      "property": "function dir() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.dir",
      "propertyName": "_set",
      "property": "function dir() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.dir",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.dir",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.body",
      "propertyName": "_accessException",
      "property": "TypeError: The Document.body getter can only be used on instances of Document"
    },
    {
      "path": "window.Document.prototype.body",
      "propertyName": "_get",
      "property": "function body() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.body",
      "propertyName": "_set",
      "property": "function body() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.body",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.body",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.head",
      "propertyName": "_accessException",
      "property": "TypeError: The Document.head getter can only be used on instances of Document"
    },
    {
      "path": "window.Document.prototype.head",
      "propertyName": "_get",
      "property": "function head() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.head",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.images",
      "propertyName": "_accessException",
      "property": "TypeError: The Document.images getter can only be used on instances of Document"
    },
    {
      "path": "window.Document.prototype.images",
      "propertyName": "_get",
      "property": "function images() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.images",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.embeds",
      "propertyName": "_accessException",
      "property": "TypeError: The Document.embeds getter can only be used on instances of Document"
    },
    {
      "path": "window.Document.prototype.embeds",
      "propertyName": "_get",
      "property": "function embeds() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.embeds",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.plugins",
      "propertyName": "_accessException",
      "property": "TypeError: The Document.plugins getter can only be used on instances of Document"
    },
    {
      "path": "window.Document.prototype.plugins",
      "propertyName": "_get",
      "property": "function plugins() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.plugins",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.links",
      "propertyName": "_accessException",
      "property": "TypeError: The Document.links getter can only be used on instances of Document"
    },
    {
      "path": "window.Document.prototype.links",
      "propertyName": "_get",
      "property": "function links() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.links",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.forms",
      "propertyName": "_accessException",
      "property": "TypeError: The Document.forms getter can only be used on instances of Document"
    },
    {
      "path": "window.Document.prototype.forms",
      "propertyName": "_get",
      "property": "function forms() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.forms",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.scripts",
      "propertyName": "_accessException",
      "property": "TypeError: The Document.scripts getter can only be used on instances of Document"
    },
    {
      "path": "window.Document.prototype.scripts",
      "propertyName": "_get",
      "property": "function scripts() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.scripts",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.currentScript",
      "propertyName": "_accessException",
      "property": "TypeError: The Document.currentScript getter can only be used on instances of Document"
    },
    {
      "path": "window.Document.prototype.currentScript",
      "propertyName": "_get",
      "property": "function currentScript() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.currentScript",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.defaultView",
      "propertyName": "_accessException",
      "property": "TypeError: The Document.defaultView getter can only be used on instances of Document"
    },
    {
      "path": "window.Document.prototype.defaultView",
      "propertyName": "_get",
      "property": "function defaultView() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.defaultView",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.designMode",
      "propertyName": "_accessException",
      "property": "TypeError: The Document.designMode getter can only be used on instances of Document"
    },
    {
      "path": "window.Document.prototype.designMode",
      "propertyName": "_get",
      "property": "function designMode() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.designMode",
      "propertyName": "_set",
      "property": "function designMode() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.designMode",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.designMode",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onreadystatechange",
      "propertyName": "_get",
      "property": "function onreadystatechange() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onreadystatechange",
      "propertyName": "_set",
      "property": "function onreadystatechange() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onreadystatechange",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onreadystatechange",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.scrollingElement",
      "propertyName": "_accessException",
      "property": "TypeError: The Document.scrollingElement getter can only be used on instances of Document"
    },
    {
      "path": "window.Document.prototype.scrollingElement",
      "propertyName": "_get",
      "property": "function scrollingElement() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.scrollingElement",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onpointerlockchange",
      "propertyName": "_flags",
      "property": "c"
    },
    {
      "path": "window.Document.prototype.onpointerlockchange",
      "propertyName": "_accessException",
      "property": "TypeError: The Document.onpointerlockchange getter can only be used on instances of Document"
    },
    {
      "path": "window.Document.prototype.onpointerlockchange",
      "propertyName": "_get",
      "property": "function onpointerlockchange() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onpointerlockchange",
      "propertyName": "_set",
      "property": "function onpointerlockchange() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onpointerlockchange",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onpointerlockchange",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onpointerlockerror",
      "propertyName": "_flags",
      "property": "c"
    },
    {
      "path": "window.Document.prototype.onpointerlockerror",
      "propertyName": "_accessException",
      "property": "TypeError: The Document.onpointerlockerror getter can only be used on instances of Document"
    },
    {
      "path": "window.Document.prototype.onpointerlockerror",
      "propertyName": "_get",
      "property": "function onpointerlockerror() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onpointerlockerror",
      "propertyName": "_set",
      "property": "function onpointerlockerror() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onpointerlockerror",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onpointerlockerror",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.fonts",
      "propertyName": "_accessException",
      "property": "TypeError: The Document.fonts getter can only be used on instances of Document"
    },
    {
      "path": "window.Document.prototype.fonts",
      "propertyName": "_get",
      "property": "function fonts() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.fonts",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.hidden",
      "propertyName": "_accessException",
      "property": "TypeError: The Document.hidden getter can only be used on instances of Document"
    },
    {
      "path": "window.Document.prototype.hidden",
      "propertyName": "_get",
      "property": "function hidden() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.hidden",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.visibilityState",
      "propertyName": "_accessException",
      "property": "TypeError: The Document.visibilityState getter can only be used on instances of Document"
    },
    {
      "path": "window.Document.prototype.visibilityState",
      "propertyName": "_get",
      "property": "function visibilityState() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.visibilityState",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onvisibilitychange",
      "propertyName": "_accessException",
      "property": "TypeError: The Document.onvisibilitychange getter can only be used on instances of Document"
    },
    {
      "path": "window.Document.prototype.onvisibilitychange",
      "propertyName": "_get",
      "property": "function onvisibilitychange() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onvisibilitychange",
      "propertyName": "_set",
      "property": "function onvisibilitychange() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onvisibilitychange",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onvisibilitychange",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.xmlEncoding",
      "propertyName": "_accessException",
      "property": "TypeError: The Document.xmlEncoding getter can only be used on instances of Document"
    },
    {
      "path": "window.Document.prototype.xmlEncoding",
      "propertyName": "_get",
      "property": "function xmlEncoding() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.xmlEncoding",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.xmlVersion",
      "propertyName": "_accessException",
      "property": "TypeError: The Document.xmlVersion getter can only be used on instances of Document"
    },
    {
      "path": "window.Document.prototype.xmlVersion",
      "propertyName": "_get",
      "property": "function xmlVersion() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.xmlVersion",
      "propertyName": "_set",
      "property": "function xmlVersion() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.xmlVersion",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.xmlVersion",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.xmlStandalone",
      "propertyName": "_accessException",
      "property": "TypeError: The Document.xmlStandalone getter can only be used on instances of Document"
    },
    {
      "path": "window.Document.prototype.xmlStandalone",
      "propertyName": "_get",
      "property": "function xmlStandalone() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.xmlStandalone",
      "propertyName": "_set",
      "property": "function xmlStandalone() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.xmlStandalone",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.xmlStandalone",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onselectstart",
      "propertyName": "_flags",
      "property": "c"
    },
    {
      "path": "window.Document.prototype.onselectstart",
      "propertyName": "_accessException",
      "property": "TypeError: The Document.onselectstart getter can only be used on instances of Document"
    },
    {
      "path": "window.Document.prototype.onselectstart",
      "propertyName": "_get",
      "property": "function onselectstart() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onselectstart",
      "propertyName": "_set",
      "property": "function onselectstart() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onselectstart",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onselectstart",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onselectionchange",
      "propertyName": "_flags",
      "property": "c"
    },
    {
      "path": "window.Document.prototype.onselectionchange",
      "propertyName": "_accessException",
      "property": "TypeError: The Document.onselectionchange getter can only be used on instances of Document"
    },
    {
      "path": "window.Document.prototype.onselectionchange",
      "propertyName": "_get",
      "property": "function onselectionchange() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onselectionchange",
      "propertyName": "_set",
      "property": "function onselectionchange() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onselectionchange",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onselectionchange",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.fgColor",
      "propertyName": "_accessException",
      "property": "TypeError: The Document.fgColor getter can only be used on instances of Document"
    },
    {
      "path": "window.Document.prototype.fgColor",
      "propertyName": "_get",
      "property": "function fgColor() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.fgColor",
      "propertyName": "_set",
      "property": "function fgColor() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.fgColor",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.fgColor",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.linkColor",
      "propertyName": "_accessException",
      "property": "TypeError: The Document.linkColor getter can only be used on instances of Document"
    },
    {
      "path": "window.Document.prototype.linkColor",
      "propertyName": "_get",
      "property": "function linkColor() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.linkColor",
      "propertyName": "_set",
      "property": "function linkColor() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.linkColor",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.linkColor",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.vlinkColor",
      "propertyName": "_accessException",
      "property": "TypeError: The Document.vlinkColor getter can only be used on instances of Document"
    },
    {
      "path": "window.Document.prototype.vlinkColor",
      "propertyName": "_get",
      "property": "function vlinkColor() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.vlinkColor",
      "propertyName": "_set",
      "property": "function vlinkColor() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.vlinkColor",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.vlinkColor",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.alinkColor",
      "propertyName": "_accessException",
      "property": "TypeError: The Document.alinkColor getter can only be used on instances of Document"
    },
    {
      "path": "window.Document.prototype.alinkColor",
      "propertyName": "_get",
      "property": "function alinkColor() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.alinkColor",
      "propertyName": "_set",
      "property": "function alinkColor() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.alinkColor",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.alinkColor",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.bgColor",
      "propertyName": "_accessException",
      "property": "TypeError: The Document.bgColor getter can only be used on instances of Document"
    },
    {
      "path": "window.Document.prototype.bgColor",
      "propertyName": "_get",
      "property": "function bgColor() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.bgColor",
      "propertyName": "_set",
      "property": "function bgColor() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.bgColor",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.bgColor",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.anchors",
      "propertyName": "_accessException",
      "property": "TypeError: The Document.anchors getter can only be used on instances of Document"
    },
    {
      "path": "window.Document.prototype.anchors",
      "propertyName": "_get",
      "property": "function anchors() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.anchors",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.applets",
      "propertyName": "_accessException",
      "property": "TypeError: The Document.applets getter can only be used on instances of Document"
    },
    {
      "path": "window.Document.prototype.applets",
      "propertyName": "_get",
      "property": "function applets() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.applets",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.all",
      "propertyName": "_accessException",
      "property": "TypeError: The Document.all getter can only be used on instances of Document"
    },
    {
      "path": "window.Document.prototype.all",
      "propertyName": "_get",
      "property": "function all() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.all",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.oncopy",
      "propertyName": "_accessException",
      "property": "TypeError: The Document.oncopy getter can only be used on instances of Document"
    },
    {
      "path": "window.Document.prototype.oncopy",
      "propertyName": "_get",
      "property": "function oncopy() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.oncopy",
      "propertyName": "_set",
      "property": "function oncopy() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.oncopy",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.oncopy",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.oncut",
      "propertyName": "_accessException",
      "property": "TypeError: The Document.oncut getter can only be used on instances of Document"
    },
    {
      "path": "window.Document.prototype.oncut",
      "propertyName": "_get",
      "property": "function oncut() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.oncut",
      "propertyName": "_set",
      "property": "function oncut() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.oncut",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.oncut",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onpaste",
      "propertyName": "_accessException",
      "property": "TypeError: The Document.onpaste getter can only be used on instances of Document"
    },
    {
      "path": "window.Document.prototype.onpaste",
      "propertyName": "_get",
      "property": "function onpaste() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onpaste",
      "propertyName": "_set",
      "property": "function onpaste() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onpaste",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onpaste",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onbeforecopy",
      "propertyName": "_flags",
      "property": "c"
    },
    {
      "path": "window.Document.prototype.onbeforecopy",
      "propertyName": "_accessException",
      "property": "TypeError: The Document.onbeforecopy getter can only be used on instances of Document"
    },
    {
      "path": "window.Document.prototype.onbeforecopy",
      "propertyName": "_get",
      "property": "function onbeforecopy() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onbeforecopy",
      "propertyName": "_set",
      "property": "function onbeforecopy() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onbeforecopy",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onbeforecopy",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onbeforecut",
      "propertyName": "_flags",
      "property": "c"
    },
    {
      "path": "window.Document.prototype.onbeforecut",
      "propertyName": "_accessException",
      "property": "TypeError: The Document.onbeforecut getter can only be used on instances of Document"
    },
    {
      "path": "window.Document.prototype.onbeforecut",
      "propertyName": "_get",
      "property": "function onbeforecut() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onbeforecut",
      "propertyName": "_set",
      "property": "function onbeforecut() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onbeforecut",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onbeforecut",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onbeforepaste",
      "propertyName": "_flags",
      "property": "c"
    },
    {
      "path": "window.Document.prototype.onbeforepaste",
      "propertyName": "_accessException",
      "property": "TypeError: The Document.onbeforepaste getter can only be used on instances of Document"
    },
    {
      "path": "window.Document.prototype.onbeforepaste",
      "propertyName": "_get",
      "property": "function onbeforepaste() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onbeforepaste",
      "propertyName": "_set",
      "property": "function onbeforepaste() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onbeforepaste",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onbeforepaste",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.webkitFullscreenEnabled",
      "propertyName": "_accessException",
      "property": "TypeError: The Document.webkitFullscreenEnabled getter can only be used on instances of Document"
    },
    {
      "path": "window.Document.prototype.webkitFullscreenEnabled",
      "propertyName": "_get",
      "property": "function webkitFullscreenEnabled() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.webkitFullscreenEnabled",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.webkitFullscreenElement",
      "propertyName": "_accessException",
      "property": "TypeError: The Document.webkitFullscreenElement getter can only be used on instances of Document"
    },
    {
      "path": "window.Document.prototype.webkitFullscreenElement",
      "propertyName": "_get",
      "property": "function webkitFullscreenElement() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.webkitFullscreenElement",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.webkitIsFullScreen",
      "propertyName": "_accessException",
      "property": "TypeError: The Document.webkitIsFullScreen getter can only be used on instances of Document"
    },
    {
      "path": "window.Document.prototype.webkitIsFullScreen",
      "propertyName": "_get",
      "property": "function webkitIsFullScreen() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.webkitIsFullScreen",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.webkitCurrentFullScreenElement",
      "propertyName": "_accessException",
      "property": "TypeError: The Document.webkitCurrentFullScreenElement getter can only be used on instances of Document"
    },
    {
      "path": "window.Document.prototype.webkitCurrentFullScreenElement",
      "propertyName": "_get",
      "property": "function webkitCurrentFullScreenElement() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.webkitCurrentFullScreenElement",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onwebkitfullscreenchange",
      "propertyName": "_flags",
      "property": "c"
    },
    {
      "path": "window.Document.prototype.onwebkitfullscreenchange",
      "propertyName": "_accessException",
      "property": "TypeError: The Document.onwebkitfullscreenchange getter can only be used on instances of Document"
    },
    {
      "path": "window.Document.prototype.onwebkitfullscreenchange",
      "propertyName": "_get",
      "property": "function onwebkitfullscreenchange() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onwebkitfullscreenchange",
      "propertyName": "_set",
      "property": "function onwebkitfullscreenchange() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onwebkitfullscreenchange",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onwebkitfullscreenchange",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onwebkitfullscreenerror",
      "propertyName": "_flags",
      "property": "c"
    },
    {
      "path": "window.Document.prototype.onwebkitfullscreenerror",
      "propertyName": "_accessException",
      "property": "TypeError: The Document.onwebkitfullscreenerror getter can only be used on instances of Document"
    },
    {
      "path": "window.Document.prototype.onwebkitfullscreenerror",
      "propertyName": "_get",
      "property": "function onwebkitfullscreenerror() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onwebkitfullscreenerror",
      "propertyName": "_set",
      "property": "function onwebkitfullscreenerror() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onwebkitfullscreenerror",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onwebkitfullscreenerror",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.activeElement",
      "propertyName": "_accessException",
      "property": "TypeError: The Document.activeElement getter can only be used on instances of Document"
    },
    {
      "path": "window.Document.prototype.activeElement",
      "propertyName": "_get",
      "property": "function activeElement() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.activeElement",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.styleSheets",
      "propertyName": "_accessException",
      "property": "TypeError: The Document.styleSheets getter can only be used on instances of Document"
    },
    {
      "path": "window.Document.prototype.styleSheets",
      "propertyName": "_get",
      "property": "function styleSheets() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.styleSheets",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.pointerLockElement",
      "propertyName": "_accessException",
      "property": "TypeError: The Document.pointerLockElement getter can only be used on instances of Document"
    },
    {
      "path": "window.Document.prototype.pointerLockElement",
      "propertyName": "_get",
      "property": "function pointerLockElement() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.pointerLockElement",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onabort",
      "propertyName": "_accessException",
      "property": "TypeError: The Document.onabort getter can only be used on instances of Document"
    },
    {
      "path": "window.Document.prototype.onabort",
      "propertyName": "_get",
      "property": "function onabort() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onabort",
      "propertyName": "_set",
      "property": "function onabort() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onabort",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onabort",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onblur",
      "propertyName": "_accessException",
      "property": "TypeError: The Document.onblur getter can only be used on instances of Document"
    },
    {
      "path": "window.Document.prototype.onblur",
      "propertyName": "_get",
      "property": "function onblur() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onblur",
      "propertyName": "_set",
      "property": "function onblur() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onblur",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onblur",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.oncanplay",
      "propertyName": "_accessException",
      "property": "TypeError: The Document.oncanplay getter can only be used on instances of Document"
    },
    {
      "path": "window.Document.prototype.oncanplay",
      "propertyName": "_get",
      "property": "function oncanplay() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.oncanplay",
      "propertyName": "_set",
      "property": "function oncanplay() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.oncanplay",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.oncanplay",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.oncanplaythrough",
      "propertyName": "_accessException",
      "property": "TypeError: The Document.oncanplaythrough getter can only be used on instances of Document"
    },
    {
      "path": "window.Document.prototype.oncanplaythrough",
      "propertyName": "_get",
      "property": "function oncanplaythrough() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.oncanplaythrough",
      "propertyName": "_set",
      "property": "function oncanplaythrough() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.oncanplaythrough",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.oncanplaythrough",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onchange",
      "propertyName": "_accessException",
      "property": "TypeError: The Document.onchange getter can only be used on instances of Document"
    },
    {
      "path": "window.Document.prototype.onchange",
      "propertyName": "_get",
      "property": "function onchange() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onchange",
      "propertyName": "_set",
      "property": "function onchange() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onchange",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onchange",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onclick",
      "propertyName": "_accessException",
      "property": "TypeError: The Document.onclick getter can only be used on instances of Document"
    },
    {
      "path": "window.Document.prototype.onclick",
      "propertyName": "_get",
      "property": "function onclick() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onclick",
      "propertyName": "_set",
      "property": "function onclick() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onclick",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onclick",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.oncontextmenu",
      "propertyName": "_accessException",
      "property": "TypeError: The Document.oncontextmenu getter can only be used on instances of Document"
    },
    {
      "path": "window.Document.prototype.oncontextmenu",
      "propertyName": "_get",
      "property": "function oncontextmenu() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.oncontextmenu",
      "propertyName": "_set",
      "property": "function oncontextmenu() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.oncontextmenu",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.oncontextmenu",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.oncuechange",
      "propertyName": "_accessException",
      "property": "TypeError: The Document.oncuechange getter can only be used on instances of Document"
    },
    {
      "path": "window.Document.prototype.oncuechange",
      "propertyName": "_get",
      "property": "function oncuechange() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.oncuechange",
      "propertyName": "_set",
      "property": "function oncuechange() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.oncuechange",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.oncuechange",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.ondblclick",
      "propertyName": "_accessException",
      "property": "TypeError: The Document.ondblclick getter can only be used on instances of Document"
    },
    {
      "path": "window.Document.prototype.ondblclick",
      "propertyName": "_get",
      "property": "function ondblclick() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.ondblclick",
      "propertyName": "_set",
      "property": "function ondblclick() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.ondblclick",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.ondblclick",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.ondrag",
      "propertyName": "_accessException",
      "property": "TypeError: The Document.ondrag getter can only be used on instances of Document"
    },
    {
      "path": "window.Document.prototype.ondrag",
      "propertyName": "_get",
      "property": "function ondrag() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.ondrag",
      "propertyName": "_set",
      "property": "function ondrag() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.ondrag",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.ondrag",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.ondragend",
      "propertyName": "_accessException",
      "property": "TypeError: The Document.ondragend getter can only be used on instances of Document"
    },
    {
      "path": "window.Document.prototype.ondragend",
      "propertyName": "_get",
      "property": "function ondragend() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.ondragend",
      "propertyName": "_set",
      "property": "function ondragend() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.ondragend",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.ondragend",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.ondragenter",
      "propertyName": "_accessException",
      "property": "TypeError: The Document.ondragenter getter can only be used on instances of Document"
    },
    {
      "path": "window.Document.prototype.ondragenter",
      "propertyName": "_get",
      "property": "function ondragenter() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.ondragenter",
      "propertyName": "_set",
      "property": "function ondragenter() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.ondragenter",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.ondragenter",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.ondragleave",
      "propertyName": "_accessException",
      "property": "TypeError: The Document.ondragleave getter can only be used on instances of Document"
    },
    {
      "path": "window.Document.prototype.ondragleave",
      "propertyName": "_get",
      "property": "function ondragleave() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.ondragleave",
      "propertyName": "_set",
      "property": "function ondragleave() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.ondragleave",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.ondragleave",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.ondragover",
      "propertyName": "_accessException",
      "property": "TypeError: The Document.ondragover getter can only be used on instances of Document"
    },
    {
      "path": "window.Document.prototype.ondragover",
      "propertyName": "_get",
      "property": "function ondragover() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.ondragover",
      "propertyName": "_set",
      "property": "function ondragover() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.ondragover",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.ondragover",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.ondragstart",
      "propertyName": "_accessException",
      "property": "TypeError: The Document.ondragstart getter can only be used on instances of Document"
    },
    {
      "path": "window.Document.prototype.ondragstart",
      "propertyName": "_get",
      "property": "function ondragstart() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.ondragstart",
      "propertyName": "_set",
      "property": "function ondragstart() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.ondragstart",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.ondragstart",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.ondrop",
      "propertyName": "_accessException",
      "property": "TypeError: The Document.ondrop getter can only be used on instances of Document"
    },
    {
      "path": "window.Document.prototype.ondrop",
      "propertyName": "_get",
      "property": "function ondrop() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.ondrop",
      "propertyName": "_set",
      "property": "function ondrop() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.ondrop",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.ondrop",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.ondurationchange",
      "propertyName": "_accessException",
      "property": "TypeError: The Document.ondurationchange getter can only be used on instances of Document"
    },
    {
      "path": "window.Document.prototype.ondurationchange",
      "propertyName": "_get",
      "property": "function ondurationchange() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.ondurationchange",
      "propertyName": "_set",
      "property": "function ondurationchange() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.ondurationchange",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.ondurationchange",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onemptied",
      "propertyName": "_accessException",
      "property": "TypeError: The Document.onemptied getter can only be used on instances of Document"
    },
    {
      "path": "window.Document.prototype.onemptied",
      "propertyName": "_get",
      "property": "function onemptied() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onemptied",
      "propertyName": "_set",
      "property": "function onemptied() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onemptied",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onemptied",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onended",
      "propertyName": "_accessException",
      "property": "TypeError: The Document.onended getter can only be used on instances of Document"
    },
    {
      "path": "window.Document.prototype.onended",
      "propertyName": "_get",
      "property": "function onended() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onended",
      "propertyName": "_set",
      "property": "function onended() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onended",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onended",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onerror",
      "propertyName": "_accessException",
      "property": "TypeError: The Document.onerror getter can only be used on instances of Document"
    },
    {
      "path": "window.Document.prototype.onerror",
      "propertyName": "_get",
      "property": "function onerror() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onerror",
      "propertyName": "_set",
      "property": "function onerror() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onerror",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onerror",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onfocus",
      "propertyName": "_accessException",
      "property": "TypeError: The Document.onfocus getter can only be used on instances of Document"
    },
    {
      "path": "window.Document.prototype.onfocus",
      "propertyName": "_get",
      "property": "function onfocus() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onfocus",
      "propertyName": "_set",
      "property": "function onfocus() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onfocus",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onfocus",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.oninput",
      "propertyName": "_accessException",
      "property": "TypeError: The Document.oninput getter can only be used on instances of Document"
    },
    {
      "path": "window.Document.prototype.oninput",
      "propertyName": "_get",
      "property": "function oninput() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.oninput",
      "propertyName": "_set",
      "property": "function oninput() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.oninput",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.oninput",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.oninvalid",
      "propertyName": "_accessException",
      "property": "TypeError: The Document.oninvalid getter can only be used on instances of Document"
    },
    {
      "path": "window.Document.prototype.oninvalid",
      "propertyName": "_get",
      "property": "function oninvalid() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.oninvalid",
      "propertyName": "_set",
      "property": "function oninvalid() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.oninvalid",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.oninvalid",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onkeydown",
      "propertyName": "_accessException",
      "property": "TypeError: The Document.onkeydown getter can only be used on instances of Document"
    },
    {
      "path": "window.Document.prototype.onkeydown",
      "propertyName": "_get",
      "property": "function onkeydown() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onkeydown",
      "propertyName": "_set",
      "property": "function onkeydown() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onkeydown",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onkeydown",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onkeypress",
      "propertyName": "_accessException",
      "property": "TypeError: The Document.onkeypress getter can only be used on instances of Document"
    },
    {
      "path": "window.Document.prototype.onkeypress",
      "propertyName": "_get",
      "property": "function onkeypress() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onkeypress",
      "propertyName": "_set",
      "property": "function onkeypress() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onkeypress",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onkeypress",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onkeyup",
      "propertyName": "_accessException",
      "property": "TypeError: The Document.onkeyup getter can only be used on instances of Document"
    },
    {
      "path": "window.Document.prototype.onkeyup",
      "propertyName": "_get",
      "property": "function onkeyup() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onkeyup",
      "propertyName": "_set",
      "property": "function onkeyup() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onkeyup",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onkeyup",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onload",
      "propertyName": "_accessException",
      "property": "TypeError: The Document.onload getter can only be used on instances of Document"
    },
    {
      "path": "window.Document.prototype.onload",
      "propertyName": "_get",
      "property": "function onload() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onload",
      "propertyName": "_set",
      "property": "function onload() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onload",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onload",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onloadeddata",
      "propertyName": "_accessException",
      "property": "TypeError: The Document.onloadeddata getter can only be used on instances of Document"
    },
    {
      "path": "window.Document.prototype.onloadeddata",
      "propertyName": "_get",
      "property": "function onloadeddata() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onloadeddata",
      "propertyName": "_set",
      "property": "function onloadeddata() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onloadeddata",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onloadeddata",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onloadedmetadata",
      "propertyName": "_accessException",
      "property": "TypeError: The Document.onloadedmetadata getter can only be used on instances of Document"
    },
    {
      "path": "window.Document.prototype.onloadedmetadata",
      "propertyName": "_get",
      "property": "function onloadedmetadata() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onloadedmetadata",
      "propertyName": "_set",
      "property": "function onloadedmetadata() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onloadedmetadata",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onloadedmetadata",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onloadstart",
      "propertyName": "_accessException",
      "property": "TypeError: The Document.onloadstart getter can only be used on instances of Document"
    },
    {
      "path": "window.Document.prototype.onloadstart",
      "propertyName": "_get",
      "property": "function onloadstart() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onloadstart",
      "propertyName": "_set",
      "property": "function onloadstart() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onloadstart",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onloadstart",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onmousedown",
      "propertyName": "_accessException",
      "property": "TypeError: The Document.onmousedown getter can only be used on instances of Document"
    },
    {
      "path": "window.Document.prototype.onmousedown",
      "propertyName": "_get",
      "property": "function onmousedown() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onmousedown",
      "propertyName": "_set",
      "property": "function onmousedown() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onmousedown",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onmousedown",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onmouseenter",
      "propertyName": "_get",
      "property": "function onmouseenter() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onmouseenter",
      "propertyName": "_set",
      "property": "function onmouseenter() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onmouseenter",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onmouseenter",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onmouseleave",
      "propertyName": "_get",
      "property": "function onmouseleave() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onmouseleave",
      "propertyName": "_set",
      "property": "function onmouseleave() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onmouseleave",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onmouseleave",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onmousemove",
      "propertyName": "_accessException",
      "property": "TypeError: The Document.onmousemove getter can only be used on instances of Document"
    },
    {
      "path": "window.Document.prototype.onmousemove",
      "propertyName": "_get",
      "property": "function onmousemove() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onmousemove",
      "propertyName": "_set",
      "property": "function onmousemove() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onmousemove",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onmousemove",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onmouseout",
      "propertyName": "_accessException",
      "property": "TypeError: The Document.onmouseout getter can only be used on instances of Document"
    },
    {
      "path": "window.Document.prototype.onmouseout",
      "propertyName": "_get",
      "property": "function onmouseout() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onmouseout",
      "propertyName": "_set",
      "property": "function onmouseout() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onmouseout",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onmouseout",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onmouseover",
      "propertyName": "_accessException",
      "property": "TypeError: The Document.onmouseover getter can only be used on instances of Document"
    },
    {
      "path": "window.Document.prototype.onmouseover",
      "propertyName": "_get",
      "property": "function onmouseover() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onmouseover",
      "propertyName": "_set",
      "property": "function onmouseover() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onmouseover",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onmouseover",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onmouseup",
      "propertyName": "_accessException",
      "property": "TypeError: The Document.onmouseup getter can only be used on instances of Document"
    },
    {
      "path": "window.Document.prototype.onmouseup",
      "propertyName": "_get",
      "property": "function onmouseup() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onmouseup",
      "propertyName": "_set",
      "property": "function onmouseup() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onmouseup",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onmouseup",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onmousewheel",
      "propertyName": "_accessException",
      "property": "TypeError: The Document.onmousewheel getter can only be used on instances of Document"
    },
    {
      "path": "window.Document.prototype.onmousewheel",
      "propertyName": "_get",
      "property": "function onmousewheel() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onmousewheel",
      "propertyName": "_set",
      "property": "function onmousewheel() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onmousewheel",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onmousewheel",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onpause",
      "propertyName": "_accessException",
      "property": "TypeError: The Document.onpause getter can only be used on instances of Document"
    },
    {
      "path": "window.Document.prototype.onpause",
      "propertyName": "_get",
      "property": "function onpause() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onpause",
      "propertyName": "_set",
      "property": "function onpause() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onpause",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onpause",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onplay",
      "propertyName": "_accessException",
      "property": "TypeError: The Document.onplay getter can only be used on instances of Document"
    },
    {
      "path": "window.Document.prototype.onplay",
      "propertyName": "_get",
      "property": "function onplay() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onplay",
      "propertyName": "_set",
      "property": "function onplay() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onplay",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onplay",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onplaying",
      "propertyName": "_accessException",
      "property": "TypeError: The Document.onplaying getter can only be used on instances of Document"
    },
    {
      "path": "window.Document.prototype.onplaying",
      "propertyName": "_get",
      "property": "function onplaying() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onplaying",
      "propertyName": "_set",
      "property": "function onplaying() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onplaying",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onplaying",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onprogress",
      "propertyName": "_accessException",
      "property": "TypeError: The Document.onprogress getter can only be used on instances of Document"
    },
    {
      "path": "window.Document.prototype.onprogress",
      "propertyName": "_get",
      "property": "function onprogress() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onprogress",
      "propertyName": "_set",
      "property": "function onprogress() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onprogress",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onprogress",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onratechange",
      "propertyName": "_accessException",
      "property": "TypeError: The Document.onratechange getter can only be used on instances of Document"
    },
    {
      "path": "window.Document.prototype.onratechange",
      "propertyName": "_get",
      "property": "function onratechange() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onratechange",
      "propertyName": "_set",
      "property": "function onratechange() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onratechange",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onratechange",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onreset",
      "propertyName": "_accessException",
      "property": "TypeError: The Document.onreset getter can only be used on instances of Document"
    },
    {
      "path": "window.Document.prototype.onreset",
      "propertyName": "_get",
      "property": "function onreset() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onreset",
      "propertyName": "_set",
      "property": "function onreset() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onreset",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onreset",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onresize",
      "propertyName": "_accessException",
      "property": "TypeError: The Document.onresize getter can only be used on instances of Document"
    },
    {
      "path": "window.Document.prototype.onresize",
      "propertyName": "_get",
      "property": "function onresize() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onresize",
      "propertyName": "_set",
      "property": "function onresize() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onresize",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onresize",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onscroll",
      "propertyName": "_accessException",
      "property": "TypeError: The Document.onscroll getter can only be used on instances of Document"
    },
    {
      "path": "window.Document.prototype.onscroll",
      "propertyName": "_get",
      "property": "function onscroll() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onscroll",
      "propertyName": "_set",
      "property": "function onscroll() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onscroll",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onscroll",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onseeked",
      "propertyName": "_accessException",
      "property": "TypeError: The Document.onseeked getter can only be used on instances of Document"
    },
    {
      "path": "window.Document.prototype.onseeked",
      "propertyName": "_get",
      "property": "function onseeked() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onseeked",
      "propertyName": "_set",
      "property": "function onseeked() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onseeked",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onseeked",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onseeking",
      "propertyName": "_accessException",
      "property": "TypeError: The Document.onseeking getter can only be used on instances of Document"
    },
    {
      "path": "window.Document.prototype.onseeking",
      "propertyName": "_get",
      "property": "function onseeking() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onseeking",
      "propertyName": "_set",
      "property": "function onseeking() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onseeking",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onseeking",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onselect",
      "propertyName": "_accessException",
      "property": "TypeError: The Document.onselect getter can only be used on instances of Document"
    },
    {
      "path": "window.Document.prototype.onselect",
      "propertyName": "_get",
      "property": "function onselect() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onselect",
      "propertyName": "_set",
      "property": "function onselect() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onselect",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onselect",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onstalled",
      "propertyName": "_accessException",
      "property": "TypeError: The Document.onstalled getter can only be used on instances of Document"
    },
    {
      "path": "window.Document.prototype.onstalled",
      "propertyName": "_get",
      "property": "function onstalled() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onstalled",
      "propertyName": "_set",
      "property": "function onstalled() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onstalled",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onstalled",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onsubmit",
      "propertyName": "_accessException",
      "property": "TypeError: The Document.onsubmit getter can only be used on instances of Document"
    },
    {
      "path": "window.Document.prototype.onsubmit",
      "propertyName": "_get",
      "property": "function onsubmit() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onsubmit",
      "propertyName": "_set",
      "property": "function onsubmit() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onsubmit",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onsubmit",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onsuspend",
      "propertyName": "_accessException",
      "property": "TypeError: The Document.onsuspend getter can only be used on instances of Document"
    },
    {
      "path": "window.Document.prototype.onsuspend",
      "propertyName": "_get",
      "property": "function onsuspend() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onsuspend",
      "propertyName": "_set",
      "property": "function onsuspend() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onsuspend",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onsuspend",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.ontimeupdate",
      "propertyName": "_accessException",
      "property": "TypeError: The Document.ontimeupdate getter can only be used on instances of Document"
    },
    {
      "path": "window.Document.prototype.ontimeupdate",
      "propertyName": "_get",
      "property": "function ontimeupdate() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.ontimeupdate",
      "propertyName": "_set",
      "property": "function ontimeupdate() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.ontimeupdate",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.ontimeupdate",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.ontoggle",
      "propertyName": "_accessException",
      "property": "TypeError: The Document.ontoggle getter can only be used on instances of Document"
    },
    {
      "path": "window.Document.prototype.ontoggle",
      "propertyName": "_get",
      "property": "function ontoggle() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.ontoggle",
      "propertyName": "_set",
      "property": "function ontoggle() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.ontoggle",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.ontoggle",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onvolumechange",
      "propertyName": "_accessException",
      "property": "TypeError: The Document.onvolumechange getter can only be used on instances of Document"
    },
    {
      "path": "window.Document.prototype.onvolumechange",
      "propertyName": "_get",
      "property": "function onvolumechange() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onvolumechange",
      "propertyName": "_set",
      "property": "function onvolumechange() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onvolumechange",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onvolumechange",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onwaiting",
      "propertyName": "_accessException",
      "property": "TypeError: The Document.onwaiting getter can only be used on instances of Document"
    },
    {
      "path": "window.Document.prototype.onwaiting",
      "propertyName": "_get",
      "property": "function onwaiting() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onwaiting",
      "propertyName": "_set",
      "property": "function onwaiting() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onwaiting",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onwaiting",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.ontransitionend",
      "propertyName": "_accessException",
      "property": "TypeError: The Document.ontransitionend getter can only be used on instances of Document"
    },
    {
      "path": "window.Document.prototype.ontransitionend",
      "propertyName": "_get",
      "property": "function ontransitionend() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.ontransitionend",
      "propertyName": "_set",
      "property": "function ontransitionend() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.ontransitionend",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.ontransitionend",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onanimationend",
      "propertyName": "_accessException",
      "property": "TypeError: The Document.onanimationend getter can only be used on instances of Document"
    },
    {
      "path": "window.Document.prototype.onanimationend",
      "propertyName": "_get",
      "property": "function onanimationend() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onanimationend",
      "propertyName": "_set",
      "property": "function onanimationend() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onanimationend",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onanimationend",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onanimationiteration",
      "propertyName": "_accessException",
      "property": "TypeError: The Document.onanimationiteration getter can only be used on instances of Document"
    },
    {
      "path": "window.Document.prototype.onanimationiteration",
      "propertyName": "_get",
      "property": "function onanimationiteration() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onanimationiteration",
      "propertyName": "_set",
      "property": "function onanimationiteration() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onanimationiteration",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onanimationiteration",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onanimationstart",
      "propertyName": "_accessException",
      "property": "TypeError: The Document.onanimationstart getter can only be used on instances of Document"
    },
    {
      "path": "window.Document.prototype.onanimationstart",
      "propertyName": "_get",
      "property": "function onanimationstart() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onanimationstart",
      "propertyName": "_set",
      "property": "function onanimationstart() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onanimationstart",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onanimationstart",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.ongotpointercapture",
      "propertyName": "_accessException",
      "property": "TypeError: The Document.ongotpointercapture getter can only be used on instances of Document"
    },
    {
      "path": "window.Document.prototype.ongotpointercapture",
      "propertyName": "_get",
      "property": "function ongotpointercapture() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.ongotpointercapture",
      "propertyName": "_set",
      "property": "function ongotpointercapture() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.ongotpointercapture",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.ongotpointercapture",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onlostpointercapture",
      "propertyName": "_accessException",
      "property": "TypeError: The Document.onlostpointercapture getter can only be used on instances of Document"
    },
    {
      "path": "window.Document.prototype.onlostpointercapture",
      "propertyName": "_get",
      "property": "function onlostpointercapture() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onlostpointercapture",
      "propertyName": "_set",
      "property": "function onlostpointercapture() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onlostpointercapture",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onlostpointercapture",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onpointerdown",
      "propertyName": "_accessException",
      "property": "TypeError: The Document.onpointerdown getter can only be used on instances of Document"
    },
    {
      "path": "window.Document.prototype.onpointerdown",
      "propertyName": "_get",
      "property": "function onpointerdown() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onpointerdown",
      "propertyName": "_set",
      "property": "function onpointerdown() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onpointerdown",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onpointerdown",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onpointermove",
      "propertyName": "_accessException",
      "property": "TypeError: The Document.onpointermove getter can only be used on instances of Document"
    },
    {
      "path": "window.Document.prototype.onpointermove",
      "propertyName": "_get",
      "property": "function onpointermove() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onpointermove",
      "propertyName": "_set",
      "property": "function onpointermove() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onpointermove",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onpointermove",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onpointerup",
      "propertyName": "_accessException",
      "property": "TypeError: The Document.onpointerup getter can only be used on instances of Document"
    },
    {
      "path": "window.Document.prototype.onpointerup",
      "propertyName": "_get",
      "property": "function onpointerup() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onpointerup",
      "propertyName": "_set",
      "property": "function onpointerup() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onpointerup",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onpointerup",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onpointercancel",
      "propertyName": "_accessException",
      "property": "TypeError: The Document.onpointercancel getter can only be used on instances of Document"
    },
    {
      "path": "window.Document.prototype.onpointercancel",
      "propertyName": "_get",
      "property": "function onpointercancel() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onpointercancel",
      "propertyName": "_set",
      "property": "function onpointercancel() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onpointercancel",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onpointercancel",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onpointerover",
      "propertyName": "_accessException",
      "property": "TypeError: The Document.onpointerover getter can only be used on instances of Document"
    },
    {
      "path": "window.Document.prototype.onpointerover",
      "propertyName": "_get",
      "property": "function onpointerover() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onpointerover",
      "propertyName": "_set",
      "property": "function onpointerover() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onpointerover",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onpointerover",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onpointerout",
      "propertyName": "_accessException",
      "property": "TypeError: The Document.onpointerout getter can only be used on instances of Document"
    },
    {
      "path": "window.Document.prototype.onpointerout",
      "propertyName": "_get",
      "property": "function onpointerout() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onpointerout",
      "propertyName": "_set",
      "property": "function onpointerout() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onpointerout",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onpointerout",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onpointerenter",
      "propertyName": "_accessException",
      "property": "TypeError: The Document.onpointerenter getter can only be used on instances of Document"
    },
    {
      "path": "window.Document.prototype.onpointerenter",
      "propertyName": "_get",
      "property": "function onpointerenter() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onpointerenter",
      "propertyName": "_set",
      "property": "function onpointerenter() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onpointerenter",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onpointerenter",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onpointerleave",
      "propertyName": "_accessException",
      "property": "TypeError: The Document.onpointerleave getter can only be used on instances of Document"
    },
    {
      "path": "window.Document.prototype.onpointerleave",
      "propertyName": "_get",
      "property": "function onpointerleave() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onpointerleave",
      "propertyName": "_set",
      "property": "function onpointerleave() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onpointerleave",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onpointerleave",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onsearch",
      "propertyName": "_flags",
      "property": "c"
    },
    {
      "path": "window.Document.prototype.onsearch",
      "propertyName": "_accessException",
      "property": "TypeError: The Document.onsearch getter can only be used on instances of Document"
    },
    {
      "path": "window.Document.prototype.onsearch",
      "propertyName": "_get",
      "property": "function onsearch() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onsearch",
      "propertyName": "_set",
      "property": "function onsearch() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onsearch",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onsearch",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onwheel",
      "propertyName": "_flags",
      "property": "c"
    },
    {
      "path": "window.Document.prototype.onwheel",
      "propertyName": "_accessException",
      "property": "TypeError: The Document.onwheel getter can only be used on instances of Document"
    },
    {
      "path": "window.Document.prototype.onwheel",
      "propertyName": "_get",
      "property": "function onwheel() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onwheel",
      "propertyName": "_set",
      "property": "function onwheel() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onwheel",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.onwheel",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.children",
      "propertyName": "_accessException",
      "property": "TypeError: The Document.children getter can only be used on instances of Document"
    },
    {
      "path": "window.Document.prototype.children",
      "propertyName": "_get",
      "property": "function children() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.children",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.firstElementChild",
      "propertyName": "_accessException",
      "property": "TypeError: The Document.firstElementChild getter can only be used on instances of Document"
    },
    {
      "path": "window.Document.prototype.firstElementChild",
      "propertyName": "_get",
      "property": "function firstElementChild() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.firstElementChild",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.lastElementChild",
      "propertyName": "_accessException",
      "property": "TypeError: The Document.lastElementChild getter can only be used on instances of Document"
    },
    {
      "path": "window.Document.prototype.lastElementChild",
      "propertyName": "_get",
      "property": "function lastElementChild() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.lastElementChild",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.childElementCount",
      "propertyName": "_accessException",
      "property": "TypeError: The Document.childElementCount getter can only be used on instances of Document"
    },
    {
      "path": "window.Document.prototype.childElementCount",
      "propertyName": "_get",
      "property": "function childElementCount() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.childElementCount",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.rootElement",
      "propertyName": "_accessException",
      "property": "TypeError: The Document.rootElement getter can only be used on instances of Document"
    },
    {
      "path": "window.Document.prototype.rootElement",
      "propertyName": "_get",
      "property": "function rootElement() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.rootElement",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.getElementsByTagName",
      "propertyName": "_function",
      "property": "function getElementsByTagName() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.getElementsByTagNameNS",
      "propertyName": "_function",
      "property": "function getElementsByTagNameNS() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.getElementsByClassName",
      "propertyName": "_function",
      "property": "function getElementsByClassName() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.createElement",
      "propertyName": "_function",
      "property": "function createElement() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.createElementNS",
      "propertyName": "_function",
      "property": "function createElementNS() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.createDocumentFragment",
      "propertyName": "_function",
      "property": "function createDocumentFragment() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.createTextNode",
      "propertyName": "_function",
      "property": "function createTextNode() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.createCDATASection",
      "propertyName": "_function",
      "property": "function createCDATASection() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.createComment",
      "propertyName": "_function",
      "property": "function createComment() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.createProcessingInstruction",
      "propertyName": "_function",
      "property": "function createProcessingInstruction() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.importNode",
      "propertyName": "_function",
      "property": "function importNode() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.adoptNode",
      "propertyName": "_function",
      "property": "function adoptNode() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.createAttribute",
      "propertyName": "_function",
      "property": "function createAttribute() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.createAttributeNS",
      "propertyName": "_function",
      "property": "function createAttributeNS() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.createEvent",
      "propertyName": "_function",
      "property": "function createEvent() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.createRange",
      "propertyName": "_function",
      "property": "function createRange() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.createNodeIterator",
      "propertyName": "_function",
      "property": "function createNodeIterator() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.createTreeWalker",
      "propertyName": "_function",
      "property": "function createTreeWalker() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.getElementsByName",
      "propertyName": "_function",
      "property": "function getElementsByName() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.open",
      "propertyName": "_function",
      "property": "function open() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.close",
      "propertyName": "_function",
      "property": "function close() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.write",
      "propertyName": "_function",
      "property": "function write() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.writeln",
      "propertyName": "_function",
      "property": "function writeln() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.hasFocus",
      "propertyName": "_function",
      "property": "function hasFocus() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.execCommand",
      "propertyName": "_function",
      "property": "function execCommand() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.queryCommandEnabled",
      "propertyName": "_function",
      "property": "function queryCommandEnabled() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.queryCommandIndeterm",
      "propertyName": "_function",
      "property": "function queryCommandIndeterm() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.queryCommandState",
      "propertyName": "_function",
      "property": "function queryCommandState() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.queryCommandSupported",
      "propertyName": "_function",
      "property": "function queryCommandSupported() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.queryCommandValue",
      "propertyName": "_function",
      "property": "function queryCommandValue() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.getSelection",
      "propertyName": "_function",
      "property": "function getSelection() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.createExpression",
      "propertyName": "_function",
      "property": "function createExpression() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.createNSResolver",
      "propertyName": "_function",
      "property": "function createNSResolver() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.evaluate",
      "propertyName": "_function",
      "property": "function evaluate() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.exitPointerLock",
      "propertyName": "_function",
      "property": "function exitPointerLock() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.caretRangeFromPoint",
      "propertyName": "_function",
      "property": "function caretRangeFromPoint() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.clear",
      "propertyName": "_function",
      "property": "function clear() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.captureEvents",
      "propertyName": "_function",
      "property": "function captureEvents() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.releaseEvents",
      "propertyName": "_function",
      "property": "function releaseEvents() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.webkitExitFullscreen",
      "propertyName": "_function",
      "property": "function webkitExitFullscreen() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.webkitCancelFullScreen",
      "propertyName": "_function",
      "property": "function webkitCancelFullScreen() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.elementFromPoint",
      "propertyName": "_function",
      "property": "function elementFromPoint() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.elementsFromPoint",
      "propertyName": "_function",
      "property": "function elementsFromPoint() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.getElementById",
      "propertyName": "_function",
      "property": "function getElementById() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.prepend",
      "propertyName": "_function",
      "property": "function prepend() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.append",
      "propertyName": "_function",
      "property": "function append() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.querySelector",
      "propertyName": "_function",
      "property": "function querySelector() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype.querySelectorAll",
      "propertyName": "_function",
      "property": "function querySelectorAll() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.prototype",
      "propertyName": "Symbol.unscopables._flags",
      "property": "c"
    },
    {
      "path": "window.Document.new().location",
      "propertyName": "_get",
      "property": "function location() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.new().location",
      "propertyName": "_set",
      "property": "function location() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.new().location",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.new().location",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Document.new().webkitFullscreenEnabled",
      "propertyName": "_value",
      "property": true
    },
    {
      "path": "window.Document",
      "propertyName": "_function",
      "property": "function Document() {\n    [native code]\n}"
    },
    {
      "path": "window.DocumentFragment.prototype.children",
      "propertyName": "_accessException",
      "property": "TypeError: The DocumentFragment.children getter can only be used on instances of DocumentFragment"
    },
    {
      "path": "window.DocumentFragment.prototype.children",
      "propertyName": "_get",
      "property": "function children() {\n    [native code]\n}"
    },
    {
      "path": "window.DocumentFragment.prototype.children",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.DocumentFragment.prototype.firstElementChild",
      "propertyName": "_accessException",
      "property": "TypeError: The DocumentFragment.firstElementChild getter can only be used on instances of DocumentFragment"
    },
    {
      "path": "window.DocumentFragment.prototype.firstElementChild",
      "propertyName": "_get",
      "property": "function firstElementChild() {\n    [native code]\n}"
    },
    {
      "path": "window.DocumentFragment.prototype.firstElementChild",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.DocumentFragment.prototype.lastElementChild",
      "propertyName": "_accessException",
      "property": "TypeError: The DocumentFragment.lastElementChild getter can only be used on instances of DocumentFragment"
    },
    {
      "path": "window.DocumentFragment.prototype.lastElementChild",
      "propertyName": "_get",
      "property": "function lastElementChild() {\n    [native code]\n}"
    },
    {
      "path": "window.DocumentFragment.prototype.lastElementChild",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.DocumentFragment.prototype.childElementCount",
      "propertyName": "_accessException",
      "property": "TypeError: The DocumentFragment.childElementCount getter can only be used on instances of DocumentFragment"
    },
    {
      "path": "window.DocumentFragment.prototype.childElementCount",
      "propertyName": "_get",
      "property": "function childElementCount() {\n    [native code]\n}"
    },
    {
      "path": "window.DocumentFragment.prototype.childElementCount",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.DocumentFragment.prototype.getElementById",
      "propertyName": "_function",
      "property": "function getElementById() {\n    [native code]\n}"
    },
    {
      "path": "window.DocumentFragment.prototype.prepend",
      "propertyName": "_function",
      "property": "function prepend() {\n    [native code]\n}"
    },
    {
      "path": "window.DocumentFragment.prototype.append",
      "propertyName": "_function",
      "property": "function append() {\n    [native code]\n}"
    },
    {
      "path": "window.DocumentFragment.prototype.querySelector",
      "propertyName": "_function",
      "property": "function querySelector() {\n    [native code]\n}"
    },
    {
      "path": "window.DocumentFragment.prototype.querySelectorAll",
      "propertyName": "_function",
      "property": "function querySelectorAll() {\n    [native code]\n}"
    },
    {
      "path": "window.DocumentFragment.prototype",
      "propertyName": "Symbol.unscopables._flags",
      "property": "c"
    },
    {
      "path": "window.DocumentFragment",
      "propertyName": "_function",
      "property": "function DocumentFragment() {\n    [native code]\n}"
    },
    {
      "path": "window.DocumentType.prototype.name",
      "propertyName": "_accessException",
      "property": "TypeError: The DocumentType.name getter can only be used on instances of DocumentType"
    },
    {
      "path": "window.DocumentType.prototype.name",
      "propertyName": "_get",
      "property": "function name() {\n    [native code]\n}"
    },
    {
      "path": "window.DocumentType.prototype.name",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.DocumentType.prototype.publicId",
      "propertyName": "_accessException",
      "property": "TypeError: The DocumentType.publicId getter can only be used on instances of DocumentType"
    },
    {
      "path": "window.DocumentType.prototype.publicId",
      "propertyName": "_get",
      "property": "function publicId() {\n    [native code]\n}"
    },
    {
      "path": "window.DocumentType.prototype.publicId",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.DocumentType.prototype.systemId",
      "propertyName": "_accessException",
      "property": "TypeError: The DocumentType.systemId getter can only be used on instances of DocumentType"
    },
    {
      "path": "window.DocumentType.prototype.systemId",
      "propertyName": "_get",
      "property": "function systemId() {\n    [native code]\n}"
    },
    {
      "path": "window.DocumentType.prototype.systemId",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.DocumentType.prototype.before",
      "propertyName": "_function",
      "property": "function before() {\n    [native code]\n}"
    },
    {
      "path": "window.DocumentType.prototype.after",
      "propertyName": "_function",
      "property": "function after() {\n    [native code]\n}"
    },
    {
      "path": "window.DocumentType.prototype.replaceWith",
      "propertyName": "_function",
      "property": "function replaceWith() {\n    [native code]\n}"
    },
    {
      "path": "window.DocumentType.prototype.remove",
      "propertyName": "_function",
      "property": "function remove() {\n    [native code]\n}"
    },
    {
      "path": "window.DocumentType.prototype",
      "propertyName": "Symbol.unscopables._flags",
      "property": "c"
    },
    {
      "path": "window.DocumentType",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.DocumentType",
      "propertyName": "_function",
      "property": "function DocumentType() {\n    [native code]\n}"
    },
    {
      "path": "window.Element.prototype.namespaceURI",
      "propertyName": "_accessException",
      "property": "TypeError: The Element.namespaceURI getter can only be used on instances of Element"
    },
    {
      "path": "window.Element.prototype.namespaceURI",
      "propertyName": "_get",
      "property": "function namespaceURI() {\n    [native code]\n}"
    },
    {
      "path": "window.Element.prototype.namespaceURI",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Element.prototype.prefix",
      "propertyName": "_accessException",
      "property": "TypeError: The Element.prefix getter can only be used on instances of Element"
    },
    {
      "path": "window.Element.prototype.prefix",
      "propertyName": "_get",
      "property": "function prefix() {\n    [native code]\n}"
    },
    {
      "path": "window.Element.prototype.prefix",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Element.prototype.localName",
      "propertyName": "_accessException",
      "property": "TypeError: The Element.localName getter can only be used on instances of Element"
    },
    {
      "path": "window.Element.prototype.localName",
      "propertyName": "_get",
      "property": "function localName() {\n    [native code]\n}"
    },
    {
      "path": "window.Element.prototype.localName",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Element.prototype.tagName",
      "propertyName": "_accessException",
      "property": "TypeError: The Element.tagName getter can only be used on instances of Element"
    },
    {
      "path": "window.Element.prototype.tagName",
      "propertyName": "_get",
      "property": "function tagName() {\n    [native code]\n}"
    },
    {
      "path": "window.Element.prototype.tagName",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Element.prototype.id",
      "propertyName": "_accessException",
      "property": "TypeError: The Element.id getter can only be used on instances of Element"
    },
    {
      "path": "window.Element.prototype.id",
      "propertyName": "_get",
      "property": "function id() {\n    [native code]\n}"
    },
    {
      "path": "window.Element.prototype.id",
      "propertyName": "_set",
      "property": "function id() {\n    [native code]\n}"
    },
    {
      "path": "window.Element.prototype.id",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Element.prototype.id",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Element.prototype.className",
      "propertyName": "_accessException",
      "property": "TypeError: The Element.className getter can only be used on instances of Element"
    },
    {
      "path": "window.Element.prototype.className",
      "propertyName": "_get",
      "property": "function className() {\n    [native code]\n}"
    },
    {
      "path": "window.Element.prototype.className",
      "propertyName": "_set",
      "property": "function className() {\n    [native code]\n}"
    },
    {
      "path": "window.Element.prototype.className",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Element.prototype.className",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Element.prototype.classList",
      "propertyName": "_accessException",
      "property": "TypeError: The Element.classList getter can only be used on instances of Element"
    },
    {
      "path": "window.Element.prototype.classList",
      "propertyName": "_get",
      "property": "function classList() {\n    [native code]\n}"
    },
    {
      "path": "window.Element.prototype.classList",
      "propertyName": "_set",
      "property": "function classList() {\n    [native code]\n}"
    },
    {
      "path": "window.Element.prototype.classList",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Element.prototype.classList",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Element.prototype.slot",
      "propertyName": "_accessException",
      "property": "TypeError: The Element.slot getter can only be used on instances of Element"
    },
    {
      "path": "window.Element.prototype.slot",
      "propertyName": "_get",
      "property": "function slot() {\n    [native code]\n}"
    },
    {
      "path": "window.Element.prototype.slot",
      "propertyName": "_set",
      "property": "function slot() {\n    [native code]\n}"
    },
    {
      "path": "window.Element.prototype.slot",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Element.prototype.slot",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Element.prototype.attributes",
      "propertyName": "_accessException",
      "property": "TypeError: The Element.attributes getter can only be used on instances of Element"
    },
    {
      "path": "window.Element.prototype.attributes",
      "propertyName": "_get",
      "property": "function attributes() {\n    [native code]\n}"
    },
    {
      "path": "window.Element.prototype.attributes",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Element.prototype.shadowRoot",
      "propertyName": "_accessException",
      "property": "TypeError: The Element.shadowRoot getter can only be used on instances of Element"
    },
    {
      "path": "window.Element.prototype.shadowRoot",
      "propertyName": "_get",
      "property": "function shadowRoot() {\n    [native code]\n}"
    },
    {
      "path": "window.Element.prototype.shadowRoot",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Element.prototype.scrollTop",
      "propertyName": "_accessException",
      "property": "TypeError: The Element.scrollTop getter can only be used on instances of Element"
    },
    {
      "path": "window.Element.prototype.scrollTop",
      "propertyName": "_get",
      "property": "function scrollTop() {\n    [native code]\n}"
    },
    {
      "path": "window.Element.prototype.scrollTop",
      "propertyName": "_set",
      "property": "function scrollTop() {\n    [native code]\n}"
    },
    {
      "path": "window.Element.prototype.scrollTop",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Element.prototype.scrollTop",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Element.prototype.scrollLeft",
      "propertyName": "_accessException",
      "property": "TypeError: The Element.scrollLeft getter can only be used on instances of Element"
    },
    {
      "path": "window.Element.prototype.scrollLeft",
      "propertyName": "_get",
      "property": "function scrollLeft() {\n    [native code]\n}"
    },
    {
      "path": "window.Element.prototype.scrollLeft",
      "propertyName": "_set",
      "property": "function scrollLeft() {\n    [native code]\n}"
    },
    {
      "path": "window.Element.prototype.scrollLeft",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Element.prototype.scrollLeft",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Element.prototype.scrollWidth",
      "propertyName": "_accessException",
      "property": "TypeError: The Element.scrollWidth getter can only be used on instances of Element"
    },
    {
      "path": "window.Element.prototype.scrollWidth",
      "propertyName": "_get",
      "property": "function scrollWidth() {\n    [native code]\n}"
    },
    {
      "path": "window.Element.prototype.scrollWidth",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Element.prototype.scrollHeight",
      "propertyName": "_accessException",
      "property": "TypeError: The Element.scrollHeight getter can only be used on instances of Element"
    },
    {
      "path": "window.Element.prototype.scrollHeight",
      "propertyName": "_get",
      "property": "function scrollHeight() {\n    [native code]\n}"
    },
    {
      "path": "window.Element.prototype.scrollHeight",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Element.prototype.clientTop",
      "propertyName": "_accessException",
      "property": "TypeError: The Element.clientTop getter can only be used on instances of Element"
    },
    {
      "path": "window.Element.prototype.clientTop",
      "propertyName": "_get",
      "property": "function clientTop() {\n    [native code]\n}"
    },
    {
      "path": "window.Element.prototype.clientTop",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Element.prototype.clientLeft",
      "propertyName": "_accessException",
      "property": "TypeError: The Element.clientLeft getter can only be used on instances of Element"
    },
    {
      "path": "window.Element.prototype.clientLeft",
      "propertyName": "_get",
      "property": "function clientLeft() {\n    [native code]\n}"
    },
    {
      "path": "window.Element.prototype.clientLeft",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Element.prototype.clientWidth",
      "propertyName": "_accessException",
      "property": "TypeError: The Element.clientWidth getter can only be used on instances of Element"
    },
    {
      "path": "window.Element.prototype.clientWidth",
      "propertyName": "_get",
      "property": "function clientWidth() {\n    [native code]\n}"
    },
    {
      "path": "window.Element.prototype.clientWidth",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Element.prototype.clientHeight",
      "propertyName": "_accessException",
      "property": "TypeError: The Element.clientHeight getter can only be used on instances of Element"
    },
    {
      "path": "window.Element.prototype.clientHeight",
      "propertyName": "_get",
      "property": "function clientHeight() {\n    [native code]\n}"
    },
    {
      "path": "window.Element.prototype.clientHeight",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Element.prototype.innerHTML",
      "propertyName": "_accessException",
      "property": "TypeError: The Element.innerHTML getter can only be used on instances of Element"
    },
    {
      "path": "window.Element.prototype.innerHTML",
      "propertyName": "_get",
      "property": "function innerHTML() {\n    [native code]\n}"
    },
    {
      "path": "window.Element.prototype.innerHTML",
      "propertyName": "_set",
      "property": "function innerHTML() {\n    [native code]\n}"
    },
    {
      "path": "window.Element.prototype.innerHTML",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Element.prototype.innerHTML",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Element.prototype.outerHTML",
      "propertyName": "_accessException",
      "property": "TypeError: The Element.outerHTML getter can only be used on instances of Element"
    },
    {
      "path": "window.Element.prototype.outerHTML",
      "propertyName": "_get",
      "property": "function outerHTML() {\n    [native code]\n}"
    },
    {
      "path": "window.Element.prototype.outerHTML",
      "propertyName": "_set",
      "property": "function outerHTML() {\n    [native code]\n}"
    },
    {
      "path": "window.Element.prototype.outerHTML",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Element.prototype.outerHTML",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Element.prototype.onwebkitfullscreenchange",
      "propertyName": "_flags",
      "property": "c"
    },
    {
      "path": "window.Element.prototype.onwebkitfullscreenchange",
      "propertyName": "_accessException",
      "property": "TypeError: The Element.onwebkitfullscreenchange getter can only be used on instances of Element"
    },
    {
      "path": "window.Element.prototype.onwebkitfullscreenchange",
      "propertyName": "_get",
      "property": "function onwebkitfullscreenchange() {\n    [native code]\n}"
    },
    {
      "path": "window.Element.prototype.onwebkitfullscreenchange",
      "propertyName": "_set",
      "property": "function onwebkitfullscreenchange() {\n    [native code]\n}"
    },
    {
      "path": "window.Element.prototype.onwebkitfullscreenchange",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Element.prototype.onwebkitfullscreenchange",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Element.prototype.onwebkitfullscreenerror",
      "propertyName": "_flags",
      "property": "c"
    },
    {
      "path": "window.Element.prototype.onwebkitfullscreenerror",
      "propertyName": "_accessException",
      "property": "TypeError: The Element.onwebkitfullscreenerror getter can only be used on instances of Element"
    },
    {
      "path": "window.Element.prototype.onwebkitfullscreenerror",
      "propertyName": "_get",
      "property": "function onwebkitfullscreenerror() {\n    [native code]\n}"
    },
    {
      "path": "window.Element.prototype.onwebkitfullscreenerror",
      "propertyName": "_set",
      "property": "function onwebkitfullscreenerror() {\n    [native code]\n}"
    },
    {
      "path": "window.Element.prototype.onwebkitfullscreenerror",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Element.prototype.onwebkitfullscreenerror",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Element.prototype.onbeforecopy",
      "propertyName": "_flags",
      "property": "c"
    },
    {
      "path": "window.Element.prototype.onbeforecopy",
      "propertyName": "_accessException",
      "property": "TypeError: The Element.onbeforecopy getter can only be used on instances of Element"
    },
    {
      "path": "window.Element.prototype.onbeforecopy",
      "propertyName": "_get",
      "property": "function onbeforecopy() {\n    [native code]\n}"
    },
    {
      "path": "window.Element.prototype.onbeforecopy",
      "propertyName": "_set",
      "property": "function onbeforecopy() {\n    [native code]\n}"
    },
    {
      "path": "window.Element.prototype.onbeforecopy",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Element.prototype.onbeforecopy",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Element.prototype.onbeforecut",
      "propertyName": "_flags",
      "property": "c"
    },
    {
      "path": "window.Element.prototype.onbeforecut",
      "propertyName": "_accessException",
      "property": "TypeError: The Element.onbeforecut getter can only be used on instances of Element"
    },
    {
      "path": "window.Element.prototype.onbeforecut",
      "propertyName": "_get",
      "property": "function onbeforecut() {\n    [native code]\n}"
    },
    {
      "path": "window.Element.prototype.onbeforecut",
      "propertyName": "_set",
      "property": "function onbeforecut() {\n    [native code]\n}"
    },
    {
      "path": "window.Element.prototype.onbeforecut",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Element.prototype.onbeforecut",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Element.prototype.onbeforepaste",
      "propertyName": "_flags",
      "property": "c"
    },
    {
      "path": "window.Element.prototype.onbeforepaste",
      "propertyName": "_accessException",
      "property": "TypeError: The Element.onbeforepaste getter can only be used on instances of Element"
    },
    {
      "path": "window.Element.prototype.onbeforepaste",
      "propertyName": "_get",
      "property": "function onbeforepaste() {\n    [native code]\n}"
    },
    {
      "path": "window.Element.prototype.onbeforepaste",
      "propertyName": "_set",
      "property": "function onbeforepaste() {\n    [native code]\n}"
    },
    {
      "path": "window.Element.prototype.onbeforepaste",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Element.prototype.onbeforepaste",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Element.prototype.previousElementSibling",
      "propertyName": "_accessException",
      "property": "TypeError: The Element.previousElementSibling getter can only be used on instances of Element"
    },
    {
      "path": "window.Element.prototype.previousElementSibling",
      "propertyName": "_get",
      "property": "function previousElementSibling() {\n    [native code]\n}"
    },
    {
      "path": "window.Element.prototype.previousElementSibling",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Element.prototype.nextElementSibling",
      "propertyName": "_accessException",
      "property": "TypeError: The Element.nextElementSibling getter can only be used on instances of Element"
    },
    {
      "path": "window.Element.prototype.nextElementSibling",
      "propertyName": "_get",
      "property": "function nextElementSibling() {\n    [native code]\n}"
    },
    {
      "path": "window.Element.prototype.nextElementSibling",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Element.prototype.children",
      "propertyName": "_accessException",
      "property": "TypeError: The Element.children getter can only be used on instances of Element"
    },
    {
      "path": "window.Element.prototype.children",
      "propertyName": "_get",
      "property": "function children() {\n    [native code]\n}"
    },
    {
      "path": "window.Element.prototype.children",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Element.prototype.firstElementChild",
      "propertyName": "_accessException",
      "property": "TypeError: The Element.firstElementChild getter can only be used on instances of Element"
    },
    {
      "path": "window.Element.prototype.firstElementChild",
      "propertyName": "_get",
      "property": "function firstElementChild() {\n    [native code]\n}"
    },
    {
      "path": "window.Element.prototype.firstElementChild",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Element.prototype.lastElementChild",
      "propertyName": "_accessException",
      "property": "TypeError: The Element.lastElementChild getter can only be used on instances of Element"
    },
    {
      "path": "window.Element.prototype.lastElementChild",
      "propertyName": "_get",
      "property": "function lastElementChild() {\n    [native code]\n}"
    },
    {
      "path": "window.Element.prototype.lastElementChild",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Element.prototype.childElementCount",
      "propertyName": "_accessException",
      "property": "TypeError: The Element.childElementCount getter can only be used on instances of Element"
    },
    {
      "path": "window.Element.prototype.childElementCount",
      "propertyName": "_get",
      "property": "function childElementCount() {\n    [native code]\n}"
    },
    {
      "path": "window.Element.prototype.childElementCount",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Element.prototype.assignedSlot",
      "propertyName": "_accessException",
      "property": "TypeError: The Element.assignedSlot getter can only be used on instances of Element"
    },
    {
      "path": "window.Element.prototype.assignedSlot",
      "propertyName": "_get",
      "property": "function assignedSlot() {\n    [native code]\n}"
    },
    {
      "path": "window.Element.prototype.assignedSlot",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Element.prototype.hasAttributes",
      "propertyName": "_function",
      "property": "function hasAttributes() {\n    [native code]\n}"
    },
    {
      "path": "window.Element.prototype.getAttributeNames",
      "propertyName": "_function",
      "property": "function getAttributeNames() {\n    [native code]\n}"
    },
    {
      "path": "window.Element.prototype.getAttribute",
      "propertyName": "_function",
      "property": "function getAttribute() {\n    [native code]\n}"
    },
    {
      "path": "window.Element.prototype.getAttributeNS",
      "propertyName": "_function",
      "property": "function getAttributeNS() {\n    [native code]\n}"
    },
    {
      "path": "window.Element.prototype.setAttribute",
      "propertyName": "_function",
      "property": "function setAttribute() {\n    [native code]\n}"
    },
    {
      "path": "window.Element.prototype.setAttributeNS",
      "propertyName": "_function",
      "property": "function setAttributeNS() {\n    [native code]\n}"
    },
    {
      "path": "window.Element.prototype.removeAttribute",
      "propertyName": "_function",
      "property": "function removeAttribute() {\n    [native code]\n}"
    },
    {
      "path": "window.Element.prototype.removeAttributeNS",
      "propertyName": "_function",
      "property": "function removeAttributeNS() {\n    [native code]\n}"
    },
    {
      "path": "window.Element.prototype.toggleAttribute",
      "propertyName": "_function",
      "property": "function toggleAttribute() {\n    [native code]\n}"
    },
    {
      "path": "window.Element.prototype.hasAttribute",
      "propertyName": "_function",
      "property": "function hasAttribute() {\n    [native code]\n}"
    },
    {
      "path": "window.Element.prototype.hasAttributeNS",
      "propertyName": "_function",
      "property": "function hasAttributeNS() {\n    [native code]\n}"
    },
    {
      "path": "window.Element.prototype.getAttributeNode",
      "propertyName": "_function",
      "property": "function getAttributeNode() {\n    [native code]\n}"
    },
    {
      "path": "window.Element.prototype.getAttributeNodeNS",
      "propertyName": "_function",
      "property": "function getAttributeNodeNS() {\n    [native code]\n}"
    },
    {
      "path": "window.Element.prototype.setAttributeNode",
      "propertyName": "_function",
      "property": "function setAttributeNode() {\n    [native code]\n}"
    },
    {
      "path": "window.Element.prototype.setAttributeNodeNS",
      "propertyName": "_function",
      "property": "function setAttributeNodeNS() {\n    [native code]\n}"
    },
    {
      "path": "window.Element.prototype.removeAttributeNode",
      "propertyName": "_function",
      "property": "function removeAttributeNode() {\n    [native code]\n}"
    },
    {
      "path": "window.Element.prototype.attachShadow",
      "propertyName": "_function",
      "property": "function attachShadow() {\n    [native code]\n}"
    },
    {
      "path": "window.Element.prototype.closest",
      "propertyName": "_function",
      "property": "function closest() {\n    [native code]\n}"
    },
    {
      "path": "window.Element.prototype.matches",
      "propertyName": "_function",
      "property": "function matches() {\n    [native code]\n}"
    },
    {
      "path": "window.Element.prototype.webkitMatchesSelector",
      "propertyName": "_function",
      "property": "function webkitMatchesSelector() {\n    [native code]\n}"
    },
    {
      "path": "window.Element.prototype.getElementsByTagName",
      "propertyName": "_function",
      "property": "function getElementsByTagName() {\n    [native code]\n}"
    },
    {
      "path": "window.Element.prototype.getElementsByTagNameNS",
      "propertyName": "_function",
      "property": "function getElementsByTagNameNS() {\n    [native code]\n}"
    },
    {
      "path": "window.Element.prototype.getElementsByClassName",
      "propertyName": "_function",
      "property": "function getElementsByClassName() {\n    [native code]\n}"
    },
    {
      "path": "window.Element.prototype.insertAdjacentElement",
      "propertyName": "_function",
      "property": "function insertAdjacentElement() {\n    [native code]\n}"
    },
    {
      "path": "window.Element.prototype.insertAdjacentText",
      "propertyName": "_function",
      "property": "function insertAdjacentText() {\n    [native code]\n}"
    },
    {
      "path": "window.Element.prototype.getClientRects",
      "propertyName": "_function",
      "property": "function getClientRects() {\n    [native code]\n}"
    },
    {
      "path": "window.Element.prototype.getBoundingClientRect",
      "propertyName": "_function",
      "property": "function getBoundingClientRect() {\n    [native code]\n}"
    },
    {
      "path": "window.Element.prototype.scrollIntoView",
      "propertyName": "_function",
      "property": "function scrollIntoView() {\n    [native code]\n}"
    },
    {
      "path": "window.Element.prototype.scroll",
      "propertyName": "_function",
      "property": "function scroll() {\n    [native code]\n}"
    },
    {
      "path": "window.Element.prototype.scrollTo",
      "propertyName": "_function",
      "property": "function scrollTo() {\n    [native code]\n}"
    },
    {
      "path": "window.Element.prototype.scrollBy",
      "propertyName": "_function",
      "property": "function scrollBy() {\n    [native code]\n}"
    },
    {
      "path": "window.Element.prototype.insertAdjacentHTML",
      "propertyName": "_function",
      "property": "function insertAdjacentHTML() {\n    [native code]\n}"
    },
    {
      "path": "window.Element.prototype.webkitRequestFullScreen",
      "propertyName": "_function",
      "property": "function webkitRequestFullScreen() {\n    [native code]\n}"
    },
    {
      "path": "window.Element.prototype.webkitRequestFullscreen",
      "propertyName": "_function",
      "property": "function webkitRequestFullscreen() {\n    [native code]\n}"
    },
    {
      "path": "window.Element.prototype.setPointerCapture",
      "propertyName": "_function",
      "property": "function setPointerCapture() {\n    [native code]\n}"
    },
    {
      "path": "window.Element.prototype.releasePointerCapture",
      "propertyName": "_function",
      "property": "function releasePointerCapture() {\n    [native code]\n}"
    },
    {
      "path": "window.Element.prototype.hasPointerCapture",
      "propertyName": "_function",
      "property": "function hasPointerCapture() {\n    [native code]\n}"
    },
    {
      "path": "window.Element.prototype.requestPointerLock",
      "propertyName": "_function",
      "property": "function requestPointerLock() {\n    [native code]\n}"
    },
    {
      "path": "window.Element.prototype.scrollIntoViewIfNeeded",
      "propertyName": "_function",
      "property": "function scrollIntoViewIfNeeded() {\n    [native code]\n}"
    },
    {
      "path": "window.Element.prototype.before",
      "propertyName": "_function",
      "property": "function before() {\n    [native code]\n}"
    },
    {
      "path": "window.Element.prototype.after",
      "propertyName": "_function",
      "property": "function after() {\n    [native code]\n}"
    },
    {
      "path": "window.Element.prototype.replaceWith",
      "propertyName": "_function",
      "property": "function replaceWith() {\n    [native code]\n}"
    },
    {
      "path": "window.Element.prototype.remove",
      "propertyName": "_function",
      "property": "function remove() {\n    [native code]\n}"
    },
    {
      "path": "window.Element.prototype.prepend",
      "propertyName": "_function",
      "property": "function prepend() {\n    [native code]\n}"
    },
    {
      "path": "window.Element.prototype.append",
      "propertyName": "_function",
      "property": "function append() {\n    [native code]\n}"
    },
    {
      "path": "window.Element.prototype.querySelector",
      "propertyName": "_function",
      "property": "function querySelector() {\n    [native code]\n}"
    },
    {
      "path": "window.Element.prototype.querySelectorAll",
      "propertyName": "_function",
      "property": "function querySelectorAll() {\n    [native code]\n}"
    },
    {
      "path": "window.Element.prototype",
      "propertyName": "Symbol.unscopables._flags",
      "property": "c"
    },
    {
      "path": "window.Element",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.Element",
      "propertyName": "_function",
      "property": "function Element() {\n    [native code]\n}"
    },
    {
      "path": "window.ErrorEvent.prototype.message",
      "propertyName": "_accessException",
      "property": "TypeError: The ErrorEvent.message getter can only be used on instances of ErrorEvent"
    },
    {
      "path": "window.ErrorEvent.prototype.message",
      "propertyName": "_get",
      "property": "function message() {\n    [native code]\n}"
    },
    {
      "path": "window.ErrorEvent.prototype.message",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.ErrorEvent.prototype.filename",
      "propertyName": "_accessException",
      "property": "TypeError: The ErrorEvent.filename getter can only be used on instances of ErrorEvent"
    },
    {
      "path": "window.ErrorEvent.prototype.filename",
      "propertyName": "_get",
      "property": "function filename() {\n    [native code]\n}"
    },
    {
      "path": "window.ErrorEvent.prototype.filename",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.ErrorEvent.prototype.lineno",
      "propertyName": "_accessException",
      "property": "TypeError: The ErrorEvent.lineno getter can only be used on instances of ErrorEvent"
    },
    {
      "path": "window.ErrorEvent.prototype.lineno",
      "propertyName": "_get",
      "property": "function lineno() {\n    [native code]\n}"
    },
    {
      "path": "window.ErrorEvent.prototype.lineno",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.ErrorEvent.prototype.colno",
      "propertyName": "_accessException",
      "property": "TypeError: The ErrorEvent.colno getter can only be used on instances of ErrorEvent"
    },
    {
      "path": "window.ErrorEvent.prototype.colno",
      "propertyName": "_get",
      "property": "function colno() {\n    [native code]\n}"
    },
    {
      "path": "window.ErrorEvent.prototype.colno",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.ErrorEvent.prototype.error",
      "propertyName": "_accessException",
      "property": "TypeError: The ErrorEvent.error getter can only be used on instances of ErrorEvent"
    },
    {
      "path": "window.ErrorEvent.prototype.error",
      "propertyName": "_get",
      "property": "function error() {\n    [native code]\n}"
    },
    {
      "path": "window.ErrorEvent.prototype.error",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.ErrorEvent",
      "propertyName": "new()",
      "property": "TypeError: Not enough arguments"
    },
    {
      "path": "window.ErrorEvent",
      "propertyName": "_function",
      "property": "function ErrorEvent() {\n    [native code]\n}"
    },
    {
      "path": "window.Event.prototype.type",
      "propertyName": "_accessException",
      "property": "TypeError: The Event.type getter can only be used on instances of Event"
    },
    {
      "path": "window.Event.prototype.type",
      "propertyName": "_get",
      "property": "function type() {\n    [native code]\n}"
    },
    {
      "path": "window.Event.prototype.type",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Event.prototype.target",
      "propertyName": "_accessException",
      "property": "TypeError: The Event.target getter can only be used on instances of Event"
    },
    {
      "path": "window.Event.prototype.target",
      "propertyName": "_get",
      "property": "function target() {\n    [native code]\n}"
    },
    {
      "path": "window.Event.prototype.target",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Event.prototype.currentTarget",
      "propertyName": "_accessException",
      "property": "TypeError: The Event.currentTarget getter can only be used on instances of Event"
    },
    {
      "path": "window.Event.prototype.currentTarget",
      "propertyName": "_get",
      "property": "function currentTarget() {\n    [native code]\n}"
    },
    {
      "path": "window.Event.prototype.currentTarget",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Event.prototype.eventPhase",
      "propertyName": "_accessException",
      "property": "TypeError: The Event.eventPhase getter can only be used on instances of Event"
    },
    {
      "path": "window.Event.prototype.eventPhase",
      "propertyName": "_get",
      "property": "function eventPhase() {\n    [native code]\n}"
    },
    {
      "path": "window.Event.prototype.eventPhase",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Event.prototype.cancelBubble",
      "propertyName": "_accessException",
      "property": "TypeError: The Event.cancelBubble getter can only be used on instances of Event"
    },
    {
      "path": "window.Event.prototype.cancelBubble",
      "propertyName": "_get",
      "property": "function cancelBubble() {\n    [native code]\n}"
    },
    {
      "path": "window.Event.prototype.cancelBubble",
      "propertyName": "_set",
      "property": "function cancelBubble() {\n    [native code]\n}"
    },
    {
      "path": "window.Event.prototype.cancelBubble",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Event.prototype.cancelBubble",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Event.prototype.bubbles",
      "propertyName": "_accessException",
      "property": "TypeError: The Event.bubbles getter can only be used on instances of Event"
    },
    {
      "path": "window.Event.prototype.bubbles",
      "propertyName": "_get",
      "property": "function bubbles() {\n    [native code]\n}"
    },
    {
      "path": "window.Event.prototype.bubbles",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Event.prototype.cancelable",
      "propertyName": "_accessException",
      "property": "TypeError: The Event.cancelable getter can only be used on instances of Event"
    },
    {
      "path": "window.Event.prototype.cancelable",
      "propertyName": "_get",
      "property": "function cancelable() {\n    [native code]\n}"
    },
    {
      "path": "window.Event.prototype.cancelable",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Event.prototype.defaultPrevented",
      "propertyName": "_accessException",
      "property": "TypeError: The Event.defaultPrevented getter can only be used on instances of Event"
    },
    {
      "path": "window.Event.prototype.defaultPrevented",
      "propertyName": "_get",
      "property": "function defaultPrevented() {\n    [native code]\n}"
    },
    {
      "path": "window.Event.prototype.defaultPrevented",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Event.prototype.composed",
      "propertyName": "_accessException",
      "property": "TypeError: The Event.composed getter can only be used on instances of Event"
    },
    {
      "path": "window.Event.prototype.composed",
      "propertyName": "_get",
      "property": "function composed() {\n    [native code]\n}"
    },
    {
      "path": "window.Event.prototype.composed",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Event.prototype.timeStamp",
      "propertyName": "_accessException",
      "property": "TypeError: The Event.timeStamp getter can only be used on instances of Event"
    },
    {
      "path": "window.Event.prototype.timeStamp",
      "propertyName": "_get",
      "property": "function timeStamp() {\n    [native code]\n}"
    },
    {
      "path": "window.Event.prototype.timeStamp",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Event.prototype.srcElement",
      "propertyName": "_accessException",
      "property": "TypeError: The Event.srcElement getter can only be used on instances of Event"
    },
    {
      "path": "window.Event.prototype.srcElement",
      "propertyName": "_get",
      "property": "function srcElement() {\n    [native code]\n}"
    },
    {
      "path": "window.Event.prototype.srcElement",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Event.prototype.returnValue",
      "propertyName": "_accessException",
      "property": "TypeError: The Event.returnValue getter can only be used on instances of Event"
    },
    {
      "path": "window.Event.prototype.returnValue",
      "propertyName": "_get",
      "property": "function returnValue() {\n    [native code]\n}"
    },
    {
      "path": "window.Event.prototype.returnValue",
      "propertyName": "_set",
      "property": "function returnValue() {\n    [native code]\n}"
    },
    {
      "path": "window.Event.prototype.returnValue",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Event.prototype.returnValue",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Event.prototype.composedPath",
      "propertyName": "_function",
      "property": "function composedPath() {\n    [native code]\n}"
    },
    {
      "path": "window.Event.prototype.stopPropagation",
      "propertyName": "_function",
      "property": "function stopPropagation() {\n    [native code]\n}"
    },
    {
      "path": "window.Event.prototype.stopImmediatePropagation",
      "propertyName": "_function",
      "property": "function stopImmediatePropagation() {\n    [native code]\n}"
    },
    {
      "path": "window.Event.prototype.preventDefault",
      "propertyName": "_function",
      "property": "function preventDefault() {\n    [native code]\n}"
    },
    {
      "path": "window.Event.prototype.initEvent",
      "propertyName": "_function",
      "property": "function initEvent() {\n    [native code]\n}"
    },
    {
      "path": "window.Event",
      "propertyName": "new()",
      "property": "TypeError: Not enough arguments"
    },
    {
      "path": "window.Event",
      "propertyName": "_function",
      "property": "function Event() {\n    [native code]\n}"
    },
    {
      "path": "window.EventTarget.prototype._protos",
      "propertyName": "0",
      "property": "EventTarget.prototype"
    },
    {
      "path": "window.EventTarget",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.EventTarget",
      "propertyName": "_function",
      "property": "function EventTarget() {\n    [native code]\n}"
    },
    {
      "path": "window.FocusEvent.prototype.relatedTarget",
      "propertyName": "_accessException",
      "property": "TypeError: The FocusEvent.relatedTarget getter can only be used on instances of FocusEvent"
    },
    {
      "path": "window.FocusEvent.prototype.relatedTarget",
      "propertyName": "_get",
      "property": "function relatedTarget() {\n    [native code]\n}"
    },
    {
      "path": "window.FocusEvent.prototype.relatedTarget",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.FocusEvent",
      "propertyName": "new()",
      "property": "TypeError: Not enough arguments"
    },
    {
      "path": "window.FocusEvent",
      "propertyName": "_function",
      "property": "function FocusEvent() {\n    [native code]\n}"
    },
    {
      "path": "window.HashChangeEvent.prototype.oldURL",
      "propertyName": "_accessException",
      "property": "TypeError: The HashChangeEvent.oldURL getter can only be used on instances of HashChangeEvent"
    },
    {
      "path": "window.HashChangeEvent.prototype.oldURL",
      "propertyName": "_get",
      "property": "function oldURL() {\n    [native code]\n}"
    },
    {
      "path": "window.HashChangeEvent.prototype.oldURL",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HashChangeEvent.prototype.newURL",
      "propertyName": "_accessException",
      "property": "TypeError: The HashChangeEvent.newURL getter can only be used on instances of HashChangeEvent"
    },
    {
      "path": "window.HashChangeEvent.prototype.newURL",
      "propertyName": "_get",
      "property": "function newURL() {\n    [native code]\n}"
    },
    {
      "path": "window.HashChangeEvent.prototype.newURL",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HashChangeEvent",
      "propertyName": "new()",
      "property": "TypeError: Not enough arguments"
    },
    {
      "path": "window.HashChangeEvent",
      "propertyName": "_function",
      "property": "function HashChangeEvent() {\n    [native code]\n}"
    },
    {
      "path": "window.KeyboardEvent.prototype.key",
      "propertyName": "_accessException",
      "property": "TypeError: The KeyboardEvent.key getter can only be used on instances of KeyboardEvent"
    },
    {
      "path": "window.KeyboardEvent.prototype.key",
      "propertyName": "_get",
      "property": "function key() {\n    [native code]\n}"
    },
    {
      "path": "window.KeyboardEvent.prototype.key",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.KeyboardEvent.prototype.code",
      "propertyName": "_accessException",
      "property": "TypeError: The KeyboardEvent.code getter can only be used on instances of KeyboardEvent"
    },
    {
      "path": "window.KeyboardEvent.prototype.code",
      "propertyName": "_get",
      "property": "function code() {\n    [native code]\n}"
    },
    {
      "path": "window.KeyboardEvent.prototype.code",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.KeyboardEvent.prototype.location",
      "propertyName": "_accessException",
      "property": "TypeError: The KeyboardEvent.location getter can only be used on instances of KeyboardEvent"
    },
    {
      "path": "window.KeyboardEvent.prototype.location",
      "propertyName": "_get",
      "property": "function location() {\n    [native code]\n}"
    },
    {
      "path": "window.KeyboardEvent.prototype.location",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.KeyboardEvent.prototype.ctrlKey",
      "propertyName": "_accessException",
      "property": "TypeError: The KeyboardEvent.ctrlKey getter can only be used on instances of KeyboardEvent"
    },
    {
      "path": "window.KeyboardEvent.prototype.ctrlKey",
      "propertyName": "_get",
      "property": "function ctrlKey() {\n    [native code]\n}"
    },
    {
      "path": "window.KeyboardEvent.prototype.ctrlKey",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.KeyboardEvent.prototype.shiftKey",
      "propertyName": "_accessException",
      "property": "TypeError: The KeyboardEvent.shiftKey getter can only be used on instances of KeyboardEvent"
    },
    {
      "path": "window.KeyboardEvent.prototype.shiftKey",
      "propertyName": "_get",
      "property": "function shiftKey() {\n    [native code]\n}"
    },
    {
      "path": "window.KeyboardEvent.prototype.shiftKey",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.KeyboardEvent.prototype.altKey",
      "propertyName": "_accessException",
      "property": "TypeError: The KeyboardEvent.altKey getter can only be used on instances of KeyboardEvent"
    },
    {
      "path": "window.KeyboardEvent.prototype.altKey",
      "propertyName": "_get",
      "property": "function altKey() {\n    [native code]\n}"
    },
    {
      "path": "window.KeyboardEvent.prototype.altKey",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.KeyboardEvent.prototype.metaKey",
      "propertyName": "_accessException",
      "property": "TypeError: The KeyboardEvent.metaKey getter can only be used on instances of KeyboardEvent"
    },
    {
      "path": "window.KeyboardEvent.prototype.metaKey",
      "propertyName": "_get",
      "property": "function metaKey() {\n    [native code]\n}"
    },
    {
      "path": "window.KeyboardEvent.prototype.metaKey",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.KeyboardEvent.prototype.repeat",
      "propertyName": "_accessException",
      "property": "TypeError: The KeyboardEvent.repeat getter can only be used on instances of KeyboardEvent"
    },
    {
      "path": "window.KeyboardEvent.prototype.repeat",
      "propertyName": "_get",
      "property": "function repeat() {\n    [native code]\n}"
    },
    {
      "path": "window.KeyboardEvent.prototype.repeat",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.KeyboardEvent.prototype.isComposing",
      "propertyName": "_accessException",
      "property": "TypeError: The KeyboardEvent.isComposing getter can only be used on instances of KeyboardEvent"
    },
    {
      "path": "window.KeyboardEvent.prototype.isComposing",
      "propertyName": "_get",
      "property": "function isComposing() {\n    [native code]\n}"
    },
    {
      "path": "window.KeyboardEvent.prototype.isComposing",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.KeyboardEvent.prototype.charCode",
      "propertyName": "_accessException",
      "property": "TypeError: The KeyboardEvent.charCode getter can only be used on instances of KeyboardEvent"
    },
    {
      "path": "window.KeyboardEvent.prototype.charCode",
      "propertyName": "_get",
      "property": "function charCode() {\n    [native code]\n}"
    },
    {
      "path": "window.KeyboardEvent.prototype.charCode",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.KeyboardEvent.prototype.keyCode",
      "propertyName": "_accessException",
      "property": "TypeError: The KeyboardEvent.keyCode getter can only be used on instances of KeyboardEvent"
    },
    {
      "path": "window.KeyboardEvent.prototype.keyCode",
      "propertyName": "_get",
      "property": "function keyCode() {\n    [native code]\n}"
    },
    {
      "path": "window.KeyboardEvent.prototype.keyCode",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.KeyboardEvent.prototype.getModifierState",
      "propertyName": "_function",
      "property": "function getModifierState() {\n    [native code]\n}"
    },
    {
      "path": "window.KeyboardEvent.prototype.initKeyboardEvent",
      "propertyName": "_function",
      "property": "function initKeyboardEvent() {\n    [native code]\n}"
    },
    {
      "path": "window.KeyboardEvent",
      "propertyName": "new()",
      "property": "TypeError: Not enough arguments"
    },
    {
      "path": "window.KeyboardEvent",
      "propertyName": "_function",
      "property": "function KeyboardEvent() {\n    [native code]\n}"
    },
    {
      "path": "window.MessageChannel.prototype.port1",
      "propertyName": "_accessException",
      "property": "TypeError: The MessageChannel.port1 getter can only be used on instances of MessageChannel"
    },
    {
      "path": "window.MessageChannel.prototype.port1",
      "propertyName": "_get",
      "property": "function port1() {\n    [native code]\n}"
    },
    {
      "path": "window.MessageChannel.prototype.port1",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.MessageChannel.prototype.port2",
      "propertyName": "_accessException",
      "property": "TypeError: The MessageChannel.port2 getter can only be used on instances of MessageChannel"
    },
    {
      "path": "window.MessageChannel.prototype.port2",
      "propertyName": "_get",
      "property": "function port2() {\n    [native code]\n}"
    },
    {
      "path": "window.MessageChannel.prototype.port2",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.MessageChannel",
      "propertyName": "_function",
      "property": "function MessageChannel() {\n    [native code]\n}"
    },
    {
      "path": "window.MessageEvent.prototype.origin",
      "propertyName": "_accessException",
      "property": "TypeError: The MessageEvent.origin getter can only be used on instances of MessageEvent"
    },
    {
      "path": "window.MessageEvent.prototype.origin",
      "propertyName": "_get",
      "property": "function origin() {\n    [native code]\n}"
    },
    {
      "path": "window.MessageEvent.prototype.origin",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.MessageEvent.prototype.lastEventId",
      "propertyName": "_accessException",
      "property": "TypeError: The MessageEvent.lastEventId getter can only be used on instances of MessageEvent"
    },
    {
      "path": "window.MessageEvent.prototype.lastEventId",
      "propertyName": "_get",
      "property": "function lastEventId() {\n    [native code]\n}"
    },
    {
      "path": "window.MessageEvent.prototype.lastEventId",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.MessageEvent.prototype.source",
      "propertyName": "_accessException",
      "property": "TypeError: The MessageEvent.source getter can only be used on instances of MessageEvent"
    },
    {
      "path": "window.MessageEvent.prototype.source",
      "propertyName": "_get",
      "property": "function source() {\n    [native code]\n}"
    },
    {
      "path": "window.MessageEvent.prototype.source",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.MessageEvent.prototype.data",
      "propertyName": "_accessException",
      "property": "TypeError: The MessageEvent.data getter can only be used on instances of MessageEvent"
    },
    {
      "path": "window.MessageEvent.prototype.data",
      "propertyName": "_get",
      "property": "function data() {\n    [native code]\n}"
    },
    {
      "path": "window.MessageEvent.prototype.data",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.MessageEvent.prototype.ports",
      "propertyName": "_accessException",
      "property": "TypeError: The MessageEvent.ports getter can only be used on instances of MessageEvent"
    },
    {
      "path": "window.MessageEvent.prototype.ports",
      "propertyName": "_get",
      "property": "function ports() {\n    [native code]\n}"
    },
    {
      "path": "window.MessageEvent.prototype.ports",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.MessageEvent.prototype.initMessageEvent",
      "propertyName": "_function",
      "property": "function initMessageEvent() {\n    [native code]\n}"
    },
    {
      "path": "window.MessageEvent",
      "propertyName": "new()",
      "property": "TypeError: Not enough arguments"
    },
    {
      "path": "window.MessageEvent",
      "propertyName": "_function",
      "property": "function MessageEvent() {\n    [native code]\n}"
    },
    {
      "path": "window.MessagePort.prototype.onmessage",
      "propertyName": "_accessException",
      "property": "TypeError: The MessagePort.onmessage getter can only be used on instances of MessagePort"
    },
    {
      "path": "window.MessagePort.prototype.onmessage",
      "propertyName": "_get",
      "property": "function onmessage() {\n    [native code]\n}"
    },
    {
      "path": "window.MessagePort.prototype.onmessage",
      "propertyName": "_set",
      "property": "function onmessage() {\n    [native code]\n}"
    },
    {
      "path": "window.MessagePort.prototype.onmessage",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.MessagePort.prototype.onmessage",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.MessagePort.prototype.postMessage",
      "propertyName": "_function",
      "property": "function postMessage() {\n    [native code]\n}"
    },
    {
      "path": "window.MessagePort.prototype.start",
      "propertyName": "_function",
      "property": "function start() {\n    [native code]\n}"
    },
    {
      "path": "window.MessagePort.prototype.close",
      "propertyName": "_function",
      "property": "function close() {\n    [native code]\n}"
    },
    {
      "path": "window.MessagePort",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.MessagePort",
      "propertyName": "_function",
      "property": "function MessagePort() {\n    [native code]\n}"
    },
    {
      "path": "window.MouseEvent.prototype.screenX",
      "propertyName": "_accessException",
      "property": "TypeError: The MouseEvent.screenX getter can only be used on instances of MouseEvent"
    },
    {
      "path": "window.MouseEvent.prototype.screenX",
      "propertyName": "_get",
      "property": "function screenX() {\n    [native code]\n}"
    },
    {
      "path": "window.MouseEvent.prototype.screenX",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.MouseEvent.prototype.screenY",
      "propertyName": "_accessException",
      "property": "TypeError: The MouseEvent.screenY getter can only be used on instances of MouseEvent"
    },
    {
      "path": "window.MouseEvent.prototype.screenY",
      "propertyName": "_get",
      "property": "function screenY() {\n    [native code]\n}"
    },
    {
      "path": "window.MouseEvent.prototype.screenY",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.MouseEvent.prototype.clientX",
      "propertyName": "_accessException",
      "property": "TypeError: The MouseEvent.clientX getter can only be used on instances of MouseEvent"
    },
    {
      "path": "window.MouseEvent.prototype.clientX",
      "propertyName": "_get",
      "property": "function clientX() {\n    [native code]\n}"
    },
    {
      "path": "window.MouseEvent.prototype.clientX",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.MouseEvent.prototype.clientY",
      "propertyName": "_accessException",
      "property": "TypeError: The MouseEvent.clientY getter can only be used on instances of MouseEvent"
    },
    {
      "path": "window.MouseEvent.prototype.clientY",
      "propertyName": "_get",
      "property": "function clientY() {\n    [native code]\n}"
    },
    {
      "path": "window.MouseEvent.prototype.clientY",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.MouseEvent.prototype.ctrlKey",
      "propertyName": "_accessException",
      "property": "TypeError: The MouseEvent.ctrlKey getter can only be used on instances of MouseEvent"
    },
    {
      "path": "window.MouseEvent.prototype.ctrlKey",
      "propertyName": "_get",
      "property": "function ctrlKey() {\n    [native code]\n}"
    },
    {
      "path": "window.MouseEvent.prototype.ctrlKey",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.MouseEvent.prototype.shiftKey",
      "propertyName": "_accessException",
      "property": "TypeError: The MouseEvent.shiftKey getter can only be used on instances of MouseEvent"
    },
    {
      "path": "window.MouseEvent.prototype.shiftKey",
      "propertyName": "_get",
      "property": "function shiftKey() {\n    [native code]\n}"
    },
    {
      "path": "window.MouseEvent.prototype.shiftKey",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.MouseEvent.prototype.altKey",
      "propertyName": "_accessException",
      "property": "TypeError: The MouseEvent.altKey getter can only be used on instances of MouseEvent"
    },
    {
      "path": "window.MouseEvent.prototype.altKey",
      "propertyName": "_get",
      "property": "function altKey() {\n    [native code]\n}"
    },
    {
      "path": "window.MouseEvent.prototype.altKey",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.MouseEvent.prototype.metaKey",
      "propertyName": "_accessException",
      "property": "TypeError: The MouseEvent.metaKey getter can only be used on instances of MouseEvent"
    },
    {
      "path": "window.MouseEvent.prototype.metaKey",
      "propertyName": "_get",
      "property": "function metaKey() {\n    [native code]\n}"
    },
    {
      "path": "window.MouseEvent.prototype.metaKey",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.MouseEvent.prototype.button",
      "propertyName": "_accessException",
      "property": "TypeError: The MouseEvent.button getter can only be used on instances of MouseEvent"
    },
    {
      "path": "window.MouseEvent.prototype.button",
      "propertyName": "_get",
      "property": "function button() {\n    [native code]\n}"
    },
    {
      "path": "window.MouseEvent.prototype.button",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.MouseEvent.prototype.buttons",
      "propertyName": "_accessException",
      "property": "TypeError: The MouseEvent.buttons getter can only be used on instances of MouseEvent"
    },
    {
      "path": "window.MouseEvent.prototype.buttons",
      "propertyName": "_get",
      "property": "function buttons() {\n    [native code]\n}"
    },
    {
      "path": "window.MouseEvent.prototype.buttons",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.MouseEvent.prototype.relatedTarget",
      "propertyName": "_accessException",
      "property": "TypeError: The MouseEvent.relatedTarget getter can only be used on instances of MouseEvent"
    },
    {
      "path": "window.MouseEvent.prototype.relatedTarget",
      "propertyName": "_get",
      "property": "function relatedTarget() {\n    [native code]\n}"
    },
    {
      "path": "window.MouseEvent.prototype.relatedTarget",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.MouseEvent.prototype.movementX",
      "propertyName": "_accessException",
      "property": "TypeError: The MouseEvent.movementX getter can only be used on instances of MouseEvent"
    },
    {
      "path": "window.MouseEvent.prototype.movementX",
      "propertyName": "_get",
      "property": "function movementX() {\n    [native code]\n}"
    },
    {
      "path": "window.MouseEvent.prototype.movementX",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.MouseEvent.prototype.movementY",
      "propertyName": "_accessException",
      "property": "TypeError: The MouseEvent.movementY getter can only be used on instances of MouseEvent"
    },
    {
      "path": "window.MouseEvent.prototype.movementY",
      "propertyName": "_get",
      "property": "function movementY() {\n    [native code]\n}"
    },
    {
      "path": "window.MouseEvent.prototype.movementY",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.MouseEvent.prototype.offsetX",
      "propertyName": "_accessException",
      "property": "TypeError: The MouseEvent.offsetX getter can only be used on instances of MouseEvent"
    },
    {
      "path": "window.MouseEvent.prototype.offsetX",
      "propertyName": "_get",
      "property": "function offsetX() {\n    [native code]\n}"
    },
    {
      "path": "window.MouseEvent.prototype.offsetX",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.MouseEvent.prototype.offsetY",
      "propertyName": "_accessException",
      "property": "TypeError: The MouseEvent.offsetY getter can only be used on instances of MouseEvent"
    },
    {
      "path": "window.MouseEvent.prototype.offsetY",
      "propertyName": "_get",
      "property": "function offsetY() {\n    [native code]\n}"
    },
    {
      "path": "window.MouseEvent.prototype.offsetY",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.MouseEvent.prototype.x",
      "propertyName": "_accessException",
      "property": "TypeError: The MouseEvent.x getter can only be used on instances of MouseEvent"
    },
    {
      "path": "window.MouseEvent.prototype.x",
      "propertyName": "_get",
      "property": "function x() {\n    [native code]\n}"
    },
    {
      "path": "window.MouseEvent.prototype.x",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.MouseEvent.prototype.y",
      "propertyName": "_accessException",
      "property": "TypeError: The MouseEvent.y getter can only be used on instances of MouseEvent"
    },
    {
      "path": "window.MouseEvent.prototype.y",
      "propertyName": "_get",
      "property": "function y() {\n    [native code]\n}"
    },
    {
      "path": "window.MouseEvent.prototype.y",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.MouseEvent.prototype.fromElement",
      "propertyName": "_accessException",
      "property": "TypeError: The MouseEvent.fromElement getter can only be used on instances of MouseEvent"
    },
    {
      "path": "window.MouseEvent.prototype.fromElement",
      "propertyName": "_get",
      "property": "function fromElement() {\n    [native code]\n}"
    },
    {
      "path": "window.MouseEvent.prototype.fromElement",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.MouseEvent.prototype.toElement",
      "propertyName": "_accessException",
      "property": "TypeError: The MouseEvent.toElement getter can only be used on instances of MouseEvent"
    },
    {
      "path": "window.MouseEvent.prototype.toElement",
      "propertyName": "_get",
      "property": "function toElement() {\n    [native code]\n}"
    },
    {
      "path": "window.MouseEvent.prototype.toElement",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.MouseEvent.prototype.getModifierState",
      "propertyName": "_function",
      "property": "function getModifierState() {\n    [native code]\n}"
    },
    {
      "path": "window.MouseEvent.prototype.initMouseEvent",
      "propertyName": "_function",
      "property": "function initMouseEvent() {\n    [native code]\n}"
    },
    {
      "path": "window.MouseEvent",
      "propertyName": "new()",
      "property": "TypeError: Not enough arguments"
    },
    {
      "path": "window.MouseEvent",
      "propertyName": "_function",
      "property": "function MouseEvent() {\n    [native code]\n}"
    },
    {
      "path": "window.MutationEvent.prototype.relatedNode",
      "propertyName": "_accessException",
      "property": "TypeError: The MutationEvent.relatedNode getter can only be used on instances of MutationEvent"
    },
    {
      "path": "window.MutationEvent.prototype.relatedNode",
      "propertyName": "_get",
      "property": "function relatedNode() {\n    [native code]\n}"
    },
    {
      "path": "window.MutationEvent.prototype.relatedNode",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.MutationEvent.prototype.prevValue",
      "propertyName": "_accessException",
      "property": "TypeError: The MutationEvent.prevValue getter can only be used on instances of MutationEvent"
    },
    {
      "path": "window.MutationEvent.prototype.prevValue",
      "propertyName": "_get",
      "property": "function prevValue() {\n    [native code]\n}"
    },
    {
      "path": "window.MutationEvent.prototype.prevValue",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.MutationEvent.prototype.newValue",
      "propertyName": "_accessException",
      "property": "TypeError: The MutationEvent.newValue getter can only be used on instances of MutationEvent"
    },
    {
      "path": "window.MutationEvent.prototype.newValue",
      "propertyName": "_get",
      "property": "function newValue() {\n    [native code]\n}"
    },
    {
      "path": "window.MutationEvent.prototype.newValue",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.MutationEvent.prototype.attrName",
      "propertyName": "_accessException",
      "property": "TypeError: The MutationEvent.attrName getter can only be used on instances of MutationEvent"
    },
    {
      "path": "window.MutationEvent.prototype.attrName",
      "propertyName": "_get",
      "property": "function attrName() {\n    [native code]\n}"
    },
    {
      "path": "window.MutationEvent.prototype.attrName",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.MutationEvent.prototype.attrChange",
      "propertyName": "_accessException",
      "property": "TypeError: The MutationEvent.attrChange getter can only be used on instances of MutationEvent"
    },
    {
      "path": "window.MutationEvent.prototype.attrChange",
      "propertyName": "_get",
      "property": "function attrChange() {\n    [native code]\n}"
    },
    {
      "path": "window.MutationEvent.prototype.attrChange",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.MutationEvent.prototype.initMutationEvent",
      "propertyName": "_function",
      "property": "function initMutationEvent() {\n    [native code]\n}"
    },
    {
      "path": "window.MutationEvent",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.MutationEvent",
      "propertyName": "_function",
      "property": "function MutationEvent() {\n    [native code]\n}"
    },
    {
      "path": "window.MutationObserver.prototype.observe",
      "propertyName": "_function",
      "property": "function observe() {\n    [native code]\n}"
    },
    {
      "path": "window.MutationObserver.prototype.disconnect",
      "propertyName": "_function",
      "property": "function disconnect() {\n    [native code]\n}"
    },
    {
      "path": "window.MutationObserver.prototype.takeRecords",
      "propertyName": "_function",
      "property": "function takeRecords() {\n    [native code]\n}"
    },
    {
      "path": "window.MutationObserver",
      "propertyName": "new()",
      "property": "TypeError: Not enough arguments"
    },
    {
      "path": "window.MutationObserver",
      "propertyName": "_function",
      "property": "function MutationObserver() {\n    [native code]\n}"
    },
    {
      "path": "window.MutationRecord.prototype.type",
      "propertyName": "_accessException",
      "property": "TypeError: The MutationRecord.type getter can only be used on instances of MutationRecord"
    },
    {
      "path": "window.MutationRecord.prototype.type",
      "propertyName": "_get",
      "property": "function type() {\n    [native code]\n}"
    },
    {
      "path": "window.MutationRecord.prototype.type",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.MutationRecord.prototype.target",
      "propertyName": "_accessException",
      "property": "TypeError: The MutationRecord.target getter can only be used on instances of MutationRecord"
    },
    {
      "path": "window.MutationRecord.prototype.target",
      "propertyName": "_get",
      "property": "function target() {\n    [native code]\n}"
    },
    {
      "path": "window.MutationRecord.prototype.target",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.MutationRecord.prototype.addedNodes",
      "propertyName": "_accessException",
      "property": "TypeError: The MutationRecord.addedNodes getter can only be used on instances of MutationRecord"
    },
    {
      "path": "window.MutationRecord.prototype.addedNodes",
      "propertyName": "_get",
      "property": "function addedNodes() {\n    [native code]\n}"
    },
    {
      "path": "window.MutationRecord.prototype.addedNodes",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.MutationRecord.prototype.removedNodes",
      "propertyName": "_accessException",
      "property": "TypeError: The MutationRecord.removedNodes getter can only be used on instances of MutationRecord"
    },
    {
      "path": "window.MutationRecord.prototype.removedNodes",
      "propertyName": "_get",
      "property": "function removedNodes() {\n    [native code]\n}"
    },
    {
      "path": "window.MutationRecord.prototype.removedNodes",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.MutationRecord.prototype.previousSibling",
      "propertyName": "_accessException",
      "property": "TypeError: The MutationRecord.previousSibling getter can only be used on instances of MutationRecord"
    },
    {
      "path": "window.MutationRecord.prototype.previousSibling",
      "propertyName": "_get",
      "property": "function previousSibling() {\n    [native code]\n}"
    },
    {
      "path": "window.MutationRecord.prototype.previousSibling",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.MutationRecord.prototype.nextSibling",
      "propertyName": "_accessException",
      "property": "TypeError: The MutationRecord.nextSibling getter can only be used on instances of MutationRecord"
    },
    {
      "path": "window.MutationRecord.prototype.nextSibling",
      "propertyName": "_get",
      "property": "function nextSibling() {\n    [native code]\n}"
    },
    {
      "path": "window.MutationRecord.prototype.nextSibling",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.MutationRecord.prototype.attributeName",
      "propertyName": "_accessException",
      "property": "TypeError: The MutationRecord.attributeName getter can only be used on instances of MutationRecord"
    },
    {
      "path": "window.MutationRecord.prototype.attributeName",
      "propertyName": "_get",
      "property": "function attributeName() {\n    [native code]\n}"
    },
    {
      "path": "window.MutationRecord.prototype.attributeName",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.MutationRecord.prototype.attributeNamespace",
      "propertyName": "_accessException",
      "property": "TypeError: The MutationRecord.attributeNamespace getter can only be used on instances of MutationRecord"
    },
    {
      "path": "window.MutationRecord.prototype.attributeNamespace",
      "propertyName": "_get",
      "property": "function attributeNamespace() {\n    [native code]\n}"
    },
    {
      "path": "window.MutationRecord.prototype.attributeNamespace",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.MutationRecord.prototype.oldValue",
      "propertyName": "_accessException",
      "property": "TypeError: The MutationRecord.oldValue getter can only be used on instances of MutationRecord"
    },
    {
      "path": "window.MutationRecord.prototype.oldValue",
      "propertyName": "_get",
      "property": "function oldValue() {\n    [native code]\n}"
    },
    {
      "path": "window.MutationRecord.prototype.oldValue",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.MutationRecord",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.MutationRecord",
      "propertyName": "_function",
      "property": "function MutationRecord() {\n    [native code]\n}"
    },
    {
      "path": "window.NamedNodeMap.prototype.length",
      "propertyName": "_accessException",
      "property": "TypeError: The NamedNodeMap.length getter can only be used on instances of NamedNodeMap"
    },
    {
      "path": "window.NamedNodeMap.prototype.length",
      "propertyName": "_get",
      "property": "function length() {\n    [native code]\n}"
    },
    {
      "path": "window.NamedNodeMap.prototype.length",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.NamedNodeMap.prototype.item",
      "propertyName": "_function",
      "property": "function item() {\n    [native code]\n}"
    },
    {
      "path": "window.NamedNodeMap.prototype.getNamedItem",
      "propertyName": "_function",
      "property": "function getNamedItem() {\n    [native code]\n}"
    },
    {
      "path": "window.NamedNodeMap.prototype.getNamedItemNS",
      "propertyName": "_function",
      "property": "function getNamedItemNS() {\n    [native code]\n}"
    },
    {
      "path": "window.NamedNodeMap.prototype.setNamedItem",
      "propertyName": "_function",
      "property": "function setNamedItem() {\n    [native code]\n}"
    },
    {
      "path": "window.NamedNodeMap.prototype.setNamedItemNS",
      "propertyName": "_function",
      "property": "function setNamedItemNS() {\n    [native code]\n}"
    },
    {
      "path": "window.NamedNodeMap.prototype.removeNamedItem",
      "propertyName": "_function",
      "property": "function removeNamedItem() {\n    [native code]\n}"
    },
    {
      "path": "window.NamedNodeMap.prototype.removeNamedItemNS",
      "propertyName": "_function",
      "property": "function removeNamedItemNS() {\n    [native code]\n}"
    },
    {
      "path": "window.NamedNodeMap.prototype",
      "propertyName": "Symbol.iterator",
      "property": "REF: window.DOMStringList.prototype.Symbol(Symbol.iterator)"
    },
    {
      "path": "window.NamedNodeMap",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.NamedNodeMap",
      "propertyName": "_function",
      "property": "function NamedNodeMap() {\n    [native code]\n}"
    },
    {
      "path": "window.Node.prototype.nodeType",
      "propertyName": "_accessException",
      "property": "TypeError: The Node.nodeType getter can only be used on instances of Node"
    },
    {
      "path": "window.Node.prototype.nodeType",
      "propertyName": "_get",
      "property": "function nodeType() {\n    [native code]\n}"
    },
    {
      "path": "window.Node.prototype.nodeType",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Node.prototype.nodeName",
      "propertyName": "_accessException",
      "property": "TypeError: The Node.nodeName getter can only be used on instances of Node"
    },
    {
      "path": "window.Node.prototype.nodeName",
      "propertyName": "_get",
      "property": "function nodeName() {\n    [native code]\n}"
    },
    {
      "path": "window.Node.prototype.nodeName",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Node.prototype.baseURI",
      "propertyName": "_accessException",
      "property": "TypeError: The Node.baseURI getter can only be used on instances of Node"
    },
    {
      "path": "window.Node.prototype.baseURI",
      "propertyName": "_get",
      "property": "function baseURI() {\n    [native code]\n}"
    },
    {
      "path": "window.Node.prototype.baseURI",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Node.prototype.isConnected",
      "propertyName": "_accessException",
      "property": "TypeError: The Node.isConnected getter can only be used on instances of Node"
    },
    {
      "path": "window.Node.prototype.isConnected",
      "propertyName": "_get",
      "property": "function isConnected() {\n    [native code]\n}"
    },
    {
      "path": "window.Node.prototype.isConnected",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Node.prototype.ownerDocument",
      "propertyName": "_accessException",
      "property": "TypeError: The Node.ownerDocument getter can only be used on instances of Node"
    },
    {
      "path": "window.Node.prototype.ownerDocument",
      "propertyName": "_get",
      "property": "function ownerDocument() {\n    [native code]\n}"
    },
    {
      "path": "window.Node.prototype.ownerDocument",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Node.prototype.parentNode",
      "propertyName": "_accessException",
      "property": "TypeError: The Node.parentNode getter can only be used on instances of Node"
    },
    {
      "path": "window.Node.prototype.parentNode",
      "propertyName": "_get",
      "property": "function parentNode() {\n    [native code]\n}"
    },
    {
      "path": "window.Node.prototype.parentNode",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Node.prototype.parentElement",
      "propertyName": "_accessException",
      "property": "TypeError: The Node.parentElement getter can only be used on instances of Node"
    },
    {
      "path": "window.Node.prototype.parentElement",
      "propertyName": "_get",
      "property": "function parentElement() {\n    [native code]\n}"
    },
    {
      "path": "window.Node.prototype.parentElement",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Node.prototype.childNodes",
      "propertyName": "_accessException",
      "property": "TypeError: The Node.childNodes getter can only be used on instances of Node"
    },
    {
      "path": "window.Node.prototype.childNodes",
      "propertyName": "_get",
      "property": "function childNodes() {\n    [native code]\n}"
    },
    {
      "path": "window.Node.prototype.childNodes",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Node.prototype.firstChild",
      "propertyName": "_accessException",
      "property": "TypeError: The Node.firstChild getter can only be used on instances of Node"
    },
    {
      "path": "window.Node.prototype.firstChild",
      "propertyName": "_get",
      "property": "function firstChild() {\n    [native code]\n}"
    },
    {
      "path": "window.Node.prototype.firstChild",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Node.prototype.lastChild",
      "propertyName": "_accessException",
      "property": "TypeError: The Node.lastChild getter can only be used on instances of Node"
    },
    {
      "path": "window.Node.prototype.lastChild",
      "propertyName": "_get",
      "property": "function lastChild() {\n    [native code]\n}"
    },
    {
      "path": "window.Node.prototype.lastChild",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Node.prototype.previousSibling",
      "propertyName": "_accessException",
      "property": "TypeError: The Node.previousSibling getter can only be used on instances of Node"
    },
    {
      "path": "window.Node.prototype.previousSibling",
      "propertyName": "_get",
      "property": "function previousSibling() {\n    [native code]\n}"
    },
    {
      "path": "window.Node.prototype.previousSibling",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Node.prototype.nextSibling",
      "propertyName": "_accessException",
      "property": "TypeError: The Node.nextSibling getter can only be used on instances of Node"
    },
    {
      "path": "window.Node.prototype.nextSibling",
      "propertyName": "_get",
      "property": "function nextSibling() {\n    [native code]\n}"
    },
    {
      "path": "window.Node.prototype.nextSibling",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Node.prototype.nodeValue",
      "propertyName": "_accessException",
      "property": "TypeError: The Node.nodeValue getter can only be used on instances of Node"
    },
    {
      "path": "window.Node.prototype.nodeValue",
      "propertyName": "_get",
      "property": "function nodeValue() {\n    [native code]\n}"
    },
    {
      "path": "window.Node.prototype.nodeValue",
      "propertyName": "_set",
      "property": "function nodeValue() {\n    [native code]\n}"
    },
    {
      "path": "window.Node.prototype.nodeValue",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Node.prototype.nodeValue",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Node.prototype.textContent",
      "propertyName": "_accessException",
      "property": "TypeError: The Node.textContent getter can only be used on instances of Node"
    },
    {
      "path": "window.Node.prototype.textContent",
      "propertyName": "_get",
      "property": "function textContent() {\n    [native code]\n}"
    },
    {
      "path": "window.Node.prototype.textContent",
      "propertyName": "_set",
      "property": "function textContent() {\n    [native code]\n}"
    },
    {
      "path": "window.Node.prototype.textContent",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Node.prototype.textContent",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Node.prototype.getRootNode",
      "propertyName": "_function",
      "property": "function getRootNode() {\n    [native code]\n}"
    },
    {
      "path": "window.Node.prototype.hasChildNodes",
      "propertyName": "_function",
      "property": "function hasChildNodes() {\n    [native code]\n}"
    },
    {
      "path": "window.Node.prototype.normalize",
      "propertyName": "_function",
      "property": "function normalize() {\n    [native code]\n}"
    },
    {
      "path": "window.Node.prototype.cloneNode",
      "propertyName": "_function",
      "property": "function cloneNode() {\n    [native code]\n}"
    },
    {
      "path": "window.Node.prototype.isEqualNode",
      "propertyName": "_function",
      "property": "function isEqualNode() {\n    [native code]\n}"
    },
    {
      "path": "window.Node.prototype.isSameNode",
      "propertyName": "_function",
      "property": "function isSameNode() {\n    [native code]\n}"
    },
    {
      "path": "window.Node.prototype.compareDocumentPosition",
      "propertyName": "_function",
      "property": "function compareDocumentPosition() {\n    [native code]\n}"
    },
    {
      "path": "window.Node.prototype.contains",
      "propertyName": "_function",
      "property": "function contains() {\n    [native code]\n}"
    },
    {
      "path": "window.Node.prototype.lookupPrefix",
      "propertyName": "_function",
      "property": "function lookupPrefix() {\n    [native code]\n}"
    },
    {
      "path": "window.Node.prototype.lookupNamespaceURI",
      "propertyName": "_function",
      "property": "function lookupNamespaceURI() {\n    [native code]\n}"
    },
    {
      "path": "window.Node.prototype.isDefaultNamespace",
      "propertyName": "_function",
      "property": "function isDefaultNamespace() {\n    [native code]\n}"
    },
    {
      "path": "window.Node.prototype.insertBefore",
      "propertyName": "_function",
      "property": "function insertBefore() {\n    [native code]\n}"
    },
    {
      "path": "window.Node.prototype.appendChild",
      "propertyName": "_function",
      "property": "function appendChild() {\n    [native code]\n}"
    },
    {
      "path": "window.Node.prototype.replaceChild",
      "propertyName": "_function",
      "property": "function replaceChild() {\n    [native code]\n}"
    },
    {
      "path": "window.Node.prototype.removeChild",
      "propertyName": "_function",
      "property": "function removeChild() {\n    [native code]\n}"
    },
    {
      "path": "window.Node",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.Node",
      "propertyName": "_function",
      "property": "function Node() {\n    [native code]\n}"
    },
    {
      "path": "window.NodeFilter",
      "propertyName": "_function",
      "property": "function NodeFilter() {\n    [native code]\n}"
    },
    {
      "path": "window.NodeIterator.prototype.root",
      "propertyName": "_accessException",
      "property": "TypeError: The NodeIterator.root getter can only be used on instances of NodeIterator"
    },
    {
      "path": "window.NodeIterator.prototype.root",
      "propertyName": "_get",
      "property": "function root() {\n    [native code]\n}"
    },
    {
      "path": "window.NodeIterator.prototype.root",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.NodeIterator.prototype.referenceNode",
      "propertyName": "_accessException",
      "property": "TypeError: The NodeIterator.referenceNode getter can only be used on instances of NodeIterator"
    },
    {
      "path": "window.NodeIterator.prototype.referenceNode",
      "propertyName": "_get",
      "property": "function referenceNode() {\n    [native code]\n}"
    },
    {
      "path": "window.NodeIterator.prototype.referenceNode",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.NodeIterator.prototype.pointerBeforeReferenceNode",
      "propertyName": "_accessException",
      "property": "TypeError: The NodeIterator.pointerBeforeReferenceNode getter can only be used on instances of NodeIterator"
    },
    {
      "path": "window.NodeIterator.prototype.pointerBeforeReferenceNode",
      "propertyName": "_get",
      "property": "function pointerBeforeReferenceNode() {\n    [native code]\n}"
    },
    {
      "path": "window.NodeIterator.prototype.pointerBeforeReferenceNode",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.NodeIterator.prototype.whatToShow",
      "propertyName": "_accessException",
      "property": "TypeError: The NodeIterator.whatToShow getter can only be used on instances of NodeIterator"
    },
    {
      "path": "window.NodeIterator.prototype.whatToShow",
      "propertyName": "_get",
      "property": "function whatToShow() {\n    [native code]\n}"
    },
    {
      "path": "window.NodeIterator.prototype.whatToShow",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.NodeIterator.prototype.filter",
      "propertyName": "_accessException",
      "property": "TypeError: The NodeIterator.filter getter can only be used on instances of NodeIterator"
    },
    {
      "path": "window.NodeIterator.prototype.filter",
      "propertyName": "_get",
      "property": "function filter() {\n    [native code]\n}"
    },
    {
      "path": "window.NodeIterator.prototype.filter",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.NodeIterator.prototype.nextNode",
      "propertyName": "_function",
      "property": "function nextNode() {\n    [native code]\n}"
    },
    {
      "path": "window.NodeIterator.prototype.previousNode",
      "propertyName": "_function",
      "property": "function previousNode() {\n    [native code]\n}"
    },
    {
      "path": "window.NodeIterator.prototype.detach",
      "propertyName": "_function",
      "property": "function detach() {\n    [native code]\n}"
    },
    {
      "path": "window.NodeIterator",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.NodeIterator",
      "propertyName": "_function",
      "property": "function NodeIterator() {\n    [native code]\n}"
    },
    {
      "path": "window.NodeList.prototype.length",
      "propertyName": "_accessException",
      "property": "TypeError: The NodeList.length getter can only be used on instances of NodeList"
    },
    {
      "path": "window.NodeList.prototype.length",
      "propertyName": "_get",
      "property": "function length() {\n    [native code]\n}"
    },
    {
      "path": "window.NodeList.prototype.length",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.NodeList.prototype.item",
      "propertyName": "_function",
      "property": "function item() {\n    [native code]\n}"
    },
    {
      "path": "window.NodeList.prototype",
      "propertyName": "entries",
      "property": "REF: window.DOMTokenList.prototype.entries"
    },
    {
      "path": "window.NodeList.prototype",
      "propertyName": "forEach",
      "property": "REF: window.DOMTokenList.prototype.forEach"
    },
    {
      "path": "window.NodeList.prototype",
      "propertyName": "keys",
      "property": "REF: window.DOMTokenList.prototype.keys"
    },
    {
      "path": "window.NodeList.prototype",
      "propertyName": "values",
      "property": "REF: window.DOMStringList.prototype.Symbol(Symbol.iterator)"
    },
    {
      "path": "window.NodeList.prototype",
      "propertyName": "Symbol.iterator",
      "property": "REF: window.DOMStringList.prototype.Symbol(Symbol.iterator)"
    },
    {
      "path": "window.NodeList",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.NodeList",
      "propertyName": "_function",
      "property": "function NodeList() {\n    [native code]\n}"
    },
    {
      "path": "window.PageTransitionEvent.prototype.persisted",
      "propertyName": "_accessException",
      "property": "TypeError: The PageTransitionEvent.persisted getter can only be used on instances of PageTransitionEvent"
    },
    {
      "path": "window.PageTransitionEvent.prototype.persisted",
      "propertyName": "_get",
      "property": "function persisted() {\n    [native code]\n}"
    },
    {
      "path": "window.PageTransitionEvent.prototype.persisted",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.PageTransitionEvent",
      "propertyName": "new()",
      "property": "TypeError: Not enough arguments"
    },
    {
      "path": "window.PageTransitionEvent",
      "propertyName": "_function",
      "property": "function PageTransitionEvent() {\n    [native code]\n}"
    },
    {
      "path": "window.PopStateEvent.prototype.state",
      "propertyName": "_accessException",
      "property": "TypeError: The PopStateEvent.state getter can only be used on instances of PopStateEvent"
    },
    {
      "path": "window.PopStateEvent.prototype.state",
      "propertyName": "_get",
      "property": "function state() {\n    [native code]\n}"
    },
    {
      "path": "window.PopStateEvent.prototype.state",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.PopStateEvent",
      "propertyName": "new()",
      "property": "TypeError: Not enough arguments"
    },
    {
      "path": "window.PopStateEvent",
      "propertyName": "_function",
      "property": "function PopStateEvent() {\n    [native code]\n}"
    },
    {
      "path": "window.ProcessingInstruction.prototype.target",
      "propertyName": "_accessException",
      "property": "TypeError: The ProcessingInstruction.target getter can only be used on instances of ProcessingInstruction"
    },
    {
      "path": "window.ProcessingInstruction.prototype.target",
      "propertyName": "_get",
      "property": "function target() {\n    [native code]\n}"
    },
    {
      "path": "window.ProcessingInstruction.prototype.target",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.ProcessingInstruction.prototype.sheet",
      "propertyName": "_accessException",
      "property": "TypeError: The ProcessingInstruction.sheet getter can only be used on instances of ProcessingInstruction"
    },
    {
      "path": "window.ProcessingInstruction.prototype.sheet",
      "propertyName": "_get",
      "property": "function sheet() {\n    [native code]\n}"
    },
    {
      "path": "window.ProcessingInstruction.prototype.sheet",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.ProcessingInstruction",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.ProcessingInstruction",
      "propertyName": "_function",
      "property": "function ProcessingInstruction() {\n    [native code]\n}"
    },
    {
      "path": "window.ProgressEvent.prototype.lengthComputable",
      "propertyName": "_accessException",
      "property": "TypeError: The ProgressEvent.lengthComputable getter can only be used on instances of ProgressEvent"
    },
    {
      "path": "window.ProgressEvent.prototype.lengthComputable",
      "propertyName": "_get",
      "property": "function lengthComputable() {\n    [native code]\n}"
    },
    {
      "path": "window.ProgressEvent.prototype.lengthComputable",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.ProgressEvent.prototype.loaded",
      "propertyName": "_accessException",
      "property": "TypeError: The ProgressEvent.loaded getter can only be used on instances of ProgressEvent"
    },
    {
      "path": "window.ProgressEvent.prototype.loaded",
      "propertyName": "_get",
      "property": "function loaded() {\n    [native code]\n}"
    },
    {
      "path": "window.ProgressEvent.prototype.loaded",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.ProgressEvent.prototype.total",
      "propertyName": "_accessException",
      "property": "TypeError: The ProgressEvent.total getter can only be used on instances of ProgressEvent"
    },
    {
      "path": "window.ProgressEvent.prototype.total",
      "propertyName": "_get",
      "property": "function total() {\n    [native code]\n}"
    },
    {
      "path": "window.ProgressEvent.prototype.total",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.ProgressEvent",
      "propertyName": "new()",
      "property": "TypeError: Not enough arguments"
    },
    {
      "path": "window.ProgressEvent",
      "propertyName": "_function",
      "property": "function ProgressEvent() {\n    [native code]\n}"
    },
    {
      "path": "window.PromiseRejectionEvent.prototype.promise",
      "propertyName": "_accessException",
      "property": "TypeError: The PromiseRejectionEvent.promise getter can only be used on instances of PromiseRejectionEvent"
    },
    {
      "path": "window.PromiseRejectionEvent.prototype.promise",
      "propertyName": "_get",
      "property": "function promise() {\n    [native code]\n}"
    },
    {
      "path": "window.PromiseRejectionEvent.prototype.promise",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.PromiseRejectionEvent.prototype.reason",
      "propertyName": "_accessException",
      "property": "TypeError: The PromiseRejectionEvent.reason getter can only be used on instances of PromiseRejectionEvent"
    },
    {
      "path": "window.PromiseRejectionEvent.prototype.reason",
      "propertyName": "_get",
      "property": "function reason() {\n    [native code]\n}"
    },
    {
      "path": "window.PromiseRejectionEvent.prototype.reason",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.PromiseRejectionEvent",
      "propertyName": "new()",
      "property": "TypeError: Not enough arguments"
    },
    {
      "path": "window.PromiseRejectionEvent",
      "propertyName": "_function",
      "property": "function PromiseRejectionEvent() {\n    [native code]\n}"
    },
    {
      "path": "window.Range.prototype.startContainer",
      "propertyName": "_accessException",
      "property": "TypeError: The Range.startContainer getter can only be used on instances of Range"
    },
    {
      "path": "window.Range.prototype.startContainer",
      "propertyName": "_get",
      "property": "function startContainer() {\n    [native code]\n}"
    },
    {
      "path": "window.Range.prototype.startContainer",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Range.prototype.startOffset",
      "propertyName": "_accessException",
      "property": "TypeError: The Range.startOffset getter can only be used on instances of Range"
    },
    {
      "path": "window.Range.prototype.startOffset",
      "propertyName": "_get",
      "property": "function startOffset() {\n    [native code]\n}"
    },
    {
      "path": "window.Range.prototype.startOffset",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Range.prototype.endContainer",
      "propertyName": "_accessException",
      "property": "TypeError: The Range.endContainer getter can only be used on instances of Range"
    },
    {
      "path": "window.Range.prototype.endContainer",
      "propertyName": "_get",
      "property": "function endContainer() {\n    [native code]\n}"
    },
    {
      "path": "window.Range.prototype.endContainer",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Range.prototype.endOffset",
      "propertyName": "_accessException",
      "property": "TypeError: The Range.endOffset getter can only be used on instances of Range"
    },
    {
      "path": "window.Range.prototype.endOffset",
      "propertyName": "_get",
      "property": "function endOffset() {\n    [native code]\n}"
    },
    {
      "path": "window.Range.prototype.endOffset",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Range.prototype.collapsed",
      "propertyName": "_accessException",
      "property": "TypeError: The Range.collapsed getter can only be used on instances of Range"
    },
    {
      "path": "window.Range.prototype.collapsed",
      "propertyName": "_get",
      "property": "function collapsed() {\n    [native code]\n}"
    },
    {
      "path": "window.Range.prototype.collapsed",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Range.prototype.commonAncestorContainer",
      "propertyName": "_accessException",
      "property": "TypeError: The Range.commonAncestorContainer getter can only be used on instances of Range"
    },
    {
      "path": "window.Range.prototype.commonAncestorContainer",
      "propertyName": "_get",
      "property": "function commonAncestorContainer() {\n    [native code]\n}"
    },
    {
      "path": "window.Range.prototype.commonAncestorContainer",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Range.prototype.setStart",
      "propertyName": "_function",
      "property": "function setStart() {\n    [native code]\n}"
    },
    {
      "path": "window.Range.prototype.setEnd",
      "propertyName": "_function",
      "property": "function setEnd() {\n    [native code]\n}"
    },
    {
      "path": "window.Range.prototype.setStartBefore",
      "propertyName": "_function",
      "property": "function setStartBefore() {\n    [native code]\n}"
    },
    {
      "path": "window.Range.prototype.setStartAfter",
      "propertyName": "_function",
      "property": "function setStartAfter() {\n    [native code]\n}"
    },
    {
      "path": "window.Range.prototype.setEndBefore",
      "propertyName": "_function",
      "property": "function setEndBefore() {\n    [native code]\n}"
    },
    {
      "path": "window.Range.prototype.setEndAfter",
      "propertyName": "_function",
      "property": "function setEndAfter() {\n    [native code]\n}"
    },
    {
      "path": "window.Range.prototype.collapse",
      "propertyName": "_function",
      "property": "function collapse() {\n    [native code]\n}"
    },
    {
      "path": "window.Range.prototype.selectNode",
      "propertyName": "_function",
      "property": "function selectNode() {\n    [native code]\n}"
    },
    {
      "path": "window.Range.prototype.selectNodeContents",
      "propertyName": "_function",
      "property": "function selectNodeContents() {\n    [native code]\n}"
    },
    {
      "path": "window.Range.prototype.compareBoundaryPoints",
      "propertyName": "_function",
      "property": "function compareBoundaryPoints() {\n    [native code]\n}"
    },
    {
      "path": "window.Range.prototype.deleteContents",
      "propertyName": "_function",
      "property": "function deleteContents() {\n    [native code]\n}"
    },
    {
      "path": "window.Range.prototype.extractContents",
      "propertyName": "_function",
      "property": "function extractContents() {\n    [native code]\n}"
    },
    {
      "path": "window.Range.prototype.cloneContents",
      "propertyName": "_function",
      "property": "function cloneContents() {\n    [native code]\n}"
    },
    {
      "path": "window.Range.prototype.insertNode",
      "propertyName": "_function",
      "property": "function insertNode() {\n    [native code]\n}"
    },
    {
      "path": "window.Range.prototype.surroundContents",
      "propertyName": "_function",
      "property": "function surroundContents() {\n    [native code]\n}"
    },
    {
      "path": "window.Range.prototype.cloneRange",
      "propertyName": "_function",
      "property": "function cloneRange() {\n    [native code]\n}"
    },
    {
      "path": "window.Range.prototype.detach",
      "propertyName": "_function",
      "property": "function detach() {\n    [native code]\n}"
    },
    {
      "path": "window.Range.prototype.isPointInRange",
      "propertyName": "_function",
      "property": "function isPointInRange() {\n    [native code]\n}"
    },
    {
      "path": "window.Range.prototype.comparePoint",
      "propertyName": "_function",
      "property": "function comparePoint() {\n    [native code]\n}"
    },
    {
      "path": "window.Range.prototype.intersectsNode",
      "propertyName": "_function",
      "property": "function intersectsNode() {\n    [native code]\n}"
    },
    {
      "path": "window.Range.prototype.getClientRects",
      "propertyName": "_function",
      "property": "function getClientRects() {\n    [native code]\n}"
    },
    {
      "path": "window.Range.prototype.getBoundingClientRect",
      "propertyName": "_function",
      "property": "function getBoundingClientRect() {\n    [native code]\n}"
    },
    {
      "path": "window.Range.prototype.createContextualFragment",
      "propertyName": "_function",
      "property": "function createContextualFragment() {\n    [native code]\n}"
    },
    {
      "path": "window.Range.prototype.expand",
      "propertyName": "_function",
      "property": "function expand() {\n    [native code]\n}"
    },
    {
      "path": "window.Range.prototype.toString",
      "propertyName": "_function",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Range",
      "propertyName": "_function",
      "property": "function Range() {\n    [native code]\n}"
    },
    {
      "path": "window.SecurityPolicyViolationEvent.prototype.documentURI",
      "propertyName": "_accessException",
      "property": "TypeError: The SecurityPolicyViolationEvent.documentURI getter can only be used on instances of SecurityPolicyViolationEvent"
    },
    {
      "path": "window.SecurityPolicyViolationEvent.prototype.documentURI",
      "propertyName": "_get",
      "property": "function documentURI() {\n    [native code]\n}"
    },
    {
      "path": "window.SecurityPolicyViolationEvent.prototype.documentURI",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SecurityPolicyViolationEvent.prototype.referrer",
      "propertyName": "_accessException",
      "property": "TypeError: The SecurityPolicyViolationEvent.referrer getter can only be used on instances of SecurityPolicyViolationEvent"
    },
    {
      "path": "window.SecurityPolicyViolationEvent.prototype.referrer",
      "propertyName": "_get",
      "property": "function referrer() {\n    [native code]\n}"
    },
    {
      "path": "window.SecurityPolicyViolationEvent.prototype.referrer",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SecurityPolicyViolationEvent.prototype.blockedURI",
      "propertyName": "_accessException",
      "property": "TypeError: The SecurityPolicyViolationEvent.blockedURI getter can only be used on instances of SecurityPolicyViolationEvent"
    },
    {
      "path": "window.SecurityPolicyViolationEvent.prototype.blockedURI",
      "propertyName": "_get",
      "property": "function blockedURI() {\n    [native code]\n}"
    },
    {
      "path": "window.SecurityPolicyViolationEvent.prototype.blockedURI",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SecurityPolicyViolationEvent.prototype.violatedDirective",
      "propertyName": "_accessException",
      "property": "TypeError: The SecurityPolicyViolationEvent.violatedDirective getter can only be used on instances of SecurityPolicyViolationEvent"
    },
    {
      "path": "window.SecurityPolicyViolationEvent.prototype.violatedDirective",
      "propertyName": "_get",
      "property": "function violatedDirective() {\n    [native code]\n}"
    },
    {
      "path": "window.SecurityPolicyViolationEvent.prototype.violatedDirective",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SecurityPolicyViolationEvent.prototype.effectiveDirective",
      "propertyName": "_accessException",
      "property": "TypeError: The SecurityPolicyViolationEvent.effectiveDirective getter can only be used on instances of SecurityPolicyViolationEvent"
    },
    {
      "path": "window.SecurityPolicyViolationEvent.prototype.effectiveDirective",
      "propertyName": "_get",
      "property": "function effectiveDirective() {\n    [native code]\n}"
    },
    {
      "path": "window.SecurityPolicyViolationEvent.prototype.effectiveDirective",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SecurityPolicyViolationEvent.prototype.originalPolicy",
      "propertyName": "_accessException",
      "property": "TypeError: The SecurityPolicyViolationEvent.originalPolicy getter can only be used on instances of SecurityPolicyViolationEvent"
    },
    {
      "path": "window.SecurityPolicyViolationEvent.prototype.originalPolicy",
      "propertyName": "_get",
      "property": "function originalPolicy() {\n    [native code]\n}"
    },
    {
      "path": "window.SecurityPolicyViolationEvent.prototype.originalPolicy",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SecurityPolicyViolationEvent.prototype.sourceFile",
      "propertyName": "_accessException",
      "property": "TypeError: The SecurityPolicyViolationEvent.sourceFile getter can only be used on instances of SecurityPolicyViolationEvent"
    },
    {
      "path": "window.SecurityPolicyViolationEvent.prototype.sourceFile",
      "propertyName": "_get",
      "property": "function sourceFile() {\n    [native code]\n}"
    },
    {
      "path": "window.SecurityPolicyViolationEvent.prototype.sourceFile",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SecurityPolicyViolationEvent.prototype.statusCode",
      "propertyName": "_accessException",
      "property": "TypeError: The SecurityPolicyViolationEvent.statusCode getter can only be used on instances of SecurityPolicyViolationEvent"
    },
    {
      "path": "window.SecurityPolicyViolationEvent.prototype.statusCode",
      "propertyName": "_get",
      "property": "function statusCode() {\n    [native code]\n}"
    },
    {
      "path": "window.SecurityPolicyViolationEvent.prototype.statusCode",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SecurityPolicyViolationEvent.prototype.lineNumber",
      "propertyName": "_accessException",
      "property": "TypeError: The SecurityPolicyViolationEvent.lineNumber getter can only be used on instances of SecurityPolicyViolationEvent"
    },
    {
      "path": "window.SecurityPolicyViolationEvent.prototype.lineNumber",
      "propertyName": "_get",
      "property": "function lineNumber() {\n    [native code]\n}"
    },
    {
      "path": "window.SecurityPolicyViolationEvent.prototype.lineNumber",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SecurityPolicyViolationEvent.prototype.columnNumber",
      "propertyName": "_accessException",
      "property": "TypeError: The SecurityPolicyViolationEvent.columnNumber getter can only be used on instances of SecurityPolicyViolationEvent"
    },
    {
      "path": "window.SecurityPolicyViolationEvent.prototype.columnNumber",
      "propertyName": "_get",
      "property": "function columnNumber() {\n    [native code]\n}"
    },
    {
      "path": "window.SecurityPolicyViolationEvent.prototype.columnNumber",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SecurityPolicyViolationEvent",
      "propertyName": "new()",
      "property": "TypeError: Not enough arguments"
    },
    {
      "path": "window.SecurityPolicyViolationEvent",
      "propertyName": "_function",
      "property": "function SecurityPolicyViolationEvent() {\n    [native code]\n}"
    },
    {
      "path": "window.Text.prototype.wholeText",
      "propertyName": "_accessException",
      "property": "TypeError: The Text.wholeText getter can only be used on instances of Text"
    },
    {
      "path": "window.Text.prototype.wholeText",
      "propertyName": "_get",
      "property": "function wholeText() {\n    [native code]\n}"
    },
    {
      "path": "window.Text.prototype.wholeText",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Text.prototype.assignedSlot",
      "propertyName": "_accessException",
      "property": "TypeError: The Text.assignedSlot getter can only be used on instances of Text"
    },
    {
      "path": "window.Text.prototype.assignedSlot",
      "propertyName": "_get",
      "property": "function assignedSlot() {\n    [native code]\n}"
    },
    {
      "path": "window.Text.prototype.assignedSlot",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Text.prototype.splitText",
      "propertyName": "_function",
      "property": "function splitText() {\n    [native code]\n}"
    },
    {
      "path": "window.Text",
      "propertyName": "_function",
      "property": "function Text() {\n    [native code]\n}"
    },
    {
      "path": "window.TextDecoder.prototype.encoding",
      "propertyName": "_accessException",
      "property": "TypeError: The TextDecoder.encoding getter can only be used on instances of TextDecoder"
    },
    {
      "path": "window.TextDecoder.prototype.encoding",
      "propertyName": "_get",
      "property": "function encoding() {\n    [native code]\n}"
    },
    {
      "path": "window.TextDecoder.prototype.encoding",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.TextDecoder.prototype.fatal",
      "propertyName": "_accessException",
      "property": "TypeError: The TextDecoder.fatal getter can only be used on instances of TextDecoder"
    },
    {
      "path": "window.TextDecoder.prototype.fatal",
      "propertyName": "_get",
      "property": "function fatal() {\n    [native code]\n}"
    },
    {
      "path": "window.TextDecoder.prototype.fatal",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.TextDecoder.prototype.ignoreBOM",
      "propertyName": "_accessException",
      "property": "TypeError: The TextDecoder.ignoreBOM getter can only be used on instances of TextDecoder"
    },
    {
      "path": "window.TextDecoder.prototype.ignoreBOM",
      "propertyName": "_get",
      "property": "function ignoreBOM() {\n    [native code]\n}"
    },
    {
      "path": "window.TextDecoder.prototype.ignoreBOM",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.TextDecoder.prototype.decode",
      "propertyName": "_function",
      "property": "function decode() {\n    [native code]\n}"
    },
    {
      "path": "window.TextDecoder",
      "propertyName": "_function",
      "property": "function TextDecoder() {\n    [native code]\n}"
    },
    {
      "path": "window.TextEncoder.prototype.encoding",
      "propertyName": "_accessException",
      "property": "TypeError: The TextEncoder.encoding getter can only be used on instances of TextEncoder"
    },
    {
      "path": "window.TextEncoder.prototype.encoding",
      "propertyName": "_get",
      "property": "function encoding() {\n    [native code]\n}"
    },
    {
      "path": "window.TextEncoder.prototype.encoding",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.TextEncoder.prototype.encode",
      "propertyName": "_function",
      "property": "function encode() {\n    [native code]\n}"
    },
    {
      "path": "window.TextEncoder",
      "propertyName": "_function",
      "property": "function TextEncoder() {\n    [native code]\n}"
    },
    {
      "path": "window.TextEvent.prototype.data",
      "propertyName": "_accessException",
      "property": "TypeError: The TextEvent.data getter can only be used on instances of TextEvent"
    },
    {
      "path": "window.TextEvent.prototype.data",
      "propertyName": "_get",
      "property": "function data() {\n    [native code]\n}"
    },
    {
      "path": "window.TextEvent.prototype.data",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.TextEvent.prototype.initTextEvent",
      "propertyName": "_function",
      "property": "function initTextEvent() {\n    [native code]\n}"
    },
    {
      "path": "window.TextEvent",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.TextEvent",
      "propertyName": "_function",
      "property": "function TextEvent() {\n    [native code]\n}"
    },
    {
      "path": "window.TransitionEvent.prototype.propertyName",
      "propertyName": "_accessException",
      "property": "TypeError: The TransitionEvent.propertyName getter can only be used on instances of TransitionEvent"
    },
    {
      "path": "window.TransitionEvent.prototype.propertyName",
      "propertyName": "_get",
      "property": "function propertyName() {\n    [native code]\n}"
    },
    {
      "path": "window.TransitionEvent.prototype.propertyName",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.TransitionEvent.prototype.elapsedTime",
      "propertyName": "_accessException",
      "property": "TypeError: The TransitionEvent.elapsedTime getter can only be used on instances of TransitionEvent"
    },
    {
      "path": "window.TransitionEvent.prototype.elapsedTime",
      "propertyName": "_get",
      "property": "function elapsedTime() {\n    [native code]\n}"
    },
    {
      "path": "window.TransitionEvent.prototype.elapsedTime",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.TransitionEvent.prototype.pseudoElement",
      "propertyName": "_accessException",
      "property": "TypeError: The TransitionEvent.pseudoElement getter can only be used on instances of TransitionEvent"
    },
    {
      "path": "window.TransitionEvent.prototype.pseudoElement",
      "propertyName": "_get",
      "property": "function pseudoElement() {\n    [native code]\n}"
    },
    {
      "path": "window.TransitionEvent.prototype.pseudoElement",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.TransitionEvent",
      "propertyName": "new()",
      "property": "TypeError: Not enough arguments"
    },
    {
      "path": "window.TransitionEvent",
      "propertyName": "_function",
      "property": "function TransitionEvent() {\n    [native code]\n}"
    },
    {
      "path": "window.TreeWalker.prototype.root",
      "propertyName": "_accessException",
      "property": "TypeError: The TreeWalker.root getter can only be used on instances of TreeWalker"
    },
    {
      "path": "window.TreeWalker.prototype.root",
      "propertyName": "_get",
      "property": "function root() {\n    [native code]\n}"
    },
    {
      "path": "window.TreeWalker.prototype.root",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.TreeWalker.prototype.whatToShow",
      "propertyName": "_accessException",
      "property": "TypeError: The TreeWalker.whatToShow getter can only be used on instances of TreeWalker"
    },
    {
      "path": "window.TreeWalker.prototype.whatToShow",
      "propertyName": "_get",
      "property": "function whatToShow() {\n    [native code]\n}"
    },
    {
      "path": "window.TreeWalker.prototype.whatToShow",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.TreeWalker.prototype.filter",
      "propertyName": "_accessException",
      "property": "TypeError: The TreeWalker.filter getter can only be used on instances of TreeWalker"
    },
    {
      "path": "window.TreeWalker.prototype.filter",
      "propertyName": "_get",
      "property": "function filter() {\n    [native code]\n}"
    },
    {
      "path": "window.TreeWalker.prototype.filter",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.TreeWalker.prototype.currentNode",
      "propertyName": "_accessException",
      "property": "TypeError: The TreeWalker.currentNode getter can only be used on instances of TreeWalker"
    },
    {
      "path": "window.TreeWalker.prototype.currentNode",
      "propertyName": "_get",
      "property": "function currentNode() {\n    [native code]\n}"
    },
    {
      "path": "window.TreeWalker.prototype.currentNode",
      "propertyName": "_set",
      "property": "function currentNode() {\n    [native code]\n}"
    },
    {
      "path": "window.TreeWalker.prototype.currentNode",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.TreeWalker.prototype.currentNode",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.TreeWalker.prototype.parentNode",
      "propertyName": "_function",
      "property": "function parentNode() {\n    [native code]\n}"
    },
    {
      "path": "window.TreeWalker.prototype.firstChild",
      "propertyName": "_function",
      "property": "function firstChild() {\n    [native code]\n}"
    },
    {
      "path": "window.TreeWalker.prototype.lastChild",
      "propertyName": "_function",
      "property": "function lastChild() {\n    [native code]\n}"
    },
    {
      "path": "window.TreeWalker.prototype.previousSibling",
      "propertyName": "_function",
      "property": "function previousSibling() {\n    [native code]\n}"
    },
    {
      "path": "window.TreeWalker.prototype.nextSibling",
      "propertyName": "_function",
      "property": "function nextSibling() {\n    [native code]\n}"
    },
    {
      "path": "window.TreeWalker.prototype.previousNode",
      "propertyName": "_function",
      "property": "function previousNode() {\n    [native code]\n}"
    },
    {
      "path": "window.TreeWalker.prototype.nextNode",
      "propertyName": "_function",
      "property": "function nextNode() {\n    [native code]\n}"
    },
    {
      "path": "window.TreeWalker",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.TreeWalker",
      "propertyName": "_function",
      "property": "function TreeWalker() {\n    [native code]\n}"
    },
    {
      "path": "window.UIEvent.prototype.view",
      "propertyName": "_accessException",
      "property": "TypeError: The UIEvent.view getter can only be used on instances of UIEvent"
    },
    {
      "path": "window.UIEvent.prototype.view",
      "propertyName": "_get",
      "property": "function view() {\n    [native code]\n}"
    },
    {
      "path": "window.UIEvent.prototype.view",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.UIEvent.prototype.detail",
      "propertyName": "_accessException",
      "property": "TypeError: The UIEvent.detail getter can only be used on instances of UIEvent"
    },
    {
      "path": "window.UIEvent.prototype.detail",
      "propertyName": "_get",
      "property": "function detail() {\n    [native code]\n}"
    },
    {
      "path": "window.UIEvent.prototype.detail",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.UIEvent.prototype.which",
      "propertyName": "_accessException",
      "property": "TypeError: The UIEvent.which getter can only be used on instances of UIEvent"
    },
    {
      "path": "window.UIEvent.prototype.which",
      "propertyName": "_get",
      "property": "function which() {\n    [native code]\n}"
    },
    {
      "path": "window.UIEvent.prototype.which",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.UIEvent.prototype.initUIEvent",
      "propertyName": "_function",
      "property": "function initUIEvent() {\n    [native code]\n}"
    },
    {
      "path": "window.UIEvent",
      "propertyName": "new()",
      "property": "TypeError: Not enough arguments"
    },
    {
      "path": "window.UIEvent",
      "propertyName": "_function",
      "property": "function UIEvent() {\n    [native code]\n}"
    },
    {
      "path": "window.WheelEvent.prototype.deltaX",
      "propertyName": "_accessException",
      "property": "TypeError: The WheelEvent.deltaX getter can only be used on instances of WheelEvent"
    },
    {
      "path": "window.WheelEvent.prototype.deltaX",
      "propertyName": "_get",
      "property": "function deltaX() {\n    [native code]\n}"
    },
    {
      "path": "window.WheelEvent.prototype.deltaX",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.WheelEvent.prototype.deltaY",
      "propertyName": "_accessException",
      "property": "TypeError: The WheelEvent.deltaY getter can only be used on instances of WheelEvent"
    },
    {
      "path": "window.WheelEvent.prototype.deltaY",
      "propertyName": "_get",
      "property": "function deltaY() {\n    [native code]\n}"
    },
    {
      "path": "window.WheelEvent.prototype.deltaY",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.WheelEvent.prototype.deltaZ",
      "propertyName": "_accessException",
      "property": "TypeError: The WheelEvent.deltaZ getter can only be used on instances of WheelEvent"
    },
    {
      "path": "window.WheelEvent.prototype.deltaZ",
      "propertyName": "_get",
      "property": "function deltaZ() {\n    [native code]\n}"
    },
    {
      "path": "window.WheelEvent.prototype.deltaZ",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.WheelEvent.prototype.deltaMode",
      "propertyName": "_accessException",
      "property": "TypeError: The WheelEvent.deltaMode getter can only be used on instances of WheelEvent"
    },
    {
      "path": "window.WheelEvent.prototype.deltaMode",
      "propertyName": "_get",
      "property": "function deltaMode() {\n    [native code]\n}"
    },
    {
      "path": "window.WheelEvent.prototype.deltaMode",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.WheelEvent.prototype.wheelDeltaX",
      "propertyName": "_accessException",
      "property": "TypeError: The WheelEvent.wheelDeltaX getter can only be used on instances of WheelEvent"
    },
    {
      "path": "window.WheelEvent.prototype.wheelDeltaX",
      "propertyName": "_get",
      "property": "function wheelDeltaX() {\n    [native code]\n}"
    },
    {
      "path": "window.WheelEvent.prototype.wheelDeltaX",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.WheelEvent.prototype.wheelDeltaY",
      "propertyName": "_accessException",
      "property": "TypeError: The WheelEvent.wheelDeltaY getter can only be used on instances of WheelEvent"
    },
    {
      "path": "window.WheelEvent.prototype.wheelDeltaY",
      "propertyName": "_get",
      "property": "function wheelDeltaY() {\n    [native code]\n}"
    },
    {
      "path": "window.WheelEvent.prototype.wheelDeltaY",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.WheelEvent.prototype.wheelDelta",
      "propertyName": "_accessException",
      "property": "TypeError: The WheelEvent.wheelDelta getter can only be used on instances of WheelEvent"
    },
    {
      "path": "window.WheelEvent.prototype.wheelDelta",
      "propertyName": "_get",
      "property": "function wheelDelta() {\n    [native code]\n}"
    },
    {
      "path": "window.WheelEvent.prototype.wheelDelta",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.WheelEvent",
      "propertyName": "new()",
      "property": "TypeError: Not enough arguments"
    },
    {
      "path": "window.WheelEvent",
      "propertyName": "_function",
      "property": "function WheelEvent() {\n    [native code]\n}"
    },
    {
      "path": "window.XMLDocument",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.XMLDocument",
      "propertyName": "_function",
      "property": "function XMLDocument() {\n    [native code]\n}"
    },
    {
      "path": "window.Blob.prototype.size",
      "propertyName": "_accessException",
      "property": "TypeError: The Blob.size getter can only be used on instances of Blob"
    },
    {
      "path": "window.Blob.prototype.size",
      "propertyName": "_get",
      "property": "function size() {\n    [native code]\n}"
    },
    {
      "path": "window.Blob.prototype.size",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Blob.prototype.type",
      "propertyName": "_accessException",
      "property": "TypeError: The Blob.type getter can only be used on instances of Blob"
    },
    {
      "path": "window.Blob.prototype.type",
      "propertyName": "_get",
      "property": "function type() {\n    [native code]\n}"
    },
    {
      "path": "window.Blob.prototype.type",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Blob.prototype.slice",
      "propertyName": "_function",
      "property": "function slice() {\n    [native code]\n}"
    },
    {
      "path": "window.Blob",
      "propertyName": "_function",
      "property": "function Blob() {\n    [native code]\n}"
    },
    {
      "path": "window.File.prototype.name",
      "propertyName": "_accessException",
      "property": "TypeError: The File.name getter can only be used on instances of File"
    },
    {
      "path": "window.File.prototype.name",
      "propertyName": "_get",
      "property": "function name() {\n    [native code]\n}"
    },
    {
      "path": "window.File.prototype.name",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.File.prototype.lastModified",
      "propertyName": "_accessException",
      "property": "TypeError: The File.lastModified getter can only be used on instances of File"
    },
    {
      "path": "window.File.prototype.lastModified",
      "propertyName": "_get",
      "property": "function lastModified() {\n    [native code]\n}"
    },
    {
      "path": "window.File.prototype.lastModified",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.File.prototype.webkitRelativePath",
      "propertyName": "_accessException",
      "property": "TypeError: The File.webkitRelativePath getter can only be used on instances of File"
    },
    {
      "path": "window.File.prototype.webkitRelativePath",
      "propertyName": "_get",
      "property": "function webkitRelativePath() {\n    [native code]\n}"
    },
    {
      "path": "window.File.prototype.webkitRelativePath",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.File",
      "propertyName": "new()",
      "property": "TypeError: Not enough arguments"
    },
    {
      "path": "window.File",
      "propertyName": "_function",
      "property": "function File() {\n    [native code]\n}"
    },
    {
      "path": "window.FileList.prototype.length",
      "propertyName": "_accessException",
      "property": "TypeError: The FileList.length getter can only be used on instances of FileList"
    },
    {
      "path": "window.FileList.prototype.length",
      "propertyName": "_get",
      "property": "function length() {\n    [native code]\n}"
    },
    {
      "path": "window.FileList.prototype.length",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.FileList.prototype.item",
      "propertyName": "_function",
      "property": "function item() {\n    [native code]\n}"
    },
    {
      "path": "window.FileList.prototype",
      "propertyName": "Symbol.iterator",
      "property": "REF: window.DOMStringList.prototype.Symbol(Symbol.iterator)"
    },
    {
      "path": "window.FileList",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.FileList",
      "propertyName": "_function",
      "property": "function FileList() {\n    [native code]\n}"
    },
    {
      "path": "window.FileReader.prototype.readyState",
      "propertyName": "_accessException",
      "property": "TypeError: The FileReader.readyState getter can only be used on instances of FileReader"
    },
    {
      "path": "window.FileReader.prototype.readyState",
      "propertyName": "_get",
      "property": "function readyState() {\n    [native code]\n}"
    },
    {
      "path": "window.FileReader.prototype.readyState",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.FileReader.prototype.result",
      "propertyName": "_accessException",
      "property": "TypeError: The FileReader.result getter can only be used on instances of FileReader"
    },
    {
      "path": "window.FileReader.prototype.result",
      "propertyName": "_get",
      "property": "function result() {\n    [native code]\n}"
    },
    {
      "path": "window.FileReader.prototype.result",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.FileReader.prototype.error",
      "propertyName": "_accessException",
      "property": "TypeError: The FileReader.error getter can only be used on instances of FileReader"
    },
    {
      "path": "window.FileReader.prototype.error",
      "propertyName": "_get",
      "property": "function error() {\n    [native code]\n}"
    },
    {
      "path": "window.FileReader.prototype.error",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.FileReader.prototype.onloadstart",
      "propertyName": "_accessException",
      "property": "TypeError: The FileReader.onloadstart getter can only be used on instances of FileReader"
    },
    {
      "path": "window.FileReader.prototype.onloadstart",
      "propertyName": "_get",
      "property": "function onloadstart() {\n    [native code]\n}"
    },
    {
      "path": "window.FileReader.prototype.onloadstart",
      "propertyName": "_set",
      "property": "function onloadstart() {\n    [native code]\n}"
    },
    {
      "path": "window.FileReader.prototype.onloadstart",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.FileReader.prototype.onloadstart",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.FileReader.prototype.onprogress",
      "propertyName": "_accessException",
      "property": "TypeError: The FileReader.onprogress getter can only be used on instances of FileReader"
    },
    {
      "path": "window.FileReader.prototype.onprogress",
      "propertyName": "_get",
      "property": "function onprogress() {\n    [native code]\n}"
    },
    {
      "path": "window.FileReader.prototype.onprogress",
      "propertyName": "_set",
      "property": "function onprogress() {\n    [native code]\n}"
    },
    {
      "path": "window.FileReader.prototype.onprogress",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.FileReader.prototype.onprogress",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.FileReader.prototype.onload",
      "propertyName": "_accessException",
      "property": "TypeError: The FileReader.onload getter can only be used on instances of FileReader"
    },
    {
      "path": "window.FileReader.prototype.onload",
      "propertyName": "_get",
      "property": "function onload() {\n    [native code]\n}"
    },
    {
      "path": "window.FileReader.prototype.onload",
      "propertyName": "_set",
      "property": "function onload() {\n    [native code]\n}"
    },
    {
      "path": "window.FileReader.prototype.onload",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.FileReader.prototype.onload",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.FileReader.prototype.onabort",
      "propertyName": "_accessException",
      "property": "TypeError: The FileReader.onabort getter can only be used on instances of FileReader"
    },
    {
      "path": "window.FileReader.prototype.onabort",
      "propertyName": "_get",
      "property": "function onabort() {\n    [native code]\n}"
    },
    {
      "path": "window.FileReader.prototype.onabort",
      "propertyName": "_set",
      "property": "function onabort() {\n    [native code]\n}"
    },
    {
      "path": "window.FileReader.prototype.onabort",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.FileReader.prototype.onabort",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.FileReader.prototype.onerror",
      "propertyName": "_accessException",
      "property": "TypeError: The FileReader.onerror getter can only be used on instances of FileReader"
    },
    {
      "path": "window.FileReader.prototype.onerror",
      "propertyName": "_get",
      "property": "function onerror() {\n    [native code]\n}"
    },
    {
      "path": "window.FileReader.prototype.onerror",
      "propertyName": "_set",
      "property": "function onerror() {\n    [native code]\n}"
    },
    {
      "path": "window.FileReader.prototype.onerror",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.FileReader.prototype.onerror",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.FileReader.prototype.onloadend",
      "propertyName": "_accessException",
      "property": "TypeError: The FileReader.onloadend getter can only be used on instances of FileReader"
    },
    {
      "path": "window.FileReader.prototype.onloadend",
      "propertyName": "_get",
      "property": "function onloadend() {\n    [native code]\n}"
    },
    {
      "path": "window.FileReader.prototype.onloadend",
      "propertyName": "_set",
      "property": "function onloadend() {\n    [native code]\n}"
    },
    {
      "path": "window.FileReader.prototype.onloadend",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.FileReader.prototype.onloadend",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.FileReader.prototype.readAsArrayBuffer",
      "propertyName": "_function",
      "property": "function readAsArrayBuffer() {\n    [native code]\n}"
    },
    {
      "path": "window.FileReader.prototype.readAsBinaryString",
      "propertyName": "_function",
      "property": "function readAsBinaryString() {\n    [native code]\n}"
    },
    {
      "path": "window.FileReader.prototype.readAsText",
      "propertyName": "_function",
      "property": "function readAsText() {\n    [native code]\n}"
    },
    {
      "path": "window.FileReader.prototype.readAsDataURL",
      "propertyName": "_function",
      "property": "function readAsDataURL() {\n    [native code]\n}"
    },
    {
      "path": "window.FileReader.prototype.abort",
      "propertyName": "_function",
      "property": "function abort() {\n    [native code]\n}"
    },
    {
      "path": "window.FileReader",
      "propertyName": "_function",
      "property": "function FileReader() {\n    [native code]\n}"
    },
    {
      "path": "window.FormData.prototype.append",
      "propertyName": "_function",
      "property": "function append() {\n    [native code]\n}"
    },
    {
      "path": "window.FormData.prototype.delete",
      "propertyName": "_function",
      "property": "function delete() {\n    [native code]\n}"
    },
    {
      "path": "window.FormData.prototype.get",
      "propertyName": "_function",
      "property": "function get() {\n    [native code]\n}"
    },
    {
      "path": "window.FormData.prototype.getAll",
      "propertyName": "_function",
      "property": "function getAll() {\n    [native code]\n}"
    },
    {
      "path": "window.FormData.prototype.has",
      "propertyName": "_function",
      "property": "function has() {\n    [native code]\n}"
    },
    {
      "path": "window.FormData.prototype.set",
      "propertyName": "_function",
      "property": "function set() {\n    [native code]\n}"
    },
    {
      "path": "window.FormData.prototype.entries",
      "propertyName": "_function",
      "property": "function entries() {\n    [native code]\n}"
    },
    {
      "path": "window.FormData.prototype.keys",
      "propertyName": "_function",
      "property": "function keys() {\n    [native code]\n}"
    },
    {
      "path": "window.FormData.prototype.values",
      "propertyName": "_function",
      "property": "function values() {\n    [native code]\n}"
    },
    {
      "path": "window.FormData.prototype.forEach",
      "propertyName": "_function",
      "property": "function forEach() {\n    [native code]\n}"
    },
    {
      "path": "window.FormData",
      "propertyName": "_function",
      "property": "function FormData() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMTokenList.prototype.length",
      "propertyName": "_accessException",
      "property": "TypeError: The DOMTokenList.length getter can only be used on instances of DOMTokenList"
    },
    {
      "path": "window.DOMTokenList.prototype.length",
      "propertyName": "_get",
      "property": "function length() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMTokenList.prototype.length",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMTokenList.prototype.value",
      "propertyName": "_accessException",
      "property": "TypeError: The DOMTokenList.value getter can only be used on instances of DOMTokenList"
    },
    {
      "path": "window.DOMTokenList.prototype.value",
      "propertyName": "_get",
      "property": "function value() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMTokenList.prototype.value",
      "propertyName": "_set",
      "property": "function value() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMTokenList.prototype.value",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMTokenList.prototype.value",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMTokenList.prototype.item",
      "propertyName": "_function",
      "property": "function item() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMTokenList.prototype.contains",
      "propertyName": "_function",
      "property": "function contains() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMTokenList.prototype.add",
      "propertyName": "_function",
      "property": "function add() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMTokenList.prototype.remove",
      "propertyName": "_function",
      "property": "function remove() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMTokenList.prototype.toggle",
      "propertyName": "_function",
      "property": "function toggle() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMTokenList.prototype.replace",
      "propertyName": "_function",
      "property": "function replace() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMTokenList.prototype.supports",
      "propertyName": "_function",
      "property": "function supports() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMTokenList.prototype.toString",
      "propertyName": "_function",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMTokenList.prototype",
      "propertyName": "entries",
      "property": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "entries"
        },
        "_function": "function entries() {\n    [native code]\n}",
        "_invocation": "[object Array Iterator]",
        "_flags": "cew"
      }
    },
    {
      "path": "window.DOMTokenList.prototype",
      "propertyName": "forEach",
      "property": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "forEach"
        },
        "_function": "function forEach() {\n    [native code]\n}",
        "_flags": "cew"
      }
    },
    {
      "path": "window.DOMTokenList.prototype",
      "propertyName": "keys",
      "property": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "keys"
        },
        "_function": "function keys() {\n    [native code]\n}",
        "_invocation": "[object Array Iterator]",
        "_flags": "cew"
      }
    },
    {
      "path": "window.DOMTokenList.prototype",
      "propertyName": "values",
      "property": "REF: window.DOMStringList.prototype.Symbol(Symbol.iterator)"
    },
    {
      "path": "window.DOMTokenList.prototype",
      "propertyName": "Symbol.iterator",
      "property": "REF: window.DOMStringList.prototype.Symbol(Symbol.iterator)"
    },
    {
      "path": "window.DOMTokenList",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.DOMTokenList",
      "propertyName": "_function",
      "property": "function DOMTokenList() {\n    [native code]\n}"
    },
    {
      "path": "window.URL.prototype.href",
      "propertyName": "_accessException",
      "property": "TypeError: The URL.href getter can only be used on instances of URL"
    },
    {
      "path": "window.URL.prototype.href",
      "propertyName": "_get",
      "property": "function href() {\n    [native code]\n}"
    },
    {
      "path": "window.URL.prototype.href",
      "propertyName": "_set",
      "property": "function href() {\n    [native code]\n}"
    },
    {
      "path": "window.URL.prototype.href",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.URL.prototype.href",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.URL.prototype.origin",
      "propertyName": "_accessException",
      "property": "TypeError: The URL.origin getter can only be used on instances of URL"
    },
    {
      "path": "window.URL.prototype.origin",
      "propertyName": "_get",
      "property": "function origin() {\n    [native code]\n}"
    },
    {
      "path": "window.URL.prototype.origin",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.URL.prototype.protocol",
      "propertyName": "_accessException",
      "property": "TypeError: The URL.protocol getter can only be used on instances of URL"
    },
    {
      "path": "window.URL.prototype.protocol",
      "propertyName": "_get",
      "property": "function protocol() {\n    [native code]\n}"
    },
    {
      "path": "window.URL.prototype.protocol",
      "propertyName": "_set",
      "property": "function protocol() {\n    [native code]\n}"
    },
    {
      "path": "window.URL.prototype.protocol",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.URL.prototype.protocol",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.URL.prototype.username",
      "propertyName": "_accessException",
      "property": "TypeError: The URL.username getter can only be used on instances of URL"
    },
    {
      "path": "window.URL.prototype.username",
      "propertyName": "_get",
      "property": "function username() {\n    [native code]\n}"
    },
    {
      "path": "window.URL.prototype.username",
      "propertyName": "_set",
      "property": "function username() {\n    [native code]\n}"
    },
    {
      "path": "window.URL.prototype.username",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.URL.prototype.username",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.URL.prototype.password",
      "propertyName": "_accessException",
      "property": "TypeError: The URL.password getter can only be used on instances of URL"
    },
    {
      "path": "window.URL.prototype.password",
      "propertyName": "_get",
      "property": "function password() {\n    [native code]\n}"
    },
    {
      "path": "window.URL.prototype.password",
      "propertyName": "_set",
      "property": "function password() {\n    [native code]\n}"
    },
    {
      "path": "window.URL.prototype.password",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.URL.prototype.password",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.URL.prototype.host",
      "propertyName": "_accessException",
      "property": "TypeError: The URL.host getter can only be used on instances of URL"
    },
    {
      "path": "window.URL.prototype.host",
      "propertyName": "_get",
      "property": "function host() {\n    [native code]\n}"
    },
    {
      "path": "window.URL.prototype.host",
      "propertyName": "_set",
      "property": "function host() {\n    [native code]\n}"
    },
    {
      "path": "window.URL.prototype.host",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.URL.prototype.host",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.URL.prototype.hostname",
      "propertyName": "_accessException",
      "property": "TypeError: The URL.hostname getter can only be used on instances of URL"
    },
    {
      "path": "window.URL.prototype.hostname",
      "propertyName": "_get",
      "property": "function hostname() {\n    [native code]\n}"
    },
    {
      "path": "window.URL.prototype.hostname",
      "propertyName": "_set",
      "property": "function hostname() {\n    [native code]\n}"
    },
    {
      "path": "window.URL.prototype.hostname",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.URL.prototype.hostname",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.URL.prototype.port",
      "propertyName": "_accessException",
      "property": "TypeError: The URL.port getter can only be used on instances of URL"
    },
    {
      "path": "window.URL.prototype.port",
      "propertyName": "_get",
      "property": "function port() {\n    [native code]\n}"
    },
    {
      "path": "window.URL.prototype.port",
      "propertyName": "_set",
      "property": "function port() {\n    [native code]\n}"
    },
    {
      "path": "window.URL.prototype.port",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.URL.prototype.port",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.URL.prototype.pathname",
      "propertyName": "_accessException",
      "property": "TypeError: The URL.pathname getter can only be used on instances of URL"
    },
    {
      "path": "window.URL.prototype.pathname",
      "propertyName": "_get",
      "property": "function pathname() {\n    [native code]\n}"
    },
    {
      "path": "window.URL.prototype.pathname",
      "propertyName": "_set",
      "property": "function pathname() {\n    [native code]\n}"
    },
    {
      "path": "window.URL.prototype.pathname",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.URL.prototype.pathname",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.URL.prototype.hash",
      "propertyName": "_accessException",
      "property": "TypeError: The URL.hash getter can only be used on instances of URL"
    },
    {
      "path": "window.URL.prototype.hash",
      "propertyName": "_get",
      "property": "function hash() {\n    [native code]\n}"
    },
    {
      "path": "window.URL.prototype.hash",
      "propertyName": "_set",
      "property": "function hash() {\n    [native code]\n}"
    },
    {
      "path": "window.URL.prototype.hash",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.URL.prototype.hash",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.URL.prototype.search",
      "propertyName": "_accessException",
      "property": "TypeError: The URL.search getter can only be used on instances of URL"
    },
    {
      "path": "window.URL.prototype.search",
      "propertyName": "_get",
      "property": "function search() {\n    [native code]\n}"
    },
    {
      "path": "window.URL.prototype.search",
      "propertyName": "_set",
      "property": "function search() {\n    [native code]\n}"
    },
    {
      "path": "window.URL.prototype.search",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.URL.prototype.search",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.URL.prototype.searchParams",
      "propertyName": "_accessException",
      "property": "TypeError: The URL.searchParams getter can only be used on instances of URL"
    },
    {
      "path": "window.URL.prototype.searchParams",
      "propertyName": "_get",
      "property": "function searchParams() {\n    [native code]\n}"
    },
    {
      "path": "window.URL.prototype.searchParams",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.URL.prototype.toJSON",
      "propertyName": "_function",
      "property": "function toJSON() {\n    [native code]\n}"
    },
    {
      "path": "window.URL.prototype.toString",
      "propertyName": "_function",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.URL.createObjectURL",
      "propertyName": "_function",
      "property": "function createObjectURL() {\n    [native code]\n}"
    },
    {
      "path": "window.URL.revokeObjectURL",
      "propertyName": "_function",
      "property": "function revokeObjectURL() {\n    [native code]\n}"
    },
    {
      "path": "window.URL",
      "propertyName": "new()",
      "property": "TypeError: Not enough arguments"
    },
    {
      "path": "window.URL",
      "propertyName": "_function",
      "property": "function URL() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAllCollection.prototype.length",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLAllCollection.length getter can only be used on instances of HTMLAllCollection"
    },
    {
      "path": "window.HTMLAllCollection.prototype.length",
      "propertyName": "_get",
      "property": "function length() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAllCollection.prototype.length",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAllCollection.prototype.namedItem",
      "propertyName": "_function",
      "property": "function namedItem() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAllCollection.prototype.item",
      "propertyName": "_function",
      "property": "function item() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAllCollection.prototype",
      "propertyName": "Symbol.iterator",
      "property": "REF: window.DOMStringList.prototype.Symbol(Symbol.iterator)"
    },
    {
      "path": "window.HTMLAllCollection",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.HTMLAllCollection",
      "propertyName": "_function",
      "property": "function HTMLAllCollection() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAnchorElement.prototype.charset",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLAnchorElement.charset getter can only be used on instances of HTMLAnchorElement"
    },
    {
      "path": "window.HTMLAnchorElement.prototype.charset",
      "propertyName": "_get",
      "property": "function charset() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAnchorElement.prototype.charset",
      "propertyName": "_set",
      "property": "function charset() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAnchorElement.prototype.charset",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAnchorElement.prototype.charset",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAnchorElement.prototype.coords",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLAnchorElement.coords getter can only be used on instances of HTMLAnchorElement"
    },
    {
      "path": "window.HTMLAnchorElement.prototype.coords",
      "propertyName": "_get",
      "property": "function coords() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAnchorElement.prototype.coords",
      "propertyName": "_set",
      "property": "function coords() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAnchorElement.prototype.coords",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAnchorElement.prototype.coords",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAnchorElement.prototype.download",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLAnchorElement.download getter can only be used on instances of HTMLAnchorElement"
    },
    {
      "path": "window.HTMLAnchorElement.prototype.download",
      "propertyName": "_get",
      "property": "function download() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAnchorElement.prototype.download",
      "propertyName": "_set",
      "property": "function download() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAnchorElement.prototype.download",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAnchorElement.prototype.download",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAnchorElement.prototype.hreflang",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLAnchorElement.hreflang getter can only be used on instances of HTMLAnchorElement"
    },
    {
      "path": "window.HTMLAnchorElement.prototype.hreflang",
      "propertyName": "_get",
      "property": "function hreflang() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAnchorElement.prototype.hreflang",
      "propertyName": "_set",
      "property": "function hreflang() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAnchorElement.prototype.hreflang",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAnchorElement.prototype.hreflang",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAnchorElement.prototype.name",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLAnchorElement.name getter can only be used on instances of HTMLAnchorElement"
    },
    {
      "path": "window.HTMLAnchorElement.prototype.name",
      "propertyName": "_get",
      "property": "function name() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAnchorElement.prototype.name",
      "propertyName": "_set",
      "property": "function name() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAnchorElement.prototype.name",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAnchorElement.prototype.name",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAnchorElement.prototype.ping",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLAnchorElement.ping getter can only be used on instances of HTMLAnchorElement"
    },
    {
      "path": "window.HTMLAnchorElement.prototype.ping",
      "propertyName": "_get",
      "property": "function ping() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAnchorElement.prototype.ping",
      "propertyName": "_set",
      "property": "function ping() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAnchorElement.prototype.ping",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAnchorElement.prototype.ping",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAnchorElement.prototype.rel",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLAnchorElement.rel getter can only be used on instances of HTMLAnchorElement"
    },
    {
      "path": "window.HTMLAnchorElement.prototype.rel",
      "propertyName": "_get",
      "property": "function rel() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAnchorElement.prototype.rel",
      "propertyName": "_set",
      "property": "function rel() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAnchorElement.prototype.rel",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAnchorElement.prototype.rel",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAnchorElement.prototype.rev",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLAnchorElement.rev getter can only be used on instances of HTMLAnchorElement"
    },
    {
      "path": "window.HTMLAnchorElement.prototype.rev",
      "propertyName": "_get",
      "property": "function rev() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAnchorElement.prototype.rev",
      "propertyName": "_set",
      "property": "function rev() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAnchorElement.prototype.rev",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAnchorElement.prototype.rev",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAnchorElement.prototype.shape",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLAnchorElement.shape getter can only be used on instances of HTMLAnchorElement"
    },
    {
      "path": "window.HTMLAnchorElement.prototype.shape",
      "propertyName": "_get",
      "property": "function shape() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAnchorElement.prototype.shape",
      "propertyName": "_set",
      "property": "function shape() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAnchorElement.prototype.shape",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAnchorElement.prototype.shape",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAnchorElement.prototype.target",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLAnchorElement.target getter can only be used on instances of HTMLAnchorElement"
    },
    {
      "path": "window.HTMLAnchorElement.prototype.target",
      "propertyName": "_get",
      "property": "function target() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAnchorElement.prototype.target",
      "propertyName": "_set",
      "property": "function target() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAnchorElement.prototype.target",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAnchorElement.prototype.target",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAnchorElement.prototype.type",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLAnchorElement.type getter can only be used on instances of HTMLAnchorElement"
    },
    {
      "path": "window.HTMLAnchorElement.prototype.type",
      "propertyName": "_get",
      "property": "function type() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAnchorElement.prototype.type",
      "propertyName": "_set",
      "property": "function type() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAnchorElement.prototype.type",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAnchorElement.prototype.type",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAnchorElement.prototype.text",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLAnchorElement.text getter can only be used on instances of HTMLAnchorElement"
    },
    {
      "path": "window.HTMLAnchorElement.prototype.text",
      "propertyName": "_get",
      "property": "function text() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAnchorElement.prototype.text",
      "propertyName": "_set",
      "property": "function text() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAnchorElement.prototype.text",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAnchorElement.prototype.text",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAnchorElement.prototype.relList",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLAnchorElement.relList getter can only be used on instances of HTMLAnchorElement"
    },
    {
      "path": "window.HTMLAnchorElement.prototype.relList",
      "propertyName": "_get",
      "property": "function relList() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAnchorElement.prototype.relList",
      "propertyName": "_set",
      "property": "function relList() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAnchorElement.prototype.relList",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAnchorElement.prototype.relList",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAnchorElement.prototype.href",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLAnchorElement.href getter can only be used on instances of HTMLAnchorElement"
    },
    {
      "path": "window.HTMLAnchorElement.prototype.href",
      "propertyName": "_get",
      "property": "function href() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAnchorElement.prototype.href",
      "propertyName": "_set",
      "property": "function href() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAnchorElement.prototype.href",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAnchorElement.prototype.href",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAnchorElement.prototype.origin",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLAnchorElement.origin getter can only be used on instances of HTMLAnchorElement"
    },
    {
      "path": "window.HTMLAnchorElement.prototype.origin",
      "propertyName": "_get",
      "property": "function origin() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAnchorElement.prototype.origin",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAnchorElement.prototype.protocol",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLAnchorElement.protocol getter can only be used on instances of HTMLAnchorElement"
    },
    {
      "path": "window.HTMLAnchorElement.prototype.protocol",
      "propertyName": "_get",
      "property": "function protocol() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAnchorElement.prototype.protocol",
      "propertyName": "_set",
      "property": "function protocol() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAnchorElement.prototype.protocol",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAnchorElement.prototype.protocol",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAnchorElement.prototype.username",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLAnchorElement.username getter can only be used on instances of HTMLAnchorElement"
    },
    {
      "path": "window.HTMLAnchorElement.prototype.username",
      "propertyName": "_get",
      "property": "function username() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAnchorElement.prototype.username",
      "propertyName": "_set",
      "property": "function username() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAnchorElement.prototype.username",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAnchorElement.prototype.username",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAnchorElement.prototype.password",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLAnchorElement.password getter can only be used on instances of HTMLAnchorElement"
    },
    {
      "path": "window.HTMLAnchorElement.prototype.password",
      "propertyName": "_get",
      "property": "function password() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAnchorElement.prototype.password",
      "propertyName": "_set",
      "property": "function password() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAnchorElement.prototype.password",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAnchorElement.prototype.password",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAnchorElement.prototype.host",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLAnchorElement.host getter can only be used on instances of HTMLAnchorElement"
    },
    {
      "path": "window.HTMLAnchorElement.prototype.host",
      "propertyName": "_get",
      "property": "function host() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAnchorElement.prototype.host",
      "propertyName": "_set",
      "property": "function host() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAnchorElement.prototype.host",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAnchorElement.prototype.host",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAnchorElement.prototype.hostname",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLAnchorElement.hostname getter can only be used on instances of HTMLAnchorElement"
    },
    {
      "path": "window.HTMLAnchorElement.prototype.hostname",
      "propertyName": "_get",
      "property": "function hostname() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAnchorElement.prototype.hostname",
      "propertyName": "_set",
      "property": "function hostname() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAnchorElement.prototype.hostname",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAnchorElement.prototype.hostname",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAnchorElement.prototype.port",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLAnchorElement.port getter can only be used on instances of HTMLAnchorElement"
    },
    {
      "path": "window.HTMLAnchorElement.prototype.port",
      "propertyName": "_get",
      "property": "function port() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAnchorElement.prototype.port",
      "propertyName": "_set",
      "property": "function port() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAnchorElement.prototype.port",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAnchorElement.prototype.port",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAnchorElement.prototype.pathname",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLAnchorElement.pathname getter can only be used on instances of HTMLAnchorElement"
    },
    {
      "path": "window.HTMLAnchorElement.prototype.pathname",
      "propertyName": "_get",
      "property": "function pathname() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAnchorElement.prototype.pathname",
      "propertyName": "_set",
      "property": "function pathname() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAnchorElement.prototype.pathname",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAnchorElement.prototype.pathname",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAnchorElement.prototype.search",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLAnchorElement.search getter can only be used on instances of HTMLAnchorElement"
    },
    {
      "path": "window.HTMLAnchorElement.prototype.search",
      "propertyName": "_get",
      "property": "function search() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAnchorElement.prototype.search",
      "propertyName": "_set",
      "property": "function search() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAnchorElement.prototype.search",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAnchorElement.prototype.search",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAnchorElement.prototype.hash",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLAnchorElement.hash getter can only be used on instances of HTMLAnchorElement"
    },
    {
      "path": "window.HTMLAnchorElement.prototype.hash",
      "propertyName": "_get",
      "property": "function hash() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAnchorElement.prototype.hash",
      "propertyName": "_set",
      "property": "function hash() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAnchorElement.prototype.hash",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAnchorElement.prototype.hash",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAnchorElement.prototype.toString",
      "propertyName": "_function",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAnchorElement",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.HTMLAnchorElement",
      "propertyName": "_function",
      "property": "function HTMLAnchorElement() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAreaElement.prototype.alt",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLAreaElement.alt getter can only be used on instances of HTMLAreaElement"
    },
    {
      "path": "window.HTMLAreaElement.prototype.alt",
      "propertyName": "_get",
      "property": "function alt() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAreaElement.prototype.alt",
      "propertyName": "_set",
      "property": "function alt() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAreaElement.prototype.alt",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAreaElement.prototype.alt",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAreaElement.prototype.coords",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLAreaElement.coords getter can only be used on instances of HTMLAreaElement"
    },
    {
      "path": "window.HTMLAreaElement.prototype.coords",
      "propertyName": "_get",
      "property": "function coords() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAreaElement.prototype.coords",
      "propertyName": "_set",
      "property": "function coords() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAreaElement.prototype.coords",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAreaElement.prototype.coords",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAreaElement.prototype.noHref",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLAreaElement.noHref getter can only be used on instances of HTMLAreaElement"
    },
    {
      "path": "window.HTMLAreaElement.prototype.noHref",
      "propertyName": "_get",
      "property": "function noHref() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAreaElement.prototype.noHref",
      "propertyName": "_set",
      "property": "function noHref() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAreaElement.prototype.noHref",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAreaElement.prototype.noHref",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAreaElement.prototype.ping",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLAreaElement.ping getter can only be used on instances of HTMLAreaElement"
    },
    {
      "path": "window.HTMLAreaElement.prototype.ping",
      "propertyName": "_get",
      "property": "function ping() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAreaElement.prototype.ping",
      "propertyName": "_set",
      "property": "function ping() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAreaElement.prototype.ping",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAreaElement.prototype.ping",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAreaElement.prototype.rel",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLAreaElement.rel getter can only be used on instances of HTMLAreaElement"
    },
    {
      "path": "window.HTMLAreaElement.prototype.rel",
      "propertyName": "_get",
      "property": "function rel() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAreaElement.prototype.rel",
      "propertyName": "_set",
      "property": "function rel() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAreaElement.prototype.rel",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAreaElement.prototype.rel",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAreaElement.prototype.shape",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLAreaElement.shape getter can only be used on instances of HTMLAreaElement"
    },
    {
      "path": "window.HTMLAreaElement.prototype.shape",
      "propertyName": "_get",
      "property": "function shape() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAreaElement.prototype.shape",
      "propertyName": "_set",
      "property": "function shape() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAreaElement.prototype.shape",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAreaElement.prototype.shape",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAreaElement.prototype.target",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLAreaElement.target getter can only be used on instances of HTMLAreaElement"
    },
    {
      "path": "window.HTMLAreaElement.prototype.target",
      "propertyName": "_get",
      "property": "function target() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAreaElement.prototype.target",
      "propertyName": "_set",
      "property": "function target() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAreaElement.prototype.target",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAreaElement.prototype.target",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAreaElement.prototype.download",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLAreaElement.download getter can only be used on instances of HTMLAreaElement"
    },
    {
      "path": "window.HTMLAreaElement.prototype.download",
      "propertyName": "_get",
      "property": "function download() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAreaElement.prototype.download",
      "propertyName": "_set",
      "property": "function download() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAreaElement.prototype.download",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAreaElement.prototype.download",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAreaElement.prototype.relList",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLAreaElement.relList getter can only be used on instances of HTMLAreaElement"
    },
    {
      "path": "window.HTMLAreaElement.prototype.relList",
      "propertyName": "_get",
      "property": "function relList() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAreaElement.prototype.relList",
      "propertyName": "_set",
      "property": "function relList() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAreaElement.prototype.relList",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAreaElement.prototype.relList",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAreaElement.prototype.href",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLAreaElement.href getter can only be used on instances of HTMLAreaElement"
    },
    {
      "path": "window.HTMLAreaElement.prototype.href",
      "propertyName": "_get",
      "property": "function href() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAreaElement.prototype.href",
      "propertyName": "_set",
      "property": "function href() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAreaElement.prototype.href",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAreaElement.prototype.href",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAreaElement.prototype.origin",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLAreaElement.origin getter can only be used on instances of HTMLAreaElement"
    },
    {
      "path": "window.HTMLAreaElement.prototype.origin",
      "propertyName": "_get",
      "property": "function origin() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAreaElement.prototype.origin",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAreaElement.prototype.protocol",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLAreaElement.protocol getter can only be used on instances of HTMLAreaElement"
    },
    {
      "path": "window.HTMLAreaElement.prototype.protocol",
      "propertyName": "_get",
      "property": "function protocol() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAreaElement.prototype.protocol",
      "propertyName": "_set",
      "property": "function protocol() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAreaElement.prototype.protocol",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAreaElement.prototype.protocol",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAreaElement.prototype.username",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLAreaElement.username getter can only be used on instances of HTMLAreaElement"
    },
    {
      "path": "window.HTMLAreaElement.prototype.username",
      "propertyName": "_get",
      "property": "function username() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAreaElement.prototype.username",
      "propertyName": "_set",
      "property": "function username() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAreaElement.prototype.username",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAreaElement.prototype.username",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAreaElement.prototype.password",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLAreaElement.password getter can only be used on instances of HTMLAreaElement"
    },
    {
      "path": "window.HTMLAreaElement.prototype.password",
      "propertyName": "_get",
      "property": "function password() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAreaElement.prototype.password",
      "propertyName": "_set",
      "property": "function password() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAreaElement.prototype.password",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAreaElement.prototype.password",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAreaElement.prototype.host",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLAreaElement.host getter can only be used on instances of HTMLAreaElement"
    },
    {
      "path": "window.HTMLAreaElement.prototype.host",
      "propertyName": "_get",
      "property": "function host() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAreaElement.prototype.host",
      "propertyName": "_set",
      "property": "function host() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAreaElement.prototype.host",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAreaElement.prototype.host",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAreaElement.prototype.hostname",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLAreaElement.hostname getter can only be used on instances of HTMLAreaElement"
    },
    {
      "path": "window.HTMLAreaElement.prototype.hostname",
      "propertyName": "_get",
      "property": "function hostname() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAreaElement.prototype.hostname",
      "propertyName": "_set",
      "property": "function hostname() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAreaElement.prototype.hostname",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAreaElement.prototype.hostname",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAreaElement.prototype.port",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLAreaElement.port getter can only be used on instances of HTMLAreaElement"
    },
    {
      "path": "window.HTMLAreaElement.prototype.port",
      "propertyName": "_get",
      "property": "function port() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAreaElement.prototype.port",
      "propertyName": "_set",
      "property": "function port() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAreaElement.prototype.port",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAreaElement.prototype.port",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAreaElement.prototype.pathname",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLAreaElement.pathname getter can only be used on instances of HTMLAreaElement"
    },
    {
      "path": "window.HTMLAreaElement.prototype.pathname",
      "propertyName": "_get",
      "property": "function pathname() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAreaElement.prototype.pathname",
      "propertyName": "_set",
      "property": "function pathname() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAreaElement.prototype.pathname",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAreaElement.prototype.pathname",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAreaElement.prototype.search",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLAreaElement.search getter can only be used on instances of HTMLAreaElement"
    },
    {
      "path": "window.HTMLAreaElement.prototype.search",
      "propertyName": "_get",
      "property": "function search() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAreaElement.prototype.search",
      "propertyName": "_set",
      "property": "function search() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAreaElement.prototype.search",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAreaElement.prototype.search",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAreaElement.prototype.hash",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLAreaElement.hash getter can only be used on instances of HTMLAreaElement"
    },
    {
      "path": "window.HTMLAreaElement.prototype.hash",
      "propertyName": "_get",
      "property": "function hash() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAreaElement.prototype.hash",
      "propertyName": "_set",
      "property": "function hash() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAreaElement.prototype.hash",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAreaElement.prototype.hash",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAreaElement.prototype.toString",
      "propertyName": "_function",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAreaElement",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.HTMLAreaElement",
      "propertyName": "_function",
      "property": "function HTMLAreaElement() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLAudioElement",
      "propertyName": "prototype",
      "property": {
        "_protos": [
          "HTMLMediaElement.prototype",
          "HTMLElement.prototype",
          "Element.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "NETWORK_EMPTY": {
          "_type": "number",
          "_value": 0
        },
        "NETWORK_IDLE": {
          "_type": "number",
          "_value": 1
        },
        "NETWORK_LOADING": {
          "_type": "number",
          "_value": 2
        },
        "NETWORK_NO_SOURCE": {
          "_type": "number",
          "_value": 3
        },
        "HAVE_NOTHING": {
          "_type": "number",
          "_value": 0
        },
        "HAVE_METADATA": {
          "_type": "number",
          "_value": 1
        },
        "HAVE_CURRENT_DATA": {
          "_type": "number",
          "_value": 2
        },
        "HAVE_FUTURE_DATA": {
          "_type": "number",
          "_value": 3
        },
        "HAVE_ENOUGH_DATA": {
          "_type": "number",
          "_value": 4
        },
        "onmouseenter": {},
        "onmouseleave": {},
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "_type": "object",
        "_flags": ""
      }
    },
    {
      "path": "window.HTMLAudioElement",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.HTMLAudioElement",
      "propertyName": "_function",
      "property": "function HTMLAudioElement() {\n    [native code]\n}"
    },
    {
      "path": "window.Audio",
      "propertyName": "prototype",
      "property": "REF: window.HTMLAudioElement.prototype"
    },
    {
      "path": "window.Audio",
      "propertyName": "_function",
      "property": "function Audio() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLBRElement.prototype.clear",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLBRElement.clear getter can only be used on instances of HTMLBRElement"
    },
    {
      "path": "window.HTMLBRElement.prototype.clear",
      "propertyName": "_get",
      "property": "function clear() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLBRElement.prototype.clear",
      "propertyName": "_set",
      "property": "function clear() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLBRElement.prototype.clear",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLBRElement.prototype.clear",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLBRElement",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.HTMLBRElement",
      "propertyName": "_function",
      "property": "function HTMLBRElement() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLBaseElement.prototype.href",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLBaseElement.href getter can only be used on instances of HTMLBaseElement"
    },
    {
      "path": "window.HTMLBaseElement.prototype.href",
      "propertyName": "_get",
      "property": "function href() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLBaseElement.prototype.href",
      "propertyName": "_set",
      "property": "function href() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLBaseElement.prototype.href",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLBaseElement.prototype.href",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLBaseElement.prototype.target",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLBaseElement.target getter can only be used on instances of HTMLBaseElement"
    },
    {
      "path": "window.HTMLBaseElement.prototype.target",
      "propertyName": "_get",
      "property": "function target() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLBaseElement.prototype.target",
      "propertyName": "_set",
      "property": "function target() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLBaseElement.prototype.target",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLBaseElement.prototype.target",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLBaseElement",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.HTMLBaseElement",
      "propertyName": "_function",
      "property": "function HTMLBaseElement() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLBodyElement.prototype.aLink",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLBodyElement.aLink getter can only be used on instances of HTMLBodyElement"
    },
    {
      "path": "window.HTMLBodyElement.prototype.aLink",
      "propertyName": "_get",
      "property": "function aLink() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLBodyElement.prototype.aLink",
      "propertyName": "_set",
      "property": "function aLink() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLBodyElement.prototype.aLink",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLBodyElement.prototype.aLink",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLBodyElement.prototype.background",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLBodyElement.background getter can only be used on instances of HTMLBodyElement"
    },
    {
      "path": "window.HTMLBodyElement.prototype.background",
      "propertyName": "_get",
      "property": "function background() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLBodyElement.prototype.background",
      "propertyName": "_set",
      "property": "function background() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLBodyElement.prototype.background",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLBodyElement.prototype.background",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLBodyElement.prototype.bgColor",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLBodyElement.bgColor getter can only be used on instances of HTMLBodyElement"
    },
    {
      "path": "window.HTMLBodyElement.prototype.bgColor",
      "propertyName": "_get",
      "property": "function bgColor() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLBodyElement.prototype.bgColor",
      "propertyName": "_set",
      "property": "function bgColor() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLBodyElement.prototype.bgColor",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLBodyElement.prototype.bgColor",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLBodyElement.prototype.link",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLBodyElement.link getter can only be used on instances of HTMLBodyElement"
    },
    {
      "path": "window.HTMLBodyElement.prototype.link",
      "propertyName": "_get",
      "property": "function link() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLBodyElement.prototype.link",
      "propertyName": "_set",
      "property": "function link() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLBodyElement.prototype.link",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLBodyElement.prototype.link",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLBodyElement.prototype.text",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLBodyElement.text getter can only be used on instances of HTMLBodyElement"
    },
    {
      "path": "window.HTMLBodyElement.prototype.text",
      "propertyName": "_get",
      "property": "function text() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLBodyElement.prototype.text",
      "propertyName": "_set",
      "property": "function text() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLBodyElement.prototype.text",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLBodyElement.prototype.text",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLBodyElement.prototype.vLink",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLBodyElement.vLink getter can only be used on instances of HTMLBodyElement"
    },
    {
      "path": "window.HTMLBodyElement.prototype.vLink",
      "propertyName": "_get",
      "property": "function vLink() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLBodyElement.prototype.vLink",
      "propertyName": "_set",
      "property": "function vLink() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLBodyElement.prototype.vLink",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLBodyElement.prototype.vLink",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLBodyElement.prototype.onblur",
      "propertyName": "_flags",
      "property": "c"
    },
    {
      "path": "window.HTMLBodyElement.prototype.onblur",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLBodyElement.onblur getter can only be used on instances of HTMLBodyElement"
    },
    {
      "path": "window.HTMLBodyElement.prototype.onblur",
      "propertyName": "_get",
      "property": "function onblur() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLBodyElement.prototype.onblur",
      "propertyName": "_set",
      "property": "function onblur() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLBodyElement.prototype.onblur",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLBodyElement.prototype.onblur",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLBodyElement.prototype.onerror",
      "propertyName": "_flags",
      "property": "c"
    },
    {
      "path": "window.HTMLBodyElement.prototype.onerror",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLBodyElement.onerror getter can only be used on instances of HTMLBodyElement"
    },
    {
      "path": "window.HTMLBodyElement.prototype.onerror",
      "propertyName": "_get",
      "property": "function onerror() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLBodyElement.prototype.onerror",
      "propertyName": "_set",
      "property": "function onerror() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLBodyElement.prototype.onerror",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLBodyElement.prototype.onerror",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLBodyElement.prototype.onfocus",
      "propertyName": "_flags",
      "property": "c"
    },
    {
      "path": "window.HTMLBodyElement.prototype.onfocus",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLBodyElement.onfocus getter can only be used on instances of HTMLBodyElement"
    },
    {
      "path": "window.HTMLBodyElement.prototype.onfocus",
      "propertyName": "_get",
      "property": "function onfocus() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLBodyElement.prototype.onfocus",
      "propertyName": "_set",
      "property": "function onfocus() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLBodyElement.prototype.onfocus",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLBodyElement.prototype.onfocus",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLBodyElement.prototype.onload",
      "propertyName": "_flags",
      "property": "c"
    },
    {
      "path": "window.HTMLBodyElement.prototype.onload",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLBodyElement.onload getter can only be used on instances of HTMLBodyElement"
    },
    {
      "path": "window.HTMLBodyElement.prototype.onload",
      "propertyName": "_get",
      "property": "function onload() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLBodyElement.prototype.onload",
      "propertyName": "_set",
      "property": "function onload() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLBodyElement.prototype.onload",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLBodyElement.prototype.onload",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLBodyElement.prototype.onresize",
      "propertyName": "_flags",
      "property": "c"
    },
    {
      "path": "window.HTMLBodyElement.prototype.onresize",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLBodyElement.onresize getter can only be used on instances of HTMLBodyElement"
    },
    {
      "path": "window.HTMLBodyElement.prototype.onresize",
      "propertyName": "_get",
      "property": "function onresize() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLBodyElement.prototype.onresize",
      "propertyName": "_set",
      "property": "function onresize() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLBodyElement.prototype.onresize",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLBodyElement.prototype.onresize",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLBodyElement.prototype.onscroll",
      "propertyName": "_flags",
      "property": "c"
    },
    {
      "path": "window.HTMLBodyElement.prototype.onscroll",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLBodyElement.onscroll getter can only be used on instances of HTMLBodyElement"
    },
    {
      "path": "window.HTMLBodyElement.prototype.onscroll",
      "propertyName": "_get",
      "property": "function onscroll() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLBodyElement.prototype.onscroll",
      "propertyName": "_set",
      "property": "function onscroll() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLBodyElement.prototype.onscroll",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLBodyElement.prototype.onscroll",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLBodyElement.prototype.onafterprint",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLBodyElement.onafterprint getter can only be used on instances of HTMLBodyElement"
    },
    {
      "path": "window.HTMLBodyElement.prototype.onafterprint",
      "propertyName": "_get",
      "property": "function onafterprint() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLBodyElement.prototype.onafterprint",
      "propertyName": "_set",
      "property": "function onafterprint() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLBodyElement.prototype.onafterprint",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLBodyElement.prototype.onafterprint",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLBodyElement.prototype.onbeforeprint",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLBodyElement.onbeforeprint getter can only be used on instances of HTMLBodyElement"
    },
    {
      "path": "window.HTMLBodyElement.prototype.onbeforeprint",
      "propertyName": "_get",
      "property": "function onbeforeprint() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLBodyElement.prototype.onbeforeprint",
      "propertyName": "_set",
      "property": "function onbeforeprint() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLBodyElement.prototype.onbeforeprint",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLBodyElement.prototype.onbeforeprint",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLBodyElement.prototype.onbeforeunload",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLBodyElement.onbeforeunload getter can only be used on instances of HTMLBodyElement"
    },
    {
      "path": "window.HTMLBodyElement.prototype.onbeforeunload",
      "propertyName": "_get",
      "property": "function onbeforeunload() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLBodyElement.prototype.onbeforeunload",
      "propertyName": "_set",
      "property": "function onbeforeunload() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLBodyElement.prototype.onbeforeunload",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLBodyElement.prototype.onbeforeunload",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLBodyElement.prototype.onhashchange",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLBodyElement.onhashchange getter can only be used on instances of HTMLBodyElement"
    },
    {
      "path": "window.HTMLBodyElement.prototype.onhashchange",
      "propertyName": "_get",
      "property": "function onhashchange() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLBodyElement.prototype.onhashchange",
      "propertyName": "_set",
      "property": "function onhashchange() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLBodyElement.prototype.onhashchange",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLBodyElement.prototype.onhashchange",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLBodyElement.prototype.onlanguagechange",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLBodyElement.onlanguagechange getter can only be used on instances of HTMLBodyElement"
    },
    {
      "path": "window.HTMLBodyElement.prototype.onlanguagechange",
      "propertyName": "_get",
      "property": "function onlanguagechange() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLBodyElement.prototype.onlanguagechange",
      "propertyName": "_set",
      "property": "function onlanguagechange() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLBodyElement.prototype.onlanguagechange",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLBodyElement.prototype.onlanguagechange",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLBodyElement.prototype.onmessage",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLBodyElement.onmessage getter can only be used on instances of HTMLBodyElement"
    },
    {
      "path": "window.HTMLBodyElement.prototype.onmessage",
      "propertyName": "_get",
      "property": "function onmessage() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLBodyElement.prototype.onmessage",
      "propertyName": "_set",
      "property": "function onmessage() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLBodyElement.prototype.onmessage",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLBodyElement.prototype.onmessage",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLBodyElement.prototype.onoffline",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLBodyElement.onoffline getter can only be used on instances of HTMLBodyElement"
    },
    {
      "path": "window.HTMLBodyElement.prototype.onoffline",
      "propertyName": "_get",
      "property": "function onoffline() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLBodyElement.prototype.onoffline",
      "propertyName": "_set",
      "property": "function onoffline() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLBodyElement.prototype.onoffline",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLBodyElement.prototype.onoffline",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLBodyElement.prototype.ononline",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLBodyElement.ononline getter can only be used on instances of HTMLBodyElement"
    },
    {
      "path": "window.HTMLBodyElement.prototype.ononline",
      "propertyName": "_get",
      "property": "function ononline() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLBodyElement.prototype.ononline",
      "propertyName": "_set",
      "property": "function ononline() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLBodyElement.prototype.ononline",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLBodyElement.prototype.ononline",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLBodyElement.prototype.onpagehide",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLBodyElement.onpagehide getter can only be used on instances of HTMLBodyElement"
    },
    {
      "path": "window.HTMLBodyElement.prototype.onpagehide",
      "propertyName": "_get",
      "property": "function onpagehide() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLBodyElement.prototype.onpagehide",
      "propertyName": "_set",
      "property": "function onpagehide() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLBodyElement.prototype.onpagehide",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLBodyElement.prototype.onpagehide",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLBodyElement.prototype.onpageshow",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLBodyElement.onpageshow getter can only be used on instances of HTMLBodyElement"
    },
    {
      "path": "window.HTMLBodyElement.prototype.onpageshow",
      "propertyName": "_get",
      "property": "function onpageshow() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLBodyElement.prototype.onpageshow",
      "propertyName": "_set",
      "property": "function onpageshow() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLBodyElement.prototype.onpageshow",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLBodyElement.prototype.onpageshow",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLBodyElement.prototype.onpopstate",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLBodyElement.onpopstate getter can only be used on instances of HTMLBodyElement"
    },
    {
      "path": "window.HTMLBodyElement.prototype.onpopstate",
      "propertyName": "_get",
      "property": "function onpopstate() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLBodyElement.prototype.onpopstate",
      "propertyName": "_set",
      "property": "function onpopstate() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLBodyElement.prototype.onpopstate",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLBodyElement.prototype.onpopstate",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLBodyElement.prototype.onstorage",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLBodyElement.onstorage getter can only be used on instances of HTMLBodyElement"
    },
    {
      "path": "window.HTMLBodyElement.prototype.onstorage",
      "propertyName": "_get",
      "property": "function onstorage() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLBodyElement.prototype.onstorage",
      "propertyName": "_set",
      "property": "function onstorage() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLBodyElement.prototype.onstorage",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLBodyElement.prototype.onstorage",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLBodyElement.prototype.onunload",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLBodyElement.onunload getter can only be used on instances of HTMLBodyElement"
    },
    {
      "path": "window.HTMLBodyElement.prototype.onunload",
      "propertyName": "_get",
      "property": "function onunload() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLBodyElement.prototype.onunload",
      "propertyName": "_set",
      "property": "function onunload() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLBodyElement.prototype.onunload",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLBodyElement.prototype.onunload",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLBodyElement",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.HTMLBodyElement",
      "propertyName": "_function",
      "property": "function HTMLBodyElement() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLButtonElement.prototype.disabled",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLButtonElement.disabled getter can only be used on instances of HTMLButtonElement"
    },
    {
      "path": "window.HTMLButtonElement.prototype.disabled",
      "propertyName": "_get",
      "property": "function disabled() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLButtonElement.prototype.disabled",
      "propertyName": "_set",
      "property": "function disabled() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLButtonElement.prototype.disabled",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLButtonElement.prototype.disabled",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLButtonElement.prototype.form",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLButtonElement.form getter can only be used on instances of HTMLButtonElement"
    },
    {
      "path": "window.HTMLButtonElement.prototype.form",
      "propertyName": "_get",
      "property": "function form() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLButtonElement.prototype.form",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLButtonElement.prototype.formAction",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLButtonElement.formAction getter can only be used on instances of HTMLButtonElement"
    },
    {
      "path": "window.HTMLButtonElement.prototype.formAction",
      "propertyName": "_get",
      "property": "function formAction() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLButtonElement.prototype.formAction",
      "propertyName": "_set",
      "property": "function formAction() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLButtonElement.prototype.formAction",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLButtonElement.prototype.formAction",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLButtonElement.prototype.formEnctype",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLButtonElement.formEnctype getter can only be used on instances of HTMLButtonElement"
    },
    {
      "path": "window.HTMLButtonElement.prototype.formEnctype",
      "propertyName": "_get",
      "property": "function formEnctype() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLButtonElement.prototype.formEnctype",
      "propertyName": "_set",
      "property": "function formEnctype() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLButtonElement.prototype.formEnctype",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLButtonElement.prototype.formEnctype",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLButtonElement.prototype.formMethod",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLButtonElement.formMethod getter can only be used on instances of HTMLButtonElement"
    },
    {
      "path": "window.HTMLButtonElement.prototype.formMethod",
      "propertyName": "_get",
      "property": "function formMethod() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLButtonElement.prototype.formMethod",
      "propertyName": "_set",
      "property": "function formMethod() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLButtonElement.prototype.formMethod",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLButtonElement.prototype.formMethod",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLButtonElement.prototype.type",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLButtonElement.type getter can only be used on instances of HTMLButtonElement"
    },
    {
      "path": "window.HTMLButtonElement.prototype.type",
      "propertyName": "_get",
      "property": "function type() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLButtonElement.prototype.type",
      "propertyName": "_set",
      "property": "function type() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLButtonElement.prototype.type",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLButtonElement.prototype.type",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLButtonElement.prototype.formNoValidate",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLButtonElement.formNoValidate getter can only be used on instances of HTMLButtonElement"
    },
    {
      "path": "window.HTMLButtonElement.prototype.formNoValidate",
      "propertyName": "_get",
      "property": "function formNoValidate() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLButtonElement.prototype.formNoValidate",
      "propertyName": "_set",
      "property": "function formNoValidate() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLButtonElement.prototype.formNoValidate",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLButtonElement.prototype.formNoValidate",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLButtonElement.prototype.formTarget",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLButtonElement.formTarget getter can only be used on instances of HTMLButtonElement"
    },
    {
      "path": "window.HTMLButtonElement.prototype.formTarget",
      "propertyName": "_get",
      "property": "function formTarget() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLButtonElement.prototype.formTarget",
      "propertyName": "_set",
      "property": "function formTarget() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLButtonElement.prototype.formTarget",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLButtonElement.prototype.formTarget",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLButtonElement.prototype.name",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLButtonElement.name getter can only be used on instances of HTMLButtonElement"
    },
    {
      "path": "window.HTMLButtonElement.prototype.name",
      "propertyName": "_get",
      "property": "function name() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLButtonElement.prototype.name",
      "propertyName": "_set",
      "property": "function name() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLButtonElement.prototype.name",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLButtonElement.prototype.name",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLButtonElement.prototype.value",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLButtonElement.value getter can only be used on instances of HTMLButtonElement"
    },
    {
      "path": "window.HTMLButtonElement.prototype.value",
      "propertyName": "_get",
      "property": "function value() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLButtonElement.prototype.value",
      "propertyName": "_set",
      "property": "function value() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLButtonElement.prototype.value",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLButtonElement.prototype.value",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLButtonElement.prototype.willValidate",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLButtonElement.willValidate getter can only be used on instances of HTMLButtonElement"
    },
    {
      "path": "window.HTMLButtonElement.prototype.willValidate",
      "propertyName": "_get",
      "property": "function willValidate() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLButtonElement.prototype.willValidate",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLButtonElement.prototype.validity",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLButtonElement.validity getter can only be used on instances of HTMLButtonElement"
    },
    {
      "path": "window.HTMLButtonElement.prototype.validity",
      "propertyName": "_get",
      "property": "function validity() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLButtonElement.prototype.validity",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLButtonElement.prototype.validationMessage",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLButtonElement.validationMessage getter can only be used on instances of HTMLButtonElement"
    },
    {
      "path": "window.HTMLButtonElement.prototype.validationMessage",
      "propertyName": "_get",
      "property": "function validationMessage() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLButtonElement.prototype.validationMessage",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLButtonElement.prototype.labels",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLButtonElement.labels getter can only be used on instances of HTMLButtonElement"
    },
    {
      "path": "window.HTMLButtonElement.prototype.labels",
      "propertyName": "_get",
      "property": "function labels() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLButtonElement.prototype.labels",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLButtonElement.prototype.checkValidity",
      "propertyName": "_function",
      "property": "function checkValidity() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLButtonElement.prototype.reportValidity",
      "propertyName": "_function",
      "property": "function reportValidity() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLButtonElement.prototype.setCustomValidity",
      "propertyName": "_function",
      "property": "function setCustomValidity() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLButtonElement",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.HTMLButtonElement",
      "propertyName": "_function",
      "property": "function HTMLButtonElement() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLCanvasElement.prototype.width",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLCanvasElement.width getter can only be used on instances of HTMLCanvasElement"
    },
    {
      "path": "window.HTMLCanvasElement.prototype.width",
      "propertyName": "_get",
      "property": "function width() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLCanvasElement.prototype.width",
      "propertyName": "_set",
      "property": "function width() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLCanvasElement.prototype.width",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLCanvasElement.prototype.width",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLCanvasElement.prototype.height",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLCanvasElement.height getter can only be used on instances of HTMLCanvasElement"
    },
    {
      "path": "window.HTMLCanvasElement.prototype.height",
      "propertyName": "_get",
      "property": "function height() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLCanvasElement.prototype.height",
      "propertyName": "_set",
      "property": "function height() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLCanvasElement.prototype.height",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLCanvasElement.prototype.height",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLCanvasElement.prototype.getContext",
      "propertyName": "_function",
      "property": "function getContext() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLCanvasElement.prototype.toDataURL",
      "propertyName": "_function",
      "property": "function toDataURL() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLCanvasElement.prototype.toBlob",
      "propertyName": "_function",
      "property": "function toBlob() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLCanvasElement.prototype.captureStream",
      "propertyName": "_function",
      "property": "function captureStream() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLCanvasElement",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.HTMLCanvasElement",
      "propertyName": "_function",
      "property": "function HTMLCanvasElement() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLCollection.prototype.length",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLCollection.length getter can only be used on instances of HTMLCollection"
    },
    {
      "path": "window.HTMLCollection.prototype.length",
      "propertyName": "_get",
      "property": "function length() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLCollection.prototype.length",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLCollection.prototype.item",
      "propertyName": "_function",
      "property": "function item() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLCollection.prototype.namedItem",
      "propertyName": "_function",
      "property": "function namedItem() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLCollection.prototype",
      "propertyName": "Symbol.iterator",
      "property": "REF: window.DOMStringList.prototype.Symbol(Symbol.iterator)"
    },
    {
      "path": "window.HTMLCollection",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.HTMLCollection",
      "propertyName": "_function",
      "property": "function HTMLCollection() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLDListElement.prototype.compact",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLDListElement.compact getter can only be used on instances of HTMLDListElement"
    },
    {
      "path": "window.HTMLDListElement.prototype.compact",
      "propertyName": "_get",
      "property": "function compact() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLDListElement.prototype.compact",
      "propertyName": "_set",
      "property": "function compact() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLDListElement.prototype.compact",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLDListElement.prototype.compact",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLDListElement",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.HTMLDListElement",
      "propertyName": "_function",
      "property": "function HTMLDListElement() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLDataElement.prototype.value",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLDataElement.value getter can only be used on instances of HTMLDataElement"
    },
    {
      "path": "window.HTMLDataElement.prototype.value",
      "propertyName": "_get",
      "property": "function value() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLDataElement.prototype.value",
      "propertyName": "_set",
      "property": "function value() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLDataElement.prototype.value",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLDataElement.prototype.value",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLDataElement",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.HTMLDataElement",
      "propertyName": "_function",
      "property": "function HTMLDataElement() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLDetailsElement.prototype.open",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLDetailsElement.open getter can only be used on instances of HTMLDetailsElement"
    },
    {
      "path": "window.HTMLDetailsElement.prototype.open",
      "propertyName": "_get",
      "property": "function open() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLDetailsElement.prototype.open",
      "propertyName": "_set",
      "property": "function open() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLDetailsElement.prototype.open",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLDetailsElement.prototype.open",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLDetailsElement",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.HTMLDetailsElement",
      "propertyName": "_function",
      "property": "function HTMLDetailsElement() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLDirectoryElement.prototype.compact",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLDirectoryElement.compact getter can only be used on instances of HTMLDirectoryElement"
    },
    {
      "path": "window.HTMLDirectoryElement.prototype.compact",
      "propertyName": "_get",
      "property": "function compact() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLDirectoryElement.prototype.compact",
      "propertyName": "_set",
      "property": "function compact() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLDirectoryElement.prototype.compact",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLDirectoryElement.prototype.compact",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLDirectoryElement",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.HTMLDirectoryElement",
      "propertyName": "_function",
      "property": "function HTMLDirectoryElement() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLDivElement.prototype.align",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLDivElement.align getter can only be used on instances of HTMLDivElement"
    },
    {
      "path": "window.HTMLDivElement.prototype.align",
      "propertyName": "_get",
      "property": "function align() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLDivElement.prototype.align",
      "propertyName": "_set",
      "property": "function align() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLDivElement.prototype.align",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLDivElement.prototype.align",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLDivElement",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.HTMLDivElement",
      "propertyName": "_function",
      "property": "function HTMLDivElement() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLDocument",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.HTMLDocument",
      "propertyName": "_function",
      "property": "function HTMLDocument() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.title",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLElement.title getter can only be used on instances of HTMLElement"
    },
    {
      "path": "window.HTMLElement.prototype.title",
      "propertyName": "_get",
      "property": "function title() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.title",
      "propertyName": "_set",
      "property": "function title() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.title",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.title",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.lang",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLElement.lang getter can only be used on instances of HTMLElement"
    },
    {
      "path": "window.HTMLElement.prototype.lang",
      "propertyName": "_get",
      "property": "function lang() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.lang",
      "propertyName": "_set",
      "property": "function lang() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.lang",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.lang",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.translate",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLElement.translate getter can only be used on instances of HTMLElement"
    },
    {
      "path": "window.HTMLElement.prototype.translate",
      "propertyName": "_get",
      "property": "function translate() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.translate",
      "propertyName": "_set",
      "property": "function translate() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.translate",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.translate",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.dir",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLElement.dir getter can only be used on instances of HTMLElement"
    },
    {
      "path": "window.HTMLElement.prototype.dir",
      "propertyName": "_get",
      "property": "function dir() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.dir",
      "propertyName": "_set",
      "property": "function dir() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.dir",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.dir",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.dataset",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLElement.dataset getter can only be used on instances of HTMLElement"
    },
    {
      "path": "window.HTMLElement.prototype.dataset",
      "propertyName": "_get",
      "property": "function dataset() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.dataset",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.hidden",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLElement.hidden getter can only be used on instances of HTMLElement"
    },
    {
      "path": "window.HTMLElement.prototype.hidden",
      "propertyName": "_get",
      "property": "function hidden() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.hidden",
      "propertyName": "_set",
      "property": "function hidden() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.hidden",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.hidden",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.tabIndex",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLElement.tabIndex getter can only be used on instances of HTMLElement"
    },
    {
      "path": "window.HTMLElement.prototype.tabIndex",
      "propertyName": "_get",
      "property": "function tabIndex() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.tabIndex",
      "propertyName": "_set",
      "property": "function tabIndex() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.tabIndex",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.tabIndex",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.accessKey",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLElement.accessKey getter can only be used on instances of HTMLElement"
    },
    {
      "path": "window.HTMLElement.prototype.accessKey",
      "propertyName": "_get",
      "property": "function accessKey() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.accessKey",
      "propertyName": "_set",
      "property": "function accessKey() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.accessKey",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.accessKey",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.draggable",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLElement.draggable getter can only be used on instances of HTMLElement"
    },
    {
      "path": "window.HTMLElement.prototype.draggable",
      "propertyName": "_get",
      "property": "function draggable() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.draggable",
      "propertyName": "_set",
      "property": "function draggable() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.draggable",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.draggable",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.spellcheck",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLElement.spellcheck getter can only be used on instances of HTMLElement"
    },
    {
      "path": "window.HTMLElement.prototype.spellcheck",
      "propertyName": "_get",
      "property": "function spellcheck() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.spellcheck",
      "propertyName": "_set",
      "property": "function spellcheck() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.spellcheck",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.spellcheck",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.innerText",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLElement.innerText getter can only be used on instances of HTMLElement"
    },
    {
      "path": "window.HTMLElement.prototype.innerText",
      "propertyName": "_get",
      "property": "function innerText() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.innerText",
      "propertyName": "_set",
      "property": "function innerText() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.innerText",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.innerText",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.contentEditable",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLElement.contentEditable getter can only be used on instances of HTMLElement"
    },
    {
      "path": "window.HTMLElement.prototype.contentEditable",
      "propertyName": "_get",
      "property": "function contentEditable() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.contentEditable",
      "propertyName": "_set",
      "property": "function contentEditable() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.contentEditable",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.contentEditable",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.isContentEditable",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLElement.isContentEditable getter can only be used on instances of HTMLElement"
    },
    {
      "path": "window.HTMLElement.prototype.isContentEditable",
      "propertyName": "_get",
      "property": "function isContentEditable() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.isContentEditable",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.offsetParent",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLElement.offsetParent getter can only be used on instances of HTMLElement"
    },
    {
      "path": "window.HTMLElement.prototype.offsetParent",
      "propertyName": "_get",
      "property": "function offsetParent() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.offsetParent",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.offsetTop",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLElement.offsetTop getter can only be used on instances of HTMLElement"
    },
    {
      "path": "window.HTMLElement.prototype.offsetTop",
      "propertyName": "_get",
      "property": "function offsetTop() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.offsetTop",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.offsetLeft",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLElement.offsetLeft getter can only be used on instances of HTMLElement"
    },
    {
      "path": "window.HTMLElement.prototype.offsetLeft",
      "propertyName": "_get",
      "property": "function offsetLeft() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.offsetLeft",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.offsetWidth",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLElement.offsetWidth getter can only be used on instances of HTMLElement"
    },
    {
      "path": "window.HTMLElement.prototype.offsetWidth",
      "propertyName": "_get",
      "property": "function offsetWidth() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.offsetWidth",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.offsetHeight",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLElement.offsetHeight getter can only be used on instances of HTMLElement"
    },
    {
      "path": "window.HTMLElement.prototype.offsetHeight",
      "propertyName": "_get",
      "property": "function offsetHeight() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.offsetHeight",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.outerText",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLElement.outerText getter can only be used on instances of HTMLElement"
    },
    {
      "path": "window.HTMLElement.prototype.outerText",
      "propertyName": "_get",
      "property": "function outerText() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.outerText",
      "propertyName": "_set",
      "property": "function outerText() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.outerText",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.outerText",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.inputMode",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLElement.inputMode getter can only be used on instances of HTMLElement"
    },
    {
      "path": "window.HTMLElement.prototype.inputMode",
      "propertyName": "_get",
      "property": "function inputMode() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.inputMode",
      "propertyName": "_set",
      "property": "function inputMode() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.inputMode",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.inputMode",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.style",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLElement.style getter can only be used on instances of HTMLElement"
    },
    {
      "path": "window.HTMLElement.prototype.style",
      "propertyName": "_get",
      "property": "function style() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.style",
      "propertyName": "_set",
      "property": "function style() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.style",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.style",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onabort",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLElement.onabort getter can only be used on instances of HTMLElement"
    },
    {
      "path": "window.HTMLElement.prototype.onabort",
      "propertyName": "_get",
      "property": "function onabort() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onabort",
      "propertyName": "_set",
      "property": "function onabort() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onabort",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onabort",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onblur",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLElement.onblur getter can only be used on instances of HTMLElement"
    },
    {
      "path": "window.HTMLElement.prototype.onblur",
      "propertyName": "_get",
      "property": "function onblur() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onblur",
      "propertyName": "_set",
      "property": "function onblur() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onblur",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onblur",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.oncanplay",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLElement.oncanplay getter can only be used on instances of HTMLElement"
    },
    {
      "path": "window.HTMLElement.prototype.oncanplay",
      "propertyName": "_get",
      "property": "function oncanplay() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.oncanplay",
      "propertyName": "_set",
      "property": "function oncanplay() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.oncanplay",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.oncanplay",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.oncanplaythrough",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLElement.oncanplaythrough getter can only be used on instances of HTMLElement"
    },
    {
      "path": "window.HTMLElement.prototype.oncanplaythrough",
      "propertyName": "_get",
      "property": "function oncanplaythrough() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.oncanplaythrough",
      "propertyName": "_set",
      "property": "function oncanplaythrough() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.oncanplaythrough",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.oncanplaythrough",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onchange",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLElement.onchange getter can only be used on instances of HTMLElement"
    },
    {
      "path": "window.HTMLElement.prototype.onchange",
      "propertyName": "_get",
      "property": "function onchange() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onchange",
      "propertyName": "_set",
      "property": "function onchange() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onchange",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onchange",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onclick",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLElement.onclick getter can only be used on instances of HTMLElement"
    },
    {
      "path": "window.HTMLElement.prototype.onclick",
      "propertyName": "_get",
      "property": "function onclick() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onclick",
      "propertyName": "_set",
      "property": "function onclick() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onclick",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onclick",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.oncontextmenu",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLElement.oncontextmenu getter can only be used on instances of HTMLElement"
    },
    {
      "path": "window.HTMLElement.prototype.oncontextmenu",
      "propertyName": "_get",
      "property": "function oncontextmenu() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.oncontextmenu",
      "propertyName": "_set",
      "property": "function oncontextmenu() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.oncontextmenu",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.oncontextmenu",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.oncuechange",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLElement.oncuechange getter can only be used on instances of HTMLElement"
    },
    {
      "path": "window.HTMLElement.prototype.oncuechange",
      "propertyName": "_get",
      "property": "function oncuechange() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.oncuechange",
      "propertyName": "_set",
      "property": "function oncuechange() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.oncuechange",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.oncuechange",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.ondblclick",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLElement.ondblclick getter can only be used on instances of HTMLElement"
    },
    {
      "path": "window.HTMLElement.prototype.ondblclick",
      "propertyName": "_get",
      "property": "function ondblclick() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.ondblclick",
      "propertyName": "_set",
      "property": "function ondblclick() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.ondblclick",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.ondblclick",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.ondrag",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLElement.ondrag getter can only be used on instances of HTMLElement"
    },
    {
      "path": "window.HTMLElement.prototype.ondrag",
      "propertyName": "_get",
      "property": "function ondrag() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.ondrag",
      "propertyName": "_set",
      "property": "function ondrag() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.ondrag",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.ondrag",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.ondragend",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLElement.ondragend getter can only be used on instances of HTMLElement"
    },
    {
      "path": "window.HTMLElement.prototype.ondragend",
      "propertyName": "_get",
      "property": "function ondragend() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.ondragend",
      "propertyName": "_set",
      "property": "function ondragend() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.ondragend",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.ondragend",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.ondragenter",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLElement.ondragenter getter can only be used on instances of HTMLElement"
    },
    {
      "path": "window.HTMLElement.prototype.ondragenter",
      "propertyName": "_get",
      "property": "function ondragenter() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.ondragenter",
      "propertyName": "_set",
      "property": "function ondragenter() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.ondragenter",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.ondragenter",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.ondragleave",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLElement.ondragleave getter can only be used on instances of HTMLElement"
    },
    {
      "path": "window.HTMLElement.prototype.ondragleave",
      "propertyName": "_get",
      "property": "function ondragleave() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.ondragleave",
      "propertyName": "_set",
      "property": "function ondragleave() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.ondragleave",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.ondragleave",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.ondragover",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLElement.ondragover getter can only be used on instances of HTMLElement"
    },
    {
      "path": "window.HTMLElement.prototype.ondragover",
      "propertyName": "_get",
      "property": "function ondragover() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.ondragover",
      "propertyName": "_set",
      "property": "function ondragover() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.ondragover",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.ondragover",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.ondragstart",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLElement.ondragstart getter can only be used on instances of HTMLElement"
    },
    {
      "path": "window.HTMLElement.prototype.ondragstart",
      "propertyName": "_get",
      "property": "function ondragstart() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.ondragstart",
      "propertyName": "_set",
      "property": "function ondragstart() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.ondragstart",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.ondragstart",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.ondrop",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLElement.ondrop getter can only be used on instances of HTMLElement"
    },
    {
      "path": "window.HTMLElement.prototype.ondrop",
      "propertyName": "_get",
      "property": "function ondrop() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.ondrop",
      "propertyName": "_set",
      "property": "function ondrop() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.ondrop",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.ondrop",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.ondurationchange",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLElement.ondurationchange getter can only be used on instances of HTMLElement"
    },
    {
      "path": "window.HTMLElement.prototype.ondurationchange",
      "propertyName": "_get",
      "property": "function ondurationchange() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.ondurationchange",
      "propertyName": "_set",
      "property": "function ondurationchange() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.ondurationchange",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.ondurationchange",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onemptied",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLElement.onemptied getter can only be used on instances of HTMLElement"
    },
    {
      "path": "window.HTMLElement.prototype.onemptied",
      "propertyName": "_get",
      "property": "function onemptied() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onemptied",
      "propertyName": "_set",
      "property": "function onemptied() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onemptied",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onemptied",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onended",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLElement.onended getter can only be used on instances of HTMLElement"
    },
    {
      "path": "window.HTMLElement.prototype.onended",
      "propertyName": "_get",
      "property": "function onended() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onended",
      "propertyName": "_set",
      "property": "function onended() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onended",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onended",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onerror",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLElement.onerror getter can only be used on instances of HTMLElement"
    },
    {
      "path": "window.HTMLElement.prototype.onerror",
      "propertyName": "_get",
      "property": "function onerror() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onerror",
      "propertyName": "_set",
      "property": "function onerror() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onerror",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onerror",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onfocus",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLElement.onfocus getter can only be used on instances of HTMLElement"
    },
    {
      "path": "window.HTMLElement.prototype.onfocus",
      "propertyName": "_get",
      "property": "function onfocus() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onfocus",
      "propertyName": "_set",
      "property": "function onfocus() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onfocus",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onfocus",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.oninput",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLElement.oninput getter can only be used on instances of HTMLElement"
    },
    {
      "path": "window.HTMLElement.prototype.oninput",
      "propertyName": "_get",
      "property": "function oninput() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.oninput",
      "propertyName": "_set",
      "property": "function oninput() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.oninput",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.oninput",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.oninvalid",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLElement.oninvalid getter can only be used on instances of HTMLElement"
    },
    {
      "path": "window.HTMLElement.prototype.oninvalid",
      "propertyName": "_get",
      "property": "function oninvalid() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.oninvalid",
      "propertyName": "_set",
      "property": "function oninvalid() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.oninvalid",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.oninvalid",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onkeydown",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLElement.onkeydown getter can only be used on instances of HTMLElement"
    },
    {
      "path": "window.HTMLElement.prototype.onkeydown",
      "propertyName": "_get",
      "property": "function onkeydown() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onkeydown",
      "propertyName": "_set",
      "property": "function onkeydown() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onkeydown",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onkeydown",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onkeypress",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLElement.onkeypress getter can only be used on instances of HTMLElement"
    },
    {
      "path": "window.HTMLElement.prototype.onkeypress",
      "propertyName": "_get",
      "property": "function onkeypress() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onkeypress",
      "propertyName": "_set",
      "property": "function onkeypress() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onkeypress",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onkeypress",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onkeyup",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLElement.onkeyup getter can only be used on instances of HTMLElement"
    },
    {
      "path": "window.HTMLElement.prototype.onkeyup",
      "propertyName": "_get",
      "property": "function onkeyup() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onkeyup",
      "propertyName": "_set",
      "property": "function onkeyup() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onkeyup",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onkeyup",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onload",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLElement.onload getter can only be used on instances of HTMLElement"
    },
    {
      "path": "window.HTMLElement.prototype.onload",
      "propertyName": "_get",
      "property": "function onload() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onload",
      "propertyName": "_set",
      "property": "function onload() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onload",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onload",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onloadeddata",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLElement.onloadeddata getter can only be used on instances of HTMLElement"
    },
    {
      "path": "window.HTMLElement.prototype.onloadeddata",
      "propertyName": "_get",
      "property": "function onloadeddata() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onloadeddata",
      "propertyName": "_set",
      "property": "function onloadeddata() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onloadeddata",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onloadeddata",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onloadedmetadata",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLElement.onloadedmetadata getter can only be used on instances of HTMLElement"
    },
    {
      "path": "window.HTMLElement.prototype.onloadedmetadata",
      "propertyName": "_get",
      "property": "function onloadedmetadata() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onloadedmetadata",
      "propertyName": "_set",
      "property": "function onloadedmetadata() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onloadedmetadata",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onloadedmetadata",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onloadstart",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLElement.onloadstart getter can only be used on instances of HTMLElement"
    },
    {
      "path": "window.HTMLElement.prototype.onloadstart",
      "propertyName": "_get",
      "property": "function onloadstart() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onloadstart",
      "propertyName": "_set",
      "property": "function onloadstart() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onloadstart",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onloadstart",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onmousedown",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLElement.onmousedown getter can only be used on instances of HTMLElement"
    },
    {
      "path": "window.HTMLElement.prototype.onmousedown",
      "propertyName": "_get",
      "property": "function onmousedown() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onmousedown",
      "propertyName": "_set",
      "property": "function onmousedown() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onmousedown",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onmousedown",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onmouseenter",
      "propertyName": "_get",
      "property": "function onmouseenter() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onmouseenter",
      "propertyName": "_set",
      "property": "function onmouseenter() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onmouseenter",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onmouseenter",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onmouseleave",
      "propertyName": "_get",
      "property": "function onmouseleave() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onmouseleave",
      "propertyName": "_set",
      "property": "function onmouseleave() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onmouseleave",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onmouseleave",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onmousemove",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLElement.onmousemove getter can only be used on instances of HTMLElement"
    },
    {
      "path": "window.HTMLElement.prototype.onmousemove",
      "propertyName": "_get",
      "property": "function onmousemove() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onmousemove",
      "propertyName": "_set",
      "property": "function onmousemove() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onmousemove",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onmousemove",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onmouseout",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLElement.onmouseout getter can only be used on instances of HTMLElement"
    },
    {
      "path": "window.HTMLElement.prototype.onmouseout",
      "propertyName": "_get",
      "property": "function onmouseout() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onmouseout",
      "propertyName": "_set",
      "property": "function onmouseout() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onmouseout",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onmouseout",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onmouseover",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLElement.onmouseover getter can only be used on instances of HTMLElement"
    },
    {
      "path": "window.HTMLElement.prototype.onmouseover",
      "propertyName": "_get",
      "property": "function onmouseover() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onmouseover",
      "propertyName": "_set",
      "property": "function onmouseover() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onmouseover",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onmouseover",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onmouseup",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLElement.onmouseup getter can only be used on instances of HTMLElement"
    },
    {
      "path": "window.HTMLElement.prototype.onmouseup",
      "propertyName": "_get",
      "property": "function onmouseup() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onmouseup",
      "propertyName": "_set",
      "property": "function onmouseup() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onmouseup",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onmouseup",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onmousewheel",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLElement.onmousewheel getter can only be used on instances of HTMLElement"
    },
    {
      "path": "window.HTMLElement.prototype.onmousewheel",
      "propertyName": "_get",
      "property": "function onmousewheel() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onmousewheel",
      "propertyName": "_set",
      "property": "function onmousewheel() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onmousewheel",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onmousewheel",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onpause",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLElement.onpause getter can only be used on instances of HTMLElement"
    },
    {
      "path": "window.HTMLElement.prototype.onpause",
      "propertyName": "_get",
      "property": "function onpause() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onpause",
      "propertyName": "_set",
      "property": "function onpause() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onpause",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onpause",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onplay",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLElement.onplay getter can only be used on instances of HTMLElement"
    },
    {
      "path": "window.HTMLElement.prototype.onplay",
      "propertyName": "_get",
      "property": "function onplay() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onplay",
      "propertyName": "_set",
      "property": "function onplay() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onplay",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onplay",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onplaying",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLElement.onplaying getter can only be used on instances of HTMLElement"
    },
    {
      "path": "window.HTMLElement.prototype.onplaying",
      "propertyName": "_get",
      "property": "function onplaying() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onplaying",
      "propertyName": "_set",
      "property": "function onplaying() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onplaying",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onplaying",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onprogress",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLElement.onprogress getter can only be used on instances of HTMLElement"
    },
    {
      "path": "window.HTMLElement.prototype.onprogress",
      "propertyName": "_get",
      "property": "function onprogress() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onprogress",
      "propertyName": "_set",
      "property": "function onprogress() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onprogress",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onprogress",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onratechange",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLElement.onratechange getter can only be used on instances of HTMLElement"
    },
    {
      "path": "window.HTMLElement.prototype.onratechange",
      "propertyName": "_get",
      "property": "function onratechange() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onratechange",
      "propertyName": "_set",
      "property": "function onratechange() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onratechange",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onratechange",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onreset",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLElement.onreset getter can only be used on instances of HTMLElement"
    },
    {
      "path": "window.HTMLElement.prototype.onreset",
      "propertyName": "_get",
      "property": "function onreset() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onreset",
      "propertyName": "_set",
      "property": "function onreset() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onreset",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onreset",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onresize",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLElement.onresize getter can only be used on instances of HTMLElement"
    },
    {
      "path": "window.HTMLElement.prototype.onresize",
      "propertyName": "_get",
      "property": "function onresize() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onresize",
      "propertyName": "_set",
      "property": "function onresize() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onresize",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onresize",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onscroll",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLElement.onscroll getter can only be used on instances of HTMLElement"
    },
    {
      "path": "window.HTMLElement.prototype.onscroll",
      "propertyName": "_get",
      "property": "function onscroll() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onscroll",
      "propertyName": "_set",
      "property": "function onscroll() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onscroll",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onscroll",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onseeked",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLElement.onseeked getter can only be used on instances of HTMLElement"
    },
    {
      "path": "window.HTMLElement.prototype.onseeked",
      "propertyName": "_get",
      "property": "function onseeked() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onseeked",
      "propertyName": "_set",
      "property": "function onseeked() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onseeked",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onseeked",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onseeking",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLElement.onseeking getter can only be used on instances of HTMLElement"
    },
    {
      "path": "window.HTMLElement.prototype.onseeking",
      "propertyName": "_get",
      "property": "function onseeking() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onseeking",
      "propertyName": "_set",
      "property": "function onseeking() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onseeking",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onseeking",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onselect",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLElement.onselect getter can only be used on instances of HTMLElement"
    },
    {
      "path": "window.HTMLElement.prototype.onselect",
      "propertyName": "_get",
      "property": "function onselect() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onselect",
      "propertyName": "_set",
      "property": "function onselect() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onselect",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onselect",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onstalled",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLElement.onstalled getter can only be used on instances of HTMLElement"
    },
    {
      "path": "window.HTMLElement.prototype.onstalled",
      "propertyName": "_get",
      "property": "function onstalled() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onstalled",
      "propertyName": "_set",
      "property": "function onstalled() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onstalled",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onstalled",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onsubmit",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLElement.onsubmit getter can only be used on instances of HTMLElement"
    },
    {
      "path": "window.HTMLElement.prototype.onsubmit",
      "propertyName": "_get",
      "property": "function onsubmit() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onsubmit",
      "propertyName": "_set",
      "property": "function onsubmit() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onsubmit",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onsubmit",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onsuspend",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLElement.onsuspend getter can only be used on instances of HTMLElement"
    },
    {
      "path": "window.HTMLElement.prototype.onsuspend",
      "propertyName": "_get",
      "property": "function onsuspend() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onsuspend",
      "propertyName": "_set",
      "property": "function onsuspend() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onsuspend",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onsuspend",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.ontimeupdate",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLElement.ontimeupdate getter can only be used on instances of HTMLElement"
    },
    {
      "path": "window.HTMLElement.prototype.ontimeupdate",
      "propertyName": "_get",
      "property": "function ontimeupdate() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.ontimeupdate",
      "propertyName": "_set",
      "property": "function ontimeupdate() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.ontimeupdate",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.ontimeupdate",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.ontoggle",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLElement.ontoggle getter can only be used on instances of HTMLElement"
    },
    {
      "path": "window.HTMLElement.prototype.ontoggle",
      "propertyName": "_get",
      "property": "function ontoggle() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.ontoggle",
      "propertyName": "_set",
      "property": "function ontoggle() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.ontoggle",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.ontoggle",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onvolumechange",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLElement.onvolumechange getter can only be used on instances of HTMLElement"
    },
    {
      "path": "window.HTMLElement.prototype.onvolumechange",
      "propertyName": "_get",
      "property": "function onvolumechange() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onvolumechange",
      "propertyName": "_set",
      "property": "function onvolumechange() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onvolumechange",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onvolumechange",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onwaiting",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLElement.onwaiting getter can only be used on instances of HTMLElement"
    },
    {
      "path": "window.HTMLElement.prototype.onwaiting",
      "propertyName": "_get",
      "property": "function onwaiting() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onwaiting",
      "propertyName": "_set",
      "property": "function onwaiting() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onwaiting",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onwaiting",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.ontransitionend",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLElement.ontransitionend getter can only be used on instances of HTMLElement"
    },
    {
      "path": "window.HTMLElement.prototype.ontransitionend",
      "propertyName": "_get",
      "property": "function ontransitionend() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.ontransitionend",
      "propertyName": "_set",
      "property": "function ontransitionend() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.ontransitionend",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.ontransitionend",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onanimationend",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLElement.onanimationend getter can only be used on instances of HTMLElement"
    },
    {
      "path": "window.HTMLElement.prototype.onanimationend",
      "propertyName": "_get",
      "property": "function onanimationend() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onanimationend",
      "propertyName": "_set",
      "property": "function onanimationend() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onanimationend",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onanimationend",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onanimationiteration",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLElement.onanimationiteration getter can only be used on instances of HTMLElement"
    },
    {
      "path": "window.HTMLElement.prototype.onanimationiteration",
      "propertyName": "_get",
      "property": "function onanimationiteration() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onanimationiteration",
      "propertyName": "_set",
      "property": "function onanimationiteration() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onanimationiteration",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onanimationiteration",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onanimationstart",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLElement.onanimationstart getter can only be used on instances of HTMLElement"
    },
    {
      "path": "window.HTMLElement.prototype.onanimationstart",
      "propertyName": "_get",
      "property": "function onanimationstart() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onanimationstart",
      "propertyName": "_set",
      "property": "function onanimationstart() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onanimationstart",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onanimationstart",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.ongotpointercapture",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLElement.ongotpointercapture getter can only be used on instances of HTMLElement"
    },
    {
      "path": "window.HTMLElement.prototype.ongotpointercapture",
      "propertyName": "_get",
      "property": "function ongotpointercapture() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.ongotpointercapture",
      "propertyName": "_set",
      "property": "function ongotpointercapture() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.ongotpointercapture",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.ongotpointercapture",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onlostpointercapture",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLElement.onlostpointercapture getter can only be used on instances of HTMLElement"
    },
    {
      "path": "window.HTMLElement.prototype.onlostpointercapture",
      "propertyName": "_get",
      "property": "function onlostpointercapture() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onlostpointercapture",
      "propertyName": "_set",
      "property": "function onlostpointercapture() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onlostpointercapture",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onlostpointercapture",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onpointerdown",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLElement.onpointerdown getter can only be used on instances of HTMLElement"
    },
    {
      "path": "window.HTMLElement.prototype.onpointerdown",
      "propertyName": "_get",
      "property": "function onpointerdown() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onpointerdown",
      "propertyName": "_set",
      "property": "function onpointerdown() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onpointerdown",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onpointerdown",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onpointermove",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLElement.onpointermove getter can only be used on instances of HTMLElement"
    },
    {
      "path": "window.HTMLElement.prototype.onpointermove",
      "propertyName": "_get",
      "property": "function onpointermove() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onpointermove",
      "propertyName": "_set",
      "property": "function onpointermove() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onpointermove",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onpointermove",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onpointerup",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLElement.onpointerup getter can only be used on instances of HTMLElement"
    },
    {
      "path": "window.HTMLElement.prototype.onpointerup",
      "propertyName": "_get",
      "property": "function onpointerup() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onpointerup",
      "propertyName": "_set",
      "property": "function onpointerup() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onpointerup",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onpointerup",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onpointercancel",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLElement.onpointercancel getter can only be used on instances of HTMLElement"
    },
    {
      "path": "window.HTMLElement.prototype.onpointercancel",
      "propertyName": "_get",
      "property": "function onpointercancel() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onpointercancel",
      "propertyName": "_set",
      "property": "function onpointercancel() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onpointercancel",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onpointercancel",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onpointerover",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLElement.onpointerover getter can only be used on instances of HTMLElement"
    },
    {
      "path": "window.HTMLElement.prototype.onpointerover",
      "propertyName": "_get",
      "property": "function onpointerover() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onpointerover",
      "propertyName": "_set",
      "property": "function onpointerover() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onpointerover",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onpointerover",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onpointerout",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLElement.onpointerout getter can only be used on instances of HTMLElement"
    },
    {
      "path": "window.HTMLElement.prototype.onpointerout",
      "propertyName": "_get",
      "property": "function onpointerout() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onpointerout",
      "propertyName": "_set",
      "property": "function onpointerout() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onpointerout",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onpointerout",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onpointerenter",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLElement.onpointerenter getter can only be used on instances of HTMLElement"
    },
    {
      "path": "window.HTMLElement.prototype.onpointerenter",
      "propertyName": "_get",
      "property": "function onpointerenter() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onpointerenter",
      "propertyName": "_set",
      "property": "function onpointerenter() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onpointerenter",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onpointerenter",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onpointerleave",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLElement.onpointerleave getter can only be used on instances of HTMLElement"
    },
    {
      "path": "window.HTMLElement.prototype.onpointerleave",
      "propertyName": "_get",
      "property": "function onpointerleave() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onpointerleave",
      "propertyName": "_set",
      "property": "function onpointerleave() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onpointerleave",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onpointerleave",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onwheel",
      "propertyName": "_flags",
      "property": "c"
    },
    {
      "path": "window.HTMLElement.prototype.onwheel",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLElement.onwheel getter can only be used on instances of HTMLElement"
    },
    {
      "path": "window.HTMLElement.prototype.onwheel",
      "propertyName": "_get",
      "property": "function onwheel() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onwheel",
      "propertyName": "_set",
      "property": "function onwheel() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onwheel",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.onwheel",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.click",
      "propertyName": "_function",
      "property": "function click() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.focus",
      "propertyName": "_function",
      "property": "function focus() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement.prototype.blur",
      "propertyName": "_function",
      "property": "function blur() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLElement",
      "propertyName": "new()",
      "property": "TypeError: new.target is not a valid custom element constructor"
    },
    {
      "path": "window.HTMLElement",
      "propertyName": "_function",
      "property": "function HTMLElement() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLEmbedElement.prototype.align",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLEmbedElement.align getter can only be used on instances of HTMLEmbedElement"
    },
    {
      "path": "window.HTMLEmbedElement.prototype.align",
      "propertyName": "_get",
      "property": "function align() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLEmbedElement.prototype.align",
      "propertyName": "_set",
      "property": "function align() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLEmbedElement.prototype.align",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLEmbedElement.prototype.align",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLEmbedElement.prototype.height",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLEmbedElement.height getter can only be used on instances of HTMLEmbedElement"
    },
    {
      "path": "window.HTMLEmbedElement.prototype.height",
      "propertyName": "_get",
      "property": "function height() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLEmbedElement.prototype.height",
      "propertyName": "_set",
      "property": "function height() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLEmbedElement.prototype.height",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLEmbedElement.prototype.height",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLEmbedElement.prototype.name",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLEmbedElement.name getter can only be used on instances of HTMLEmbedElement"
    },
    {
      "path": "window.HTMLEmbedElement.prototype.name",
      "propertyName": "_get",
      "property": "function name() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLEmbedElement.prototype.name",
      "propertyName": "_set",
      "property": "function name() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLEmbedElement.prototype.name",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLEmbedElement.prototype.name",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLEmbedElement.prototype.src",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLEmbedElement.src getter can only be used on instances of HTMLEmbedElement"
    },
    {
      "path": "window.HTMLEmbedElement.prototype.src",
      "propertyName": "_get",
      "property": "function src() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLEmbedElement.prototype.src",
      "propertyName": "_set",
      "property": "function src() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLEmbedElement.prototype.src",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLEmbedElement.prototype.src",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLEmbedElement.prototype.type",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLEmbedElement.type getter can only be used on instances of HTMLEmbedElement"
    },
    {
      "path": "window.HTMLEmbedElement.prototype.type",
      "propertyName": "_get",
      "property": "function type() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLEmbedElement.prototype.type",
      "propertyName": "_set",
      "property": "function type() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLEmbedElement.prototype.type",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLEmbedElement.prototype.type",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLEmbedElement.prototype.width",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLEmbedElement.width getter can only be used on instances of HTMLEmbedElement"
    },
    {
      "path": "window.HTMLEmbedElement.prototype.width",
      "propertyName": "_get",
      "property": "function width() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLEmbedElement.prototype.width",
      "propertyName": "_set",
      "property": "function width() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLEmbedElement.prototype.width",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLEmbedElement.prototype.width",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLEmbedElement.prototype.getSVGDocument",
      "propertyName": "_function",
      "property": "function getSVGDocument() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLEmbedElement",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.HTMLEmbedElement",
      "propertyName": "_function",
      "property": "function HTMLEmbedElement() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFieldSetElement.prototype.disabled",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLFieldSetElement.disabled getter can only be used on instances of HTMLFieldSetElement"
    },
    {
      "path": "window.HTMLFieldSetElement.prototype.disabled",
      "propertyName": "_get",
      "property": "function disabled() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFieldSetElement.prototype.disabled",
      "propertyName": "_set",
      "property": "function disabled() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFieldSetElement.prototype.disabled",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFieldSetElement.prototype.disabled",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFieldSetElement.prototype.form",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLFieldSetElement.form getter can only be used on instances of HTMLFieldSetElement"
    },
    {
      "path": "window.HTMLFieldSetElement.prototype.form",
      "propertyName": "_get",
      "property": "function form() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFieldSetElement.prototype.form",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFieldSetElement.prototype.name",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLFieldSetElement.name getter can only be used on instances of HTMLFieldSetElement"
    },
    {
      "path": "window.HTMLFieldSetElement.prototype.name",
      "propertyName": "_get",
      "property": "function name() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFieldSetElement.prototype.name",
      "propertyName": "_set",
      "property": "function name() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFieldSetElement.prototype.name",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFieldSetElement.prototype.name",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFieldSetElement.prototype.type",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLFieldSetElement.type getter can only be used on instances of HTMLFieldSetElement"
    },
    {
      "path": "window.HTMLFieldSetElement.prototype.type",
      "propertyName": "_get",
      "property": "function type() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFieldSetElement.prototype.type",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFieldSetElement.prototype.elements",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLFieldSetElement.elements getter can only be used on instances of HTMLFieldSetElement"
    },
    {
      "path": "window.HTMLFieldSetElement.prototype.elements",
      "propertyName": "_get",
      "property": "function elements() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFieldSetElement.prototype.elements",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFieldSetElement.prototype.willValidate",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLFieldSetElement.willValidate getter can only be used on instances of HTMLFieldSetElement"
    },
    {
      "path": "window.HTMLFieldSetElement.prototype.willValidate",
      "propertyName": "_get",
      "property": "function willValidate() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFieldSetElement.prototype.willValidate",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFieldSetElement.prototype.validity",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLFieldSetElement.validity getter can only be used on instances of HTMLFieldSetElement"
    },
    {
      "path": "window.HTMLFieldSetElement.prototype.validity",
      "propertyName": "_get",
      "property": "function validity() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFieldSetElement.prototype.validity",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFieldSetElement.prototype.validationMessage",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLFieldSetElement.validationMessage getter can only be used on instances of HTMLFieldSetElement"
    },
    {
      "path": "window.HTMLFieldSetElement.prototype.validationMessage",
      "propertyName": "_get",
      "property": "function validationMessage() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFieldSetElement.prototype.validationMessage",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFieldSetElement.prototype.checkValidity",
      "propertyName": "_function",
      "property": "function checkValidity() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFieldSetElement.prototype.reportValidity",
      "propertyName": "_function",
      "property": "function reportValidity() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFieldSetElement.prototype.setCustomValidity",
      "propertyName": "_function",
      "property": "function setCustomValidity() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFieldSetElement",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.HTMLFieldSetElement",
      "propertyName": "_function",
      "property": "function HTMLFieldSetElement() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFontElement.prototype.color",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLFontElement.color getter can only be used on instances of HTMLFontElement"
    },
    {
      "path": "window.HTMLFontElement.prototype.color",
      "propertyName": "_get",
      "property": "function color() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFontElement.prototype.color",
      "propertyName": "_set",
      "property": "function color() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFontElement.prototype.color",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFontElement.prototype.color",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFontElement.prototype.face",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLFontElement.face getter can only be used on instances of HTMLFontElement"
    },
    {
      "path": "window.HTMLFontElement.prototype.face",
      "propertyName": "_get",
      "property": "function face() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFontElement.prototype.face",
      "propertyName": "_set",
      "property": "function face() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFontElement.prototype.face",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFontElement.prototype.face",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFontElement.prototype.size",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLFontElement.size getter can only be used on instances of HTMLFontElement"
    },
    {
      "path": "window.HTMLFontElement.prototype.size",
      "propertyName": "_get",
      "property": "function size() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFontElement.prototype.size",
      "propertyName": "_set",
      "property": "function size() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFontElement.prototype.size",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFontElement.prototype.size",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFontElement",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.HTMLFontElement",
      "propertyName": "_function",
      "property": "function HTMLFontElement() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFormControlsCollection.prototype.namedItem",
      "propertyName": "_function",
      "property": "function namedItem() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFormControlsCollection",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.HTMLFormControlsCollection",
      "propertyName": "_function",
      "property": "function HTMLFormControlsCollection() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFormElement.prototype.acceptCharset",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLFormElement.acceptCharset getter can only be used on instances of HTMLFormElement"
    },
    {
      "path": "window.HTMLFormElement.prototype.acceptCharset",
      "propertyName": "_get",
      "property": "function acceptCharset() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFormElement.prototype.acceptCharset",
      "propertyName": "_set",
      "property": "function acceptCharset() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFormElement.prototype.acceptCharset",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFormElement.prototype.acceptCharset",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFormElement.prototype.action",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLFormElement.action getter can only be used on instances of HTMLFormElement"
    },
    {
      "path": "window.HTMLFormElement.prototype.action",
      "propertyName": "_get",
      "property": "function action() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFormElement.prototype.action",
      "propertyName": "_set",
      "property": "function action() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFormElement.prototype.action",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFormElement.prototype.action",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFormElement.prototype.autocomplete",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLFormElement.autocomplete getter can only be used on instances of HTMLFormElement"
    },
    {
      "path": "window.HTMLFormElement.prototype.autocomplete",
      "propertyName": "_get",
      "property": "function autocomplete() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFormElement.prototype.autocomplete",
      "propertyName": "_set",
      "property": "function autocomplete() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFormElement.prototype.autocomplete",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFormElement.prototype.autocomplete",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFormElement.prototype.enctype",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLFormElement.enctype getter can only be used on instances of HTMLFormElement"
    },
    {
      "path": "window.HTMLFormElement.prototype.enctype",
      "propertyName": "_get",
      "property": "function enctype() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFormElement.prototype.enctype",
      "propertyName": "_set",
      "property": "function enctype() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFormElement.prototype.enctype",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFormElement.prototype.enctype",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFormElement.prototype.encoding",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLFormElement.encoding getter can only be used on instances of HTMLFormElement"
    },
    {
      "path": "window.HTMLFormElement.prototype.encoding",
      "propertyName": "_get",
      "property": "function encoding() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFormElement.prototype.encoding",
      "propertyName": "_set",
      "property": "function encoding() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFormElement.prototype.encoding",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFormElement.prototype.encoding",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFormElement.prototype.method",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLFormElement.method getter can only be used on instances of HTMLFormElement"
    },
    {
      "path": "window.HTMLFormElement.prototype.method",
      "propertyName": "_get",
      "property": "function method() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFormElement.prototype.method",
      "propertyName": "_set",
      "property": "function method() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFormElement.prototype.method",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFormElement.prototype.method",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFormElement.prototype.name",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLFormElement.name getter can only be used on instances of HTMLFormElement"
    },
    {
      "path": "window.HTMLFormElement.prototype.name",
      "propertyName": "_get",
      "property": "function name() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFormElement.prototype.name",
      "propertyName": "_set",
      "property": "function name() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFormElement.prototype.name",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFormElement.prototype.name",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFormElement.prototype.noValidate",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLFormElement.noValidate getter can only be used on instances of HTMLFormElement"
    },
    {
      "path": "window.HTMLFormElement.prototype.noValidate",
      "propertyName": "_get",
      "property": "function noValidate() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFormElement.prototype.noValidate",
      "propertyName": "_set",
      "property": "function noValidate() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFormElement.prototype.noValidate",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFormElement.prototype.noValidate",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFormElement.prototype.target",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLFormElement.target getter can only be used on instances of HTMLFormElement"
    },
    {
      "path": "window.HTMLFormElement.prototype.target",
      "propertyName": "_get",
      "property": "function target() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFormElement.prototype.target",
      "propertyName": "_set",
      "property": "function target() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFormElement.prototype.target",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFormElement.prototype.target",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFormElement.prototype.elements",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLFormElement.elements getter can only be used on instances of HTMLFormElement"
    },
    {
      "path": "window.HTMLFormElement.prototype.elements",
      "propertyName": "_get",
      "property": "function elements() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFormElement.prototype.elements",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFormElement.prototype.length",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLFormElement.length getter can only be used on instances of HTMLFormElement"
    },
    {
      "path": "window.HTMLFormElement.prototype.length",
      "propertyName": "_get",
      "property": "function length() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFormElement.prototype.length",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFormElement.prototype.submit",
      "propertyName": "_function",
      "property": "function submit() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFormElement.prototype.reset",
      "propertyName": "_function",
      "property": "function reset() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFormElement.prototype.checkValidity",
      "propertyName": "_function",
      "property": "function checkValidity() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFormElement.prototype.reportValidity",
      "propertyName": "_function",
      "property": "function reportValidity() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFormElement.prototype",
      "propertyName": "Symbol.iterator",
      "property": "REF: window.DOMStringList.prototype.Symbol(Symbol.iterator)"
    },
    {
      "path": "window.HTMLFormElement",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.HTMLFormElement",
      "propertyName": "_function",
      "property": "function HTMLFormElement() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFrameElement.prototype.name",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLFrameElement.name getter can only be used on instances of HTMLFrameElement"
    },
    {
      "path": "window.HTMLFrameElement.prototype.name",
      "propertyName": "_get",
      "property": "function name() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFrameElement.prototype.name",
      "propertyName": "_set",
      "property": "function name() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFrameElement.prototype.name",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFrameElement.prototype.name",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFrameElement.prototype.scrolling",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLFrameElement.scrolling getter can only be used on instances of HTMLFrameElement"
    },
    {
      "path": "window.HTMLFrameElement.prototype.scrolling",
      "propertyName": "_get",
      "property": "function scrolling() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFrameElement.prototype.scrolling",
      "propertyName": "_set",
      "property": "function scrolling() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFrameElement.prototype.scrolling",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFrameElement.prototype.scrolling",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFrameElement.prototype.src",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLFrameElement.src getter can only be used on instances of HTMLFrameElement"
    },
    {
      "path": "window.HTMLFrameElement.prototype.src",
      "propertyName": "_get",
      "property": "function src() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFrameElement.prototype.src",
      "propertyName": "_set",
      "property": "function src() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFrameElement.prototype.src",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFrameElement.prototype.src",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFrameElement.prototype.frameBorder",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLFrameElement.frameBorder getter can only be used on instances of HTMLFrameElement"
    },
    {
      "path": "window.HTMLFrameElement.prototype.frameBorder",
      "propertyName": "_get",
      "property": "function frameBorder() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFrameElement.prototype.frameBorder",
      "propertyName": "_set",
      "property": "function frameBorder() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFrameElement.prototype.frameBorder",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFrameElement.prototype.frameBorder",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFrameElement.prototype.longDesc",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLFrameElement.longDesc getter can only be used on instances of HTMLFrameElement"
    },
    {
      "path": "window.HTMLFrameElement.prototype.longDesc",
      "propertyName": "_get",
      "property": "function longDesc() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFrameElement.prototype.longDesc",
      "propertyName": "_set",
      "property": "function longDesc() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFrameElement.prototype.longDesc",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFrameElement.prototype.longDesc",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFrameElement.prototype.noResize",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLFrameElement.noResize getter can only be used on instances of HTMLFrameElement"
    },
    {
      "path": "window.HTMLFrameElement.prototype.noResize",
      "propertyName": "_get",
      "property": "function noResize() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFrameElement.prototype.noResize",
      "propertyName": "_set",
      "property": "function noResize() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFrameElement.prototype.noResize",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFrameElement.prototype.noResize",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFrameElement.prototype.contentDocument",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLFrameElement.contentDocument getter can only be used on instances of HTMLFrameElement"
    },
    {
      "path": "window.HTMLFrameElement.prototype.contentDocument",
      "propertyName": "_get",
      "property": "function contentDocument() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFrameElement.prototype.contentDocument",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFrameElement.prototype.contentWindow",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLFrameElement.contentWindow getter can only be used on instances of HTMLFrameElement"
    },
    {
      "path": "window.HTMLFrameElement.prototype.contentWindow",
      "propertyName": "_get",
      "property": "function contentWindow() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFrameElement.prototype.contentWindow",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFrameElement.prototype.marginHeight",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLFrameElement.marginHeight getter can only be used on instances of HTMLFrameElement"
    },
    {
      "path": "window.HTMLFrameElement.prototype.marginHeight",
      "propertyName": "_get",
      "property": "function marginHeight() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFrameElement.prototype.marginHeight",
      "propertyName": "_set",
      "property": "function marginHeight() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFrameElement.prototype.marginHeight",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFrameElement.prototype.marginHeight",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFrameElement.prototype.marginWidth",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLFrameElement.marginWidth getter can only be used on instances of HTMLFrameElement"
    },
    {
      "path": "window.HTMLFrameElement.prototype.marginWidth",
      "propertyName": "_get",
      "property": "function marginWidth() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFrameElement.prototype.marginWidth",
      "propertyName": "_set",
      "property": "function marginWidth() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFrameElement.prototype.marginWidth",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFrameElement.prototype.marginWidth",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFrameElement",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.HTMLFrameElement",
      "propertyName": "_function",
      "property": "function HTMLFrameElement() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFrameSetElement.prototype.cols",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLFrameSetElement.cols getter can only be used on instances of HTMLFrameSetElement"
    },
    {
      "path": "window.HTMLFrameSetElement.prototype.cols",
      "propertyName": "_get",
      "property": "function cols() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFrameSetElement.prototype.cols",
      "propertyName": "_set",
      "property": "function cols() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFrameSetElement.prototype.cols",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFrameSetElement.prototype.cols",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFrameSetElement.prototype.rows",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLFrameSetElement.rows getter can only be used on instances of HTMLFrameSetElement"
    },
    {
      "path": "window.HTMLFrameSetElement.prototype.rows",
      "propertyName": "_get",
      "property": "function rows() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFrameSetElement.prototype.rows",
      "propertyName": "_set",
      "property": "function rows() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFrameSetElement.prototype.rows",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFrameSetElement.prototype.rows",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFrameSetElement.prototype.onblur",
      "propertyName": "_flags",
      "property": "c"
    },
    {
      "path": "window.HTMLFrameSetElement.prototype.onblur",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLFrameSetElement.onblur getter can only be used on instances of HTMLFrameSetElement"
    },
    {
      "path": "window.HTMLFrameSetElement.prototype.onblur",
      "propertyName": "_get",
      "property": "function onblur() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFrameSetElement.prototype.onblur",
      "propertyName": "_set",
      "property": "function onblur() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFrameSetElement.prototype.onblur",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFrameSetElement.prototype.onblur",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFrameSetElement.prototype.onerror",
      "propertyName": "_flags",
      "property": "c"
    },
    {
      "path": "window.HTMLFrameSetElement.prototype.onerror",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLFrameSetElement.onerror getter can only be used on instances of HTMLFrameSetElement"
    },
    {
      "path": "window.HTMLFrameSetElement.prototype.onerror",
      "propertyName": "_get",
      "property": "function onerror() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFrameSetElement.prototype.onerror",
      "propertyName": "_set",
      "property": "function onerror() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFrameSetElement.prototype.onerror",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFrameSetElement.prototype.onerror",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFrameSetElement.prototype.onfocus",
      "propertyName": "_flags",
      "property": "c"
    },
    {
      "path": "window.HTMLFrameSetElement.prototype.onfocus",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLFrameSetElement.onfocus getter can only be used on instances of HTMLFrameSetElement"
    },
    {
      "path": "window.HTMLFrameSetElement.prototype.onfocus",
      "propertyName": "_get",
      "property": "function onfocus() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFrameSetElement.prototype.onfocus",
      "propertyName": "_set",
      "property": "function onfocus() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFrameSetElement.prototype.onfocus",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFrameSetElement.prototype.onfocus",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFrameSetElement.prototype.onload",
      "propertyName": "_flags",
      "property": "c"
    },
    {
      "path": "window.HTMLFrameSetElement.prototype.onload",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLFrameSetElement.onload getter can only be used on instances of HTMLFrameSetElement"
    },
    {
      "path": "window.HTMLFrameSetElement.prototype.onload",
      "propertyName": "_get",
      "property": "function onload() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFrameSetElement.prototype.onload",
      "propertyName": "_set",
      "property": "function onload() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFrameSetElement.prototype.onload",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFrameSetElement.prototype.onload",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFrameSetElement.prototype.onresize",
      "propertyName": "_flags",
      "property": "c"
    },
    {
      "path": "window.HTMLFrameSetElement.prototype.onresize",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLFrameSetElement.onresize getter can only be used on instances of HTMLFrameSetElement"
    },
    {
      "path": "window.HTMLFrameSetElement.prototype.onresize",
      "propertyName": "_get",
      "property": "function onresize() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFrameSetElement.prototype.onresize",
      "propertyName": "_set",
      "property": "function onresize() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFrameSetElement.prototype.onresize",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFrameSetElement.prototype.onresize",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFrameSetElement.prototype.onscroll",
      "propertyName": "_flags",
      "property": "c"
    },
    {
      "path": "window.HTMLFrameSetElement.prototype.onscroll",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLFrameSetElement.onscroll getter can only be used on instances of HTMLFrameSetElement"
    },
    {
      "path": "window.HTMLFrameSetElement.prototype.onscroll",
      "propertyName": "_get",
      "property": "function onscroll() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFrameSetElement.prototype.onscroll",
      "propertyName": "_set",
      "property": "function onscroll() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFrameSetElement.prototype.onscroll",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFrameSetElement.prototype.onscroll",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFrameSetElement.prototype.onafterprint",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLFrameSetElement.onafterprint getter can only be used on instances of HTMLFrameSetElement"
    },
    {
      "path": "window.HTMLFrameSetElement.prototype.onafterprint",
      "propertyName": "_get",
      "property": "function onafterprint() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFrameSetElement.prototype.onafterprint",
      "propertyName": "_set",
      "property": "function onafterprint() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFrameSetElement.prototype.onafterprint",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFrameSetElement.prototype.onafterprint",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFrameSetElement.prototype.onbeforeprint",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLFrameSetElement.onbeforeprint getter can only be used on instances of HTMLFrameSetElement"
    },
    {
      "path": "window.HTMLFrameSetElement.prototype.onbeforeprint",
      "propertyName": "_get",
      "property": "function onbeforeprint() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFrameSetElement.prototype.onbeforeprint",
      "propertyName": "_set",
      "property": "function onbeforeprint() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFrameSetElement.prototype.onbeforeprint",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFrameSetElement.prototype.onbeforeprint",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFrameSetElement.prototype.onbeforeunload",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLFrameSetElement.onbeforeunload getter can only be used on instances of HTMLFrameSetElement"
    },
    {
      "path": "window.HTMLFrameSetElement.prototype.onbeforeunload",
      "propertyName": "_get",
      "property": "function onbeforeunload() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFrameSetElement.prototype.onbeforeunload",
      "propertyName": "_set",
      "property": "function onbeforeunload() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFrameSetElement.prototype.onbeforeunload",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFrameSetElement.prototype.onbeforeunload",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFrameSetElement.prototype.onhashchange",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLFrameSetElement.onhashchange getter can only be used on instances of HTMLFrameSetElement"
    },
    {
      "path": "window.HTMLFrameSetElement.prototype.onhashchange",
      "propertyName": "_get",
      "property": "function onhashchange() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFrameSetElement.prototype.onhashchange",
      "propertyName": "_set",
      "property": "function onhashchange() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFrameSetElement.prototype.onhashchange",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFrameSetElement.prototype.onhashchange",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFrameSetElement.prototype.onlanguagechange",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLFrameSetElement.onlanguagechange getter can only be used on instances of HTMLFrameSetElement"
    },
    {
      "path": "window.HTMLFrameSetElement.prototype.onlanguagechange",
      "propertyName": "_get",
      "property": "function onlanguagechange() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFrameSetElement.prototype.onlanguagechange",
      "propertyName": "_set",
      "property": "function onlanguagechange() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFrameSetElement.prototype.onlanguagechange",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFrameSetElement.prototype.onlanguagechange",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFrameSetElement.prototype.onmessage",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLFrameSetElement.onmessage getter can only be used on instances of HTMLFrameSetElement"
    },
    {
      "path": "window.HTMLFrameSetElement.prototype.onmessage",
      "propertyName": "_get",
      "property": "function onmessage() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFrameSetElement.prototype.onmessage",
      "propertyName": "_set",
      "property": "function onmessage() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFrameSetElement.prototype.onmessage",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFrameSetElement.prototype.onmessage",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFrameSetElement.prototype.onoffline",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLFrameSetElement.onoffline getter can only be used on instances of HTMLFrameSetElement"
    },
    {
      "path": "window.HTMLFrameSetElement.prototype.onoffline",
      "propertyName": "_get",
      "property": "function onoffline() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFrameSetElement.prototype.onoffline",
      "propertyName": "_set",
      "property": "function onoffline() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFrameSetElement.prototype.onoffline",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFrameSetElement.prototype.onoffline",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFrameSetElement.prototype.ononline",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLFrameSetElement.ononline getter can only be used on instances of HTMLFrameSetElement"
    },
    {
      "path": "window.HTMLFrameSetElement.prototype.ononline",
      "propertyName": "_get",
      "property": "function ononline() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFrameSetElement.prototype.ononline",
      "propertyName": "_set",
      "property": "function ononline() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFrameSetElement.prototype.ononline",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFrameSetElement.prototype.ononline",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFrameSetElement.prototype.onpagehide",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLFrameSetElement.onpagehide getter can only be used on instances of HTMLFrameSetElement"
    },
    {
      "path": "window.HTMLFrameSetElement.prototype.onpagehide",
      "propertyName": "_get",
      "property": "function onpagehide() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFrameSetElement.prototype.onpagehide",
      "propertyName": "_set",
      "property": "function onpagehide() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFrameSetElement.prototype.onpagehide",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFrameSetElement.prototype.onpagehide",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFrameSetElement.prototype.onpageshow",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLFrameSetElement.onpageshow getter can only be used on instances of HTMLFrameSetElement"
    },
    {
      "path": "window.HTMLFrameSetElement.prototype.onpageshow",
      "propertyName": "_get",
      "property": "function onpageshow() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFrameSetElement.prototype.onpageshow",
      "propertyName": "_set",
      "property": "function onpageshow() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFrameSetElement.prototype.onpageshow",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFrameSetElement.prototype.onpageshow",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFrameSetElement.prototype.onpopstate",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLFrameSetElement.onpopstate getter can only be used on instances of HTMLFrameSetElement"
    },
    {
      "path": "window.HTMLFrameSetElement.prototype.onpopstate",
      "propertyName": "_get",
      "property": "function onpopstate() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFrameSetElement.prototype.onpopstate",
      "propertyName": "_set",
      "property": "function onpopstate() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFrameSetElement.prototype.onpopstate",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFrameSetElement.prototype.onpopstate",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFrameSetElement.prototype.onstorage",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLFrameSetElement.onstorage getter can only be used on instances of HTMLFrameSetElement"
    },
    {
      "path": "window.HTMLFrameSetElement.prototype.onstorage",
      "propertyName": "_get",
      "property": "function onstorage() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFrameSetElement.prototype.onstorage",
      "propertyName": "_set",
      "property": "function onstorage() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFrameSetElement.prototype.onstorage",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFrameSetElement.prototype.onstorage",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFrameSetElement.prototype.onunload",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLFrameSetElement.onunload getter can only be used on instances of HTMLFrameSetElement"
    },
    {
      "path": "window.HTMLFrameSetElement.prototype.onunload",
      "propertyName": "_get",
      "property": "function onunload() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFrameSetElement.prototype.onunload",
      "propertyName": "_set",
      "property": "function onunload() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFrameSetElement.prototype.onunload",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFrameSetElement.prototype.onunload",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLFrameSetElement",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.HTMLFrameSetElement",
      "propertyName": "_function",
      "property": "function HTMLFrameSetElement() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLHRElement.prototype.align",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLHRElement.align getter can only be used on instances of HTMLHRElement"
    },
    {
      "path": "window.HTMLHRElement.prototype.align",
      "propertyName": "_get",
      "property": "function align() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLHRElement.prototype.align",
      "propertyName": "_set",
      "property": "function align() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLHRElement.prototype.align",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLHRElement.prototype.align",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLHRElement.prototype.color",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLHRElement.color getter can only be used on instances of HTMLHRElement"
    },
    {
      "path": "window.HTMLHRElement.prototype.color",
      "propertyName": "_get",
      "property": "function color() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLHRElement.prototype.color",
      "propertyName": "_set",
      "property": "function color() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLHRElement.prototype.color",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLHRElement.prototype.color",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLHRElement.prototype.noShade",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLHRElement.noShade getter can only be used on instances of HTMLHRElement"
    },
    {
      "path": "window.HTMLHRElement.prototype.noShade",
      "propertyName": "_get",
      "property": "function noShade() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLHRElement.prototype.noShade",
      "propertyName": "_set",
      "property": "function noShade() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLHRElement.prototype.noShade",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLHRElement.prototype.noShade",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLHRElement.prototype.size",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLHRElement.size getter can only be used on instances of HTMLHRElement"
    },
    {
      "path": "window.HTMLHRElement.prototype.size",
      "propertyName": "_get",
      "property": "function size() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLHRElement.prototype.size",
      "propertyName": "_set",
      "property": "function size() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLHRElement.prototype.size",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLHRElement.prototype.size",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLHRElement.prototype.width",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLHRElement.width getter can only be used on instances of HTMLHRElement"
    },
    {
      "path": "window.HTMLHRElement.prototype.width",
      "propertyName": "_get",
      "property": "function width() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLHRElement.prototype.width",
      "propertyName": "_set",
      "property": "function width() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLHRElement.prototype.width",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLHRElement.prototype.width",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLHRElement",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.HTMLHRElement",
      "propertyName": "_function",
      "property": "function HTMLHRElement() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLHeadElement",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.HTMLHeadElement",
      "propertyName": "_function",
      "property": "function HTMLHeadElement() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLHeadingElement.prototype.align",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLHeadingElement.align getter can only be used on instances of HTMLHeadingElement"
    },
    {
      "path": "window.HTMLHeadingElement.prototype.align",
      "propertyName": "_get",
      "property": "function align() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLHeadingElement.prototype.align",
      "propertyName": "_set",
      "property": "function align() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLHeadingElement.prototype.align",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLHeadingElement.prototype.align",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLHeadingElement",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.HTMLHeadingElement",
      "propertyName": "_function",
      "property": "function HTMLHeadingElement() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLHtmlElement.prototype.version",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLHtmlElement.version getter can only be used on instances of HTMLHtmlElement"
    },
    {
      "path": "window.HTMLHtmlElement.prototype.version",
      "propertyName": "_get",
      "property": "function version() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLHtmlElement.prototype.version",
      "propertyName": "_set",
      "property": "function version() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLHtmlElement.prototype.version",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLHtmlElement.prototype.version",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLHtmlElement",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.HTMLHtmlElement",
      "propertyName": "_function",
      "property": "function HTMLHtmlElement() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLIFrameElement.prototype.align",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLIFrameElement.align getter can only be used on instances of HTMLIFrameElement"
    },
    {
      "path": "window.HTMLIFrameElement.prototype.align",
      "propertyName": "_get",
      "property": "function align() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLIFrameElement.prototype.align",
      "propertyName": "_set",
      "property": "function align() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLIFrameElement.prototype.align",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLIFrameElement.prototype.align",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLIFrameElement.prototype.frameBorder",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLIFrameElement.frameBorder getter can only be used on instances of HTMLIFrameElement"
    },
    {
      "path": "window.HTMLIFrameElement.prototype.frameBorder",
      "propertyName": "_get",
      "property": "function frameBorder() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLIFrameElement.prototype.frameBorder",
      "propertyName": "_set",
      "property": "function frameBorder() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLIFrameElement.prototype.frameBorder",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLIFrameElement.prototype.frameBorder",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLIFrameElement.prototype.height",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLIFrameElement.height getter can only be used on instances of HTMLIFrameElement"
    },
    {
      "path": "window.HTMLIFrameElement.prototype.height",
      "propertyName": "_get",
      "property": "function height() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLIFrameElement.prototype.height",
      "propertyName": "_set",
      "property": "function height() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLIFrameElement.prototype.height",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLIFrameElement.prototype.height",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLIFrameElement.prototype.longDesc",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLIFrameElement.longDesc getter can only be used on instances of HTMLIFrameElement"
    },
    {
      "path": "window.HTMLIFrameElement.prototype.longDesc",
      "propertyName": "_get",
      "property": "function longDesc() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLIFrameElement.prototype.longDesc",
      "propertyName": "_set",
      "property": "function longDesc() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLIFrameElement.prototype.longDesc",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLIFrameElement.prototype.longDesc",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLIFrameElement.prototype.marginHeight",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLIFrameElement.marginHeight getter can only be used on instances of HTMLIFrameElement"
    },
    {
      "path": "window.HTMLIFrameElement.prototype.marginHeight",
      "propertyName": "_get",
      "property": "function marginHeight() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLIFrameElement.prototype.marginHeight",
      "propertyName": "_set",
      "property": "function marginHeight() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLIFrameElement.prototype.marginHeight",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLIFrameElement.prototype.marginHeight",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLIFrameElement.prototype.marginWidth",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLIFrameElement.marginWidth getter can only be used on instances of HTMLIFrameElement"
    },
    {
      "path": "window.HTMLIFrameElement.prototype.marginWidth",
      "propertyName": "_get",
      "property": "function marginWidth() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLIFrameElement.prototype.marginWidth",
      "propertyName": "_set",
      "property": "function marginWidth() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLIFrameElement.prototype.marginWidth",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLIFrameElement.prototype.marginWidth",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLIFrameElement.prototype.name",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLIFrameElement.name getter can only be used on instances of HTMLIFrameElement"
    },
    {
      "path": "window.HTMLIFrameElement.prototype.name",
      "propertyName": "_get",
      "property": "function name() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLIFrameElement.prototype.name",
      "propertyName": "_set",
      "property": "function name() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLIFrameElement.prototype.name",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLIFrameElement.prototype.name",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLIFrameElement.prototype.sandbox",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLIFrameElement.sandbox getter can only be used on instances of HTMLIFrameElement"
    },
    {
      "path": "window.HTMLIFrameElement.prototype.sandbox",
      "propertyName": "_get",
      "property": "function sandbox() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLIFrameElement.prototype.sandbox",
      "propertyName": "_set",
      "property": "function sandbox() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLIFrameElement.prototype.sandbox",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLIFrameElement.prototype.sandbox",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLIFrameElement.prototype.allowFullscreen",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLIFrameElement.allowFullscreen getter can only be used on instances of HTMLIFrameElement"
    },
    {
      "path": "window.HTMLIFrameElement.prototype.allowFullscreen",
      "propertyName": "_get",
      "property": "function allowFullscreen() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLIFrameElement.prototype.allowFullscreen",
      "propertyName": "_set",
      "property": "function allowFullscreen() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLIFrameElement.prototype.allowFullscreen",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLIFrameElement.prototype.allowFullscreen",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLIFrameElement.prototype.allow",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLIFrameElement.allow getter can only be used on instances of HTMLIFrameElement"
    },
    {
      "path": "window.HTMLIFrameElement.prototype.allow",
      "propertyName": "_get",
      "property": "function allow() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLIFrameElement.prototype.allow",
      "propertyName": "_set",
      "property": "function allow() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLIFrameElement.prototype.allow",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLIFrameElement.prototype.allow",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLIFrameElement.prototype.scrolling",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLIFrameElement.scrolling getter can only be used on instances of HTMLIFrameElement"
    },
    {
      "path": "window.HTMLIFrameElement.prototype.scrolling",
      "propertyName": "_get",
      "property": "function scrolling() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLIFrameElement.prototype.scrolling",
      "propertyName": "_set",
      "property": "function scrolling() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLIFrameElement.prototype.scrolling",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLIFrameElement.prototype.scrolling",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLIFrameElement.prototype.src",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLIFrameElement.src getter can only be used on instances of HTMLIFrameElement"
    },
    {
      "path": "window.HTMLIFrameElement.prototype.src",
      "propertyName": "_get",
      "property": "function src() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLIFrameElement.prototype.src",
      "propertyName": "_set",
      "property": "function src() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLIFrameElement.prototype.src",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLIFrameElement.prototype.src",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLIFrameElement.prototype.srcdoc",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLIFrameElement.srcdoc getter can only be used on instances of HTMLIFrameElement"
    },
    {
      "path": "window.HTMLIFrameElement.prototype.srcdoc",
      "propertyName": "_get",
      "property": "function srcdoc() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLIFrameElement.prototype.srcdoc",
      "propertyName": "_set",
      "property": "function srcdoc() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLIFrameElement.prototype.srcdoc",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLIFrameElement.prototype.srcdoc",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLIFrameElement.prototype.width",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLIFrameElement.width getter can only be used on instances of HTMLIFrameElement"
    },
    {
      "path": "window.HTMLIFrameElement.prototype.width",
      "propertyName": "_get",
      "property": "function width() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLIFrameElement.prototype.width",
      "propertyName": "_set",
      "property": "function width() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLIFrameElement.prototype.width",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLIFrameElement.prototype.width",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLIFrameElement.prototype.contentDocument",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLIFrameElement.contentDocument getter can only be used on instances of HTMLIFrameElement"
    },
    {
      "path": "window.HTMLIFrameElement.prototype.contentDocument",
      "propertyName": "_get",
      "property": "function contentDocument() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLIFrameElement.prototype.contentDocument",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLIFrameElement.prototype.contentWindow",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLIFrameElement.contentWindow getter can only be used on instances of HTMLIFrameElement"
    },
    {
      "path": "window.HTMLIFrameElement.prototype.contentWindow",
      "propertyName": "_get",
      "property": "function contentWindow() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLIFrameElement.prototype.contentWindow",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLIFrameElement.prototype.getSVGDocument",
      "propertyName": "_function",
      "property": "function getSVGDocument() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLIFrameElement",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.HTMLIFrameElement",
      "propertyName": "_function",
      "property": "function HTMLIFrameElement() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLImageElement",
      "propertyName": "prototype",
      "property": {
        "_protos": [
          "HTMLElement.prototype",
          "Element.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "name": {
          "_flags": "ce",
          "_accessException": "TypeError: The HTMLImageElement.name getter can only be used on instances of HTMLImageElement",
          "_get": "function name() {\n    [native code]\n}",
          "_set": "function name() {\n    [native code]\n}",
          "_getToStringToString": "function toString() {\n    [native code]\n}",
          "_setToStringToString": "function toString() {\n    [native code]\n}"
        },
        "align": {
          "_flags": "ce",
          "_accessException": "TypeError: The HTMLImageElement.align getter can only be used on instances of HTMLImageElement",
          "_get": "function align() {\n    [native code]\n}",
          "_set": "function align() {\n    [native code]\n}",
          "_getToStringToString": "function toString() {\n    [native code]\n}",
          "_setToStringToString": "function toString() {\n    [native code]\n}"
        },
        "alt": {
          "_flags": "ce",
          "_accessException": "TypeError: The HTMLImageElement.alt getter can only be used on instances of HTMLImageElement",
          "_get": "function alt() {\n    [native code]\n}",
          "_set": "function alt() {\n    [native code]\n}",
          "_getToStringToString": "function toString() {\n    [native code]\n}",
          "_setToStringToString": "function toString() {\n    [native code]\n}"
        },
        "border": {
          "_flags": "ce",
          "_accessException": "TypeError: The HTMLImageElement.border getter can only be used on instances of HTMLImageElement",
          "_get": "function border() {\n    [native code]\n}",
          "_set": "function border() {\n    [native code]\n}",
          "_getToStringToString": "function toString() {\n    [native code]\n}",
          "_setToStringToString": "function toString() {\n    [native code]\n}"
        },
        "crossOrigin": {
          "_flags": "ce",
          "_accessException": "TypeError: The HTMLImageElement.crossOrigin getter can only be used on instances of HTMLImageElement",
          "_get": "function crossOrigin() {\n    [native code]\n}",
          "_set": "function crossOrigin() {\n    [native code]\n}",
          "_getToStringToString": "function toString() {\n    [native code]\n}",
          "_setToStringToString": "function toString() {\n    [native code]\n}"
        },
        "height": {
          "_flags": "ce",
          "_accessException": "TypeError: The HTMLImageElement.height getter can only be used on instances of HTMLImageElement",
          "_get": "function height() {\n    [native code]\n}",
          "_set": "function height() {\n    [native code]\n}",
          "_getToStringToString": "function toString() {\n    [native code]\n}",
          "_setToStringToString": "function toString() {\n    [native code]\n}"
        },
        "hspace": {
          "_flags": "ce",
          "_accessException": "TypeError: The HTMLImageElement.hspace getter can only be used on instances of HTMLImageElement",
          "_get": "function hspace() {\n    [native code]\n}",
          "_set": "function hspace() {\n    [native code]\n}",
          "_getToStringToString": "function toString() {\n    [native code]\n}",
          "_setToStringToString": "function toString() {\n    [native code]\n}"
        },
        "isMap": {
          "_flags": "ce",
          "_accessException": "TypeError: The HTMLImageElement.isMap getter can only be used on instances of HTMLImageElement",
          "_get": "function isMap() {\n    [native code]\n}",
          "_set": "function isMap() {\n    [native code]\n}",
          "_getToStringToString": "function toString() {\n    [native code]\n}",
          "_setToStringToString": "function toString() {\n    [native code]\n}"
        },
        "longDesc": {
          "_flags": "ce",
          "_accessException": "TypeError: The HTMLImageElement.longDesc getter can only be used on instances of HTMLImageElement",
          "_get": "function longDesc() {\n    [native code]\n}",
          "_set": "function longDesc() {\n    [native code]\n}",
          "_getToStringToString": "function toString() {\n    [native code]\n}",
          "_setToStringToString": "function toString() {\n    [native code]\n}"
        },
        "src": {
          "_flags": "ce",
          "_accessException": "TypeError: The HTMLImageElement.src getter can only be used on instances of HTMLImageElement",
          "_get": "function src() {\n    [native code]\n}",
          "_set": "function src() {\n    [native code]\n}",
          "_getToStringToString": "function toString() {\n    [native code]\n}",
          "_setToStringToString": "function toString() {\n    [native code]\n}"
        },
        "srcset": {
          "_flags": "ce",
          "_accessException": "TypeError: The HTMLImageElement.srcset getter can only be used on instances of HTMLImageElement",
          "_get": "function srcset() {\n    [native code]\n}",
          "_set": "function srcset() {\n    [native code]\n}",
          "_getToStringToString": "function toString() {\n    [native code]\n}",
          "_setToStringToString": "function toString() {\n    [native code]\n}"
        },
        "sizes": {
          "_flags": "ce",
          "_accessException": "TypeError: The HTMLImageElement.sizes getter can only be used on instances of HTMLImageElement",
          "_get": "function sizes() {\n    [native code]\n}",
          "_set": "function sizes() {\n    [native code]\n}",
          "_getToStringToString": "function toString() {\n    [native code]\n}",
          "_setToStringToString": "function toString() {\n    [native code]\n}"
        },
        "currentSrc": {
          "_flags": "ce",
          "_accessException": "TypeError: The HTMLImageElement.currentSrc getter can only be used on instances of HTMLImageElement",
          "_get": "function currentSrc() {\n    [native code]\n}",
          "_getToStringToString": "function toString() {\n    [native code]\n}"
        },
        "useMap": {
          "_flags": "ce",
          "_accessException": "TypeError: The HTMLImageElement.useMap getter can only be used on instances of HTMLImageElement",
          "_get": "function useMap() {\n    [native code]\n}",
          "_set": "function useMap() {\n    [native code]\n}",
          "_getToStringToString": "function toString() {\n    [native code]\n}",
          "_setToStringToString": "function toString() {\n    [native code]\n}"
        },
        "vspace": {
          "_flags": "ce",
          "_accessException": "TypeError: The HTMLImageElement.vspace getter can only be used on instances of HTMLImageElement",
          "_get": "function vspace() {\n    [native code]\n}",
          "_set": "function vspace() {\n    [native code]\n}",
          "_getToStringToString": "function toString() {\n    [native code]\n}",
          "_setToStringToString": "function toString() {\n    [native code]\n}"
        },
        "width": {
          "_flags": "ce",
          "_accessException": "TypeError: The HTMLImageElement.width getter can only be used on instances of HTMLImageElement",
          "_get": "function width() {\n    [native code]\n}",
          "_set": "function width() {\n    [native code]\n}",
          "_getToStringToString": "function toString() {\n    [native code]\n}",
          "_setToStringToString": "function toString() {\n    [native code]\n}"
        },
        "decoding": {
          "_flags": "ce",
          "_accessException": "TypeError: The HTMLImageElement.decoding getter can only be used on instances of HTMLImageElement",
          "_get": "function decoding() {\n    [native code]\n}",
          "_set": "function decoding() {\n    [native code]\n}",
          "_getToStringToString": "function toString() {\n    [native code]\n}",
          "_setToStringToString": "function toString() {\n    [native code]\n}"
        },
        "complete": {
          "_flags": "ce",
          "_accessException": "TypeError: The HTMLImageElement.complete getter can only be used on instances of HTMLImageElement",
          "_get": "function complete() {\n    [native code]\n}",
          "_getToStringToString": "function toString() {\n    [native code]\n}"
        },
        "lowsrc": {
          "_flags": "ce",
          "_accessException": "TypeError: The HTMLImageElement.lowsrc getter can only be used on instances of HTMLImageElement",
          "_get": "function lowsrc() {\n    [native code]\n}",
          "_set": "function lowsrc() {\n    [native code]\n}",
          "_getToStringToString": "function toString() {\n    [native code]\n}",
          "_setToStringToString": "function toString() {\n    [native code]\n}"
        },
        "naturalHeight": {
          "_flags": "ce",
          "_accessException": "TypeError: The HTMLImageElement.naturalHeight getter can only be used on instances of HTMLImageElement",
          "_get": "function naturalHeight() {\n    [native code]\n}",
          "_getToStringToString": "function toString() {\n    [native code]\n}"
        },
        "naturalWidth": {
          "_flags": "ce",
          "_accessException": "TypeError: The HTMLImageElement.naturalWidth getter can only be used on instances of HTMLImageElement",
          "_get": "function naturalWidth() {\n    [native code]\n}",
          "_getToStringToString": "function toString() {\n    [native code]\n}"
        },
        "x": {
          "_flags": "ce",
          "_accessException": "TypeError: The HTMLImageElement.x getter can only be used on instances of HTMLImageElement",
          "_get": "function x() {\n    [native code]\n}",
          "_getToStringToString": "function toString() {\n    [native code]\n}"
        },
        "y": {
          "_flags": "ce",
          "_accessException": "TypeError: The HTMLImageElement.y getter can only be used on instances of HTMLImageElement",
          "_get": "function y() {\n    [native code]\n}",
          "_getToStringToString": "function toString() {\n    [native code]\n}"
        },
        "decode": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "decode"
          },
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "_function": "function decode() {\n    [native code]\n}",
          "_flags": "cew"
        },
        "onmouseenter": {},
        "onmouseleave": {},
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "_type": "object",
        "_flags": ""
      }
    },
    {
      "path": "window.HTMLImageElement",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.HTMLImageElement",
      "propertyName": "_function",
      "property": "function HTMLImageElement() {\n    [native code]\n}"
    },
    {
      "path": "window.Image",
      "propertyName": "prototype",
      "property": "REF: window.HTMLImageElement.prototype"
    },
    {
      "path": "window.Image.new().decoding",
      "propertyName": "_value",
      "property": ""
    },
    {
      "path": "window.Image",
      "propertyName": "_function",
      "property": "function Image() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.accept",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLInputElement.accept getter can only be used on instances of HTMLInputElement"
    },
    {
      "path": "window.HTMLInputElement.prototype.accept",
      "propertyName": "_get",
      "property": "function accept() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.accept",
      "propertyName": "_set",
      "property": "function accept() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.accept",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.accept",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.alt",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLInputElement.alt getter can only be used on instances of HTMLInputElement"
    },
    {
      "path": "window.HTMLInputElement.prototype.alt",
      "propertyName": "_get",
      "property": "function alt() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.alt",
      "propertyName": "_set",
      "property": "function alt() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.alt",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.alt",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.autocomplete",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLInputElement.autocomplete getter can only be used on instances of HTMLInputElement"
    },
    {
      "path": "window.HTMLInputElement.prototype.autocomplete",
      "propertyName": "_get",
      "property": "function autocomplete() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.autocomplete",
      "propertyName": "_set",
      "property": "function autocomplete() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.autocomplete",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.autocomplete",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.defaultChecked",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLInputElement.defaultChecked getter can only be used on instances of HTMLInputElement"
    },
    {
      "path": "window.HTMLInputElement.prototype.defaultChecked",
      "propertyName": "_get",
      "property": "function defaultChecked() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.defaultChecked",
      "propertyName": "_set",
      "property": "function defaultChecked() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.defaultChecked",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.defaultChecked",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.checked",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLInputElement.checked getter can only be used on instances of HTMLInputElement"
    },
    {
      "path": "window.HTMLInputElement.prototype.checked",
      "propertyName": "_get",
      "property": "function checked() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.checked",
      "propertyName": "_set",
      "property": "function checked() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.checked",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.checked",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.dirName",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLInputElement.dirName getter can only be used on instances of HTMLInputElement"
    },
    {
      "path": "window.HTMLInputElement.prototype.dirName",
      "propertyName": "_get",
      "property": "function dirName() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.dirName",
      "propertyName": "_set",
      "property": "function dirName() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.dirName",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.dirName",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.disabled",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLInputElement.disabled getter can only be used on instances of HTMLInputElement"
    },
    {
      "path": "window.HTMLInputElement.prototype.disabled",
      "propertyName": "_get",
      "property": "function disabled() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.disabled",
      "propertyName": "_set",
      "property": "function disabled() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.disabled",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.disabled",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.form",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLInputElement.form getter can only be used on instances of HTMLInputElement"
    },
    {
      "path": "window.HTMLInputElement.prototype.form",
      "propertyName": "_get",
      "property": "function form() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.form",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.files",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLInputElement.files getter can only be used on instances of HTMLInputElement"
    },
    {
      "path": "window.HTMLInputElement.prototype.files",
      "propertyName": "_get",
      "property": "function files() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.files",
      "propertyName": "_set",
      "property": "function files() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.files",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.files",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.formAction",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLInputElement.formAction getter can only be used on instances of HTMLInputElement"
    },
    {
      "path": "window.HTMLInputElement.prototype.formAction",
      "propertyName": "_get",
      "property": "function formAction() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.formAction",
      "propertyName": "_set",
      "property": "function formAction() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.formAction",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.formAction",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.formEnctype",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLInputElement.formEnctype getter can only be used on instances of HTMLInputElement"
    },
    {
      "path": "window.HTMLInputElement.prototype.formEnctype",
      "propertyName": "_get",
      "property": "function formEnctype() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.formEnctype",
      "propertyName": "_set",
      "property": "function formEnctype() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.formEnctype",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.formEnctype",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.formMethod",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLInputElement.formMethod getter can only be used on instances of HTMLInputElement"
    },
    {
      "path": "window.HTMLInputElement.prototype.formMethod",
      "propertyName": "_get",
      "property": "function formMethod() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.formMethod",
      "propertyName": "_set",
      "property": "function formMethod() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.formMethod",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.formMethod",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.formNoValidate",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLInputElement.formNoValidate getter can only be used on instances of HTMLInputElement"
    },
    {
      "path": "window.HTMLInputElement.prototype.formNoValidate",
      "propertyName": "_get",
      "property": "function formNoValidate() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.formNoValidate",
      "propertyName": "_set",
      "property": "function formNoValidate() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.formNoValidate",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.formNoValidate",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.formTarget",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLInputElement.formTarget getter can only be used on instances of HTMLInputElement"
    },
    {
      "path": "window.HTMLInputElement.prototype.formTarget",
      "propertyName": "_get",
      "property": "function formTarget() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.formTarget",
      "propertyName": "_set",
      "property": "function formTarget() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.formTarget",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.formTarget",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.height",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLInputElement.height getter can only be used on instances of HTMLInputElement"
    },
    {
      "path": "window.HTMLInputElement.prototype.height",
      "propertyName": "_get",
      "property": "function height() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.height",
      "propertyName": "_set",
      "property": "function height() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.height",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.height",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.indeterminate",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLInputElement.indeterminate getter can only be used on instances of HTMLInputElement"
    },
    {
      "path": "window.HTMLInputElement.prototype.indeterminate",
      "propertyName": "_get",
      "property": "function indeterminate() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.indeterminate",
      "propertyName": "_set",
      "property": "function indeterminate() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.indeterminate",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.indeterminate",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.list",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLInputElement.list getter can only be used on instances of HTMLInputElement"
    },
    {
      "path": "window.HTMLInputElement.prototype.list",
      "propertyName": "_get",
      "property": "function list() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.list",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.max",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLInputElement.max getter can only be used on instances of HTMLInputElement"
    },
    {
      "path": "window.HTMLInputElement.prototype.max",
      "propertyName": "_get",
      "property": "function max() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.max",
      "propertyName": "_set",
      "property": "function max() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.max",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.max",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.minLength",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLInputElement.minLength getter can only be used on instances of HTMLInputElement"
    },
    {
      "path": "window.HTMLInputElement.prototype.minLength",
      "propertyName": "_get",
      "property": "function minLength() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.minLength",
      "propertyName": "_set",
      "property": "function minLength() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.minLength",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.minLength",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.maxLength",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLInputElement.maxLength getter can only be used on instances of HTMLInputElement"
    },
    {
      "path": "window.HTMLInputElement.prototype.maxLength",
      "propertyName": "_get",
      "property": "function maxLength() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.maxLength",
      "propertyName": "_set",
      "property": "function maxLength() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.maxLength",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.maxLength",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.min",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLInputElement.min getter can only be used on instances of HTMLInputElement"
    },
    {
      "path": "window.HTMLInputElement.prototype.min",
      "propertyName": "_get",
      "property": "function min() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.min",
      "propertyName": "_set",
      "property": "function min() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.min",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.min",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.multiple",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLInputElement.multiple getter can only be used on instances of HTMLInputElement"
    },
    {
      "path": "window.HTMLInputElement.prototype.multiple",
      "propertyName": "_get",
      "property": "function multiple() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.multiple",
      "propertyName": "_set",
      "property": "function multiple() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.multiple",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.multiple",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.name",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLInputElement.name getter can only be used on instances of HTMLInputElement"
    },
    {
      "path": "window.HTMLInputElement.prototype.name",
      "propertyName": "_get",
      "property": "function name() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.name",
      "propertyName": "_set",
      "property": "function name() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.name",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.name",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.pattern",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLInputElement.pattern getter can only be used on instances of HTMLInputElement"
    },
    {
      "path": "window.HTMLInputElement.prototype.pattern",
      "propertyName": "_get",
      "property": "function pattern() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.pattern",
      "propertyName": "_set",
      "property": "function pattern() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.pattern",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.pattern",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.placeholder",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLInputElement.placeholder getter can only be used on instances of HTMLInputElement"
    },
    {
      "path": "window.HTMLInputElement.prototype.placeholder",
      "propertyName": "_get",
      "property": "function placeholder() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.placeholder",
      "propertyName": "_set",
      "property": "function placeholder() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.placeholder",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.placeholder",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.readOnly",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLInputElement.readOnly getter can only be used on instances of HTMLInputElement"
    },
    {
      "path": "window.HTMLInputElement.prototype.readOnly",
      "propertyName": "_get",
      "property": "function readOnly() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.readOnly",
      "propertyName": "_set",
      "property": "function readOnly() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.readOnly",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.readOnly",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.required",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLInputElement.required getter can only be used on instances of HTMLInputElement"
    },
    {
      "path": "window.HTMLInputElement.prototype.required",
      "propertyName": "_get",
      "property": "function required() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.required",
      "propertyName": "_set",
      "property": "function required() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.required",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.required",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.size",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLInputElement.size getter can only be used on instances of HTMLInputElement"
    },
    {
      "path": "window.HTMLInputElement.prototype.size",
      "propertyName": "_get",
      "property": "function size() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.size",
      "propertyName": "_set",
      "property": "function size() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.size",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.size",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.src",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLInputElement.src getter can only be used on instances of HTMLInputElement"
    },
    {
      "path": "window.HTMLInputElement.prototype.src",
      "propertyName": "_get",
      "property": "function src() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.src",
      "propertyName": "_set",
      "property": "function src() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.src",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.src",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.step",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLInputElement.step getter can only be used on instances of HTMLInputElement"
    },
    {
      "path": "window.HTMLInputElement.prototype.step",
      "propertyName": "_get",
      "property": "function step() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.step",
      "propertyName": "_set",
      "property": "function step() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.step",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.step",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.type",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLInputElement.type getter can only be used on instances of HTMLInputElement"
    },
    {
      "path": "window.HTMLInputElement.prototype.type",
      "propertyName": "_get",
      "property": "function type() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.type",
      "propertyName": "_set",
      "property": "function type() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.type",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.type",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.defaultValue",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLInputElement.defaultValue getter can only be used on instances of HTMLInputElement"
    },
    {
      "path": "window.HTMLInputElement.prototype.defaultValue",
      "propertyName": "_get",
      "property": "function defaultValue() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.defaultValue",
      "propertyName": "_set",
      "property": "function defaultValue() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.defaultValue",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.defaultValue",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.value",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLInputElement.value getter can only be used on instances of HTMLInputElement"
    },
    {
      "path": "window.HTMLInputElement.prototype.value",
      "propertyName": "_get",
      "property": "function value() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.value",
      "propertyName": "_set",
      "property": "function value() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.value",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.value",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.valueAsDate",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLInputElement.valueAsDate getter can only be used on instances of HTMLInputElement"
    },
    {
      "path": "window.HTMLInputElement.prototype.valueAsDate",
      "propertyName": "_get",
      "property": "function valueAsDate() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.valueAsDate",
      "propertyName": "_set",
      "property": "function valueAsDate() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.valueAsDate",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.valueAsDate",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.valueAsNumber",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLInputElement.valueAsNumber getter can only be used on instances of HTMLInputElement"
    },
    {
      "path": "window.HTMLInputElement.prototype.valueAsNumber",
      "propertyName": "_get",
      "property": "function valueAsNumber() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.valueAsNumber",
      "propertyName": "_set",
      "property": "function valueAsNumber() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.valueAsNumber",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.valueAsNumber",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.width",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLInputElement.width getter can only be used on instances of HTMLInputElement"
    },
    {
      "path": "window.HTMLInputElement.prototype.width",
      "propertyName": "_get",
      "property": "function width() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.width",
      "propertyName": "_set",
      "property": "function width() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.width",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.width",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.willValidate",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLInputElement.willValidate getter can only be used on instances of HTMLInputElement"
    },
    {
      "path": "window.HTMLInputElement.prototype.willValidate",
      "propertyName": "_get",
      "property": "function willValidate() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.willValidate",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.validity",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLInputElement.validity getter can only be used on instances of HTMLInputElement"
    },
    {
      "path": "window.HTMLInputElement.prototype.validity",
      "propertyName": "_get",
      "property": "function validity() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.validity",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.validationMessage",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLInputElement.validationMessage getter can only be used on instances of HTMLInputElement"
    },
    {
      "path": "window.HTMLInputElement.prototype.validationMessage",
      "propertyName": "_get",
      "property": "function validationMessage() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.validationMessage",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.labels",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLInputElement.labels getter can only be used on instances of HTMLInputElement"
    },
    {
      "path": "window.HTMLInputElement.prototype.labels",
      "propertyName": "_get",
      "property": "function labels() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.labels",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.selectionStart",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLInputElement.selectionStart getter can only be used on instances of HTMLInputElement"
    },
    {
      "path": "window.HTMLInputElement.prototype.selectionStart",
      "propertyName": "_get",
      "property": "function selectionStart() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.selectionStart",
      "propertyName": "_set",
      "property": "function selectionStart() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.selectionStart",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.selectionStart",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.selectionEnd",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLInputElement.selectionEnd getter can only be used on instances of HTMLInputElement"
    },
    {
      "path": "window.HTMLInputElement.prototype.selectionEnd",
      "propertyName": "_get",
      "property": "function selectionEnd() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.selectionEnd",
      "propertyName": "_set",
      "property": "function selectionEnd() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.selectionEnd",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.selectionEnd",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.selectionDirection",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLInputElement.selectionDirection getter can only be used on instances of HTMLInputElement"
    },
    {
      "path": "window.HTMLInputElement.prototype.selectionDirection",
      "propertyName": "_get",
      "property": "function selectionDirection() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.selectionDirection",
      "propertyName": "_set",
      "property": "function selectionDirection() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.selectionDirection",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.selectionDirection",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.align",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLInputElement.align getter can only be used on instances of HTMLInputElement"
    },
    {
      "path": "window.HTMLInputElement.prototype.align",
      "propertyName": "_get",
      "property": "function align() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.align",
      "propertyName": "_set",
      "property": "function align() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.align",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.align",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.useMap",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLInputElement.useMap getter can only be used on instances of HTMLInputElement"
    },
    {
      "path": "window.HTMLInputElement.prototype.useMap",
      "propertyName": "_get",
      "property": "function useMap() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.useMap",
      "propertyName": "_set",
      "property": "function useMap() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.useMap",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.useMap",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.incremental",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLInputElement.incremental getter can only be used on instances of HTMLInputElement"
    },
    {
      "path": "window.HTMLInputElement.prototype.incremental",
      "propertyName": "_get",
      "property": "function incremental() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.incremental",
      "propertyName": "_set",
      "property": "function incremental() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.incremental",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.incremental",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.webkitdirectory",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLInputElement.webkitdirectory getter can only be used on instances of HTMLInputElement"
    },
    {
      "path": "window.HTMLInputElement.prototype.webkitdirectory",
      "propertyName": "_get",
      "property": "function webkitdirectory() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.webkitdirectory",
      "propertyName": "_set",
      "property": "function webkitdirectory() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.webkitdirectory",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.webkitdirectory",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.webkitEntries",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLInputElement.webkitEntries getter can only be used on instances of HTMLInputElement"
    },
    {
      "path": "window.HTMLInputElement.prototype.webkitEntries",
      "propertyName": "_get",
      "property": "function webkitEntries() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.webkitEntries",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.stepUp",
      "propertyName": "_function",
      "property": "function stepUp() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.stepDown",
      "propertyName": "_function",
      "property": "function stepDown() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.checkValidity",
      "propertyName": "_function",
      "property": "function checkValidity() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.reportValidity",
      "propertyName": "_function",
      "property": "function reportValidity() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.setCustomValidity",
      "propertyName": "_function",
      "property": "function setCustomValidity() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.select",
      "propertyName": "_function",
      "property": "function select() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.setRangeText",
      "propertyName": "_function",
      "property": "function setRangeText() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement.prototype.setSelectionRange",
      "propertyName": "_function",
      "property": "function setSelectionRange() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLInputElement",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.HTMLInputElement",
      "propertyName": "_function",
      "property": "function HTMLInputElement() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLLIElement.prototype.type",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLLIElement.type getter can only be used on instances of HTMLLIElement"
    },
    {
      "path": "window.HTMLLIElement.prototype.type",
      "propertyName": "_get",
      "property": "function type() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLLIElement.prototype.type",
      "propertyName": "_set",
      "property": "function type() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLLIElement.prototype.type",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLLIElement.prototype.type",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLLIElement.prototype.value",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLLIElement.value getter can only be used on instances of HTMLLIElement"
    },
    {
      "path": "window.HTMLLIElement.prototype.value",
      "propertyName": "_get",
      "property": "function value() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLLIElement.prototype.value",
      "propertyName": "_set",
      "property": "function value() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLLIElement.prototype.value",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLLIElement.prototype.value",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLLIElement",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.HTMLLIElement",
      "propertyName": "_function",
      "property": "function HTMLLIElement() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLLabelElement.prototype.form",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLLabelElement.form getter can only be used on instances of HTMLLabelElement"
    },
    {
      "path": "window.HTMLLabelElement.prototype.form",
      "propertyName": "_get",
      "property": "function form() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLLabelElement.prototype.form",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLLabelElement.prototype.htmlFor",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLLabelElement.htmlFor getter can only be used on instances of HTMLLabelElement"
    },
    {
      "path": "window.HTMLLabelElement.prototype.htmlFor",
      "propertyName": "_get",
      "property": "function htmlFor() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLLabelElement.prototype.htmlFor",
      "propertyName": "_set",
      "property": "function htmlFor() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLLabelElement.prototype.htmlFor",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLLabelElement.prototype.htmlFor",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLLabelElement.prototype.control",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLLabelElement.control getter can only be used on instances of HTMLLabelElement"
    },
    {
      "path": "window.HTMLLabelElement.prototype.control",
      "propertyName": "_get",
      "property": "function control() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLLabelElement.prototype.control",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLLabelElement",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.HTMLLabelElement",
      "propertyName": "_function",
      "property": "function HTMLLabelElement() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLLegendElement.prototype.form",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLLegendElement.form getter can only be used on instances of HTMLLegendElement"
    },
    {
      "path": "window.HTMLLegendElement.prototype.form",
      "propertyName": "_get",
      "property": "function form() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLLegendElement.prototype.form",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLLegendElement.prototype.align",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLLegendElement.align getter can only be used on instances of HTMLLegendElement"
    },
    {
      "path": "window.HTMLLegendElement.prototype.align",
      "propertyName": "_get",
      "property": "function align() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLLegendElement.prototype.align",
      "propertyName": "_set",
      "property": "function align() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLLegendElement.prototype.align",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLLegendElement.prototype.align",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLLegendElement",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.HTMLLegendElement",
      "propertyName": "_function",
      "property": "function HTMLLegendElement() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLLinkElement.prototype.disabled",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLLinkElement.disabled getter can only be used on instances of HTMLLinkElement"
    },
    {
      "path": "window.HTMLLinkElement.prototype.disabled",
      "propertyName": "_get",
      "property": "function disabled() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLLinkElement.prototype.disabled",
      "propertyName": "_set",
      "property": "function disabled() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLLinkElement.prototype.disabled",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLLinkElement.prototype.disabled",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLLinkElement.prototype.charset",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLLinkElement.charset getter can only be used on instances of HTMLLinkElement"
    },
    {
      "path": "window.HTMLLinkElement.prototype.charset",
      "propertyName": "_get",
      "property": "function charset() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLLinkElement.prototype.charset",
      "propertyName": "_set",
      "property": "function charset() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLLinkElement.prototype.charset",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLLinkElement.prototype.charset",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLLinkElement.prototype.href",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLLinkElement.href getter can only be used on instances of HTMLLinkElement"
    },
    {
      "path": "window.HTMLLinkElement.prototype.href",
      "propertyName": "_get",
      "property": "function href() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLLinkElement.prototype.href",
      "propertyName": "_set",
      "property": "function href() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLLinkElement.prototype.href",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLLinkElement.prototype.href",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLLinkElement.prototype.hreflang",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLLinkElement.hreflang getter can only be used on instances of HTMLLinkElement"
    },
    {
      "path": "window.HTMLLinkElement.prototype.hreflang",
      "propertyName": "_get",
      "property": "function hreflang() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLLinkElement.prototype.hreflang",
      "propertyName": "_set",
      "property": "function hreflang() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLLinkElement.prototype.hreflang",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLLinkElement.prototype.hreflang",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLLinkElement.prototype.media",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLLinkElement.media getter can only be used on instances of HTMLLinkElement"
    },
    {
      "path": "window.HTMLLinkElement.prototype.media",
      "propertyName": "_get",
      "property": "function media() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLLinkElement.prototype.media",
      "propertyName": "_set",
      "property": "function media() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLLinkElement.prototype.media",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLLinkElement.prototype.media",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLLinkElement.prototype.rel",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLLinkElement.rel getter can only be used on instances of HTMLLinkElement"
    },
    {
      "path": "window.HTMLLinkElement.prototype.rel",
      "propertyName": "_get",
      "property": "function rel() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLLinkElement.prototype.rel",
      "propertyName": "_set",
      "property": "function rel() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLLinkElement.prototype.rel",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLLinkElement.prototype.rel",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLLinkElement.prototype.rev",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLLinkElement.rev getter can only be used on instances of HTMLLinkElement"
    },
    {
      "path": "window.HTMLLinkElement.prototype.rev",
      "propertyName": "_get",
      "property": "function rev() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLLinkElement.prototype.rev",
      "propertyName": "_set",
      "property": "function rev() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLLinkElement.prototype.rev",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLLinkElement.prototype.rev",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLLinkElement.prototype.sizes",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLLinkElement.sizes getter can only be used on instances of HTMLLinkElement"
    },
    {
      "path": "window.HTMLLinkElement.prototype.sizes",
      "propertyName": "_get",
      "property": "function sizes() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLLinkElement.prototype.sizes",
      "propertyName": "_set",
      "property": "function sizes() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLLinkElement.prototype.sizes",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLLinkElement.prototype.sizes",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLLinkElement.prototype.target",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLLinkElement.target getter can only be used on instances of HTMLLinkElement"
    },
    {
      "path": "window.HTMLLinkElement.prototype.target",
      "propertyName": "_get",
      "property": "function target() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLLinkElement.prototype.target",
      "propertyName": "_set",
      "property": "function target() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLLinkElement.prototype.target",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLLinkElement.prototype.target",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLLinkElement.prototype.type",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLLinkElement.type getter can only be used on instances of HTMLLinkElement"
    },
    {
      "path": "window.HTMLLinkElement.prototype.type",
      "propertyName": "_get",
      "property": "function type() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLLinkElement.prototype.type",
      "propertyName": "_set",
      "property": "function type() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLLinkElement.prototype.type",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLLinkElement.prototype.type",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLLinkElement.prototype.as",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLLinkElement.as getter can only be used on instances of HTMLLinkElement"
    },
    {
      "path": "window.HTMLLinkElement.prototype.as",
      "propertyName": "_get",
      "property": "function as() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLLinkElement.prototype.as",
      "propertyName": "_set",
      "property": "function as() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLLinkElement.prototype.as",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLLinkElement.prototype.as",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLLinkElement.prototype.crossOrigin",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLLinkElement.crossOrigin getter can only be used on instances of HTMLLinkElement"
    },
    {
      "path": "window.HTMLLinkElement.prototype.crossOrigin",
      "propertyName": "_get",
      "property": "function crossOrigin() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLLinkElement.prototype.crossOrigin",
      "propertyName": "_set",
      "property": "function crossOrigin() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLLinkElement.prototype.crossOrigin",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLLinkElement.prototype.crossOrigin",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLLinkElement.prototype.sheet",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLLinkElement.sheet getter can only be used on instances of HTMLLinkElement"
    },
    {
      "path": "window.HTMLLinkElement.prototype.sheet",
      "propertyName": "_get",
      "property": "function sheet() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLLinkElement.prototype.sheet",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLLinkElement.prototype.relList",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLLinkElement.relList getter can only be used on instances of HTMLLinkElement"
    },
    {
      "path": "window.HTMLLinkElement.prototype.relList",
      "propertyName": "_get",
      "property": "function relList() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLLinkElement.prototype.relList",
      "propertyName": "_set",
      "property": "function relList() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLLinkElement.prototype.relList",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLLinkElement.prototype.relList",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLLinkElement.prototype.integrity",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLLinkElement.integrity getter can only be used on instances of HTMLLinkElement"
    },
    {
      "path": "window.HTMLLinkElement.prototype.integrity",
      "propertyName": "_get",
      "property": "function integrity() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLLinkElement.prototype.integrity",
      "propertyName": "_set",
      "property": "function integrity() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLLinkElement.prototype.integrity",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLLinkElement.prototype.integrity",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLLinkElement",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.HTMLLinkElement",
      "propertyName": "_function",
      "property": "function HTMLLinkElement() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMapElement.prototype.areas",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLMapElement.areas getter can only be used on instances of HTMLMapElement"
    },
    {
      "path": "window.HTMLMapElement.prototype.areas",
      "propertyName": "_get",
      "property": "function areas() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMapElement.prototype.areas",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMapElement.prototype.name",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLMapElement.name getter can only be used on instances of HTMLMapElement"
    },
    {
      "path": "window.HTMLMapElement.prototype.name",
      "propertyName": "_get",
      "property": "function name() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMapElement.prototype.name",
      "propertyName": "_set",
      "property": "function name() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMapElement.prototype.name",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMapElement.prototype.name",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMapElement",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.HTMLMapElement",
      "propertyName": "_function",
      "property": "function HTMLMapElement() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMarqueeElement.prototype.behavior",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLMarqueeElement.behavior getter can only be used on instances of HTMLMarqueeElement"
    },
    {
      "path": "window.HTMLMarqueeElement.prototype.behavior",
      "propertyName": "_get",
      "property": "function behavior() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMarqueeElement.prototype.behavior",
      "propertyName": "_set",
      "property": "function behavior() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMarqueeElement.prototype.behavior",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMarqueeElement.prototype.behavior",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMarqueeElement.prototype.bgColor",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLMarqueeElement.bgColor getter can only be used on instances of HTMLMarqueeElement"
    },
    {
      "path": "window.HTMLMarqueeElement.prototype.bgColor",
      "propertyName": "_get",
      "property": "function bgColor() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMarqueeElement.prototype.bgColor",
      "propertyName": "_set",
      "property": "function bgColor() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMarqueeElement.prototype.bgColor",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMarqueeElement.prototype.bgColor",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMarqueeElement.prototype.direction",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLMarqueeElement.direction getter can only be used on instances of HTMLMarqueeElement"
    },
    {
      "path": "window.HTMLMarqueeElement.prototype.direction",
      "propertyName": "_get",
      "property": "function direction() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMarqueeElement.prototype.direction",
      "propertyName": "_set",
      "property": "function direction() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMarqueeElement.prototype.direction",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMarqueeElement.prototype.direction",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMarqueeElement.prototype.height",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLMarqueeElement.height getter can only be used on instances of HTMLMarqueeElement"
    },
    {
      "path": "window.HTMLMarqueeElement.prototype.height",
      "propertyName": "_get",
      "property": "function height() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMarqueeElement.prototype.height",
      "propertyName": "_set",
      "property": "function height() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMarqueeElement.prototype.height",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMarqueeElement.prototype.height",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMarqueeElement.prototype.hspace",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLMarqueeElement.hspace getter can only be used on instances of HTMLMarqueeElement"
    },
    {
      "path": "window.HTMLMarqueeElement.prototype.hspace",
      "propertyName": "_get",
      "property": "function hspace() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMarqueeElement.prototype.hspace",
      "propertyName": "_set",
      "property": "function hspace() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMarqueeElement.prototype.hspace",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMarqueeElement.prototype.hspace",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMarqueeElement.prototype.loop",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLMarqueeElement.loop getter can only be used on instances of HTMLMarqueeElement"
    },
    {
      "path": "window.HTMLMarqueeElement.prototype.loop",
      "propertyName": "_get",
      "property": "function loop() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMarqueeElement.prototype.loop",
      "propertyName": "_set",
      "property": "function loop() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMarqueeElement.prototype.loop",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMarqueeElement.prototype.loop",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMarqueeElement.prototype.scrollAmount",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLMarqueeElement.scrollAmount getter can only be used on instances of HTMLMarqueeElement"
    },
    {
      "path": "window.HTMLMarqueeElement.prototype.scrollAmount",
      "propertyName": "_get",
      "property": "function scrollAmount() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMarqueeElement.prototype.scrollAmount",
      "propertyName": "_set",
      "property": "function scrollAmount() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMarqueeElement.prototype.scrollAmount",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMarqueeElement.prototype.scrollAmount",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMarqueeElement.prototype.scrollDelay",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLMarqueeElement.scrollDelay getter can only be used on instances of HTMLMarqueeElement"
    },
    {
      "path": "window.HTMLMarqueeElement.prototype.scrollDelay",
      "propertyName": "_get",
      "property": "function scrollDelay() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMarqueeElement.prototype.scrollDelay",
      "propertyName": "_set",
      "property": "function scrollDelay() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMarqueeElement.prototype.scrollDelay",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMarqueeElement.prototype.scrollDelay",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMarqueeElement.prototype.trueSpeed",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLMarqueeElement.trueSpeed getter can only be used on instances of HTMLMarqueeElement"
    },
    {
      "path": "window.HTMLMarqueeElement.prototype.trueSpeed",
      "propertyName": "_get",
      "property": "function trueSpeed() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMarqueeElement.prototype.trueSpeed",
      "propertyName": "_set",
      "property": "function trueSpeed() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMarqueeElement.prototype.trueSpeed",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMarqueeElement.prototype.trueSpeed",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMarqueeElement.prototype.vspace",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLMarqueeElement.vspace getter can only be used on instances of HTMLMarqueeElement"
    },
    {
      "path": "window.HTMLMarqueeElement.prototype.vspace",
      "propertyName": "_get",
      "property": "function vspace() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMarqueeElement.prototype.vspace",
      "propertyName": "_set",
      "property": "function vspace() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMarqueeElement.prototype.vspace",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMarqueeElement.prototype.vspace",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMarqueeElement.prototype.width",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLMarqueeElement.width getter can only be used on instances of HTMLMarqueeElement"
    },
    {
      "path": "window.HTMLMarqueeElement.prototype.width",
      "propertyName": "_get",
      "property": "function width() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMarqueeElement.prototype.width",
      "propertyName": "_set",
      "property": "function width() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMarqueeElement.prototype.width",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMarqueeElement.prototype.width",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMarqueeElement.prototype.start",
      "propertyName": "_function",
      "property": "function start() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMarqueeElement.prototype.stop",
      "propertyName": "_function",
      "property": "function stop() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMarqueeElement",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.HTMLMarqueeElement",
      "propertyName": "_function",
      "property": "function HTMLMarqueeElement() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMediaElement.prototype.error",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLMediaElement.error getter can only be used on instances of HTMLMediaElement"
    },
    {
      "path": "window.HTMLMediaElement.prototype.error",
      "propertyName": "_get",
      "property": "function error() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMediaElement.prototype.error",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMediaElement.prototype.src",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLMediaElement.src getter can only be used on instances of HTMLMediaElement"
    },
    {
      "path": "window.HTMLMediaElement.prototype.src",
      "propertyName": "_get",
      "property": "function src() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMediaElement.prototype.src",
      "propertyName": "_set",
      "property": "function src() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMediaElement.prototype.src",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMediaElement.prototype.src",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMediaElement.prototype.srcObject",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLMediaElement.srcObject getter can only be used on instances of HTMLMediaElement"
    },
    {
      "path": "window.HTMLMediaElement.prototype.srcObject",
      "propertyName": "_get",
      "property": "function srcObject() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMediaElement.prototype.srcObject",
      "propertyName": "_set",
      "property": "function srcObject() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMediaElement.prototype.srcObject",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMediaElement.prototype.srcObject",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMediaElement.prototype.currentSrc",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLMediaElement.currentSrc getter can only be used on instances of HTMLMediaElement"
    },
    {
      "path": "window.HTMLMediaElement.prototype.currentSrc",
      "propertyName": "_get",
      "property": "function currentSrc() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMediaElement.prototype.currentSrc",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMediaElement.prototype.crossOrigin",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLMediaElement.crossOrigin getter can only be used on instances of HTMLMediaElement"
    },
    {
      "path": "window.HTMLMediaElement.prototype.crossOrigin",
      "propertyName": "_get",
      "property": "function crossOrigin() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMediaElement.prototype.crossOrigin",
      "propertyName": "_set",
      "property": "function crossOrigin() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMediaElement.prototype.crossOrigin",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMediaElement.prototype.crossOrigin",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMediaElement.prototype.networkState",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLMediaElement.networkState getter can only be used on instances of HTMLMediaElement"
    },
    {
      "path": "window.HTMLMediaElement.prototype.networkState",
      "propertyName": "_get",
      "property": "function networkState() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMediaElement.prototype.networkState",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMediaElement.prototype.preload",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLMediaElement.preload getter can only be used on instances of HTMLMediaElement"
    },
    {
      "path": "window.HTMLMediaElement.prototype.preload",
      "propertyName": "_get",
      "property": "function preload() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMediaElement.prototype.preload",
      "propertyName": "_set",
      "property": "function preload() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMediaElement.prototype.preload",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMediaElement.prototype.preload",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMediaElement.prototype.buffered",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLMediaElement.buffered getter can only be used on instances of HTMLMediaElement"
    },
    {
      "path": "window.HTMLMediaElement.prototype.buffered",
      "propertyName": "_get",
      "property": "function buffered() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMediaElement.prototype.buffered",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMediaElement.prototype.readyState",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLMediaElement.readyState getter can only be used on instances of HTMLMediaElement"
    },
    {
      "path": "window.HTMLMediaElement.prototype.readyState",
      "propertyName": "_get",
      "property": "function readyState() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMediaElement.prototype.readyState",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMediaElement.prototype.seeking",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLMediaElement.seeking getter can only be used on instances of HTMLMediaElement"
    },
    {
      "path": "window.HTMLMediaElement.prototype.seeking",
      "propertyName": "_get",
      "property": "function seeking() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMediaElement.prototype.seeking",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMediaElement.prototype.currentTime",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLMediaElement.currentTime getter can only be used on instances of HTMLMediaElement"
    },
    {
      "path": "window.HTMLMediaElement.prototype.currentTime",
      "propertyName": "_get",
      "property": "function currentTime() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMediaElement.prototype.currentTime",
      "propertyName": "_set",
      "property": "function currentTime() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMediaElement.prototype.currentTime",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMediaElement.prototype.currentTime",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMediaElement.prototype.duration",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLMediaElement.duration getter can only be used on instances of HTMLMediaElement"
    },
    {
      "path": "window.HTMLMediaElement.prototype.duration",
      "propertyName": "_get",
      "property": "function duration() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMediaElement.prototype.duration",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMediaElement.prototype.paused",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLMediaElement.paused getter can only be used on instances of HTMLMediaElement"
    },
    {
      "path": "window.HTMLMediaElement.prototype.paused",
      "propertyName": "_get",
      "property": "function paused() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMediaElement.prototype.paused",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMediaElement.prototype.defaultPlaybackRate",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLMediaElement.defaultPlaybackRate getter can only be used on instances of HTMLMediaElement"
    },
    {
      "path": "window.HTMLMediaElement.prototype.defaultPlaybackRate",
      "propertyName": "_get",
      "property": "function defaultPlaybackRate() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMediaElement.prototype.defaultPlaybackRate",
      "propertyName": "_set",
      "property": "function defaultPlaybackRate() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMediaElement.prototype.defaultPlaybackRate",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMediaElement.prototype.defaultPlaybackRate",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMediaElement.prototype.playbackRate",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLMediaElement.playbackRate getter can only be used on instances of HTMLMediaElement"
    },
    {
      "path": "window.HTMLMediaElement.prototype.playbackRate",
      "propertyName": "_get",
      "property": "function playbackRate() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMediaElement.prototype.playbackRate",
      "propertyName": "_set",
      "property": "function playbackRate() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMediaElement.prototype.playbackRate",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMediaElement.prototype.playbackRate",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMediaElement.prototype.played",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLMediaElement.played getter can only be used on instances of HTMLMediaElement"
    },
    {
      "path": "window.HTMLMediaElement.prototype.played",
      "propertyName": "_get",
      "property": "function played() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMediaElement.prototype.played",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMediaElement.prototype.seekable",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLMediaElement.seekable getter can only be used on instances of HTMLMediaElement"
    },
    {
      "path": "window.HTMLMediaElement.prototype.seekable",
      "propertyName": "_get",
      "property": "function seekable() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMediaElement.prototype.seekable",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMediaElement.prototype.ended",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLMediaElement.ended getter can only be used on instances of HTMLMediaElement"
    },
    {
      "path": "window.HTMLMediaElement.prototype.ended",
      "propertyName": "_get",
      "property": "function ended() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMediaElement.prototype.ended",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMediaElement.prototype.autoplay",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLMediaElement.autoplay getter can only be used on instances of HTMLMediaElement"
    },
    {
      "path": "window.HTMLMediaElement.prototype.autoplay",
      "propertyName": "_get",
      "property": "function autoplay() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMediaElement.prototype.autoplay",
      "propertyName": "_set",
      "property": "function autoplay() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMediaElement.prototype.autoplay",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMediaElement.prototype.autoplay",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMediaElement.prototype.loop",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLMediaElement.loop getter can only be used on instances of HTMLMediaElement"
    },
    {
      "path": "window.HTMLMediaElement.prototype.loop",
      "propertyName": "_get",
      "property": "function loop() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMediaElement.prototype.loop",
      "propertyName": "_set",
      "property": "function loop() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMediaElement.prototype.loop",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMediaElement.prototype.loop",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMediaElement.prototype.controls",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLMediaElement.controls getter can only be used on instances of HTMLMediaElement"
    },
    {
      "path": "window.HTMLMediaElement.prototype.controls",
      "propertyName": "_get",
      "property": "function controls() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMediaElement.prototype.controls",
      "propertyName": "_set",
      "property": "function controls() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMediaElement.prototype.controls",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMediaElement.prototype.controls",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMediaElement.prototype.volume",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLMediaElement.volume getter can only be used on instances of HTMLMediaElement"
    },
    {
      "path": "window.HTMLMediaElement.prototype.volume",
      "propertyName": "_get",
      "property": "function volume() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMediaElement.prototype.volume",
      "propertyName": "_set",
      "property": "function volume() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMediaElement.prototype.volume",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMediaElement.prototype.volume",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMediaElement.prototype.muted",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLMediaElement.muted getter can only be used on instances of HTMLMediaElement"
    },
    {
      "path": "window.HTMLMediaElement.prototype.muted",
      "propertyName": "_get",
      "property": "function muted() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMediaElement.prototype.muted",
      "propertyName": "_set",
      "property": "function muted() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMediaElement.prototype.muted",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMediaElement.prototype.muted",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMediaElement.prototype.defaultMuted",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLMediaElement.defaultMuted getter can only be used on instances of HTMLMediaElement"
    },
    {
      "path": "window.HTMLMediaElement.prototype.defaultMuted",
      "propertyName": "_get",
      "property": "function defaultMuted() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMediaElement.prototype.defaultMuted",
      "propertyName": "_set",
      "property": "function defaultMuted() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMediaElement.prototype.defaultMuted",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMediaElement.prototype.defaultMuted",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMediaElement.prototype.mediaKeys",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLMediaElement.mediaKeys getter can only be used on instances of HTMLMediaElement"
    },
    {
      "path": "window.HTMLMediaElement.prototype.mediaKeys",
      "propertyName": "_get",
      "property": "function mediaKeys() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMediaElement.prototype.mediaKeys",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMediaElement.prototype.onencrypted",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLMediaElement.onencrypted getter can only be used on instances of HTMLMediaElement"
    },
    {
      "path": "window.HTMLMediaElement.prototype.onencrypted",
      "propertyName": "_get",
      "property": "function onencrypted() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMediaElement.prototype.onencrypted",
      "propertyName": "_set",
      "property": "function onencrypted() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMediaElement.prototype.onencrypted",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMediaElement.prototype.onencrypted",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMediaElement.prototype.onwaitingforkey",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLMediaElement.onwaitingforkey getter can only be used on instances of HTMLMediaElement"
    },
    {
      "path": "window.HTMLMediaElement.prototype.onwaitingforkey",
      "propertyName": "_get",
      "property": "function onwaitingforkey() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMediaElement.prototype.onwaitingforkey",
      "propertyName": "_set",
      "property": "function onwaitingforkey() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMediaElement.prototype.onwaitingforkey",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMediaElement.prototype.onwaitingforkey",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMediaElement.prototype.textTracks",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLMediaElement.textTracks getter can only be used on instances of HTMLMediaElement"
    },
    {
      "path": "window.HTMLMediaElement.prototype.textTracks",
      "propertyName": "_get",
      "property": "function textTracks() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMediaElement.prototype.textTracks",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMediaElement.prototype.load",
      "propertyName": "_function",
      "property": "function load() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMediaElement.prototype.canPlayType",
      "propertyName": "_function",
      "property": "function canPlayType() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMediaElement.prototype.play",
      "propertyName": "_function",
      "property": "function play() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMediaElement.prototype.pause",
      "propertyName": "_function",
      "property": "function pause() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMediaElement.prototype.setMediaKeys.name",
      "propertyName": "_value",
      "property": "setMediaKeys"
    },
    {
      "path": "window.HTMLMediaElement.prototype.setMediaKeys",
      "propertyName": "_function",
      "property": "function setMediaKeys() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMediaElement.prototype.addTextTrack",
      "propertyName": "_function",
      "property": "function addTextTrack() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMediaElement",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.HTMLMediaElement",
      "propertyName": "_function",
      "property": "function HTMLMediaElement() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMenuElement.prototype.compact",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLMenuElement.compact getter can only be used on instances of HTMLMenuElement"
    },
    {
      "path": "window.HTMLMenuElement.prototype.compact",
      "propertyName": "_get",
      "property": "function compact() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMenuElement.prototype.compact",
      "propertyName": "_set",
      "property": "function compact() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMenuElement.prototype.compact",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMenuElement.prototype.compact",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMenuElement",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.HTMLMenuElement",
      "propertyName": "_function",
      "property": "function HTMLMenuElement() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMetaElement.prototype.content",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLMetaElement.content getter can only be used on instances of HTMLMetaElement"
    },
    {
      "path": "window.HTMLMetaElement.prototype.content",
      "propertyName": "_get",
      "property": "function content() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMetaElement.prototype.content",
      "propertyName": "_set",
      "property": "function content() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMetaElement.prototype.content",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMetaElement.prototype.content",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMetaElement.prototype.httpEquiv",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLMetaElement.httpEquiv getter can only be used on instances of HTMLMetaElement"
    },
    {
      "path": "window.HTMLMetaElement.prototype.httpEquiv",
      "propertyName": "_get",
      "property": "function httpEquiv() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMetaElement.prototype.httpEquiv",
      "propertyName": "_set",
      "property": "function httpEquiv() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMetaElement.prototype.httpEquiv",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMetaElement.prototype.httpEquiv",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMetaElement.prototype.name",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLMetaElement.name getter can only be used on instances of HTMLMetaElement"
    },
    {
      "path": "window.HTMLMetaElement.prototype.name",
      "propertyName": "_get",
      "property": "function name() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMetaElement.prototype.name",
      "propertyName": "_set",
      "property": "function name() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMetaElement.prototype.name",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMetaElement.prototype.name",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMetaElement.prototype.scheme",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLMetaElement.scheme getter can only be used on instances of HTMLMetaElement"
    },
    {
      "path": "window.HTMLMetaElement.prototype.scheme",
      "propertyName": "_get",
      "property": "function scheme() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMetaElement.prototype.scheme",
      "propertyName": "_set",
      "property": "function scheme() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMetaElement.prototype.scheme",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMetaElement.prototype.scheme",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMetaElement",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.HTMLMetaElement",
      "propertyName": "_function",
      "property": "function HTMLMetaElement() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMeterElement.prototype.value",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLMeterElement.value getter can only be used on instances of HTMLMeterElement"
    },
    {
      "path": "window.HTMLMeterElement.prototype.value",
      "propertyName": "_get",
      "property": "function value() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMeterElement.prototype.value",
      "propertyName": "_set",
      "property": "function value() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMeterElement.prototype.value",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMeterElement.prototype.value",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMeterElement.prototype.min",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLMeterElement.min getter can only be used on instances of HTMLMeterElement"
    },
    {
      "path": "window.HTMLMeterElement.prototype.min",
      "propertyName": "_get",
      "property": "function min() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMeterElement.prototype.min",
      "propertyName": "_set",
      "property": "function min() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMeterElement.prototype.min",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMeterElement.prototype.min",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMeterElement.prototype.max",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLMeterElement.max getter can only be used on instances of HTMLMeterElement"
    },
    {
      "path": "window.HTMLMeterElement.prototype.max",
      "propertyName": "_get",
      "property": "function max() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMeterElement.prototype.max",
      "propertyName": "_set",
      "property": "function max() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMeterElement.prototype.max",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMeterElement.prototype.max",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMeterElement.prototype.low",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLMeterElement.low getter can only be used on instances of HTMLMeterElement"
    },
    {
      "path": "window.HTMLMeterElement.prototype.low",
      "propertyName": "_get",
      "property": "function low() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMeterElement.prototype.low",
      "propertyName": "_set",
      "property": "function low() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMeterElement.prototype.low",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMeterElement.prototype.low",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMeterElement.prototype.high",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLMeterElement.high getter can only be used on instances of HTMLMeterElement"
    },
    {
      "path": "window.HTMLMeterElement.prototype.high",
      "propertyName": "_get",
      "property": "function high() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMeterElement.prototype.high",
      "propertyName": "_set",
      "property": "function high() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMeterElement.prototype.high",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMeterElement.prototype.high",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMeterElement.prototype.optimum",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLMeterElement.optimum getter can only be used on instances of HTMLMeterElement"
    },
    {
      "path": "window.HTMLMeterElement.prototype.optimum",
      "propertyName": "_get",
      "property": "function optimum() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMeterElement.prototype.optimum",
      "propertyName": "_set",
      "property": "function optimum() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMeterElement.prototype.optimum",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMeterElement.prototype.optimum",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMeterElement.prototype.labels",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLMeterElement.labels getter can only be used on instances of HTMLMeterElement"
    },
    {
      "path": "window.HTMLMeterElement.prototype.labels",
      "propertyName": "_get",
      "property": "function labels() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMeterElement.prototype.labels",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLMeterElement",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.HTMLMeterElement",
      "propertyName": "_function",
      "property": "function HTMLMeterElement() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLModElement.prototype.cite",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLModElement.cite getter can only be used on instances of HTMLModElement"
    },
    {
      "path": "window.HTMLModElement.prototype.cite",
      "propertyName": "_get",
      "property": "function cite() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLModElement.prototype.cite",
      "propertyName": "_set",
      "property": "function cite() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLModElement.prototype.cite",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLModElement.prototype.cite",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLModElement.prototype.dateTime",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLModElement.dateTime getter can only be used on instances of HTMLModElement"
    },
    {
      "path": "window.HTMLModElement.prototype.dateTime",
      "propertyName": "_get",
      "property": "function dateTime() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLModElement.prototype.dateTime",
      "propertyName": "_set",
      "property": "function dateTime() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLModElement.prototype.dateTime",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLModElement.prototype.dateTime",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLModElement",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.HTMLModElement",
      "propertyName": "_function",
      "property": "function HTMLModElement() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLOListElement.prototype.compact",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLOListElement.compact getter can only be used on instances of HTMLOListElement"
    },
    {
      "path": "window.HTMLOListElement.prototype.compact",
      "propertyName": "_get",
      "property": "function compact() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLOListElement.prototype.compact",
      "propertyName": "_set",
      "property": "function compact() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLOListElement.prototype.compact",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLOListElement.prototype.compact",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLOListElement.prototype.start",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLOListElement.start getter can only be used on instances of HTMLOListElement"
    },
    {
      "path": "window.HTMLOListElement.prototype.start",
      "propertyName": "_get",
      "property": "function start() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLOListElement.prototype.start",
      "propertyName": "_set",
      "property": "function start() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLOListElement.prototype.start",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLOListElement.prototype.start",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLOListElement.prototype.reversed",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLOListElement.reversed getter can only be used on instances of HTMLOListElement"
    },
    {
      "path": "window.HTMLOListElement.prototype.reversed",
      "propertyName": "_get",
      "property": "function reversed() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLOListElement.prototype.reversed",
      "propertyName": "_set",
      "property": "function reversed() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLOListElement.prototype.reversed",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLOListElement.prototype.reversed",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLOListElement.prototype.type",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLOListElement.type getter can only be used on instances of HTMLOListElement"
    },
    {
      "path": "window.HTMLOListElement.prototype.type",
      "propertyName": "_get",
      "property": "function type() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLOListElement.prototype.type",
      "propertyName": "_set",
      "property": "function type() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLOListElement.prototype.type",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLOListElement.prototype.type",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLOListElement",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.HTMLOListElement",
      "propertyName": "_function",
      "property": "function HTMLOListElement() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLObjectElement.prototype.form",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLObjectElement.form getter can only be used on instances of HTMLObjectElement"
    },
    {
      "path": "window.HTMLObjectElement.prototype.form",
      "propertyName": "_get",
      "property": "function form() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLObjectElement.prototype.form",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLObjectElement.prototype.code",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLObjectElement.code getter can only be used on instances of HTMLObjectElement"
    },
    {
      "path": "window.HTMLObjectElement.prototype.code",
      "propertyName": "_get",
      "property": "function code() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLObjectElement.prototype.code",
      "propertyName": "_set",
      "property": "function code() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLObjectElement.prototype.code",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLObjectElement.prototype.code",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLObjectElement.prototype.align",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLObjectElement.align getter can only be used on instances of HTMLObjectElement"
    },
    {
      "path": "window.HTMLObjectElement.prototype.align",
      "propertyName": "_get",
      "property": "function align() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLObjectElement.prototype.align",
      "propertyName": "_set",
      "property": "function align() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLObjectElement.prototype.align",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLObjectElement.prototype.align",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLObjectElement.prototype.archive",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLObjectElement.archive getter can only be used on instances of HTMLObjectElement"
    },
    {
      "path": "window.HTMLObjectElement.prototype.archive",
      "propertyName": "_get",
      "property": "function archive() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLObjectElement.prototype.archive",
      "propertyName": "_set",
      "property": "function archive() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLObjectElement.prototype.archive",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLObjectElement.prototype.archive",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLObjectElement.prototype.border",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLObjectElement.border getter can only be used on instances of HTMLObjectElement"
    },
    {
      "path": "window.HTMLObjectElement.prototype.border",
      "propertyName": "_get",
      "property": "function border() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLObjectElement.prototype.border",
      "propertyName": "_set",
      "property": "function border() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLObjectElement.prototype.border",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLObjectElement.prototype.border",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLObjectElement.prototype.codeBase",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLObjectElement.codeBase getter can only be used on instances of HTMLObjectElement"
    },
    {
      "path": "window.HTMLObjectElement.prototype.codeBase",
      "propertyName": "_get",
      "property": "function codeBase() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLObjectElement.prototype.codeBase",
      "propertyName": "_set",
      "property": "function codeBase() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLObjectElement.prototype.codeBase",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLObjectElement.prototype.codeBase",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLObjectElement.prototype.codeType",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLObjectElement.codeType getter can only be used on instances of HTMLObjectElement"
    },
    {
      "path": "window.HTMLObjectElement.prototype.codeType",
      "propertyName": "_get",
      "property": "function codeType() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLObjectElement.prototype.codeType",
      "propertyName": "_set",
      "property": "function codeType() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLObjectElement.prototype.codeType",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLObjectElement.prototype.codeType",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLObjectElement.prototype.data",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLObjectElement.data getter can only be used on instances of HTMLObjectElement"
    },
    {
      "path": "window.HTMLObjectElement.prototype.data",
      "propertyName": "_get",
      "property": "function data() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLObjectElement.prototype.data",
      "propertyName": "_set",
      "property": "function data() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLObjectElement.prototype.data",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLObjectElement.prototype.data",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLObjectElement.prototype.declare",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLObjectElement.declare getter can only be used on instances of HTMLObjectElement"
    },
    {
      "path": "window.HTMLObjectElement.prototype.declare",
      "propertyName": "_get",
      "property": "function declare() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLObjectElement.prototype.declare",
      "propertyName": "_set",
      "property": "function declare() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLObjectElement.prototype.declare",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLObjectElement.prototype.declare",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLObjectElement.prototype.height",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLObjectElement.height getter can only be used on instances of HTMLObjectElement"
    },
    {
      "path": "window.HTMLObjectElement.prototype.height",
      "propertyName": "_get",
      "property": "function height() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLObjectElement.prototype.height",
      "propertyName": "_set",
      "property": "function height() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLObjectElement.prototype.height",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLObjectElement.prototype.height",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLObjectElement.prototype.hspace",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLObjectElement.hspace getter can only be used on instances of HTMLObjectElement"
    },
    {
      "path": "window.HTMLObjectElement.prototype.hspace",
      "propertyName": "_get",
      "property": "function hspace() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLObjectElement.prototype.hspace",
      "propertyName": "_set",
      "property": "function hspace() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLObjectElement.prototype.hspace",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLObjectElement.prototype.hspace",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLObjectElement.prototype.name",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLObjectElement.name getter can only be used on instances of HTMLObjectElement"
    },
    {
      "path": "window.HTMLObjectElement.prototype.name",
      "propertyName": "_get",
      "property": "function name() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLObjectElement.prototype.name",
      "propertyName": "_set",
      "property": "function name() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLObjectElement.prototype.name",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLObjectElement.prototype.name",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLObjectElement.prototype.standby",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLObjectElement.standby getter can only be used on instances of HTMLObjectElement"
    },
    {
      "path": "window.HTMLObjectElement.prototype.standby",
      "propertyName": "_get",
      "property": "function standby() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLObjectElement.prototype.standby",
      "propertyName": "_set",
      "property": "function standby() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLObjectElement.prototype.standby",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLObjectElement.prototype.standby",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLObjectElement.prototype.type",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLObjectElement.type getter can only be used on instances of HTMLObjectElement"
    },
    {
      "path": "window.HTMLObjectElement.prototype.type",
      "propertyName": "_get",
      "property": "function type() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLObjectElement.prototype.type",
      "propertyName": "_set",
      "property": "function type() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLObjectElement.prototype.type",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLObjectElement.prototype.type",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLObjectElement.prototype.useMap",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLObjectElement.useMap getter can only be used on instances of HTMLObjectElement"
    },
    {
      "path": "window.HTMLObjectElement.prototype.useMap",
      "propertyName": "_get",
      "property": "function useMap() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLObjectElement.prototype.useMap",
      "propertyName": "_set",
      "property": "function useMap() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLObjectElement.prototype.useMap",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLObjectElement.prototype.useMap",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLObjectElement.prototype.vspace",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLObjectElement.vspace getter can only be used on instances of HTMLObjectElement"
    },
    {
      "path": "window.HTMLObjectElement.prototype.vspace",
      "propertyName": "_get",
      "property": "function vspace() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLObjectElement.prototype.vspace",
      "propertyName": "_set",
      "property": "function vspace() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLObjectElement.prototype.vspace",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLObjectElement.prototype.vspace",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLObjectElement.prototype.width",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLObjectElement.width getter can only be used on instances of HTMLObjectElement"
    },
    {
      "path": "window.HTMLObjectElement.prototype.width",
      "propertyName": "_get",
      "property": "function width() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLObjectElement.prototype.width",
      "propertyName": "_set",
      "property": "function width() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLObjectElement.prototype.width",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLObjectElement.prototype.width",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLObjectElement.prototype.willValidate",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLObjectElement.willValidate getter can only be used on instances of HTMLObjectElement"
    },
    {
      "path": "window.HTMLObjectElement.prototype.willValidate",
      "propertyName": "_get",
      "property": "function willValidate() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLObjectElement.prototype.willValidate",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLObjectElement.prototype.validity",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLObjectElement.validity getter can only be used on instances of HTMLObjectElement"
    },
    {
      "path": "window.HTMLObjectElement.prototype.validity",
      "propertyName": "_get",
      "property": "function validity() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLObjectElement.prototype.validity",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLObjectElement.prototype.validationMessage",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLObjectElement.validationMessage getter can only be used on instances of HTMLObjectElement"
    },
    {
      "path": "window.HTMLObjectElement.prototype.validationMessage",
      "propertyName": "_get",
      "property": "function validationMessage() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLObjectElement.prototype.validationMessage",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLObjectElement.prototype.contentDocument",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLObjectElement.contentDocument getter can only be used on instances of HTMLObjectElement"
    },
    {
      "path": "window.HTMLObjectElement.prototype.contentDocument",
      "propertyName": "_get",
      "property": "function contentDocument() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLObjectElement.prototype.contentDocument",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLObjectElement.prototype.contentWindow",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLObjectElement.contentWindow getter can only be used on instances of HTMLObjectElement"
    },
    {
      "path": "window.HTMLObjectElement.prototype.contentWindow",
      "propertyName": "_get",
      "property": "function contentWindow() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLObjectElement.prototype.contentWindow",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLObjectElement.prototype.checkValidity",
      "propertyName": "_function",
      "property": "function checkValidity() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLObjectElement.prototype.reportValidity",
      "propertyName": "_function",
      "property": "function reportValidity() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLObjectElement.prototype.setCustomValidity",
      "propertyName": "_function",
      "property": "function setCustomValidity() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLObjectElement.prototype.getSVGDocument",
      "propertyName": "_function",
      "property": "function getSVGDocument() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLObjectElement",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.HTMLObjectElement",
      "propertyName": "_function",
      "property": "function HTMLObjectElement() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLOptGroupElement.prototype.disabled",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLOptGroupElement.disabled getter can only be used on instances of HTMLOptGroupElement"
    },
    {
      "path": "window.HTMLOptGroupElement.prototype.disabled",
      "propertyName": "_get",
      "property": "function disabled() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLOptGroupElement.prototype.disabled",
      "propertyName": "_set",
      "property": "function disabled() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLOptGroupElement.prototype.disabled",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLOptGroupElement.prototype.disabled",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLOptGroupElement.prototype.label",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLOptGroupElement.label getter can only be used on instances of HTMLOptGroupElement"
    },
    {
      "path": "window.HTMLOptGroupElement.prototype.label",
      "propertyName": "_get",
      "property": "function label() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLOptGroupElement.prototype.label",
      "propertyName": "_set",
      "property": "function label() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLOptGroupElement.prototype.label",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLOptGroupElement.prototype.label",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLOptGroupElement",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.HTMLOptGroupElement",
      "propertyName": "_function",
      "property": "function HTMLOptGroupElement() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLOptionElement",
      "propertyName": "prototype",
      "property": {
        "_protos": [
          "HTMLElement.prototype",
          "Element.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "disabled": {
          "_flags": "ce",
          "_accessException": "TypeError: The HTMLOptionElement.disabled getter can only be used on instances of HTMLOptionElement",
          "_get": "function disabled() {\n    [native code]\n}",
          "_set": "function disabled() {\n    [native code]\n}",
          "_getToStringToString": "function toString() {\n    [native code]\n}",
          "_setToStringToString": "function toString() {\n    [native code]\n}"
        },
        "form": {
          "_flags": "ce",
          "_accessException": "TypeError: The HTMLOptionElement.form getter can only be used on instances of HTMLOptionElement",
          "_get": "function form() {\n    [native code]\n}",
          "_getToStringToString": "function toString() {\n    [native code]\n}"
        },
        "label": {
          "_flags": "ce",
          "_accessException": "TypeError: The HTMLOptionElement.label getter can only be used on instances of HTMLOptionElement",
          "_get": "function label() {\n    [native code]\n}",
          "_set": "function label() {\n    [native code]\n}",
          "_getToStringToString": "function toString() {\n    [native code]\n}",
          "_setToStringToString": "function toString() {\n    [native code]\n}"
        },
        "defaultSelected": {
          "_flags": "ce",
          "_accessException": "TypeError: The HTMLOptionElement.defaultSelected getter can only be used on instances of HTMLOptionElement",
          "_get": "function defaultSelected() {\n    [native code]\n}",
          "_set": "function defaultSelected() {\n    [native code]\n}",
          "_getToStringToString": "function toString() {\n    [native code]\n}",
          "_setToStringToString": "function toString() {\n    [native code]\n}"
        },
        "selected": {
          "_flags": "ce",
          "_accessException": "TypeError: The HTMLOptionElement.selected getter can only be used on instances of HTMLOptionElement",
          "_get": "function selected() {\n    [native code]\n}",
          "_set": "function selected() {\n    [native code]\n}",
          "_getToStringToString": "function toString() {\n    [native code]\n}",
          "_setToStringToString": "function toString() {\n    [native code]\n}"
        },
        "value": {
          "_flags": "ce",
          "_accessException": "TypeError: The HTMLOptionElement.value getter can only be used on instances of HTMLOptionElement",
          "_get": "function value() {\n    [native code]\n}",
          "_set": "function value() {\n    [native code]\n}",
          "_getToStringToString": "function toString() {\n    [native code]\n}",
          "_setToStringToString": "function toString() {\n    [native code]\n}"
        },
        "text": {
          "_flags": "ce",
          "_accessException": "TypeError: The HTMLOptionElement.text getter can only be used on instances of HTMLOptionElement",
          "_get": "function text() {\n    [native code]\n}",
          "_set": "function text() {\n    [native code]\n}",
          "_getToStringToString": "function toString() {\n    [native code]\n}",
          "_setToStringToString": "function toString() {\n    [native code]\n}"
        },
        "index": {
          "_flags": "ce",
          "_accessException": "TypeError: The HTMLOptionElement.index getter can only be used on instances of HTMLOptionElement",
          "_get": "function index() {\n    [native code]\n}",
          "_getToStringToString": "function toString() {\n    [native code]\n}"
        },
        "onmouseenter": {},
        "onmouseleave": {},
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "_type": "object",
        "_flags": ""
      }
    },
    {
      "path": "window.HTMLOptionElement",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.HTMLOptionElement",
      "propertyName": "_function",
      "property": "function HTMLOptionElement() {\n    [native code]\n}"
    },
    {
      "path": "window.Option",
      "propertyName": "prototype",
      "property": "REF: window.HTMLOptionElement.prototype"
    },
    {
      "path": "window.Option",
      "propertyName": "_function",
      "property": "function Option() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLOptionsCollection.prototype.length",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLOptionsCollection.length getter can only be used on instances of HTMLOptionsCollection"
    },
    {
      "path": "window.HTMLOptionsCollection.prototype.length",
      "propertyName": "_get",
      "property": "function length() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLOptionsCollection.prototype.length",
      "propertyName": "_set",
      "property": "function length() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLOptionsCollection.prototype.length",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLOptionsCollection.prototype.length",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLOptionsCollection.prototype.selectedIndex",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLOptionsCollection.selectedIndex getter can only be used on instances of HTMLOptionsCollection"
    },
    {
      "path": "window.HTMLOptionsCollection.prototype.selectedIndex",
      "propertyName": "_get",
      "property": "function selectedIndex() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLOptionsCollection.prototype.selectedIndex",
      "propertyName": "_set",
      "property": "function selectedIndex() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLOptionsCollection.prototype.selectedIndex",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLOptionsCollection.prototype.selectedIndex",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLOptionsCollection.prototype.add",
      "propertyName": "_function",
      "property": "function add() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLOptionsCollection.prototype.remove",
      "propertyName": "_function",
      "property": "function remove() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLOptionsCollection.prototype",
      "propertyName": "Symbol.iterator",
      "property": "REF: window.DOMStringList.prototype.Symbol(Symbol.iterator)"
    },
    {
      "path": "window.HTMLOptionsCollection",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.HTMLOptionsCollection",
      "propertyName": "_function",
      "property": "function HTMLOptionsCollection() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLOutputElement.prototype.htmlFor",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLOutputElement.htmlFor getter can only be used on instances of HTMLOutputElement"
    },
    {
      "path": "window.HTMLOutputElement.prototype.htmlFor",
      "propertyName": "_get",
      "property": "function htmlFor() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLOutputElement.prototype.htmlFor",
      "propertyName": "_set",
      "property": "function htmlFor() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLOutputElement.prototype.htmlFor",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLOutputElement.prototype.htmlFor",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLOutputElement.prototype.form",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLOutputElement.form getter can only be used on instances of HTMLOutputElement"
    },
    {
      "path": "window.HTMLOutputElement.prototype.form",
      "propertyName": "_get",
      "property": "function form() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLOutputElement.prototype.form",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLOutputElement.prototype.name",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLOutputElement.name getter can only be used on instances of HTMLOutputElement"
    },
    {
      "path": "window.HTMLOutputElement.prototype.name",
      "propertyName": "_get",
      "property": "function name() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLOutputElement.prototype.name",
      "propertyName": "_set",
      "property": "function name() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLOutputElement.prototype.name",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLOutputElement.prototype.name",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLOutputElement.prototype.type",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLOutputElement.type getter can only be used on instances of HTMLOutputElement"
    },
    {
      "path": "window.HTMLOutputElement.prototype.type",
      "propertyName": "_get",
      "property": "function type() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLOutputElement.prototype.type",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLOutputElement.prototype.defaultValue",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLOutputElement.defaultValue getter can only be used on instances of HTMLOutputElement"
    },
    {
      "path": "window.HTMLOutputElement.prototype.defaultValue",
      "propertyName": "_get",
      "property": "function defaultValue() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLOutputElement.prototype.defaultValue",
      "propertyName": "_set",
      "property": "function defaultValue() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLOutputElement.prototype.defaultValue",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLOutputElement.prototype.defaultValue",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLOutputElement.prototype.value",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLOutputElement.value getter can only be used on instances of HTMLOutputElement"
    },
    {
      "path": "window.HTMLOutputElement.prototype.value",
      "propertyName": "_get",
      "property": "function value() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLOutputElement.prototype.value",
      "propertyName": "_set",
      "property": "function value() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLOutputElement.prototype.value",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLOutputElement.prototype.value",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLOutputElement.prototype.willValidate",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLOutputElement.willValidate getter can only be used on instances of HTMLOutputElement"
    },
    {
      "path": "window.HTMLOutputElement.prototype.willValidate",
      "propertyName": "_get",
      "property": "function willValidate() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLOutputElement.prototype.willValidate",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLOutputElement.prototype.validity",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLOutputElement.validity getter can only be used on instances of HTMLOutputElement"
    },
    {
      "path": "window.HTMLOutputElement.prototype.validity",
      "propertyName": "_get",
      "property": "function validity() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLOutputElement.prototype.validity",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLOutputElement.prototype.validationMessage",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLOutputElement.validationMessage getter can only be used on instances of HTMLOutputElement"
    },
    {
      "path": "window.HTMLOutputElement.prototype.validationMessage",
      "propertyName": "_get",
      "property": "function validationMessage() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLOutputElement.prototype.validationMessage",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLOutputElement.prototype.labels",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLOutputElement.labels getter can only be used on instances of HTMLOutputElement"
    },
    {
      "path": "window.HTMLOutputElement.prototype.labels",
      "propertyName": "_get",
      "property": "function labels() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLOutputElement.prototype.labels",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLOutputElement.prototype.checkValidity",
      "propertyName": "_function",
      "property": "function checkValidity() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLOutputElement.prototype.reportValidity",
      "propertyName": "_function",
      "property": "function reportValidity() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLOutputElement.prototype.setCustomValidity",
      "propertyName": "_function",
      "property": "function setCustomValidity() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLOutputElement",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.HTMLOutputElement",
      "propertyName": "_function",
      "property": "function HTMLOutputElement() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLParagraphElement.prototype.align",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLParagraphElement.align getter can only be used on instances of HTMLParagraphElement"
    },
    {
      "path": "window.HTMLParagraphElement.prototype.align",
      "propertyName": "_get",
      "property": "function align() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLParagraphElement.prototype.align",
      "propertyName": "_set",
      "property": "function align() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLParagraphElement.prototype.align",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLParagraphElement.prototype.align",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLParagraphElement",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.HTMLParagraphElement",
      "propertyName": "_function",
      "property": "function HTMLParagraphElement() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLParamElement.prototype.name",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLParamElement.name getter can only be used on instances of HTMLParamElement"
    },
    {
      "path": "window.HTMLParamElement.prototype.name",
      "propertyName": "_get",
      "property": "function name() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLParamElement.prototype.name",
      "propertyName": "_set",
      "property": "function name() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLParamElement.prototype.name",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLParamElement.prototype.name",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLParamElement.prototype.type",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLParamElement.type getter can only be used on instances of HTMLParamElement"
    },
    {
      "path": "window.HTMLParamElement.prototype.type",
      "propertyName": "_get",
      "property": "function type() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLParamElement.prototype.type",
      "propertyName": "_set",
      "property": "function type() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLParamElement.prototype.type",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLParamElement.prototype.type",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLParamElement.prototype.value",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLParamElement.value getter can only be used on instances of HTMLParamElement"
    },
    {
      "path": "window.HTMLParamElement.prototype.value",
      "propertyName": "_get",
      "property": "function value() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLParamElement.prototype.value",
      "propertyName": "_set",
      "property": "function value() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLParamElement.prototype.value",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLParamElement.prototype.value",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLParamElement.prototype.valueType",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLParamElement.valueType getter can only be used on instances of HTMLParamElement"
    },
    {
      "path": "window.HTMLParamElement.prototype.valueType",
      "propertyName": "_get",
      "property": "function valueType() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLParamElement.prototype.valueType",
      "propertyName": "_set",
      "property": "function valueType() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLParamElement.prototype.valueType",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLParamElement.prototype.valueType",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLParamElement",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.HTMLParamElement",
      "propertyName": "_function",
      "property": "function HTMLParamElement() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLPictureElement",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.HTMLPictureElement",
      "propertyName": "_function",
      "property": "function HTMLPictureElement() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLPreElement.prototype.width",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLPreElement.width getter can only be used on instances of HTMLPreElement"
    },
    {
      "path": "window.HTMLPreElement.prototype.width",
      "propertyName": "_get",
      "property": "function width() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLPreElement.prototype.width",
      "propertyName": "_set",
      "property": "function width() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLPreElement.prototype.width",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLPreElement.prototype.width",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLPreElement",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.HTMLPreElement",
      "propertyName": "_function",
      "property": "function HTMLPreElement() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLProgressElement.prototype.value",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLProgressElement.value getter can only be used on instances of HTMLProgressElement"
    },
    {
      "path": "window.HTMLProgressElement.prototype.value",
      "propertyName": "_get",
      "property": "function value() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLProgressElement.prototype.value",
      "propertyName": "_set",
      "property": "function value() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLProgressElement.prototype.value",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLProgressElement.prototype.value",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLProgressElement.prototype.max",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLProgressElement.max getter can only be used on instances of HTMLProgressElement"
    },
    {
      "path": "window.HTMLProgressElement.prototype.max",
      "propertyName": "_get",
      "property": "function max() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLProgressElement.prototype.max",
      "propertyName": "_set",
      "property": "function max() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLProgressElement.prototype.max",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLProgressElement.prototype.max",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLProgressElement.prototype.position",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLProgressElement.position getter can only be used on instances of HTMLProgressElement"
    },
    {
      "path": "window.HTMLProgressElement.prototype.position",
      "propertyName": "_get",
      "property": "function position() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLProgressElement.prototype.position",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLProgressElement.prototype.labels",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLProgressElement.labels getter can only be used on instances of HTMLProgressElement"
    },
    {
      "path": "window.HTMLProgressElement.prototype.labels",
      "propertyName": "_get",
      "property": "function labels() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLProgressElement.prototype.labels",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLProgressElement",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.HTMLProgressElement",
      "propertyName": "_function",
      "property": "function HTMLProgressElement() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLQuoteElement.prototype.cite",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLQuoteElement.cite getter can only be used on instances of HTMLQuoteElement"
    },
    {
      "path": "window.HTMLQuoteElement.prototype.cite",
      "propertyName": "_get",
      "property": "function cite() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLQuoteElement.prototype.cite",
      "propertyName": "_set",
      "property": "function cite() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLQuoteElement.prototype.cite",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLQuoteElement.prototype.cite",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLQuoteElement",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.HTMLQuoteElement",
      "propertyName": "_function",
      "property": "function HTMLQuoteElement() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLScriptElement.prototype.text",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLScriptElement.text getter can only be used on instances of HTMLScriptElement"
    },
    {
      "path": "window.HTMLScriptElement.prototype.text",
      "propertyName": "_get",
      "property": "function text() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLScriptElement.prototype.text",
      "propertyName": "_set",
      "property": "function text() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLScriptElement.prototype.text",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLScriptElement.prototype.text",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLScriptElement.prototype.htmlFor",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLScriptElement.htmlFor getter can only be used on instances of HTMLScriptElement"
    },
    {
      "path": "window.HTMLScriptElement.prototype.htmlFor",
      "propertyName": "_get",
      "property": "function htmlFor() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLScriptElement.prototype.htmlFor",
      "propertyName": "_set",
      "property": "function htmlFor() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLScriptElement.prototype.htmlFor",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLScriptElement.prototype.htmlFor",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLScriptElement.prototype.event",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLScriptElement.event getter can only be used on instances of HTMLScriptElement"
    },
    {
      "path": "window.HTMLScriptElement.prototype.event",
      "propertyName": "_get",
      "property": "function event() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLScriptElement.prototype.event",
      "propertyName": "_set",
      "property": "function event() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLScriptElement.prototype.event",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLScriptElement.prototype.event",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLScriptElement.prototype.charset",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLScriptElement.charset getter can only be used on instances of HTMLScriptElement"
    },
    {
      "path": "window.HTMLScriptElement.prototype.charset",
      "propertyName": "_get",
      "property": "function charset() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLScriptElement.prototype.charset",
      "propertyName": "_set",
      "property": "function charset() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLScriptElement.prototype.charset",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLScriptElement.prototype.charset",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLScriptElement.prototype.async",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLScriptElement.async getter can only be used on instances of HTMLScriptElement"
    },
    {
      "path": "window.HTMLScriptElement.prototype.async",
      "propertyName": "_get",
      "property": "function async() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLScriptElement.prototype.async",
      "propertyName": "_set",
      "property": "function async() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLScriptElement.prototype.async",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLScriptElement.prototype.async",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLScriptElement.prototype.defer",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLScriptElement.defer getter can only be used on instances of HTMLScriptElement"
    },
    {
      "path": "window.HTMLScriptElement.prototype.defer",
      "propertyName": "_get",
      "property": "function defer() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLScriptElement.prototype.defer",
      "propertyName": "_set",
      "property": "function defer() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLScriptElement.prototype.defer",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLScriptElement.prototype.defer",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLScriptElement.prototype.src",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLScriptElement.src getter can only be used on instances of HTMLScriptElement"
    },
    {
      "path": "window.HTMLScriptElement.prototype.src",
      "propertyName": "_get",
      "property": "function src() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLScriptElement.prototype.src",
      "propertyName": "_set",
      "property": "function src() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLScriptElement.prototype.src",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLScriptElement.prototype.src",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLScriptElement.prototype.type",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLScriptElement.type getter can only be used on instances of HTMLScriptElement"
    },
    {
      "path": "window.HTMLScriptElement.prototype.type",
      "propertyName": "_get",
      "property": "function type() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLScriptElement.prototype.type",
      "propertyName": "_set",
      "property": "function type() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLScriptElement.prototype.type",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLScriptElement.prototype.type",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLScriptElement.prototype.crossOrigin",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLScriptElement.crossOrigin getter can only be used on instances of HTMLScriptElement"
    },
    {
      "path": "window.HTMLScriptElement.prototype.crossOrigin",
      "propertyName": "_get",
      "property": "function crossOrigin() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLScriptElement.prototype.crossOrigin",
      "propertyName": "_set",
      "property": "function crossOrigin() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLScriptElement.prototype.crossOrigin",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLScriptElement.prototype.crossOrigin",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLScriptElement.prototype.noModule",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLScriptElement.noModule getter can only be used on instances of HTMLScriptElement"
    },
    {
      "path": "window.HTMLScriptElement.prototype.noModule",
      "propertyName": "_get",
      "property": "function noModule() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLScriptElement.prototype.noModule",
      "propertyName": "_set",
      "property": "function noModule() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLScriptElement.prototype.noModule",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLScriptElement.prototype.noModule",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLScriptElement.prototype.integrity",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLScriptElement.integrity getter can only be used on instances of HTMLScriptElement"
    },
    {
      "path": "window.HTMLScriptElement.prototype.integrity",
      "propertyName": "_get",
      "property": "function integrity() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLScriptElement.prototype.integrity",
      "propertyName": "_set",
      "property": "function integrity() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLScriptElement.prototype.integrity",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLScriptElement.prototype.integrity",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLScriptElement",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.HTMLScriptElement",
      "propertyName": "_function",
      "property": "function HTMLScriptElement() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLSelectElement.prototype.autocomplete",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLSelectElement.autocomplete getter can only be used on instances of HTMLSelectElement"
    },
    {
      "path": "window.HTMLSelectElement.prototype.autocomplete",
      "propertyName": "_get",
      "property": "function autocomplete() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLSelectElement.prototype.autocomplete",
      "propertyName": "_set",
      "property": "function autocomplete() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLSelectElement.prototype.autocomplete",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLSelectElement.prototype.autocomplete",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLSelectElement.prototype.disabled",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLSelectElement.disabled getter can only be used on instances of HTMLSelectElement"
    },
    {
      "path": "window.HTMLSelectElement.prototype.disabled",
      "propertyName": "_get",
      "property": "function disabled() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLSelectElement.prototype.disabled",
      "propertyName": "_set",
      "property": "function disabled() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLSelectElement.prototype.disabled",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLSelectElement.prototype.disabled",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLSelectElement.prototype.form",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLSelectElement.form getter can only be used on instances of HTMLSelectElement"
    },
    {
      "path": "window.HTMLSelectElement.prototype.form",
      "propertyName": "_get",
      "property": "function form() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLSelectElement.prototype.form",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLSelectElement.prototype.multiple",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLSelectElement.multiple getter can only be used on instances of HTMLSelectElement"
    },
    {
      "path": "window.HTMLSelectElement.prototype.multiple",
      "propertyName": "_get",
      "property": "function multiple() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLSelectElement.prototype.multiple",
      "propertyName": "_set",
      "property": "function multiple() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLSelectElement.prototype.multiple",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLSelectElement.prototype.multiple",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLSelectElement.prototype.name",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLSelectElement.name getter can only be used on instances of HTMLSelectElement"
    },
    {
      "path": "window.HTMLSelectElement.prototype.name",
      "propertyName": "_get",
      "property": "function name() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLSelectElement.prototype.name",
      "propertyName": "_set",
      "property": "function name() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLSelectElement.prototype.name",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLSelectElement.prototype.name",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLSelectElement.prototype.required",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLSelectElement.required getter can only be used on instances of HTMLSelectElement"
    },
    {
      "path": "window.HTMLSelectElement.prototype.required",
      "propertyName": "_get",
      "property": "function required() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLSelectElement.prototype.required",
      "propertyName": "_set",
      "property": "function required() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLSelectElement.prototype.required",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLSelectElement.prototype.required",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLSelectElement.prototype.size",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLSelectElement.size getter can only be used on instances of HTMLSelectElement"
    },
    {
      "path": "window.HTMLSelectElement.prototype.size",
      "propertyName": "_get",
      "property": "function size() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLSelectElement.prototype.size",
      "propertyName": "_set",
      "property": "function size() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLSelectElement.prototype.size",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLSelectElement.prototype.size",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLSelectElement.prototype.type",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLSelectElement.type getter can only be used on instances of HTMLSelectElement"
    },
    {
      "path": "window.HTMLSelectElement.prototype.type",
      "propertyName": "_get",
      "property": "function type() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLSelectElement.prototype.type",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLSelectElement.prototype.options",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLSelectElement.options getter can only be used on instances of HTMLSelectElement"
    },
    {
      "path": "window.HTMLSelectElement.prototype.options",
      "propertyName": "_get",
      "property": "function options() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLSelectElement.prototype.options",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLSelectElement.prototype.length",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLSelectElement.length getter can only be used on instances of HTMLSelectElement"
    },
    {
      "path": "window.HTMLSelectElement.prototype.length",
      "propertyName": "_get",
      "property": "function length() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLSelectElement.prototype.length",
      "propertyName": "_set",
      "property": "function length() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLSelectElement.prototype.length",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLSelectElement.prototype.length",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLSelectElement.prototype.selectedOptions",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLSelectElement.selectedOptions getter can only be used on instances of HTMLSelectElement"
    },
    {
      "path": "window.HTMLSelectElement.prototype.selectedOptions",
      "propertyName": "_get",
      "property": "function selectedOptions() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLSelectElement.prototype.selectedOptions",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLSelectElement.prototype.selectedIndex",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLSelectElement.selectedIndex getter can only be used on instances of HTMLSelectElement"
    },
    {
      "path": "window.HTMLSelectElement.prototype.selectedIndex",
      "propertyName": "_get",
      "property": "function selectedIndex() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLSelectElement.prototype.selectedIndex",
      "propertyName": "_set",
      "property": "function selectedIndex() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLSelectElement.prototype.selectedIndex",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLSelectElement.prototype.selectedIndex",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLSelectElement.prototype.value",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLSelectElement.value getter can only be used on instances of HTMLSelectElement"
    },
    {
      "path": "window.HTMLSelectElement.prototype.value",
      "propertyName": "_get",
      "property": "function value() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLSelectElement.prototype.value",
      "propertyName": "_set",
      "property": "function value() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLSelectElement.prototype.value",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLSelectElement.prototype.value",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLSelectElement.prototype.willValidate",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLSelectElement.willValidate getter can only be used on instances of HTMLSelectElement"
    },
    {
      "path": "window.HTMLSelectElement.prototype.willValidate",
      "propertyName": "_get",
      "property": "function willValidate() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLSelectElement.prototype.willValidate",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLSelectElement.prototype.validity",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLSelectElement.validity getter can only be used on instances of HTMLSelectElement"
    },
    {
      "path": "window.HTMLSelectElement.prototype.validity",
      "propertyName": "_get",
      "property": "function validity() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLSelectElement.prototype.validity",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLSelectElement.prototype.validationMessage",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLSelectElement.validationMessage getter can only be used on instances of HTMLSelectElement"
    },
    {
      "path": "window.HTMLSelectElement.prototype.validationMessage",
      "propertyName": "_get",
      "property": "function validationMessage() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLSelectElement.prototype.validationMessage",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLSelectElement.prototype.labels",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLSelectElement.labels getter can only be used on instances of HTMLSelectElement"
    },
    {
      "path": "window.HTMLSelectElement.prototype.labels",
      "propertyName": "_get",
      "property": "function labels() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLSelectElement.prototype.labels",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLSelectElement.prototype.item",
      "propertyName": "_function",
      "property": "function item() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLSelectElement.prototype.namedItem",
      "propertyName": "_function",
      "property": "function namedItem() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLSelectElement.prototype.add",
      "propertyName": "_function",
      "property": "function add() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLSelectElement.prototype.remove",
      "propertyName": "_function",
      "property": "function remove() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLSelectElement.prototype.checkValidity",
      "propertyName": "_function",
      "property": "function checkValidity() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLSelectElement.prototype.reportValidity",
      "propertyName": "_function",
      "property": "function reportValidity() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLSelectElement.prototype.setCustomValidity",
      "propertyName": "_function",
      "property": "function setCustomValidity() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLSelectElement.prototype",
      "propertyName": "Symbol.iterator",
      "property": "REF: window.DOMStringList.prototype.Symbol(Symbol.iterator)"
    },
    {
      "path": "window.HTMLSelectElement",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.HTMLSelectElement",
      "propertyName": "_function",
      "property": "function HTMLSelectElement() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLSourceElement.prototype.src",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLSourceElement.src getter can only be used on instances of HTMLSourceElement"
    },
    {
      "path": "window.HTMLSourceElement.prototype.src",
      "propertyName": "_get",
      "property": "function src() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLSourceElement.prototype.src",
      "propertyName": "_set",
      "property": "function src() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLSourceElement.prototype.src",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLSourceElement.prototype.src",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLSourceElement.prototype.type",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLSourceElement.type getter can only be used on instances of HTMLSourceElement"
    },
    {
      "path": "window.HTMLSourceElement.prototype.type",
      "propertyName": "_get",
      "property": "function type() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLSourceElement.prototype.type",
      "propertyName": "_set",
      "property": "function type() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLSourceElement.prototype.type",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLSourceElement.prototype.type",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLSourceElement.prototype.srcset",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLSourceElement.srcset getter can only be used on instances of HTMLSourceElement"
    },
    {
      "path": "window.HTMLSourceElement.prototype.srcset",
      "propertyName": "_get",
      "property": "function srcset() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLSourceElement.prototype.srcset",
      "propertyName": "_set",
      "property": "function srcset() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLSourceElement.prototype.srcset",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLSourceElement.prototype.srcset",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLSourceElement.prototype.sizes",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLSourceElement.sizes getter can only be used on instances of HTMLSourceElement"
    },
    {
      "path": "window.HTMLSourceElement.prototype.sizes",
      "propertyName": "_get",
      "property": "function sizes() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLSourceElement.prototype.sizes",
      "propertyName": "_set",
      "property": "function sizes() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLSourceElement.prototype.sizes",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLSourceElement.prototype.sizes",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLSourceElement.prototype.media",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLSourceElement.media getter can only be used on instances of HTMLSourceElement"
    },
    {
      "path": "window.HTMLSourceElement.prototype.media",
      "propertyName": "_get",
      "property": "function media() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLSourceElement.prototype.media",
      "propertyName": "_set",
      "property": "function media() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLSourceElement.prototype.media",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLSourceElement.prototype.media",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLSourceElement",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.HTMLSourceElement",
      "propertyName": "_function",
      "property": "function HTMLSourceElement() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLSpanElement",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.HTMLSpanElement",
      "propertyName": "_function",
      "property": "function HTMLSpanElement() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLStyleElement.prototype.disabled",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLStyleElement.disabled getter can only be used on instances of HTMLStyleElement"
    },
    {
      "path": "window.HTMLStyleElement.prototype.disabled",
      "propertyName": "_get",
      "property": "function disabled() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLStyleElement.prototype.disabled",
      "propertyName": "_set",
      "property": "function disabled() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLStyleElement.prototype.disabled",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLStyleElement.prototype.disabled",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLStyleElement.prototype.media",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLStyleElement.media getter can only be used on instances of HTMLStyleElement"
    },
    {
      "path": "window.HTMLStyleElement.prototype.media",
      "propertyName": "_get",
      "property": "function media() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLStyleElement.prototype.media",
      "propertyName": "_set",
      "property": "function media() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLStyleElement.prototype.media",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLStyleElement.prototype.media",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLStyleElement.prototype.type",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLStyleElement.type getter can only be used on instances of HTMLStyleElement"
    },
    {
      "path": "window.HTMLStyleElement.prototype.type",
      "propertyName": "_get",
      "property": "function type() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLStyleElement.prototype.type",
      "propertyName": "_set",
      "property": "function type() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLStyleElement.prototype.type",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLStyleElement.prototype.type",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLStyleElement.prototype.sheet",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLStyleElement.sheet getter can only be used on instances of HTMLStyleElement"
    },
    {
      "path": "window.HTMLStyleElement.prototype.sheet",
      "propertyName": "_get",
      "property": "function sheet() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLStyleElement.prototype.sheet",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLStyleElement",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.HTMLStyleElement",
      "propertyName": "_function",
      "property": "function HTMLStyleElement() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableCaptionElement.prototype.align",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLTableCaptionElement.align getter can only be used on instances of HTMLTableCaptionElement"
    },
    {
      "path": "window.HTMLTableCaptionElement.prototype.align",
      "propertyName": "_get",
      "property": "function align() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableCaptionElement.prototype.align",
      "propertyName": "_set",
      "property": "function align() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableCaptionElement.prototype.align",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableCaptionElement.prototype.align",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableCaptionElement",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.HTMLTableCaptionElement",
      "propertyName": "_function",
      "property": "function HTMLTableCaptionElement() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableCellElement.prototype.cellIndex",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLTableCellElement.cellIndex getter can only be used on instances of HTMLTableCellElement"
    },
    {
      "path": "window.HTMLTableCellElement.prototype.cellIndex",
      "propertyName": "_get",
      "property": "function cellIndex() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableCellElement.prototype.cellIndex",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableCellElement.prototype.align",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLTableCellElement.align getter can only be used on instances of HTMLTableCellElement"
    },
    {
      "path": "window.HTMLTableCellElement.prototype.align",
      "propertyName": "_get",
      "property": "function align() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableCellElement.prototype.align",
      "propertyName": "_set",
      "property": "function align() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableCellElement.prototype.align",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableCellElement.prototype.align",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableCellElement.prototype.axis",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLTableCellElement.axis getter can only be used on instances of HTMLTableCellElement"
    },
    {
      "path": "window.HTMLTableCellElement.prototype.axis",
      "propertyName": "_get",
      "property": "function axis() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableCellElement.prototype.axis",
      "propertyName": "_set",
      "property": "function axis() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableCellElement.prototype.axis",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableCellElement.prototype.axis",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableCellElement.prototype.bgColor",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLTableCellElement.bgColor getter can only be used on instances of HTMLTableCellElement"
    },
    {
      "path": "window.HTMLTableCellElement.prototype.bgColor",
      "propertyName": "_get",
      "property": "function bgColor() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableCellElement.prototype.bgColor",
      "propertyName": "_set",
      "property": "function bgColor() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableCellElement.prototype.bgColor",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableCellElement.prototype.bgColor",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableCellElement.prototype.ch",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLTableCellElement.ch getter can only be used on instances of HTMLTableCellElement"
    },
    {
      "path": "window.HTMLTableCellElement.prototype.ch",
      "propertyName": "_get",
      "property": "function ch() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableCellElement.prototype.ch",
      "propertyName": "_set",
      "property": "function ch() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableCellElement.prototype.ch",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableCellElement.prototype.ch",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableCellElement.prototype.chOff",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLTableCellElement.chOff getter can only be used on instances of HTMLTableCellElement"
    },
    {
      "path": "window.HTMLTableCellElement.prototype.chOff",
      "propertyName": "_get",
      "property": "function chOff() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableCellElement.prototype.chOff",
      "propertyName": "_set",
      "property": "function chOff() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableCellElement.prototype.chOff",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableCellElement.prototype.chOff",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableCellElement.prototype.colSpan",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLTableCellElement.colSpan getter can only be used on instances of HTMLTableCellElement"
    },
    {
      "path": "window.HTMLTableCellElement.prototype.colSpan",
      "propertyName": "_get",
      "property": "function colSpan() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableCellElement.prototype.colSpan",
      "propertyName": "_set",
      "property": "function colSpan() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableCellElement.prototype.colSpan",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableCellElement.prototype.colSpan",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableCellElement.prototype.rowSpan",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLTableCellElement.rowSpan getter can only be used on instances of HTMLTableCellElement"
    },
    {
      "path": "window.HTMLTableCellElement.prototype.rowSpan",
      "propertyName": "_get",
      "property": "function rowSpan() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableCellElement.prototype.rowSpan",
      "propertyName": "_set",
      "property": "function rowSpan() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableCellElement.prototype.rowSpan",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableCellElement.prototype.rowSpan",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableCellElement.prototype.headers",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLTableCellElement.headers getter can only be used on instances of HTMLTableCellElement"
    },
    {
      "path": "window.HTMLTableCellElement.prototype.headers",
      "propertyName": "_get",
      "property": "function headers() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableCellElement.prototype.headers",
      "propertyName": "_set",
      "property": "function headers() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableCellElement.prototype.headers",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableCellElement.prototype.headers",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableCellElement.prototype.height",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLTableCellElement.height getter can only be used on instances of HTMLTableCellElement"
    },
    {
      "path": "window.HTMLTableCellElement.prototype.height",
      "propertyName": "_get",
      "property": "function height() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableCellElement.prototype.height",
      "propertyName": "_set",
      "property": "function height() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableCellElement.prototype.height",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableCellElement.prototype.height",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableCellElement.prototype.noWrap",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLTableCellElement.noWrap getter can only be used on instances of HTMLTableCellElement"
    },
    {
      "path": "window.HTMLTableCellElement.prototype.noWrap",
      "propertyName": "_get",
      "property": "function noWrap() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableCellElement.prototype.noWrap",
      "propertyName": "_set",
      "property": "function noWrap() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableCellElement.prototype.noWrap",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableCellElement.prototype.noWrap",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableCellElement.prototype.vAlign",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLTableCellElement.vAlign getter can only be used on instances of HTMLTableCellElement"
    },
    {
      "path": "window.HTMLTableCellElement.prototype.vAlign",
      "propertyName": "_get",
      "property": "function vAlign() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableCellElement.prototype.vAlign",
      "propertyName": "_set",
      "property": "function vAlign() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableCellElement.prototype.vAlign",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableCellElement.prototype.vAlign",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableCellElement.prototype.width",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLTableCellElement.width getter can only be used on instances of HTMLTableCellElement"
    },
    {
      "path": "window.HTMLTableCellElement.prototype.width",
      "propertyName": "_get",
      "property": "function width() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableCellElement.prototype.width",
      "propertyName": "_set",
      "property": "function width() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableCellElement.prototype.width",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableCellElement.prototype.width",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableCellElement.prototype.abbr",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLTableCellElement.abbr getter can only be used on instances of HTMLTableCellElement"
    },
    {
      "path": "window.HTMLTableCellElement.prototype.abbr",
      "propertyName": "_get",
      "property": "function abbr() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableCellElement.prototype.abbr",
      "propertyName": "_set",
      "property": "function abbr() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableCellElement.prototype.abbr",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableCellElement.prototype.abbr",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableCellElement.prototype.scope",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLTableCellElement.scope getter can only be used on instances of HTMLTableCellElement"
    },
    {
      "path": "window.HTMLTableCellElement.prototype.scope",
      "propertyName": "_get",
      "property": "function scope() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableCellElement.prototype.scope",
      "propertyName": "_set",
      "property": "function scope() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableCellElement.prototype.scope",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableCellElement.prototype.scope",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableCellElement",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.HTMLTableCellElement",
      "propertyName": "_function",
      "property": "function HTMLTableCellElement() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableColElement.prototype.align",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLTableColElement.align getter can only be used on instances of HTMLTableColElement"
    },
    {
      "path": "window.HTMLTableColElement.prototype.align",
      "propertyName": "_get",
      "property": "function align() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableColElement.prototype.align",
      "propertyName": "_set",
      "property": "function align() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableColElement.prototype.align",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableColElement.prototype.align",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableColElement.prototype.ch",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLTableColElement.ch getter can only be used on instances of HTMLTableColElement"
    },
    {
      "path": "window.HTMLTableColElement.prototype.ch",
      "propertyName": "_get",
      "property": "function ch() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableColElement.prototype.ch",
      "propertyName": "_set",
      "property": "function ch() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableColElement.prototype.ch",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableColElement.prototype.ch",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableColElement.prototype.chOff",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLTableColElement.chOff getter can only be used on instances of HTMLTableColElement"
    },
    {
      "path": "window.HTMLTableColElement.prototype.chOff",
      "propertyName": "_get",
      "property": "function chOff() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableColElement.prototype.chOff",
      "propertyName": "_set",
      "property": "function chOff() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableColElement.prototype.chOff",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableColElement.prototype.chOff",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableColElement.prototype.span",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLTableColElement.span getter can only be used on instances of HTMLTableColElement"
    },
    {
      "path": "window.HTMLTableColElement.prototype.span",
      "propertyName": "_get",
      "property": "function span() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableColElement.prototype.span",
      "propertyName": "_set",
      "property": "function span() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableColElement.prototype.span",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableColElement.prototype.span",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableColElement.prototype.vAlign",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLTableColElement.vAlign getter can only be used on instances of HTMLTableColElement"
    },
    {
      "path": "window.HTMLTableColElement.prototype.vAlign",
      "propertyName": "_get",
      "property": "function vAlign() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableColElement.prototype.vAlign",
      "propertyName": "_set",
      "property": "function vAlign() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableColElement.prototype.vAlign",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableColElement.prototype.vAlign",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableColElement.prototype.width",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLTableColElement.width getter can only be used on instances of HTMLTableColElement"
    },
    {
      "path": "window.HTMLTableColElement.prototype.width",
      "propertyName": "_get",
      "property": "function width() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableColElement.prototype.width",
      "propertyName": "_set",
      "property": "function width() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableColElement.prototype.width",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableColElement.prototype.width",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableColElement",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.HTMLTableColElement",
      "propertyName": "_function",
      "property": "function HTMLTableColElement() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableElement.prototype.caption",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLTableElement.caption getter can only be used on instances of HTMLTableElement"
    },
    {
      "path": "window.HTMLTableElement.prototype.caption",
      "propertyName": "_get",
      "property": "function caption() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableElement.prototype.caption",
      "propertyName": "_set",
      "property": "function caption() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableElement.prototype.caption",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableElement.prototype.caption",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableElement.prototype.tHead",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLTableElement.tHead getter can only be used on instances of HTMLTableElement"
    },
    {
      "path": "window.HTMLTableElement.prototype.tHead",
      "propertyName": "_get",
      "property": "function tHead() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableElement.prototype.tHead",
      "propertyName": "_set",
      "property": "function tHead() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableElement.prototype.tHead",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableElement.prototype.tHead",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableElement.prototype.tFoot",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLTableElement.tFoot getter can only be used on instances of HTMLTableElement"
    },
    {
      "path": "window.HTMLTableElement.prototype.tFoot",
      "propertyName": "_get",
      "property": "function tFoot() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableElement.prototype.tFoot",
      "propertyName": "_set",
      "property": "function tFoot() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableElement.prototype.tFoot",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableElement.prototype.tFoot",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableElement.prototype.rows",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLTableElement.rows getter can only be used on instances of HTMLTableElement"
    },
    {
      "path": "window.HTMLTableElement.prototype.rows",
      "propertyName": "_get",
      "property": "function rows() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableElement.prototype.rows",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableElement.prototype.tBodies",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLTableElement.tBodies getter can only be used on instances of HTMLTableElement"
    },
    {
      "path": "window.HTMLTableElement.prototype.tBodies",
      "propertyName": "_get",
      "property": "function tBodies() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableElement.prototype.tBodies",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableElement.prototype.align",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLTableElement.align getter can only be used on instances of HTMLTableElement"
    },
    {
      "path": "window.HTMLTableElement.prototype.align",
      "propertyName": "_get",
      "property": "function align() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableElement.prototype.align",
      "propertyName": "_set",
      "property": "function align() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableElement.prototype.align",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableElement.prototype.align",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableElement.prototype.bgColor",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLTableElement.bgColor getter can only be used on instances of HTMLTableElement"
    },
    {
      "path": "window.HTMLTableElement.prototype.bgColor",
      "propertyName": "_get",
      "property": "function bgColor() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableElement.prototype.bgColor",
      "propertyName": "_set",
      "property": "function bgColor() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableElement.prototype.bgColor",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableElement.prototype.bgColor",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableElement.prototype.border",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLTableElement.border getter can only be used on instances of HTMLTableElement"
    },
    {
      "path": "window.HTMLTableElement.prototype.border",
      "propertyName": "_get",
      "property": "function border() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableElement.prototype.border",
      "propertyName": "_set",
      "property": "function border() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableElement.prototype.border",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableElement.prototype.border",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableElement.prototype.cellPadding",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLTableElement.cellPadding getter can only be used on instances of HTMLTableElement"
    },
    {
      "path": "window.HTMLTableElement.prototype.cellPadding",
      "propertyName": "_get",
      "property": "function cellPadding() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableElement.prototype.cellPadding",
      "propertyName": "_set",
      "property": "function cellPadding() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableElement.prototype.cellPadding",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableElement.prototype.cellPadding",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableElement.prototype.cellSpacing",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLTableElement.cellSpacing getter can only be used on instances of HTMLTableElement"
    },
    {
      "path": "window.HTMLTableElement.prototype.cellSpacing",
      "propertyName": "_get",
      "property": "function cellSpacing() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableElement.prototype.cellSpacing",
      "propertyName": "_set",
      "property": "function cellSpacing() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableElement.prototype.cellSpacing",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableElement.prototype.cellSpacing",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableElement.prototype.frame",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLTableElement.frame getter can only be used on instances of HTMLTableElement"
    },
    {
      "path": "window.HTMLTableElement.prototype.frame",
      "propertyName": "_get",
      "property": "function frame() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableElement.prototype.frame",
      "propertyName": "_set",
      "property": "function frame() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableElement.prototype.frame",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableElement.prototype.frame",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableElement.prototype.rules",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLTableElement.rules getter can only be used on instances of HTMLTableElement"
    },
    {
      "path": "window.HTMLTableElement.prototype.rules",
      "propertyName": "_get",
      "property": "function rules() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableElement.prototype.rules",
      "propertyName": "_set",
      "property": "function rules() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableElement.prototype.rules",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableElement.prototype.rules",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableElement.prototype.summary",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLTableElement.summary getter can only be used on instances of HTMLTableElement"
    },
    {
      "path": "window.HTMLTableElement.prototype.summary",
      "propertyName": "_get",
      "property": "function summary() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableElement.prototype.summary",
      "propertyName": "_set",
      "property": "function summary() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableElement.prototype.summary",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableElement.prototype.summary",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableElement.prototype.width",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLTableElement.width getter can only be used on instances of HTMLTableElement"
    },
    {
      "path": "window.HTMLTableElement.prototype.width",
      "propertyName": "_get",
      "property": "function width() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableElement.prototype.width",
      "propertyName": "_set",
      "property": "function width() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableElement.prototype.width",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableElement.prototype.width",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableElement.prototype.createTHead",
      "propertyName": "_function",
      "property": "function createTHead() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableElement.prototype.deleteTHead",
      "propertyName": "_function",
      "property": "function deleteTHead() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableElement.prototype.createTFoot",
      "propertyName": "_function",
      "property": "function createTFoot() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableElement.prototype.deleteTFoot",
      "propertyName": "_function",
      "property": "function deleteTFoot() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableElement.prototype.createTBody",
      "propertyName": "_function",
      "property": "function createTBody() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableElement.prototype.createCaption",
      "propertyName": "_function",
      "property": "function createCaption() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableElement.prototype.deleteCaption",
      "propertyName": "_function",
      "property": "function deleteCaption() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableElement.prototype.insertRow",
      "propertyName": "_function",
      "property": "function insertRow() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableElement.prototype.deleteRow",
      "propertyName": "_function",
      "property": "function deleteRow() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableElement",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.HTMLTableElement",
      "propertyName": "_function",
      "property": "function HTMLTableElement() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableRowElement.prototype.rowIndex",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLTableRowElement.rowIndex getter can only be used on instances of HTMLTableRowElement"
    },
    {
      "path": "window.HTMLTableRowElement.prototype.rowIndex",
      "propertyName": "_get",
      "property": "function rowIndex() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableRowElement.prototype.rowIndex",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableRowElement.prototype.sectionRowIndex",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLTableRowElement.sectionRowIndex getter can only be used on instances of HTMLTableRowElement"
    },
    {
      "path": "window.HTMLTableRowElement.prototype.sectionRowIndex",
      "propertyName": "_get",
      "property": "function sectionRowIndex() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableRowElement.prototype.sectionRowIndex",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableRowElement.prototype.cells",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLTableRowElement.cells getter can only be used on instances of HTMLTableRowElement"
    },
    {
      "path": "window.HTMLTableRowElement.prototype.cells",
      "propertyName": "_get",
      "property": "function cells() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableRowElement.prototype.cells",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableRowElement.prototype.align",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLTableRowElement.align getter can only be used on instances of HTMLTableRowElement"
    },
    {
      "path": "window.HTMLTableRowElement.prototype.align",
      "propertyName": "_get",
      "property": "function align() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableRowElement.prototype.align",
      "propertyName": "_set",
      "property": "function align() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableRowElement.prototype.align",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableRowElement.prototype.align",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableRowElement.prototype.bgColor",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLTableRowElement.bgColor getter can only be used on instances of HTMLTableRowElement"
    },
    {
      "path": "window.HTMLTableRowElement.prototype.bgColor",
      "propertyName": "_get",
      "property": "function bgColor() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableRowElement.prototype.bgColor",
      "propertyName": "_set",
      "property": "function bgColor() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableRowElement.prototype.bgColor",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableRowElement.prototype.bgColor",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableRowElement.prototype.ch",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLTableRowElement.ch getter can only be used on instances of HTMLTableRowElement"
    },
    {
      "path": "window.HTMLTableRowElement.prototype.ch",
      "propertyName": "_get",
      "property": "function ch() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableRowElement.prototype.ch",
      "propertyName": "_set",
      "property": "function ch() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableRowElement.prototype.ch",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableRowElement.prototype.ch",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableRowElement.prototype.chOff",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLTableRowElement.chOff getter can only be used on instances of HTMLTableRowElement"
    },
    {
      "path": "window.HTMLTableRowElement.prototype.chOff",
      "propertyName": "_get",
      "property": "function chOff() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableRowElement.prototype.chOff",
      "propertyName": "_set",
      "property": "function chOff() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableRowElement.prototype.chOff",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableRowElement.prototype.chOff",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableRowElement.prototype.vAlign",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLTableRowElement.vAlign getter can only be used on instances of HTMLTableRowElement"
    },
    {
      "path": "window.HTMLTableRowElement.prototype.vAlign",
      "propertyName": "_get",
      "property": "function vAlign() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableRowElement.prototype.vAlign",
      "propertyName": "_set",
      "property": "function vAlign() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableRowElement.prototype.vAlign",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableRowElement.prototype.vAlign",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableRowElement.prototype.insertCell",
      "propertyName": "_function",
      "property": "function insertCell() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableRowElement.prototype.deleteCell",
      "propertyName": "_function",
      "property": "function deleteCell() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableRowElement",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.HTMLTableRowElement",
      "propertyName": "_function",
      "property": "function HTMLTableRowElement() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableSectionElement.prototype.align",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLTableSectionElement.align getter can only be used on instances of HTMLTableSectionElement"
    },
    {
      "path": "window.HTMLTableSectionElement.prototype.align",
      "propertyName": "_get",
      "property": "function align() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableSectionElement.prototype.align",
      "propertyName": "_set",
      "property": "function align() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableSectionElement.prototype.align",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableSectionElement.prototype.align",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableSectionElement.prototype.ch",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLTableSectionElement.ch getter can only be used on instances of HTMLTableSectionElement"
    },
    {
      "path": "window.HTMLTableSectionElement.prototype.ch",
      "propertyName": "_get",
      "property": "function ch() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableSectionElement.prototype.ch",
      "propertyName": "_set",
      "property": "function ch() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableSectionElement.prototype.ch",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableSectionElement.prototype.ch",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableSectionElement.prototype.chOff",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLTableSectionElement.chOff getter can only be used on instances of HTMLTableSectionElement"
    },
    {
      "path": "window.HTMLTableSectionElement.prototype.chOff",
      "propertyName": "_get",
      "property": "function chOff() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableSectionElement.prototype.chOff",
      "propertyName": "_set",
      "property": "function chOff() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableSectionElement.prototype.chOff",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableSectionElement.prototype.chOff",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableSectionElement.prototype.vAlign",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLTableSectionElement.vAlign getter can only be used on instances of HTMLTableSectionElement"
    },
    {
      "path": "window.HTMLTableSectionElement.prototype.vAlign",
      "propertyName": "_get",
      "property": "function vAlign() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableSectionElement.prototype.vAlign",
      "propertyName": "_set",
      "property": "function vAlign() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableSectionElement.prototype.vAlign",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableSectionElement.prototype.vAlign",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableSectionElement.prototype.rows",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLTableSectionElement.rows getter can only be used on instances of HTMLTableSectionElement"
    },
    {
      "path": "window.HTMLTableSectionElement.prototype.rows",
      "propertyName": "_get",
      "property": "function rows() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableSectionElement.prototype.rows",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableSectionElement.prototype.insertRow",
      "propertyName": "_function",
      "property": "function insertRow() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableSectionElement.prototype.deleteRow",
      "propertyName": "_function",
      "property": "function deleteRow() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTableSectionElement",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.HTMLTableSectionElement",
      "propertyName": "_function",
      "property": "function HTMLTableSectionElement() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTemplateElement.prototype.content",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLTemplateElement.content getter can only be used on instances of HTMLTemplateElement"
    },
    {
      "path": "window.HTMLTemplateElement.prototype.content",
      "propertyName": "_get",
      "property": "function content() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTemplateElement.prototype.content",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTemplateElement",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.HTMLTemplateElement",
      "propertyName": "_function",
      "property": "function HTMLTemplateElement() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTextAreaElement.prototype.dirName",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLTextAreaElement.dirName getter can only be used on instances of HTMLTextAreaElement"
    },
    {
      "path": "window.HTMLTextAreaElement.prototype.dirName",
      "propertyName": "_get",
      "property": "function dirName() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTextAreaElement.prototype.dirName",
      "propertyName": "_set",
      "property": "function dirName() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTextAreaElement.prototype.dirName",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTextAreaElement.prototype.dirName",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTextAreaElement.prototype.disabled",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLTextAreaElement.disabled getter can only be used on instances of HTMLTextAreaElement"
    },
    {
      "path": "window.HTMLTextAreaElement.prototype.disabled",
      "propertyName": "_get",
      "property": "function disabled() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTextAreaElement.prototype.disabled",
      "propertyName": "_set",
      "property": "function disabled() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTextAreaElement.prototype.disabled",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTextAreaElement.prototype.disabled",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTextAreaElement.prototype.form",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLTextAreaElement.form getter can only be used on instances of HTMLTextAreaElement"
    },
    {
      "path": "window.HTMLTextAreaElement.prototype.form",
      "propertyName": "_get",
      "property": "function form() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTextAreaElement.prototype.form",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTextAreaElement.prototype.minLength",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLTextAreaElement.minLength getter can only be used on instances of HTMLTextAreaElement"
    },
    {
      "path": "window.HTMLTextAreaElement.prototype.minLength",
      "propertyName": "_get",
      "property": "function minLength() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTextAreaElement.prototype.minLength",
      "propertyName": "_set",
      "property": "function minLength() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTextAreaElement.prototype.minLength",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTextAreaElement.prototype.minLength",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTextAreaElement.prototype.maxLength",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLTextAreaElement.maxLength getter can only be used on instances of HTMLTextAreaElement"
    },
    {
      "path": "window.HTMLTextAreaElement.prototype.maxLength",
      "propertyName": "_get",
      "property": "function maxLength() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTextAreaElement.prototype.maxLength",
      "propertyName": "_set",
      "property": "function maxLength() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTextAreaElement.prototype.maxLength",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTextAreaElement.prototype.maxLength",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTextAreaElement.prototype.name",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLTextAreaElement.name getter can only be used on instances of HTMLTextAreaElement"
    },
    {
      "path": "window.HTMLTextAreaElement.prototype.name",
      "propertyName": "_get",
      "property": "function name() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTextAreaElement.prototype.name",
      "propertyName": "_set",
      "property": "function name() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTextAreaElement.prototype.name",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTextAreaElement.prototype.name",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTextAreaElement.prototype.placeholder",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLTextAreaElement.placeholder getter can only be used on instances of HTMLTextAreaElement"
    },
    {
      "path": "window.HTMLTextAreaElement.prototype.placeholder",
      "propertyName": "_get",
      "property": "function placeholder() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTextAreaElement.prototype.placeholder",
      "propertyName": "_set",
      "property": "function placeholder() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTextAreaElement.prototype.placeholder",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTextAreaElement.prototype.placeholder",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTextAreaElement.prototype.readOnly",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLTextAreaElement.readOnly getter can only be used on instances of HTMLTextAreaElement"
    },
    {
      "path": "window.HTMLTextAreaElement.prototype.readOnly",
      "propertyName": "_get",
      "property": "function readOnly() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTextAreaElement.prototype.readOnly",
      "propertyName": "_set",
      "property": "function readOnly() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTextAreaElement.prototype.readOnly",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTextAreaElement.prototype.readOnly",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTextAreaElement.prototype.required",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLTextAreaElement.required getter can only be used on instances of HTMLTextAreaElement"
    },
    {
      "path": "window.HTMLTextAreaElement.prototype.required",
      "propertyName": "_get",
      "property": "function required() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTextAreaElement.prototype.required",
      "propertyName": "_set",
      "property": "function required() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTextAreaElement.prototype.required",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTextAreaElement.prototype.required",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTextAreaElement.prototype.rows",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLTextAreaElement.rows getter can only be used on instances of HTMLTextAreaElement"
    },
    {
      "path": "window.HTMLTextAreaElement.prototype.rows",
      "propertyName": "_get",
      "property": "function rows() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTextAreaElement.prototype.rows",
      "propertyName": "_set",
      "property": "function rows() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTextAreaElement.prototype.rows",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTextAreaElement.prototype.rows",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTextAreaElement.prototype.cols",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLTextAreaElement.cols getter can only be used on instances of HTMLTextAreaElement"
    },
    {
      "path": "window.HTMLTextAreaElement.prototype.cols",
      "propertyName": "_get",
      "property": "function cols() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTextAreaElement.prototype.cols",
      "propertyName": "_set",
      "property": "function cols() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTextAreaElement.prototype.cols",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTextAreaElement.prototype.cols",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTextAreaElement.prototype.wrap",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLTextAreaElement.wrap getter can only be used on instances of HTMLTextAreaElement"
    },
    {
      "path": "window.HTMLTextAreaElement.prototype.wrap",
      "propertyName": "_get",
      "property": "function wrap() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTextAreaElement.prototype.wrap",
      "propertyName": "_set",
      "property": "function wrap() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTextAreaElement.prototype.wrap",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTextAreaElement.prototype.wrap",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTextAreaElement.prototype.type",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLTextAreaElement.type getter can only be used on instances of HTMLTextAreaElement"
    },
    {
      "path": "window.HTMLTextAreaElement.prototype.type",
      "propertyName": "_get",
      "property": "function type() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTextAreaElement.prototype.type",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTextAreaElement.prototype.defaultValue",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLTextAreaElement.defaultValue getter can only be used on instances of HTMLTextAreaElement"
    },
    {
      "path": "window.HTMLTextAreaElement.prototype.defaultValue",
      "propertyName": "_get",
      "property": "function defaultValue() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTextAreaElement.prototype.defaultValue",
      "propertyName": "_set",
      "property": "function defaultValue() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTextAreaElement.prototype.defaultValue",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTextAreaElement.prototype.defaultValue",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTextAreaElement.prototype.value",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLTextAreaElement.value getter can only be used on instances of HTMLTextAreaElement"
    },
    {
      "path": "window.HTMLTextAreaElement.prototype.value",
      "propertyName": "_get",
      "property": "function value() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTextAreaElement.prototype.value",
      "propertyName": "_set",
      "property": "function value() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTextAreaElement.prototype.value",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTextAreaElement.prototype.value",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTextAreaElement.prototype.textLength",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLTextAreaElement.textLength getter can only be used on instances of HTMLTextAreaElement"
    },
    {
      "path": "window.HTMLTextAreaElement.prototype.textLength",
      "propertyName": "_get",
      "property": "function textLength() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTextAreaElement.prototype.textLength",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTextAreaElement.prototype.willValidate",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLTextAreaElement.willValidate getter can only be used on instances of HTMLTextAreaElement"
    },
    {
      "path": "window.HTMLTextAreaElement.prototype.willValidate",
      "propertyName": "_get",
      "property": "function willValidate() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTextAreaElement.prototype.willValidate",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTextAreaElement.prototype.validity",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLTextAreaElement.validity getter can only be used on instances of HTMLTextAreaElement"
    },
    {
      "path": "window.HTMLTextAreaElement.prototype.validity",
      "propertyName": "_get",
      "property": "function validity() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTextAreaElement.prototype.validity",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTextAreaElement.prototype.validationMessage",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLTextAreaElement.validationMessage getter can only be used on instances of HTMLTextAreaElement"
    },
    {
      "path": "window.HTMLTextAreaElement.prototype.validationMessage",
      "propertyName": "_get",
      "property": "function validationMessage() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTextAreaElement.prototype.validationMessage",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTextAreaElement.prototype.labels",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLTextAreaElement.labels getter can only be used on instances of HTMLTextAreaElement"
    },
    {
      "path": "window.HTMLTextAreaElement.prototype.labels",
      "propertyName": "_get",
      "property": "function labels() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTextAreaElement.prototype.labels",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTextAreaElement.prototype.selectionStart",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLTextAreaElement.selectionStart getter can only be used on instances of HTMLTextAreaElement"
    },
    {
      "path": "window.HTMLTextAreaElement.prototype.selectionStart",
      "propertyName": "_get",
      "property": "function selectionStart() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTextAreaElement.prototype.selectionStart",
      "propertyName": "_set",
      "property": "function selectionStart() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTextAreaElement.prototype.selectionStart",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTextAreaElement.prototype.selectionStart",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTextAreaElement.prototype.selectionEnd",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLTextAreaElement.selectionEnd getter can only be used on instances of HTMLTextAreaElement"
    },
    {
      "path": "window.HTMLTextAreaElement.prototype.selectionEnd",
      "propertyName": "_get",
      "property": "function selectionEnd() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTextAreaElement.prototype.selectionEnd",
      "propertyName": "_set",
      "property": "function selectionEnd() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTextAreaElement.prototype.selectionEnd",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTextAreaElement.prototype.selectionEnd",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTextAreaElement.prototype.selectionDirection",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLTextAreaElement.selectionDirection getter can only be used on instances of HTMLTextAreaElement"
    },
    {
      "path": "window.HTMLTextAreaElement.prototype.selectionDirection",
      "propertyName": "_get",
      "property": "function selectionDirection() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTextAreaElement.prototype.selectionDirection",
      "propertyName": "_set",
      "property": "function selectionDirection() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTextAreaElement.prototype.selectionDirection",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTextAreaElement.prototype.selectionDirection",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTextAreaElement.prototype.autocomplete",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLTextAreaElement.autocomplete getter can only be used on instances of HTMLTextAreaElement"
    },
    {
      "path": "window.HTMLTextAreaElement.prototype.autocomplete",
      "propertyName": "_get",
      "property": "function autocomplete() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTextAreaElement.prototype.autocomplete",
      "propertyName": "_set",
      "property": "function autocomplete() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTextAreaElement.prototype.autocomplete",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTextAreaElement.prototype.autocomplete",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTextAreaElement.prototype.checkValidity",
      "propertyName": "_function",
      "property": "function checkValidity() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTextAreaElement.prototype.reportValidity",
      "propertyName": "_function",
      "property": "function reportValidity() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTextAreaElement.prototype.setCustomValidity",
      "propertyName": "_function",
      "property": "function setCustomValidity() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTextAreaElement.prototype.select",
      "propertyName": "_function",
      "property": "function select() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTextAreaElement.prototype.setRangeText",
      "propertyName": "_function",
      "property": "function setRangeText() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTextAreaElement.prototype.setSelectionRange",
      "propertyName": "_function",
      "property": "function setSelectionRange() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTextAreaElement",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.HTMLTextAreaElement",
      "propertyName": "_function",
      "property": "function HTMLTextAreaElement() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTimeElement.prototype.dateTime",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLTimeElement.dateTime getter can only be used on instances of HTMLTimeElement"
    },
    {
      "path": "window.HTMLTimeElement.prototype.dateTime",
      "propertyName": "_get",
      "property": "function dateTime() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTimeElement.prototype.dateTime",
      "propertyName": "_set",
      "property": "function dateTime() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTimeElement.prototype.dateTime",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTimeElement.prototype.dateTime",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTimeElement",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.HTMLTimeElement",
      "propertyName": "_function",
      "property": "function HTMLTimeElement() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTitleElement.prototype.text",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLTitleElement.text getter can only be used on instances of HTMLTitleElement"
    },
    {
      "path": "window.HTMLTitleElement.prototype.text",
      "propertyName": "_get",
      "property": "function text() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTitleElement.prototype.text",
      "propertyName": "_set",
      "property": "function text() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTitleElement.prototype.text",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTitleElement.prototype.text",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTitleElement",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.HTMLTitleElement",
      "propertyName": "_function",
      "property": "function HTMLTitleElement() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTrackElement.prototype.kind",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLTrackElement.kind getter can only be used on instances of HTMLTrackElement"
    },
    {
      "path": "window.HTMLTrackElement.prototype.kind",
      "propertyName": "_get",
      "property": "function kind() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTrackElement.prototype.kind",
      "propertyName": "_set",
      "property": "function kind() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTrackElement.prototype.kind",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTrackElement.prototype.kind",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTrackElement.prototype.src",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLTrackElement.src getter can only be used on instances of HTMLTrackElement"
    },
    {
      "path": "window.HTMLTrackElement.prototype.src",
      "propertyName": "_get",
      "property": "function src() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTrackElement.prototype.src",
      "propertyName": "_set",
      "property": "function src() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTrackElement.prototype.src",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTrackElement.prototype.src",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTrackElement.prototype.srclang",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLTrackElement.srclang getter can only be used on instances of HTMLTrackElement"
    },
    {
      "path": "window.HTMLTrackElement.prototype.srclang",
      "propertyName": "_get",
      "property": "function srclang() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTrackElement.prototype.srclang",
      "propertyName": "_set",
      "property": "function srclang() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTrackElement.prototype.srclang",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTrackElement.prototype.srclang",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTrackElement.prototype.label",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLTrackElement.label getter can only be used on instances of HTMLTrackElement"
    },
    {
      "path": "window.HTMLTrackElement.prototype.label",
      "propertyName": "_get",
      "property": "function label() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTrackElement.prototype.label",
      "propertyName": "_set",
      "property": "function label() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTrackElement.prototype.label",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTrackElement.prototype.label",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTrackElement.prototype.default",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLTrackElement.default getter can only be used on instances of HTMLTrackElement"
    },
    {
      "path": "window.HTMLTrackElement.prototype.default",
      "propertyName": "_get",
      "property": "function default() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTrackElement.prototype.default",
      "propertyName": "_set",
      "property": "function default() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTrackElement.prototype.default",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTrackElement.prototype.default",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTrackElement.prototype.readyState",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLTrackElement.readyState getter can only be used on instances of HTMLTrackElement"
    },
    {
      "path": "window.HTMLTrackElement.prototype.readyState",
      "propertyName": "_get",
      "property": "function readyState() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTrackElement.prototype.readyState",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTrackElement.prototype.track",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLTrackElement.track getter can only be used on instances of HTMLTrackElement"
    },
    {
      "path": "window.HTMLTrackElement.prototype.track",
      "propertyName": "_get",
      "property": "function track() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTrackElement.prototype.track",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLTrackElement",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.HTMLTrackElement",
      "propertyName": "_function",
      "property": "function HTMLTrackElement() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLUListElement.prototype.compact",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLUListElement.compact getter can only be used on instances of HTMLUListElement"
    },
    {
      "path": "window.HTMLUListElement.prototype.compact",
      "propertyName": "_get",
      "property": "function compact() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLUListElement.prototype.compact",
      "propertyName": "_set",
      "property": "function compact() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLUListElement.prototype.compact",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLUListElement.prototype.compact",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLUListElement.prototype.type",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLUListElement.type getter can only be used on instances of HTMLUListElement"
    },
    {
      "path": "window.HTMLUListElement.prototype.type",
      "propertyName": "_get",
      "property": "function type() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLUListElement.prototype.type",
      "propertyName": "_set",
      "property": "function type() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLUListElement.prototype.type",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLUListElement.prototype.type",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLUListElement",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.HTMLUListElement",
      "propertyName": "_function",
      "property": "function HTMLUListElement() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLUnknownElement",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.HTMLUnknownElement",
      "propertyName": "_function",
      "property": "function HTMLUnknownElement() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLVideoElement.prototype.width",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLVideoElement.width getter can only be used on instances of HTMLVideoElement"
    },
    {
      "path": "window.HTMLVideoElement.prototype.width",
      "propertyName": "_get",
      "property": "function width() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLVideoElement.prototype.width",
      "propertyName": "_set",
      "property": "function width() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLVideoElement.prototype.width",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLVideoElement.prototype.width",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLVideoElement.prototype.height",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLVideoElement.height getter can only be used on instances of HTMLVideoElement"
    },
    {
      "path": "window.HTMLVideoElement.prototype.height",
      "propertyName": "_get",
      "property": "function height() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLVideoElement.prototype.height",
      "propertyName": "_set",
      "property": "function height() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLVideoElement.prototype.height",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLVideoElement.prototype.height",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLVideoElement.prototype.videoWidth",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLVideoElement.videoWidth getter can only be used on instances of HTMLVideoElement"
    },
    {
      "path": "window.HTMLVideoElement.prototype.videoWidth",
      "propertyName": "_get",
      "property": "function videoWidth() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLVideoElement.prototype.videoWidth",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLVideoElement.prototype.videoHeight",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLVideoElement.videoHeight getter can only be used on instances of HTMLVideoElement"
    },
    {
      "path": "window.HTMLVideoElement.prototype.videoHeight",
      "propertyName": "_get",
      "property": "function videoHeight() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLVideoElement.prototype.videoHeight",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLVideoElement.prototype.poster",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLVideoElement.poster getter can only be used on instances of HTMLVideoElement"
    },
    {
      "path": "window.HTMLVideoElement.prototype.poster",
      "propertyName": "_get",
      "property": "function poster() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLVideoElement.prototype.poster",
      "propertyName": "_set",
      "property": "function poster() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLVideoElement.prototype.poster",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLVideoElement.prototype.poster",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLVideoElement.prototype.playsInline",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLVideoElement.playsInline getter can only be used on instances of HTMLVideoElement"
    },
    {
      "path": "window.HTMLVideoElement.prototype.playsInline",
      "propertyName": "_get",
      "property": "function playsInline() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLVideoElement.prototype.playsInline",
      "propertyName": "_set",
      "property": "function playsInline() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLVideoElement.prototype.playsInline",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLVideoElement.prototype.playsInline",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLVideoElement.prototype.webkitSupportsFullscreen",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLVideoElement.webkitSupportsFullscreen getter can only be used on instances of HTMLVideoElement"
    },
    {
      "path": "window.HTMLVideoElement.prototype.webkitSupportsFullscreen",
      "propertyName": "_get",
      "property": "function webkitSupportsFullscreen() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLVideoElement.prototype.webkitSupportsFullscreen",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLVideoElement.prototype.webkitDisplayingFullscreen",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLVideoElement.webkitDisplayingFullscreen getter can only be used on instances of HTMLVideoElement"
    },
    {
      "path": "window.HTMLVideoElement.prototype.webkitDisplayingFullscreen",
      "propertyName": "_get",
      "property": "function webkitDisplayingFullscreen() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLVideoElement.prototype.webkitDisplayingFullscreen",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLVideoElement.prototype.webkitEnterFullscreen",
      "propertyName": "_function",
      "property": "function webkitEnterFullscreen() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLVideoElement.prototype.webkitExitFullscreen",
      "propertyName": "_function",
      "property": "function webkitExitFullscreen() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLVideoElement.prototype.webkitEnterFullScreen",
      "propertyName": "_function",
      "property": "function webkitEnterFullScreen() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLVideoElement.prototype.webkitExitFullScreen",
      "propertyName": "_function",
      "property": "function webkitExitFullScreen() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLVideoElement",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.HTMLVideoElement",
      "propertyName": "_function",
      "property": "function HTMLVideoElement() {\n    [native code]\n}"
    },
    {
      "path": "window.ImageData.prototype.width",
      "propertyName": "_accessException",
      "property": "TypeError: The ImageData.width getter can only be used on instances of ImageData"
    },
    {
      "path": "window.ImageData.prototype.width",
      "propertyName": "_get",
      "property": "function width() {\n    [native code]\n}"
    },
    {
      "path": "window.ImageData.prototype.width",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.ImageData.prototype.height",
      "propertyName": "_accessException",
      "property": "TypeError: The ImageData.height getter can only be used on instances of ImageData"
    },
    {
      "path": "window.ImageData.prototype.height",
      "propertyName": "_get",
      "property": "function height() {\n    [native code]\n}"
    },
    {
      "path": "window.ImageData.prototype.height",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.ImageData.prototype.data",
      "propertyName": "_accessException",
      "property": "TypeError: The ImageData.data getter can only be used on instances of ImageData"
    },
    {
      "path": "window.ImageData.prototype.data",
      "propertyName": "_get",
      "property": "function data() {\n    [native code]\n}"
    },
    {
      "path": "window.ImageData.prototype.data",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.ImageData",
      "propertyName": "new()",
      "property": "TypeError: Not enough arguments"
    },
    {
      "path": "window.ImageData",
      "propertyName": "_function",
      "property": "function ImageData() {\n    [native code]\n}"
    },
    {
      "path": "window.MediaError.prototype.code",
      "propertyName": "_accessException",
      "property": "TypeError: The MediaError.code getter can only be used on instances of MediaError"
    },
    {
      "path": "window.MediaError.prototype.code",
      "propertyName": "_get",
      "property": "function code() {\n    [native code]\n}"
    },
    {
      "path": "window.MediaError.prototype.code",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.MediaError",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.MediaError",
      "propertyName": "_function",
      "property": "function MediaError() {\n    [native code]\n}"
    },
    {
      "path": "window.RadioNodeList.prototype.value",
      "propertyName": "_accessException",
      "property": "TypeError: The RadioNodeList.value getter can only be used on instances of RadioNodeList"
    },
    {
      "path": "window.RadioNodeList.prototype.value",
      "propertyName": "_get",
      "property": "function value() {\n    [native code]\n}"
    },
    {
      "path": "window.RadioNodeList.prototype.value",
      "propertyName": "_set",
      "property": "function value() {\n    [native code]\n}"
    },
    {
      "path": "window.RadioNodeList.prototype.value",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.RadioNodeList.prototype.value",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.RadioNodeList",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.RadioNodeList",
      "propertyName": "_function",
      "property": "function RadioNodeList() {\n    [native code]\n}"
    },
    {
      "path": "window.TextMetrics.prototype.width",
      "propertyName": "_accessException",
      "property": "TypeError: The TextMetrics.width getter can only be used on instances of TextMetrics"
    },
    {
      "path": "window.TextMetrics.prototype.width",
      "propertyName": "_get",
      "property": "function width() {\n    [native code]\n}"
    },
    {
      "path": "window.TextMetrics.prototype.width",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.TextMetrics.prototype.actualBoundingBoxLeft",
      "propertyName": "_accessException",
      "property": "TypeError: The TextMetrics.actualBoundingBoxLeft getter can only be used on instances of TextMetrics"
    },
    {
      "path": "window.TextMetrics.prototype.actualBoundingBoxLeft",
      "propertyName": "_get",
      "property": "function actualBoundingBoxLeft() {\n    [native code]\n}"
    },
    {
      "path": "window.TextMetrics.prototype.actualBoundingBoxLeft",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.TextMetrics.prototype.actualBoundingBoxRight",
      "propertyName": "_accessException",
      "property": "TypeError: The TextMetrics.actualBoundingBoxRight getter can only be used on instances of TextMetrics"
    },
    {
      "path": "window.TextMetrics.prototype.actualBoundingBoxRight",
      "propertyName": "_get",
      "property": "function actualBoundingBoxRight() {\n    [native code]\n}"
    },
    {
      "path": "window.TextMetrics.prototype.actualBoundingBoxRight",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.TextMetrics.prototype.actualBoundingBoxAscent",
      "propertyName": "_accessException",
      "property": "TypeError: The TextMetrics.actualBoundingBoxAscent getter can only be used on instances of TextMetrics"
    },
    {
      "path": "window.TextMetrics.prototype.actualBoundingBoxAscent",
      "propertyName": "_get",
      "property": "function actualBoundingBoxAscent() {\n    [native code]\n}"
    },
    {
      "path": "window.TextMetrics.prototype.actualBoundingBoxAscent",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.TextMetrics.prototype.actualBoundingBoxDescent",
      "propertyName": "_accessException",
      "property": "TypeError: The TextMetrics.actualBoundingBoxDescent getter can only be used on instances of TextMetrics"
    },
    {
      "path": "window.TextMetrics.prototype.actualBoundingBoxDescent",
      "propertyName": "_get",
      "property": "function actualBoundingBoxDescent() {\n    [native code]\n}"
    },
    {
      "path": "window.TextMetrics.prototype.actualBoundingBoxDescent",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.TextMetrics",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.TextMetrics",
      "propertyName": "_function",
      "property": "function TextMetrics() {\n    [native code]\n}"
    },
    {
      "path": "window.TimeRanges.prototype.length",
      "propertyName": "_accessException",
      "property": "TypeError: The TimeRanges.length getter can only be used on instances of TimeRanges"
    },
    {
      "path": "window.TimeRanges.prototype.length",
      "propertyName": "_get",
      "property": "function length() {\n    [native code]\n}"
    },
    {
      "path": "window.TimeRanges.prototype.length",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.TimeRanges.prototype.start",
      "propertyName": "_function",
      "property": "function start() {\n    [native code]\n}"
    },
    {
      "path": "window.TimeRanges.prototype.end",
      "propertyName": "_function",
      "property": "function end() {\n    [native code]\n}"
    },
    {
      "path": "window.TimeRanges",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.TimeRanges",
      "propertyName": "_function",
      "property": "function TimeRanges() {\n    [native code]\n}"
    },
    {
      "path": "window.URLSearchParams.prototype.append",
      "propertyName": "_function",
      "property": "function append() {\n    [native code]\n}"
    },
    {
      "path": "window.URLSearchParams.prototype.delete",
      "propertyName": "_function",
      "property": "function delete() {\n    [native code]\n}"
    },
    {
      "path": "window.URLSearchParams.prototype.get",
      "propertyName": "_function",
      "property": "function get() {\n    [native code]\n}"
    },
    {
      "path": "window.URLSearchParams.prototype.getAll",
      "propertyName": "_function",
      "property": "function getAll() {\n    [native code]\n}"
    },
    {
      "path": "window.URLSearchParams.prototype.has",
      "propertyName": "_function",
      "property": "function has() {\n    [native code]\n}"
    },
    {
      "path": "window.URLSearchParams.prototype.set",
      "propertyName": "_function",
      "property": "function set() {\n    [native code]\n}"
    },
    {
      "path": "window.URLSearchParams.prototype.sort",
      "propertyName": "_function",
      "property": "function sort() {\n    [native code]\n}"
    },
    {
      "path": "window.URLSearchParams.prototype.toString",
      "propertyName": "_function",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.URLSearchParams.prototype.entries",
      "propertyName": "_function",
      "property": "function entries() {\n    [native code]\n}"
    },
    {
      "path": "window.URLSearchParams.prototype.keys",
      "propertyName": "_function",
      "property": "function keys() {\n    [native code]\n}"
    },
    {
      "path": "window.URLSearchParams.prototype.values",
      "propertyName": "_function",
      "property": "function values() {\n    [native code]\n}"
    },
    {
      "path": "window.URLSearchParams.prototype.forEach",
      "propertyName": "_function",
      "property": "function forEach() {\n    [native code]\n}"
    },
    {
      "path": "window.URLSearchParams",
      "propertyName": "_function",
      "property": "function URLSearchParams() {\n    [native code]\n}"
    },
    {
      "path": "window.ValidityState.prototype.valueMissing",
      "propertyName": "_accessException",
      "property": "TypeError: The ValidityState.valueMissing getter can only be used on instances of ValidityState"
    },
    {
      "path": "window.ValidityState.prototype.valueMissing",
      "propertyName": "_get",
      "property": "function valueMissing() {\n    [native code]\n}"
    },
    {
      "path": "window.ValidityState.prototype.valueMissing",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.ValidityState.prototype.typeMismatch",
      "propertyName": "_accessException",
      "property": "TypeError: The ValidityState.typeMismatch getter can only be used on instances of ValidityState"
    },
    {
      "path": "window.ValidityState.prototype.typeMismatch",
      "propertyName": "_get",
      "property": "function typeMismatch() {\n    [native code]\n}"
    },
    {
      "path": "window.ValidityState.prototype.typeMismatch",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.ValidityState.prototype.patternMismatch",
      "propertyName": "_accessException",
      "property": "TypeError: The ValidityState.patternMismatch getter can only be used on instances of ValidityState"
    },
    {
      "path": "window.ValidityState.prototype.patternMismatch",
      "propertyName": "_get",
      "property": "function patternMismatch() {\n    [native code]\n}"
    },
    {
      "path": "window.ValidityState.prototype.patternMismatch",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.ValidityState.prototype.tooShort",
      "propertyName": "_accessException",
      "property": "TypeError: The ValidityState.tooShort getter can only be used on instances of ValidityState"
    },
    {
      "path": "window.ValidityState.prototype.tooShort",
      "propertyName": "_get",
      "property": "function tooShort() {\n    [native code]\n}"
    },
    {
      "path": "window.ValidityState.prototype.tooShort",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.ValidityState.prototype.tooLong",
      "propertyName": "_accessException",
      "property": "TypeError: The ValidityState.tooLong getter can only be used on instances of ValidityState"
    },
    {
      "path": "window.ValidityState.prototype.tooLong",
      "propertyName": "_get",
      "property": "function tooLong() {\n    [native code]\n}"
    },
    {
      "path": "window.ValidityState.prototype.tooLong",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.ValidityState.prototype.rangeUnderflow",
      "propertyName": "_accessException",
      "property": "TypeError: The ValidityState.rangeUnderflow getter can only be used on instances of ValidityState"
    },
    {
      "path": "window.ValidityState.prototype.rangeUnderflow",
      "propertyName": "_get",
      "property": "function rangeUnderflow() {\n    [native code]\n}"
    },
    {
      "path": "window.ValidityState.prototype.rangeUnderflow",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.ValidityState.prototype.rangeOverflow",
      "propertyName": "_accessException",
      "property": "TypeError: The ValidityState.rangeOverflow getter can only be used on instances of ValidityState"
    },
    {
      "path": "window.ValidityState.prototype.rangeOverflow",
      "propertyName": "_get",
      "property": "function rangeOverflow() {\n    [native code]\n}"
    },
    {
      "path": "window.ValidityState.prototype.rangeOverflow",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.ValidityState.prototype.stepMismatch",
      "propertyName": "_accessException",
      "property": "TypeError: The ValidityState.stepMismatch getter can only be used on instances of ValidityState"
    },
    {
      "path": "window.ValidityState.prototype.stepMismatch",
      "propertyName": "_get",
      "property": "function stepMismatch() {\n    [native code]\n}"
    },
    {
      "path": "window.ValidityState.prototype.stepMismatch",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.ValidityState.prototype.badInput",
      "propertyName": "_accessException",
      "property": "TypeError: The ValidityState.badInput getter can only be used on instances of ValidityState"
    },
    {
      "path": "window.ValidityState.prototype.badInput",
      "propertyName": "_get",
      "property": "function badInput() {\n    [native code]\n}"
    },
    {
      "path": "window.ValidityState.prototype.badInput",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.ValidityState.prototype.customError",
      "propertyName": "_accessException",
      "property": "TypeError: The ValidityState.customError getter can only be used on instances of ValidityState"
    },
    {
      "path": "window.ValidityState.prototype.customError",
      "propertyName": "_get",
      "property": "function customError() {\n    [native code]\n}"
    },
    {
      "path": "window.ValidityState.prototype.customError",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.ValidityState.prototype.valid",
      "propertyName": "_accessException",
      "property": "TypeError: The ValidityState.valid getter can only be used on instances of ValidityState"
    },
    {
      "path": "window.ValidityState.prototype.valid",
      "propertyName": "_get",
      "property": "function valid() {\n    [native code]\n}"
    },
    {
      "path": "window.ValidityState.prototype.valid",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.ValidityState",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.ValidityState",
      "propertyName": "_function",
      "property": "function ValidityState() {\n    [native code]\n}"
    },
    {
      "path": "window.CanvasGradient.prototype.addColorStop",
      "propertyName": "_function",
      "property": "function addColorStop() {\n    [native code]\n}"
    },
    {
      "path": "window.CanvasGradient",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.CanvasGradient",
      "propertyName": "_function",
      "property": "function CanvasGradient() {\n    [native code]\n}"
    },
    {
      "path": "window.CanvasPattern.prototype.setTransform",
      "propertyName": "_function",
      "property": "function setTransform() {\n    [native code]\n}"
    },
    {
      "path": "window.CanvasPattern",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.CanvasPattern",
      "propertyName": "_function",
      "property": "function CanvasPattern() {\n    [native code]\n}"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.canvas",
      "propertyName": "_accessException",
      "property": "TypeError: The CanvasRenderingContext2D.canvas getter can only be used on instances of CanvasRenderingContext2D"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.canvas",
      "propertyName": "_get",
      "property": "function canvas() {\n    [native code]\n}"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.canvas",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.globalAlpha",
      "propertyName": "_accessException",
      "property": "TypeError: The CanvasRenderingContext2D.globalAlpha getter can only be used on instances of CanvasRenderingContext2D"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.globalAlpha",
      "propertyName": "_get",
      "property": "function globalAlpha() {\n    [native code]\n}"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.globalAlpha",
      "propertyName": "_set",
      "property": "function globalAlpha() {\n    [native code]\n}"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.globalAlpha",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.globalAlpha",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.globalCompositeOperation",
      "propertyName": "_accessException",
      "property": "TypeError: The CanvasRenderingContext2D.globalCompositeOperation getter can only be used on instances of CanvasRenderingContext2D"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.globalCompositeOperation",
      "propertyName": "_get",
      "property": "function globalCompositeOperation() {\n    [native code]\n}"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.globalCompositeOperation",
      "propertyName": "_set",
      "property": "function globalCompositeOperation() {\n    [native code]\n}"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.globalCompositeOperation",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.globalCompositeOperation",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.strokeStyle",
      "propertyName": "_accessException",
      "property": "TypeError: The CanvasRenderingContext2D.strokeStyle getter can only be used on instances of CanvasRenderingContext2D"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.strokeStyle",
      "propertyName": "_get",
      "property": "function strokeStyle() {\n    [native code]\n}"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.strokeStyle",
      "propertyName": "_set",
      "property": "function strokeStyle() {\n    [native code]\n}"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.strokeStyle",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.strokeStyle",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.fillStyle",
      "propertyName": "_accessException",
      "property": "TypeError: The CanvasRenderingContext2D.fillStyle getter can only be used on instances of CanvasRenderingContext2D"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.fillStyle",
      "propertyName": "_get",
      "property": "function fillStyle() {\n    [native code]\n}"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.fillStyle",
      "propertyName": "_set",
      "property": "function fillStyle() {\n    [native code]\n}"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.fillStyle",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.fillStyle",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.imageSmoothingEnabled",
      "propertyName": "_accessException",
      "property": "TypeError: The CanvasRenderingContext2D.imageSmoothingEnabled getter can only be used on instances of CanvasRenderingContext2D"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.imageSmoothingEnabled",
      "propertyName": "_get",
      "property": "function imageSmoothingEnabled() {\n    [native code]\n}"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.imageSmoothingEnabled",
      "propertyName": "_set",
      "property": "function imageSmoothingEnabled() {\n    [native code]\n}"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.imageSmoothingEnabled",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.imageSmoothingEnabled",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.imageSmoothingQuality",
      "propertyName": "_accessException",
      "property": "TypeError: The CanvasRenderingContext2D.imageSmoothingQuality getter can only be used on instances of CanvasRenderingContext2D"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.imageSmoothingQuality",
      "propertyName": "_get",
      "property": "function imageSmoothingQuality() {\n    [native code]\n}"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.imageSmoothingQuality",
      "propertyName": "_set",
      "property": "function imageSmoothingQuality() {\n    [native code]\n}"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.imageSmoothingQuality",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.imageSmoothingQuality",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.lineWidth",
      "propertyName": "_accessException",
      "property": "TypeError: The CanvasRenderingContext2D.lineWidth getter can only be used on instances of CanvasRenderingContext2D"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.lineWidth",
      "propertyName": "_get",
      "property": "function lineWidth() {\n    [native code]\n}"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.lineWidth",
      "propertyName": "_set",
      "property": "function lineWidth() {\n    [native code]\n}"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.lineWidth",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.lineWidth",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.lineCap",
      "propertyName": "_accessException",
      "property": "TypeError: The CanvasRenderingContext2D.lineCap getter can only be used on instances of CanvasRenderingContext2D"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.lineCap",
      "propertyName": "_get",
      "property": "function lineCap() {\n    [native code]\n}"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.lineCap",
      "propertyName": "_set",
      "property": "function lineCap() {\n    [native code]\n}"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.lineCap",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.lineCap",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.lineJoin",
      "propertyName": "_accessException",
      "property": "TypeError: The CanvasRenderingContext2D.lineJoin getter can only be used on instances of CanvasRenderingContext2D"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.lineJoin",
      "propertyName": "_get",
      "property": "function lineJoin() {\n    [native code]\n}"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.lineJoin",
      "propertyName": "_set",
      "property": "function lineJoin() {\n    [native code]\n}"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.lineJoin",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.lineJoin",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.miterLimit",
      "propertyName": "_accessException",
      "property": "TypeError: The CanvasRenderingContext2D.miterLimit getter can only be used on instances of CanvasRenderingContext2D"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.miterLimit",
      "propertyName": "_get",
      "property": "function miterLimit() {\n    [native code]\n}"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.miterLimit",
      "propertyName": "_set",
      "property": "function miterLimit() {\n    [native code]\n}"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.miterLimit",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.miterLimit",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.lineDashOffset",
      "propertyName": "_accessException",
      "property": "TypeError: The CanvasRenderingContext2D.lineDashOffset getter can only be used on instances of CanvasRenderingContext2D"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.lineDashOffset",
      "propertyName": "_get",
      "property": "function lineDashOffset() {\n    [native code]\n}"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.lineDashOffset",
      "propertyName": "_set",
      "property": "function lineDashOffset() {\n    [native code]\n}"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.lineDashOffset",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.lineDashOffset",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.shadowOffsetX",
      "propertyName": "_accessException",
      "property": "TypeError: The CanvasRenderingContext2D.shadowOffsetX getter can only be used on instances of CanvasRenderingContext2D"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.shadowOffsetX",
      "propertyName": "_get",
      "property": "function shadowOffsetX() {\n    [native code]\n}"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.shadowOffsetX",
      "propertyName": "_set",
      "property": "function shadowOffsetX() {\n    [native code]\n}"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.shadowOffsetX",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.shadowOffsetX",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.shadowOffsetY",
      "propertyName": "_accessException",
      "property": "TypeError: The CanvasRenderingContext2D.shadowOffsetY getter can only be used on instances of CanvasRenderingContext2D"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.shadowOffsetY",
      "propertyName": "_get",
      "property": "function shadowOffsetY() {\n    [native code]\n}"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.shadowOffsetY",
      "propertyName": "_set",
      "property": "function shadowOffsetY() {\n    [native code]\n}"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.shadowOffsetY",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.shadowOffsetY",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.shadowBlur",
      "propertyName": "_accessException",
      "property": "TypeError: The CanvasRenderingContext2D.shadowBlur getter can only be used on instances of CanvasRenderingContext2D"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.shadowBlur",
      "propertyName": "_get",
      "property": "function shadowBlur() {\n    [native code]\n}"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.shadowBlur",
      "propertyName": "_set",
      "property": "function shadowBlur() {\n    [native code]\n}"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.shadowBlur",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.shadowBlur",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.shadowColor",
      "propertyName": "_accessException",
      "property": "TypeError: The CanvasRenderingContext2D.shadowColor getter can only be used on instances of CanvasRenderingContext2D"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.shadowColor",
      "propertyName": "_get",
      "property": "function shadowColor() {\n    [native code]\n}"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.shadowColor",
      "propertyName": "_set",
      "property": "function shadowColor() {\n    [native code]\n}"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.shadowColor",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.shadowColor",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.font",
      "propertyName": "_accessException",
      "property": "TypeError: The CanvasRenderingContext2D.font getter can only be used on instances of CanvasRenderingContext2D"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.font",
      "propertyName": "_get",
      "property": "function font() {\n    [native code]\n}"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.font",
      "propertyName": "_set",
      "property": "function font() {\n    [native code]\n}"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.font",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.font",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.textAlign",
      "propertyName": "_accessException",
      "property": "TypeError: The CanvasRenderingContext2D.textAlign getter can only be used on instances of CanvasRenderingContext2D"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.textAlign",
      "propertyName": "_get",
      "property": "function textAlign() {\n    [native code]\n}"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.textAlign",
      "propertyName": "_set",
      "property": "function textAlign() {\n    [native code]\n}"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.textAlign",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.textAlign",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.textBaseline",
      "propertyName": "_accessException",
      "property": "TypeError: The CanvasRenderingContext2D.textBaseline getter can only be used on instances of CanvasRenderingContext2D"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.textBaseline",
      "propertyName": "_get",
      "property": "function textBaseline() {\n    [native code]\n}"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.textBaseline",
      "propertyName": "_set",
      "property": "function textBaseline() {\n    [native code]\n}"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.textBaseline",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.textBaseline",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.direction",
      "propertyName": "_accessException",
      "property": "TypeError: The CanvasRenderingContext2D.direction getter can only be used on instances of CanvasRenderingContext2D"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.direction",
      "propertyName": "_get",
      "property": "function direction() {\n    [native code]\n}"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.direction",
      "propertyName": "_set",
      "property": "function direction() {\n    [native code]\n}"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.direction",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.direction",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.drawImage",
      "propertyName": "_function",
      "property": "function drawImage() {\n    [native code]\n}"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.beginPath",
      "propertyName": "_function",
      "property": "function beginPath() {\n    [native code]\n}"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.fill",
      "propertyName": "_function",
      "property": "function fill() {\n    [native code]\n}"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.stroke",
      "propertyName": "_function",
      "property": "function stroke() {\n    [native code]\n}"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.clip",
      "propertyName": "_function",
      "property": "function clip() {\n    [native code]\n}"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.isPointInPath",
      "propertyName": "_function",
      "property": "function isPointInPath() {\n    [native code]\n}"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.isPointInStroke",
      "propertyName": "_function",
      "property": "function isPointInStroke() {\n    [native code]\n}"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.createLinearGradient",
      "propertyName": "_function",
      "property": "function createLinearGradient() {\n    [native code]\n}"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.createRadialGradient",
      "propertyName": "_function",
      "property": "function createRadialGradient() {\n    [native code]\n}"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.createPattern",
      "propertyName": "_function",
      "property": "function createPattern() {\n    [native code]\n}"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.createImageData",
      "propertyName": "_function",
      "property": "function createImageData() {\n    [native code]\n}"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.getImageData",
      "propertyName": "_function",
      "property": "function getImageData() {\n    [native code]\n}"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.putImageData",
      "propertyName": "_function",
      "property": "function putImageData() {\n    [native code]\n}"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.closePath",
      "propertyName": "_function",
      "property": "function closePath() {\n    [native code]\n}"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.moveTo",
      "propertyName": "_function",
      "property": "function moveTo() {\n    [native code]\n}"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.lineTo",
      "propertyName": "_function",
      "property": "function lineTo() {\n    [native code]\n}"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.quadraticCurveTo",
      "propertyName": "_function",
      "property": "function quadraticCurveTo() {\n    [native code]\n}"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.bezierCurveTo",
      "propertyName": "_function",
      "property": "function bezierCurveTo() {\n    [native code]\n}"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.arcTo",
      "propertyName": "_function",
      "property": "function arcTo() {\n    [native code]\n}"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.rect",
      "propertyName": "_function",
      "property": "function rect() {\n    [native code]\n}"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.arc",
      "propertyName": "_function",
      "property": "function arc() {\n    [native code]\n}"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.ellipse",
      "propertyName": "_function",
      "property": "function ellipse() {\n    [native code]\n}"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.setLineDash",
      "propertyName": "_function",
      "property": "function setLineDash() {\n    [native code]\n}"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.getLineDash",
      "propertyName": "_function",
      "property": "function getLineDash() {\n    [native code]\n}"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.clearRect",
      "propertyName": "_function",
      "property": "function clearRect() {\n    [native code]\n}"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.fillRect",
      "propertyName": "_function",
      "property": "function fillRect() {\n    [native code]\n}"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.strokeRect",
      "propertyName": "_function",
      "property": "function strokeRect() {\n    [native code]\n}"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.save",
      "propertyName": "_function",
      "property": "function save() {\n    [native code]\n}"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.restore",
      "propertyName": "_function",
      "property": "function restore() {\n    [native code]\n}"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.fillText",
      "propertyName": "_function",
      "property": "function fillText() {\n    [native code]\n}"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.strokeText",
      "propertyName": "_function",
      "property": "function strokeText() {\n    [native code]\n}"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.measureText",
      "propertyName": "_function",
      "property": "function measureText() {\n    [native code]\n}"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.scale",
      "propertyName": "_function",
      "property": "function scale() {\n    [native code]\n}"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.rotate",
      "propertyName": "_function",
      "property": "function rotate() {\n    [native code]\n}"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.translate",
      "propertyName": "_function",
      "property": "function translate() {\n    [native code]\n}"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.transform",
      "propertyName": "_function",
      "property": "function transform() {\n    [native code]\n}"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.getTransform",
      "propertyName": "_function",
      "property": "function getTransform() {\n    [native code]\n}"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.setTransform",
      "propertyName": "_function",
      "property": "function setTransform() {\n    [native code]\n}"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.resetTransform",
      "propertyName": "_function",
      "property": "function resetTransform() {\n    [native code]\n}"
    },
    {
      "path": "window.CanvasRenderingContext2D.prototype.drawFocusIfNeeded",
      "propertyName": "_function",
      "property": "function drawFocusIfNeeded() {\n    [native code]\n}"
    },
    {
      "path": "window.CanvasRenderingContext2D",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.CanvasRenderingContext2D",
      "propertyName": "_function",
      "property": "function CanvasRenderingContext2D() {\n    [native code]\n}"
    },
    {
      "path": "window.Path2D.prototype.addPath",
      "propertyName": "_function",
      "property": "function addPath() {\n    [native code]\n}"
    },
    {
      "path": "window.Path2D.prototype.closePath",
      "propertyName": "_function",
      "property": "function closePath() {\n    [native code]\n}"
    },
    {
      "path": "window.Path2D.prototype.moveTo",
      "propertyName": "_function",
      "property": "function moveTo() {\n    [native code]\n}"
    },
    {
      "path": "window.Path2D.prototype.lineTo",
      "propertyName": "_function",
      "property": "function lineTo() {\n    [native code]\n}"
    },
    {
      "path": "window.Path2D.prototype.quadraticCurveTo",
      "propertyName": "_function",
      "property": "function quadraticCurveTo() {\n    [native code]\n}"
    },
    {
      "path": "window.Path2D.prototype.bezierCurveTo",
      "propertyName": "_function",
      "property": "function bezierCurveTo() {\n    [native code]\n}"
    },
    {
      "path": "window.Path2D.prototype.arcTo",
      "propertyName": "_function",
      "property": "function arcTo() {\n    [native code]\n}"
    },
    {
      "path": "window.Path2D.prototype.rect",
      "propertyName": "_function",
      "property": "function rect() {\n    [native code]\n}"
    },
    {
      "path": "window.Path2D.prototype.arc",
      "propertyName": "_function",
      "property": "function arc() {\n    [native code]\n}"
    },
    {
      "path": "window.Path2D.prototype.ellipse",
      "propertyName": "_function",
      "property": "function ellipse() {\n    [native code]\n}"
    },
    {
      "path": "window.Path2D",
      "propertyName": "_function",
      "property": "function Path2D() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLActiveInfo.prototype.size",
      "propertyName": "_accessException",
      "property": "TypeError: The WebGLActiveInfo.size getter can only be used on instances of WebGLActiveInfo"
    },
    {
      "path": "window.WebGLActiveInfo.prototype.size",
      "propertyName": "_get",
      "property": "function size() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLActiveInfo.prototype.size",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLActiveInfo.prototype.type",
      "propertyName": "_accessException",
      "property": "TypeError: The WebGLActiveInfo.type getter can only be used on instances of WebGLActiveInfo"
    },
    {
      "path": "window.WebGLActiveInfo.prototype.type",
      "propertyName": "_get",
      "property": "function type() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLActiveInfo.prototype.type",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLActiveInfo.prototype.name",
      "propertyName": "_accessException",
      "property": "TypeError: The WebGLActiveInfo.name getter can only be used on instances of WebGLActiveInfo"
    },
    {
      "path": "window.WebGLActiveInfo.prototype.name",
      "propertyName": "_get",
      "property": "function name() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLActiveInfo.prototype.name",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLActiveInfo",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.WebGLActiveInfo",
      "propertyName": "_function",
      "property": "function WebGLActiveInfo() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLBuffer",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.WebGLBuffer",
      "propertyName": "_function",
      "property": "function WebGLBuffer() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLContextEvent.prototype.statusMessage",
      "propertyName": "_accessException",
      "property": "TypeError: The WebGLContextEvent.statusMessage getter can only be used on instances of WebGLContextEvent"
    },
    {
      "path": "window.WebGLContextEvent.prototype.statusMessage",
      "propertyName": "_get",
      "property": "function statusMessage() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLContextEvent.prototype.statusMessage",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLContextEvent",
      "propertyName": "new()",
      "property": "TypeError: Not enough arguments"
    },
    {
      "path": "window.WebGLContextEvent",
      "propertyName": "_function",
      "property": "function WebGLContextEvent() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLFramebuffer",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.WebGLFramebuffer",
      "propertyName": "_function",
      "property": "function WebGLFramebuffer() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLProgram",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.WebGLProgram",
      "propertyName": "_function",
      "property": "function WebGLProgram() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLQuery",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.WebGLQuery",
      "propertyName": "_function",
      "property": "function WebGLQuery() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLRenderbuffer",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.WebGLRenderbuffer",
      "propertyName": "_function",
      "property": "function WebGLRenderbuffer() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.canvas",
      "propertyName": "_accessException",
      "property": "TypeError: The WebGLRenderingContext.canvas getter can only be used on instances of WebGLRenderingContext"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.canvas",
      "propertyName": "_get",
      "property": "function canvas() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.canvas",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.drawingBufferWidth",
      "propertyName": "_accessException",
      "property": "TypeError: The WebGLRenderingContext.drawingBufferWidth getter can only be used on instances of WebGLRenderingContext"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.drawingBufferWidth",
      "propertyName": "_get",
      "property": "function drawingBufferWidth() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.drawingBufferWidth",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.drawingBufferHeight",
      "propertyName": "_accessException",
      "property": "TypeError: The WebGLRenderingContext.drawingBufferHeight getter can only be used on instances of WebGLRenderingContext"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.drawingBufferHeight",
      "propertyName": "_get",
      "property": "function drawingBufferHeight() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.drawingBufferHeight",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.texImage2D",
      "propertyName": "_function",
      "property": "function texImage2D() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.texSubImage2D",
      "propertyName": "_function",
      "property": "function texSubImage2D() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.compressedTexImage2D",
      "propertyName": "_function",
      "property": "function compressedTexImage2D() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.activeTexture",
      "propertyName": "_function",
      "property": "function activeTexture() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.attachShader",
      "propertyName": "_function",
      "property": "function attachShader() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.bindAttribLocation",
      "propertyName": "_function",
      "property": "function bindAttribLocation() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.bindBuffer",
      "propertyName": "_function",
      "property": "function bindBuffer() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.bindFramebuffer",
      "propertyName": "_function",
      "property": "function bindFramebuffer() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.bindRenderbuffer",
      "propertyName": "_function",
      "property": "function bindRenderbuffer() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.bindTexture",
      "propertyName": "_function",
      "property": "function bindTexture() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.blendColor",
      "propertyName": "_function",
      "property": "function blendColor() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.blendEquation",
      "propertyName": "_function",
      "property": "function blendEquation() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.blendEquationSeparate",
      "propertyName": "_function",
      "property": "function blendEquationSeparate() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.blendFunc",
      "propertyName": "_function",
      "property": "function blendFunc() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.blendFuncSeparate",
      "propertyName": "_function",
      "property": "function blendFuncSeparate() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.bufferData",
      "propertyName": "_function",
      "property": "function bufferData() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.bufferSubData",
      "propertyName": "_function",
      "property": "function bufferSubData() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.checkFramebufferStatus",
      "propertyName": "_function",
      "property": "function checkFramebufferStatus() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.clear",
      "propertyName": "_function",
      "property": "function clear() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.clearColor",
      "propertyName": "_function",
      "property": "function clearColor() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.clearDepth",
      "propertyName": "_function",
      "property": "function clearDepth() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.clearStencil",
      "propertyName": "_function",
      "property": "function clearStencil() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.colorMask",
      "propertyName": "_function",
      "property": "function colorMask() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.compileShader",
      "propertyName": "_function",
      "property": "function compileShader() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.compressedTexSubImage2D",
      "propertyName": "_function",
      "property": "function compressedTexSubImage2D() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.copyTexImage2D",
      "propertyName": "_function",
      "property": "function copyTexImage2D() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.copyTexSubImage2D",
      "propertyName": "_function",
      "property": "function copyTexSubImage2D() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.createBuffer",
      "propertyName": "_function",
      "property": "function createBuffer() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.createFramebuffer",
      "propertyName": "_function",
      "property": "function createFramebuffer() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.createProgram",
      "propertyName": "_function",
      "property": "function createProgram() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.createRenderbuffer",
      "propertyName": "_function",
      "property": "function createRenderbuffer() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.createShader",
      "propertyName": "_function",
      "property": "function createShader() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.createTexture",
      "propertyName": "_function",
      "property": "function createTexture() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.cullFace",
      "propertyName": "_function",
      "property": "function cullFace() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.deleteBuffer",
      "propertyName": "_function",
      "property": "function deleteBuffer() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.deleteFramebuffer",
      "propertyName": "_function",
      "property": "function deleteFramebuffer() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.deleteProgram",
      "propertyName": "_function",
      "property": "function deleteProgram() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.deleteRenderbuffer",
      "propertyName": "_function",
      "property": "function deleteRenderbuffer() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.deleteShader",
      "propertyName": "_function",
      "property": "function deleteShader() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.deleteTexture",
      "propertyName": "_function",
      "property": "function deleteTexture() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.depthFunc",
      "propertyName": "_function",
      "property": "function depthFunc() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.depthMask",
      "propertyName": "_function",
      "property": "function depthMask() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.depthRange",
      "propertyName": "_function",
      "property": "function depthRange() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.detachShader",
      "propertyName": "_function",
      "property": "function detachShader() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.disable",
      "propertyName": "_function",
      "property": "function disable() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.disableVertexAttribArray",
      "propertyName": "_function",
      "property": "function disableVertexAttribArray() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.drawArrays",
      "propertyName": "_function",
      "property": "function drawArrays() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.drawElements",
      "propertyName": "_function",
      "property": "function drawElements() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.enable",
      "propertyName": "_function",
      "property": "function enable() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.enableVertexAttribArray",
      "propertyName": "_function",
      "property": "function enableVertexAttribArray() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.finish",
      "propertyName": "_function",
      "property": "function finish() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.flush",
      "propertyName": "_function",
      "property": "function flush() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.framebufferRenderbuffer",
      "propertyName": "_function",
      "property": "function framebufferRenderbuffer() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.framebufferTexture2D",
      "propertyName": "_function",
      "property": "function framebufferTexture2D() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.frontFace",
      "propertyName": "_function",
      "property": "function frontFace() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.generateMipmap",
      "propertyName": "_function",
      "property": "function generateMipmap() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.getActiveAttrib",
      "propertyName": "_function",
      "property": "function getActiveAttrib() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.getActiveUniform",
      "propertyName": "_function",
      "property": "function getActiveUniform() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.getAttachedShaders",
      "propertyName": "_function",
      "property": "function getAttachedShaders() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.getAttribLocation",
      "propertyName": "_function",
      "property": "function getAttribLocation() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.getBufferParameter",
      "propertyName": "_function",
      "property": "function getBufferParameter() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.getContextAttributes",
      "propertyName": "_function",
      "property": "function getContextAttributes() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.getError",
      "propertyName": "_function",
      "property": "function getError() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.getSupportedExtensions",
      "propertyName": "_function",
      "property": "function getSupportedExtensions() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.getExtension",
      "propertyName": "_function",
      "property": "function getExtension() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.getFramebufferAttachmentParameter",
      "propertyName": "_function",
      "property": "function getFramebufferAttachmentParameter() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.getParameter",
      "propertyName": "_function",
      "property": "function getParameter() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.getProgramParameter",
      "propertyName": "_function",
      "property": "function getProgramParameter() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.getProgramInfoLog",
      "propertyName": "_function",
      "property": "function getProgramInfoLog() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.getRenderbufferParameter",
      "propertyName": "_function",
      "property": "function getRenderbufferParameter() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.getShaderParameter",
      "propertyName": "_function",
      "property": "function getShaderParameter() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.getShaderInfoLog",
      "propertyName": "_function",
      "property": "function getShaderInfoLog() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.getShaderPrecisionFormat",
      "propertyName": "_function",
      "property": "function getShaderPrecisionFormat() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.getShaderSource",
      "propertyName": "_function",
      "property": "function getShaderSource() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.getTexParameter",
      "propertyName": "_function",
      "property": "function getTexParameter() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.getUniform",
      "propertyName": "_function",
      "property": "function getUniform() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.getUniformLocation",
      "propertyName": "_function",
      "property": "function getUniformLocation() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.getVertexAttrib",
      "propertyName": "_function",
      "property": "function getVertexAttrib() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.getVertexAttribOffset",
      "propertyName": "_function",
      "property": "function getVertexAttribOffset() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.hint",
      "propertyName": "_function",
      "property": "function hint() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.isBuffer",
      "propertyName": "_function",
      "property": "function isBuffer() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.isContextLost",
      "propertyName": "_function",
      "property": "function isContextLost() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.isEnabled",
      "propertyName": "_function",
      "property": "function isEnabled() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.isFramebuffer",
      "propertyName": "_function",
      "property": "function isFramebuffer() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.isProgram",
      "propertyName": "_function",
      "property": "function isProgram() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.isRenderbuffer",
      "propertyName": "_function",
      "property": "function isRenderbuffer() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.isShader",
      "propertyName": "_function",
      "property": "function isShader() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.isTexture",
      "propertyName": "_function",
      "property": "function isTexture() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.lineWidth",
      "propertyName": "_function",
      "property": "function lineWidth() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.linkProgram",
      "propertyName": "_function",
      "property": "function linkProgram() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.pixelStorei",
      "propertyName": "_function",
      "property": "function pixelStorei() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.polygonOffset",
      "propertyName": "_function",
      "property": "function polygonOffset() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.readPixels",
      "propertyName": "_function",
      "property": "function readPixels() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.renderbufferStorage",
      "propertyName": "_function",
      "property": "function renderbufferStorage() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.sampleCoverage",
      "propertyName": "_function",
      "property": "function sampleCoverage() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.scissor",
      "propertyName": "_function",
      "property": "function scissor() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.shaderSource",
      "propertyName": "_function",
      "property": "function shaderSource() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.stencilFunc",
      "propertyName": "_function",
      "property": "function stencilFunc() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.stencilFuncSeparate",
      "propertyName": "_function",
      "property": "function stencilFuncSeparate() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.stencilMask",
      "propertyName": "_function",
      "property": "function stencilMask() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.stencilMaskSeparate",
      "propertyName": "_function",
      "property": "function stencilMaskSeparate() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.stencilOp",
      "propertyName": "_function",
      "property": "function stencilOp() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.stencilOpSeparate",
      "propertyName": "_function",
      "property": "function stencilOpSeparate() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.texParameterf",
      "propertyName": "_function",
      "property": "function texParameterf() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.texParameteri",
      "propertyName": "_function",
      "property": "function texParameteri() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.uniform1f",
      "propertyName": "_function",
      "property": "function uniform1f() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.uniform2f",
      "propertyName": "_function",
      "property": "function uniform2f() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.uniform3f",
      "propertyName": "_function",
      "property": "function uniform3f() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.uniform4f",
      "propertyName": "_function",
      "property": "function uniform4f() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.uniform1i",
      "propertyName": "_function",
      "property": "function uniform1i() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.uniform2i",
      "propertyName": "_function",
      "property": "function uniform2i() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.uniform3i",
      "propertyName": "_function",
      "property": "function uniform3i() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.uniform4i",
      "propertyName": "_function",
      "property": "function uniform4i() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.uniform1fv",
      "propertyName": "_function",
      "property": "function uniform1fv() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.uniform2fv",
      "propertyName": "_function",
      "property": "function uniform2fv() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.uniform3fv",
      "propertyName": "_function",
      "property": "function uniform3fv() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.uniform4fv",
      "propertyName": "_function",
      "property": "function uniform4fv() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.uniform1iv",
      "propertyName": "_function",
      "property": "function uniform1iv() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.uniform2iv",
      "propertyName": "_function",
      "property": "function uniform2iv() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.uniform3iv",
      "propertyName": "_function",
      "property": "function uniform3iv() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.uniform4iv",
      "propertyName": "_function",
      "property": "function uniform4iv() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.uniformMatrix2fv",
      "propertyName": "_function",
      "property": "function uniformMatrix2fv() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.uniformMatrix3fv",
      "propertyName": "_function",
      "property": "function uniformMatrix3fv() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.uniformMatrix4fv",
      "propertyName": "_function",
      "property": "function uniformMatrix4fv() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.useProgram",
      "propertyName": "_function",
      "property": "function useProgram() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.validateProgram",
      "propertyName": "_function",
      "property": "function validateProgram() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.vertexAttrib1f",
      "propertyName": "_function",
      "property": "function vertexAttrib1f() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.vertexAttrib2f",
      "propertyName": "_function",
      "property": "function vertexAttrib2f() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.vertexAttrib3f",
      "propertyName": "_function",
      "property": "function vertexAttrib3f() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.vertexAttrib4f",
      "propertyName": "_function",
      "property": "function vertexAttrib4f() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.vertexAttrib1fv",
      "propertyName": "_function",
      "property": "function vertexAttrib1fv() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.vertexAttrib2fv",
      "propertyName": "_function",
      "property": "function vertexAttrib2fv() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.vertexAttrib3fv",
      "propertyName": "_function",
      "property": "function vertexAttrib3fv() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.vertexAttrib4fv",
      "propertyName": "_function",
      "property": "function vertexAttrib4fv() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.vertexAttribPointer",
      "propertyName": "_function",
      "property": "function vertexAttribPointer() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLRenderingContext.prototype.viewport",
      "propertyName": "_function",
      "property": "function viewport() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLRenderingContext",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.WebGLRenderingContext",
      "propertyName": "_function",
      "property": "function WebGLRenderingContext() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLSampler",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.WebGLSampler",
      "propertyName": "_function",
      "property": "function WebGLSampler() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLShader",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.WebGLShader",
      "propertyName": "_function",
      "property": "function WebGLShader() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLShaderPrecisionFormat.prototype.rangeMin",
      "propertyName": "_accessException",
      "property": "TypeError: The WebGLShaderPrecisionFormat.rangeMin getter can only be used on instances of WebGLShaderPrecisionFormat"
    },
    {
      "path": "window.WebGLShaderPrecisionFormat.prototype.rangeMin",
      "propertyName": "_get",
      "property": "function rangeMin() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLShaderPrecisionFormat.prototype.rangeMin",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLShaderPrecisionFormat.prototype.rangeMax",
      "propertyName": "_accessException",
      "property": "TypeError: The WebGLShaderPrecisionFormat.rangeMax getter can only be used on instances of WebGLShaderPrecisionFormat"
    },
    {
      "path": "window.WebGLShaderPrecisionFormat.prototype.rangeMax",
      "propertyName": "_get",
      "property": "function rangeMax() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLShaderPrecisionFormat.prototype.rangeMax",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLShaderPrecisionFormat.prototype.precision",
      "propertyName": "_accessException",
      "property": "TypeError: The WebGLShaderPrecisionFormat.precision getter can only be used on instances of WebGLShaderPrecisionFormat"
    },
    {
      "path": "window.WebGLShaderPrecisionFormat.prototype.precision",
      "propertyName": "_get",
      "property": "function precision() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLShaderPrecisionFormat.prototype.precision",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLShaderPrecisionFormat",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.WebGLShaderPrecisionFormat",
      "propertyName": "_function",
      "property": "function WebGLShaderPrecisionFormat() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLSync",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.WebGLSync",
      "propertyName": "_function",
      "property": "function WebGLSync() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLTexture",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.WebGLTexture",
      "propertyName": "_function",
      "property": "function WebGLTexture() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLTransformFeedback",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.WebGLTransformFeedback",
      "propertyName": "_function",
      "property": "function WebGLTransformFeedback() {\n    [native code]\n}"
    },
    {
      "path": "window.WebGLUniformLocation",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.WebGLUniformLocation",
      "propertyName": "_function",
      "property": "function WebGLUniformLocation() {\n    [native code]\n}"
    },
    {
      "path": "window.TextTrack.prototype.id",
      "propertyName": "_accessException",
      "property": "TypeError: The TextTrack.id getter can only be used on instances of TextTrack"
    },
    {
      "path": "window.TextTrack.prototype.id",
      "propertyName": "_get",
      "property": "function id() {\n    [native code]\n}"
    },
    {
      "path": "window.TextTrack.prototype.id",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.TextTrack.prototype.kind",
      "propertyName": "_accessException",
      "property": "TypeError: The TextTrack.kind getter can only be used on instances of TextTrack"
    },
    {
      "path": "window.TextTrack.prototype.kind",
      "propertyName": "_get",
      "property": "function kind() {\n    [native code]\n}"
    },
    {
      "path": "window.TextTrack.prototype.kind",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.TextTrack.prototype.label",
      "propertyName": "_accessException",
      "property": "TypeError: The TextTrack.label getter can only be used on instances of TextTrack"
    },
    {
      "path": "window.TextTrack.prototype.label",
      "propertyName": "_get",
      "property": "function label() {\n    [native code]\n}"
    },
    {
      "path": "window.TextTrack.prototype.label",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.TextTrack.prototype.language",
      "propertyName": "_accessException",
      "property": "TypeError: The TextTrack.language getter can only be used on instances of TextTrack"
    },
    {
      "path": "window.TextTrack.prototype.language",
      "propertyName": "_get",
      "property": "function language() {\n    [native code]\n}"
    },
    {
      "path": "window.TextTrack.prototype.language",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.TextTrack.prototype.mode",
      "propertyName": "_accessException",
      "property": "TypeError: The TextTrack.mode getter can only be used on instances of TextTrack"
    },
    {
      "path": "window.TextTrack.prototype.mode",
      "propertyName": "_get",
      "property": "function mode() {\n    [native code]\n}"
    },
    {
      "path": "window.TextTrack.prototype.mode",
      "propertyName": "_set",
      "property": "function mode() {\n    [native code]\n}"
    },
    {
      "path": "window.TextTrack.prototype.mode",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.TextTrack.prototype.mode",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.TextTrack.prototype.cues",
      "propertyName": "_accessException",
      "property": "TypeError: The TextTrack.cues getter can only be used on instances of TextTrack"
    },
    {
      "path": "window.TextTrack.prototype.cues",
      "propertyName": "_get",
      "property": "function cues() {\n    [native code]\n}"
    },
    {
      "path": "window.TextTrack.prototype.cues",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.TextTrack.prototype.activeCues",
      "propertyName": "_accessException",
      "property": "TypeError: The TextTrack.activeCues getter can only be used on instances of TextTrack"
    },
    {
      "path": "window.TextTrack.prototype.activeCues",
      "propertyName": "_get",
      "property": "function activeCues() {\n    [native code]\n}"
    },
    {
      "path": "window.TextTrack.prototype.activeCues",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.TextTrack.prototype.oncuechange",
      "propertyName": "_accessException",
      "property": "TypeError: The TextTrack.oncuechange getter can only be used on instances of TextTrack"
    },
    {
      "path": "window.TextTrack.prototype.oncuechange",
      "propertyName": "_get",
      "property": "function oncuechange() {\n    [native code]\n}"
    },
    {
      "path": "window.TextTrack.prototype.oncuechange",
      "propertyName": "_set",
      "property": "function oncuechange() {\n    [native code]\n}"
    },
    {
      "path": "window.TextTrack.prototype.oncuechange",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.TextTrack.prototype.oncuechange",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.TextTrack.prototype.addCue",
      "propertyName": "_function",
      "property": "function addCue() {\n    [native code]\n}"
    },
    {
      "path": "window.TextTrack.prototype.removeCue",
      "propertyName": "_function",
      "property": "function removeCue() {\n    [native code]\n}"
    },
    {
      "path": "window.TextTrack",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.TextTrack",
      "propertyName": "_function",
      "property": "function TextTrack() {\n    [native code]\n}"
    },
    {
      "path": "window.TextTrackCue.prototype.track",
      "propertyName": "_accessException",
      "property": "TypeError: The TextTrackCue.track getter can only be used on instances of TextTrackCue"
    },
    {
      "path": "window.TextTrackCue.prototype.track",
      "propertyName": "_get",
      "property": "function track() {\n    [native code]\n}"
    },
    {
      "path": "window.TextTrackCue.prototype.track",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.TextTrackCue.prototype.id",
      "propertyName": "_accessException",
      "property": "TypeError: The TextTrackCue.id getter can only be used on instances of TextTrackCue"
    },
    {
      "path": "window.TextTrackCue.prototype.id",
      "propertyName": "_get",
      "property": "function id() {\n    [native code]\n}"
    },
    {
      "path": "window.TextTrackCue.prototype.id",
      "propertyName": "_set",
      "property": "function id() {\n    [native code]\n}"
    },
    {
      "path": "window.TextTrackCue.prototype.id",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.TextTrackCue.prototype.id",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.TextTrackCue.prototype.startTime",
      "propertyName": "_accessException",
      "property": "TypeError: The TextTrackCue.startTime getter can only be used on instances of TextTrackCue"
    },
    {
      "path": "window.TextTrackCue.prototype.startTime",
      "propertyName": "_get",
      "property": "function startTime() {\n    [native code]\n}"
    },
    {
      "path": "window.TextTrackCue.prototype.startTime",
      "propertyName": "_set",
      "property": "function startTime() {\n    [native code]\n}"
    },
    {
      "path": "window.TextTrackCue.prototype.startTime",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.TextTrackCue.prototype.startTime",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.TextTrackCue.prototype.endTime",
      "propertyName": "_accessException",
      "property": "TypeError: The TextTrackCue.endTime getter can only be used on instances of TextTrackCue"
    },
    {
      "path": "window.TextTrackCue.prototype.endTime",
      "propertyName": "_get",
      "property": "function endTime() {\n    [native code]\n}"
    },
    {
      "path": "window.TextTrackCue.prototype.endTime",
      "propertyName": "_set",
      "property": "function endTime() {\n    [native code]\n}"
    },
    {
      "path": "window.TextTrackCue.prototype.endTime",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.TextTrackCue.prototype.endTime",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.TextTrackCue.prototype.pauseOnExit",
      "propertyName": "_accessException",
      "property": "TypeError: The TextTrackCue.pauseOnExit getter can only be used on instances of TextTrackCue"
    },
    {
      "path": "window.TextTrackCue.prototype.pauseOnExit",
      "propertyName": "_get",
      "property": "function pauseOnExit() {\n    [native code]\n}"
    },
    {
      "path": "window.TextTrackCue.prototype.pauseOnExit",
      "propertyName": "_set",
      "property": "function pauseOnExit() {\n    [native code]\n}"
    },
    {
      "path": "window.TextTrackCue.prototype.pauseOnExit",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.TextTrackCue.prototype.pauseOnExit",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.TextTrackCue.prototype.onenter",
      "propertyName": "_accessException",
      "property": "TypeError: The TextTrackCue.onenter getter can only be used on instances of TextTrackCue"
    },
    {
      "path": "window.TextTrackCue.prototype.onenter",
      "propertyName": "_get",
      "property": "function onenter() {\n    [native code]\n}"
    },
    {
      "path": "window.TextTrackCue.prototype.onenter",
      "propertyName": "_set",
      "property": "function onenter() {\n    [native code]\n}"
    },
    {
      "path": "window.TextTrackCue.prototype.onenter",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.TextTrackCue.prototype.onenter",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.TextTrackCue.prototype.onexit",
      "propertyName": "_accessException",
      "property": "TypeError: The TextTrackCue.onexit getter can only be used on instances of TextTrackCue"
    },
    {
      "path": "window.TextTrackCue.prototype.onexit",
      "propertyName": "_get",
      "property": "function onexit() {\n    [native code]\n}"
    },
    {
      "path": "window.TextTrackCue.prototype.onexit",
      "propertyName": "_set",
      "property": "function onexit() {\n    [native code]\n}"
    },
    {
      "path": "window.TextTrackCue.prototype.onexit",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.TextTrackCue.prototype.onexit",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.TextTrackCue",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.TextTrackCue",
      "propertyName": "_function",
      "property": "function TextTrackCue() {\n    [native code]\n}"
    },
    {
      "path": "window.TextTrackCueList.prototype.length",
      "propertyName": "_accessException",
      "property": "TypeError: The TextTrackCueList.length getter can only be used on instances of TextTrackCueList"
    },
    {
      "path": "window.TextTrackCueList.prototype.length",
      "propertyName": "_get",
      "property": "function length() {\n    [native code]\n}"
    },
    {
      "path": "window.TextTrackCueList.prototype.length",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.TextTrackCueList.prototype.getCueById",
      "propertyName": "_function",
      "property": "function getCueById() {\n    [native code]\n}"
    },
    {
      "path": "window.TextTrackCueList.prototype",
      "propertyName": "Symbol.iterator",
      "property": "REF: window.DOMStringList.prototype.Symbol(Symbol.iterator)"
    },
    {
      "path": "window.TextTrackCueList",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.TextTrackCueList",
      "propertyName": "_function",
      "property": "function TextTrackCueList() {\n    [native code]\n}"
    },
    {
      "path": "window.TextTrackList.prototype.length",
      "propertyName": "_accessException",
      "property": "TypeError: The TextTrackList.length getter can only be used on instances of TextTrackList"
    },
    {
      "path": "window.TextTrackList.prototype.length",
      "propertyName": "_get",
      "property": "function length() {\n    [native code]\n}"
    },
    {
      "path": "window.TextTrackList.prototype.length",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.TextTrackList.prototype.onaddtrack",
      "propertyName": "_accessException",
      "property": "TypeError: The TextTrackList.onaddtrack getter can only be used on instances of TextTrackList"
    },
    {
      "path": "window.TextTrackList.prototype.onaddtrack",
      "propertyName": "_get",
      "property": "function onaddtrack() {\n    [native code]\n}"
    },
    {
      "path": "window.TextTrackList.prototype.onaddtrack",
      "propertyName": "_set",
      "property": "function onaddtrack() {\n    [native code]\n}"
    },
    {
      "path": "window.TextTrackList.prototype.onaddtrack",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.TextTrackList.prototype.onaddtrack",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.TextTrackList.prototype.onchange",
      "propertyName": "_accessException",
      "property": "TypeError: The TextTrackList.onchange getter can only be used on instances of TextTrackList"
    },
    {
      "path": "window.TextTrackList.prototype.onchange",
      "propertyName": "_get",
      "property": "function onchange() {\n    [native code]\n}"
    },
    {
      "path": "window.TextTrackList.prototype.onchange",
      "propertyName": "_set",
      "property": "function onchange() {\n    [native code]\n}"
    },
    {
      "path": "window.TextTrackList.prototype.onchange",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.TextTrackList.prototype.onchange",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.TextTrackList.prototype.onremovetrack",
      "propertyName": "_accessException",
      "property": "TypeError: The TextTrackList.onremovetrack getter can only be used on instances of TextTrackList"
    },
    {
      "path": "window.TextTrackList.prototype.onremovetrack",
      "propertyName": "_get",
      "property": "function onremovetrack() {\n    [native code]\n}"
    },
    {
      "path": "window.TextTrackList.prototype.onremovetrack",
      "propertyName": "_set",
      "property": "function onremovetrack() {\n    [native code]\n}"
    },
    {
      "path": "window.TextTrackList.prototype.onremovetrack",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.TextTrackList.prototype.onremovetrack",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.TextTrackList.prototype.getTrackById",
      "propertyName": "_function",
      "property": "function getTrackById() {\n    [native code]\n}"
    },
    {
      "path": "window.TextTrackList.prototype",
      "propertyName": "Symbol.iterator",
      "property": "REF: window.DOMStringList.prototype.Symbol(Symbol.iterator)"
    },
    {
      "path": "window.TextTrackList",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.TextTrackList",
      "propertyName": "_function",
      "property": "function TextTrackList() {\n    [native code]\n}"
    },
    {
      "path": "window.TrackEvent.prototype.track",
      "propertyName": "_accessException",
      "property": "TypeError: The TrackEvent.track getter can only be used on instances of TrackEvent"
    },
    {
      "path": "window.TrackEvent.prototype.track",
      "propertyName": "_get",
      "property": "function track() {\n    [native code]\n}"
    },
    {
      "path": "window.TrackEvent.prototype.track",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.TrackEvent",
      "propertyName": "new()",
      "property": "TypeError: Not enough arguments"
    },
    {
      "path": "window.TrackEvent",
      "propertyName": "_function",
      "property": "function TrackEvent() {\n    [native code]\n}"
    },
    {
      "path": "window.VTTCue.prototype.vertical",
      "propertyName": "_accessException",
      "property": "TypeError: The VTTCue.vertical getter can only be used on instances of VTTCue"
    },
    {
      "path": "window.VTTCue.prototype.vertical",
      "propertyName": "_get",
      "property": "function vertical() {\n    [native code]\n}"
    },
    {
      "path": "window.VTTCue.prototype.vertical",
      "propertyName": "_set",
      "property": "function vertical() {\n    [native code]\n}"
    },
    {
      "path": "window.VTTCue.prototype.vertical",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.VTTCue.prototype.vertical",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.VTTCue.prototype.snapToLines",
      "propertyName": "_accessException",
      "property": "TypeError: The VTTCue.snapToLines getter can only be used on instances of VTTCue"
    },
    {
      "path": "window.VTTCue.prototype.snapToLines",
      "propertyName": "_get",
      "property": "function snapToLines() {\n    [native code]\n}"
    },
    {
      "path": "window.VTTCue.prototype.snapToLines",
      "propertyName": "_set",
      "property": "function snapToLines() {\n    [native code]\n}"
    },
    {
      "path": "window.VTTCue.prototype.snapToLines",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.VTTCue.prototype.snapToLines",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.VTTCue.prototype.line",
      "propertyName": "_accessException",
      "property": "TypeError: The VTTCue.line getter can only be used on instances of VTTCue"
    },
    {
      "path": "window.VTTCue.prototype.line",
      "propertyName": "_get",
      "property": "function line() {\n    [native code]\n}"
    },
    {
      "path": "window.VTTCue.prototype.line",
      "propertyName": "_set",
      "property": "function line() {\n    [native code]\n}"
    },
    {
      "path": "window.VTTCue.prototype.line",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.VTTCue.prototype.line",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.VTTCue.prototype.position",
      "propertyName": "_accessException",
      "property": "TypeError: The VTTCue.position getter can only be used on instances of VTTCue"
    },
    {
      "path": "window.VTTCue.prototype.position",
      "propertyName": "_get",
      "property": "function position() {\n    [native code]\n}"
    },
    {
      "path": "window.VTTCue.prototype.position",
      "propertyName": "_set",
      "property": "function position() {\n    [native code]\n}"
    },
    {
      "path": "window.VTTCue.prototype.position",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.VTTCue.prototype.position",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.VTTCue.prototype.size",
      "propertyName": "_accessException",
      "property": "TypeError: The VTTCue.size getter can only be used on instances of VTTCue"
    },
    {
      "path": "window.VTTCue.prototype.size",
      "propertyName": "_get",
      "property": "function size() {\n    [native code]\n}"
    },
    {
      "path": "window.VTTCue.prototype.size",
      "propertyName": "_set",
      "property": "function size() {\n    [native code]\n}"
    },
    {
      "path": "window.VTTCue.prototype.size",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.VTTCue.prototype.size",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.VTTCue.prototype.align",
      "propertyName": "_accessException",
      "property": "TypeError: The VTTCue.align getter can only be used on instances of VTTCue"
    },
    {
      "path": "window.VTTCue.prototype.align",
      "propertyName": "_get",
      "property": "function align() {\n    [native code]\n}"
    },
    {
      "path": "window.VTTCue.prototype.align",
      "propertyName": "_set",
      "property": "function align() {\n    [native code]\n}"
    },
    {
      "path": "window.VTTCue.prototype.align",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.VTTCue.prototype.align",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.VTTCue.prototype.text",
      "propertyName": "_accessException",
      "property": "TypeError: The VTTCue.text getter can only be used on instances of VTTCue"
    },
    {
      "path": "window.VTTCue.prototype.text",
      "propertyName": "_get",
      "property": "function text() {\n    [native code]\n}"
    },
    {
      "path": "window.VTTCue.prototype.text",
      "propertyName": "_set",
      "property": "function text() {\n    [native code]\n}"
    },
    {
      "path": "window.VTTCue.prototype.text",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.VTTCue.prototype.text",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.VTTCue.prototype.getCueAsHTML",
      "propertyName": "_function",
      "property": "function getCueAsHTML() {\n    [native code]\n}"
    },
    {
      "path": "window.VTTCue",
      "propertyName": "new()",
      "property": "TypeError: Not enough arguments"
    },
    {
      "path": "window.VTTCue",
      "propertyName": "_function",
      "property": "function VTTCue() {\n    [native code]\n}"
    },
    {
      "path": "window.ApplicationCache.prototype.status",
      "propertyName": "_accessException",
      "property": "TypeError: The ApplicationCache.status getter can only be used on instances of ApplicationCache"
    },
    {
      "path": "window.ApplicationCache.prototype.status",
      "propertyName": "_get",
      "property": "function status() {\n    [native code]\n}"
    },
    {
      "path": "window.ApplicationCache.prototype.status",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.ApplicationCache.prototype.onchecking",
      "propertyName": "_accessException",
      "property": "TypeError: The ApplicationCache.onchecking getter can only be used on instances of ApplicationCache"
    },
    {
      "path": "window.ApplicationCache.prototype.onchecking",
      "propertyName": "_get",
      "property": "function onchecking() {\n    [native code]\n}"
    },
    {
      "path": "window.ApplicationCache.prototype.onchecking",
      "propertyName": "_set",
      "property": "function onchecking() {\n    [native code]\n}"
    },
    {
      "path": "window.ApplicationCache.prototype.onchecking",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.ApplicationCache.prototype.onchecking",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.ApplicationCache.prototype.onerror",
      "propertyName": "_accessException",
      "property": "TypeError: The ApplicationCache.onerror getter can only be used on instances of ApplicationCache"
    },
    {
      "path": "window.ApplicationCache.prototype.onerror",
      "propertyName": "_get",
      "property": "function onerror() {\n    [native code]\n}"
    },
    {
      "path": "window.ApplicationCache.prototype.onerror",
      "propertyName": "_set",
      "property": "function onerror() {\n    [native code]\n}"
    },
    {
      "path": "window.ApplicationCache.prototype.onerror",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.ApplicationCache.prototype.onerror",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.ApplicationCache.prototype.onnoupdate",
      "propertyName": "_accessException",
      "property": "TypeError: The ApplicationCache.onnoupdate getter can only be used on instances of ApplicationCache"
    },
    {
      "path": "window.ApplicationCache.prototype.onnoupdate",
      "propertyName": "_get",
      "property": "function onnoupdate() {\n    [native code]\n}"
    },
    {
      "path": "window.ApplicationCache.prototype.onnoupdate",
      "propertyName": "_set",
      "property": "function onnoupdate() {\n    [native code]\n}"
    },
    {
      "path": "window.ApplicationCache.prototype.onnoupdate",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.ApplicationCache.prototype.onnoupdate",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.ApplicationCache.prototype.ondownloading",
      "propertyName": "_accessException",
      "property": "TypeError: The ApplicationCache.ondownloading getter can only be used on instances of ApplicationCache"
    },
    {
      "path": "window.ApplicationCache.prototype.ondownloading",
      "propertyName": "_get",
      "property": "function ondownloading() {\n    [native code]\n}"
    },
    {
      "path": "window.ApplicationCache.prototype.ondownloading",
      "propertyName": "_set",
      "property": "function ondownloading() {\n    [native code]\n}"
    },
    {
      "path": "window.ApplicationCache.prototype.ondownloading",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.ApplicationCache.prototype.ondownloading",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.ApplicationCache.prototype.onprogress",
      "propertyName": "_accessException",
      "property": "TypeError: The ApplicationCache.onprogress getter can only be used on instances of ApplicationCache"
    },
    {
      "path": "window.ApplicationCache.prototype.onprogress",
      "propertyName": "_get",
      "property": "function onprogress() {\n    [native code]\n}"
    },
    {
      "path": "window.ApplicationCache.prototype.onprogress",
      "propertyName": "_set",
      "property": "function onprogress() {\n    [native code]\n}"
    },
    {
      "path": "window.ApplicationCache.prototype.onprogress",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.ApplicationCache.prototype.onprogress",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.ApplicationCache.prototype.onupdateready",
      "propertyName": "_accessException",
      "property": "TypeError: The ApplicationCache.onupdateready getter can only be used on instances of ApplicationCache"
    },
    {
      "path": "window.ApplicationCache.prototype.onupdateready",
      "propertyName": "_get",
      "property": "function onupdateready() {\n    [native code]\n}"
    },
    {
      "path": "window.ApplicationCache.prototype.onupdateready",
      "propertyName": "_set",
      "property": "function onupdateready() {\n    [native code]\n}"
    },
    {
      "path": "window.ApplicationCache.prototype.onupdateready",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.ApplicationCache.prototype.onupdateready",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.ApplicationCache.prototype.oncached",
      "propertyName": "_accessException",
      "property": "TypeError: The ApplicationCache.oncached getter can only be used on instances of ApplicationCache"
    },
    {
      "path": "window.ApplicationCache.prototype.oncached",
      "propertyName": "_get",
      "property": "function oncached() {\n    [native code]\n}"
    },
    {
      "path": "window.ApplicationCache.prototype.oncached",
      "propertyName": "_set",
      "property": "function oncached() {\n    [native code]\n}"
    },
    {
      "path": "window.ApplicationCache.prototype.oncached",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.ApplicationCache.prototype.oncached",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.ApplicationCache.prototype.onobsolete",
      "propertyName": "_accessException",
      "property": "TypeError: The ApplicationCache.onobsolete getter can only be used on instances of ApplicationCache"
    },
    {
      "path": "window.ApplicationCache.prototype.onobsolete",
      "propertyName": "_get",
      "property": "function onobsolete() {\n    [native code]\n}"
    },
    {
      "path": "window.ApplicationCache.prototype.onobsolete",
      "propertyName": "_set",
      "property": "function onobsolete() {\n    [native code]\n}"
    },
    {
      "path": "window.ApplicationCache.prototype.onobsolete",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.ApplicationCache.prototype.onobsolete",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.ApplicationCache.prototype.update.name",
      "propertyName": "_value",
      "property": "update"
    },
    {
      "path": "window.ApplicationCache.prototype.update",
      "propertyName": "_function",
      "property": "function update() {\n    [native code]\n}"
    },
    {
      "path": "window.ApplicationCache.prototype.swapCache.name",
      "propertyName": "_value",
      "property": "swapCache"
    },
    {
      "path": "window.ApplicationCache.prototype.swapCache",
      "propertyName": "_function",
      "property": "function swapCache() {\n    [native code]\n}"
    },
    {
      "path": "window.ApplicationCache.prototype.abort.name",
      "propertyName": "_value",
      "property": "abort"
    },
    {
      "path": "window.ApplicationCache.prototype.abort",
      "propertyName": "_function",
      "property": "function abort() {\n    [native code]\n}"
    },
    {
      "path": "window.ApplicationCache",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.ApplicationCache",
      "propertyName": "_function",
      "property": "function ApplicationCache() {\n    [native code]\n}"
    },
    {
      "path": "window.BarProp.prototype.visible",
      "propertyName": "_accessException",
      "property": "TypeError: The BarProp.visible getter can only be used on instances of BarProp"
    },
    {
      "path": "window.BarProp.prototype.visible",
      "propertyName": "_get",
      "property": "function visible() {\n    [native code]\n}"
    },
    {
      "path": "window.BarProp.prototype.visible",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.BarProp",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.BarProp",
      "propertyName": "_function",
      "property": "function BarProp() {\n    [native code]\n}"
    },
    {
      "path": "window.Crypto.prototype.subtle",
      "propertyName": "_accessException",
      "property": "TypeError: The Crypto.subtle getter can only be used on instances of Crypto"
    },
    {
      "path": "window.Crypto.prototype.subtle",
      "propertyName": "_get",
      "property": "function subtle() {\n    [native code]\n}"
    },
    {
      "path": "window.Crypto.prototype.subtle",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Crypto.prototype.getRandomValues",
      "propertyName": "_function",
      "property": "function getRandomValues() {\n    [native code]\n}"
    },
    {
      "path": "window.Crypto",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.Crypto",
      "propertyName": "_function",
      "property": "function Crypto() {\n    [native code]\n}"
    },
    {
      "path": "window.Selection.prototype.anchorNode",
      "propertyName": "_accessException",
      "property": "TypeError: The Selection.anchorNode getter can only be used on instances of Selection"
    },
    {
      "path": "window.Selection.prototype.anchorNode",
      "propertyName": "_get",
      "property": "function anchorNode() {\n    [native code]\n}"
    },
    {
      "path": "window.Selection.prototype.anchorNode",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Selection.prototype.anchorOffset",
      "propertyName": "_accessException",
      "property": "TypeError: The Selection.anchorOffset getter can only be used on instances of Selection"
    },
    {
      "path": "window.Selection.prototype.anchorOffset",
      "propertyName": "_get",
      "property": "function anchorOffset() {\n    [native code]\n}"
    },
    {
      "path": "window.Selection.prototype.anchorOffset",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Selection.prototype.focusNode",
      "propertyName": "_accessException",
      "property": "TypeError: The Selection.focusNode getter can only be used on instances of Selection"
    },
    {
      "path": "window.Selection.prototype.focusNode",
      "propertyName": "_get",
      "property": "function focusNode() {\n    [native code]\n}"
    },
    {
      "path": "window.Selection.prototype.focusNode",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Selection.prototype.focusOffset",
      "propertyName": "_accessException",
      "property": "TypeError: The Selection.focusOffset getter can only be used on instances of Selection"
    },
    {
      "path": "window.Selection.prototype.focusOffset",
      "propertyName": "_get",
      "property": "function focusOffset() {\n    [native code]\n}"
    },
    {
      "path": "window.Selection.prototype.focusOffset",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Selection.prototype.isCollapsed",
      "propertyName": "_accessException",
      "property": "TypeError: The Selection.isCollapsed getter can only be used on instances of Selection"
    },
    {
      "path": "window.Selection.prototype.isCollapsed",
      "propertyName": "_get",
      "property": "function isCollapsed() {\n    [native code]\n}"
    },
    {
      "path": "window.Selection.prototype.isCollapsed",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Selection.prototype.rangeCount",
      "propertyName": "_accessException",
      "property": "TypeError: The Selection.rangeCount getter can only be used on instances of Selection"
    },
    {
      "path": "window.Selection.prototype.rangeCount",
      "propertyName": "_get",
      "property": "function rangeCount() {\n    [native code]\n}"
    },
    {
      "path": "window.Selection.prototype.rangeCount",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Selection.prototype.type",
      "propertyName": "_accessException",
      "property": "TypeError: The Selection.type getter can only be used on instances of Selection"
    },
    {
      "path": "window.Selection.prototype.type",
      "propertyName": "_get",
      "property": "function type() {\n    [native code]\n}"
    },
    {
      "path": "window.Selection.prototype.type",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Selection.prototype.baseNode",
      "propertyName": "_accessException",
      "property": "TypeError: The Selection.baseNode getter can only be used on instances of Selection"
    },
    {
      "path": "window.Selection.prototype.baseNode",
      "propertyName": "_get",
      "property": "function baseNode() {\n    [native code]\n}"
    },
    {
      "path": "window.Selection.prototype.baseNode",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Selection.prototype.baseOffset",
      "propertyName": "_accessException",
      "property": "TypeError: The Selection.baseOffset getter can only be used on instances of Selection"
    },
    {
      "path": "window.Selection.prototype.baseOffset",
      "propertyName": "_get",
      "property": "function baseOffset() {\n    [native code]\n}"
    },
    {
      "path": "window.Selection.prototype.baseOffset",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Selection.prototype.extentNode",
      "propertyName": "_accessException",
      "property": "TypeError: The Selection.extentNode getter can only be used on instances of Selection"
    },
    {
      "path": "window.Selection.prototype.extentNode",
      "propertyName": "_get",
      "property": "function extentNode() {\n    [native code]\n}"
    },
    {
      "path": "window.Selection.prototype.extentNode",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Selection.prototype.extentOffset",
      "propertyName": "_accessException",
      "property": "TypeError: The Selection.extentOffset getter can only be used on instances of Selection"
    },
    {
      "path": "window.Selection.prototype.extentOffset",
      "propertyName": "_get",
      "property": "function extentOffset() {\n    [native code]\n}"
    },
    {
      "path": "window.Selection.prototype.extentOffset",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Selection.prototype.collapse",
      "propertyName": "_function",
      "property": "function collapse() {\n    [native code]\n}"
    },
    {
      "path": "window.Selection.prototype.collapseToEnd",
      "propertyName": "_function",
      "property": "function collapseToEnd() {\n    [native code]\n}"
    },
    {
      "path": "window.Selection.prototype.collapseToStart",
      "propertyName": "_function",
      "property": "function collapseToStart() {\n    [native code]\n}"
    },
    {
      "path": "window.Selection.prototype.deleteFromDocument",
      "propertyName": "_function",
      "property": "function deleteFromDocument() {\n    [native code]\n}"
    },
    {
      "path": "window.Selection.prototype.containsNode",
      "propertyName": "_function",
      "property": "function containsNode() {\n    [native code]\n}"
    },
    {
      "path": "window.Selection.prototype.selectAllChildren",
      "propertyName": "_function",
      "property": "function selectAllChildren() {\n    [native code]\n}"
    },
    {
      "path": "window.Selection.prototype.extend",
      "propertyName": "_function",
      "property": "function extend() {\n    [native code]\n}"
    },
    {
      "path": "window.Selection.prototype.getRangeAt",
      "propertyName": "_function",
      "property": "function getRangeAt() {\n    [native code]\n}"
    },
    {
      "path": "window.Selection.prototype.removeAllRanges",
      "propertyName": "_function",
      "property": "function removeAllRanges() {\n    [native code]\n}"
    },
    {
      "path": "window.Selection.prototype.addRange",
      "propertyName": "_function",
      "property": "function addRange() {\n    [native code]\n}"
    },
    {
      "path": "window.Selection.prototype.toString",
      "propertyName": "_function",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Selection.prototype.toString",
      "propertyName": "_flags",
      "property": "cw"
    },
    {
      "path": "window.Selection.prototype.setBaseAndExtent",
      "propertyName": "_function",
      "property": "function setBaseAndExtent() {\n    [native code]\n}"
    },
    {
      "path": "window.Selection.prototype.setPosition",
      "propertyName": "_function",
      "property": "function setPosition() {\n    [native code]\n}"
    },
    {
      "path": "window.Selection.prototype.empty",
      "propertyName": "_function",
      "property": "function empty() {\n    [native code]\n}"
    },
    {
      "path": "window.Selection.prototype.modify",
      "propertyName": "_function",
      "property": "function modify() {\n    [native code]\n}"
    },
    {
      "path": "window.Selection",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.Selection",
      "propertyName": "_function",
      "property": "function Selection() {\n    [native code]\n}"
    },
    {
      "path": "window.Window.prototype._protos",
      "propertyName": "0",
      "property": "EventTarget.prototype"
    },
    {
      "path": "window.Window",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.Window",
      "propertyName": "_function",
      "property": "function Window() {\n    [native code]\n}"
    },
    {
      "path": "window.EventSource.prototype.url",
      "propertyName": "_accessException",
      "property": "TypeError: The EventSource.url getter can only be used on instances of EventSource"
    },
    {
      "path": "window.EventSource.prototype.url",
      "propertyName": "_get",
      "property": "function url() {\n    [native code]\n}"
    },
    {
      "path": "window.EventSource.prototype.url",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.EventSource.prototype.withCredentials",
      "propertyName": "_accessException",
      "property": "TypeError: The EventSource.withCredentials getter can only be used on instances of EventSource"
    },
    {
      "path": "window.EventSource.prototype.withCredentials",
      "propertyName": "_get",
      "property": "function withCredentials() {\n    [native code]\n}"
    },
    {
      "path": "window.EventSource.prototype.withCredentials",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.EventSource.prototype.readyState",
      "propertyName": "_accessException",
      "property": "TypeError: The EventSource.readyState getter can only be used on instances of EventSource"
    },
    {
      "path": "window.EventSource.prototype.readyState",
      "propertyName": "_get",
      "property": "function readyState() {\n    [native code]\n}"
    },
    {
      "path": "window.EventSource.prototype.readyState",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.EventSource.prototype.onopen",
      "propertyName": "_accessException",
      "property": "TypeError: The EventSource.onopen getter can only be used on instances of EventSource"
    },
    {
      "path": "window.EventSource.prototype.onopen",
      "propertyName": "_get",
      "property": "function onopen() {\n    [native code]\n}"
    },
    {
      "path": "window.EventSource.prototype.onopen",
      "propertyName": "_set",
      "property": "function onopen() {\n    [native code]\n}"
    },
    {
      "path": "window.EventSource.prototype.onopen",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.EventSource.prototype.onopen",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.EventSource.prototype.onmessage",
      "propertyName": "_accessException",
      "property": "TypeError: The EventSource.onmessage getter can only be used on instances of EventSource"
    },
    {
      "path": "window.EventSource.prototype.onmessage",
      "propertyName": "_get",
      "property": "function onmessage() {\n    [native code]\n}"
    },
    {
      "path": "window.EventSource.prototype.onmessage",
      "propertyName": "_set",
      "property": "function onmessage() {\n    [native code]\n}"
    },
    {
      "path": "window.EventSource.prototype.onmessage",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.EventSource.prototype.onmessage",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.EventSource.prototype.onerror",
      "propertyName": "_accessException",
      "property": "TypeError: The EventSource.onerror getter can only be used on instances of EventSource"
    },
    {
      "path": "window.EventSource.prototype.onerror",
      "propertyName": "_get",
      "property": "function onerror() {\n    [native code]\n}"
    },
    {
      "path": "window.EventSource.prototype.onerror",
      "propertyName": "_set",
      "property": "function onerror() {\n    [native code]\n}"
    },
    {
      "path": "window.EventSource.prototype.onerror",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.EventSource.prototype.onerror",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.EventSource.prototype.close",
      "propertyName": "_function",
      "property": "function close() {\n    [native code]\n}"
    },
    {
      "path": "window.EventSource",
      "propertyName": "new()",
      "property": "TypeError: Not enough arguments"
    },
    {
      "path": "window.EventSource",
      "propertyName": "_function",
      "property": "function EventSource() {\n    [native code]\n}"
    },
    {
      "path": "window.History.prototype.length",
      "propertyName": "_accessException",
      "property": "TypeError: The History.length getter can only be used on instances of History"
    },
    {
      "path": "window.History.prototype.length",
      "propertyName": "_get",
      "property": "function length() {\n    [native code]\n}"
    },
    {
      "path": "window.History.prototype.length",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.History.prototype.scrollRestoration",
      "propertyName": "_accessException",
      "property": "TypeError: The History.scrollRestoration getter can only be used on instances of History"
    },
    {
      "path": "window.History.prototype.scrollRestoration",
      "propertyName": "_get",
      "property": "function scrollRestoration() {\n    [native code]\n}"
    },
    {
      "path": "window.History.prototype.scrollRestoration",
      "propertyName": "_set",
      "property": "function scrollRestoration() {\n    [native code]\n}"
    },
    {
      "path": "window.History.prototype.scrollRestoration",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.History.prototype.scrollRestoration",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.History.prototype.state",
      "propertyName": "_accessException",
      "property": "TypeError: The History.state getter can only be used on instances of History"
    },
    {
      "path": "window.History.prototype.state",
      "propertyName": "_get",
      "property": "function state() {\n    [native code]\n}"
    },
    {
      "path": "window.History.prototype.state",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.History.prototype.back",
      "propertyName": "_function",
      "property": "function back() {\n    [native code]\n}"
    },
    {
      "path": "window.History.prototype.forward",
      "propertyName": "_function",
      "property": "function forward() {\n    [native code]\n}"
    },
    {
      "path": "window.History.prototype.go",
      "propertyName": "_function",
      "property": "function go() {\n    [native code]\n}"
    },
    {
      "path": "window.History.prototype.pushState",
      "propertyName": "_function",
      "property": "function pushState() {\n    [native code]\n}"
    },
    {
      "path": "window.History.prototype.replaceState",
      "propertyName": "_function",
      "property": "function replaceState() {\n    [native code]\n}"
    },
    {
      "path": "window.History",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.History",
      "propertyName": "_function",
      "property": "function History() {\n    [native code]\n}"
    },
    {
      "path": "window.Location",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.Location",
      "propertyName": "_function",
      "property": "function Location() {\n    [native code]\n}"
    },
    {
      "path": "window.Navigator.prototype.plugins",
      "propertyName": "_accessException",
      "property": "TypeError: The Navigator.plugins getter can only be used on instances of Navigator"
    },
    {
      "path": "window.Navigator.prototype.plugins",
      "propertyName": "_get",
      "property": "function plugins() {\n    [native code]\n}"
    },
    {
      "path": "window.Navigator.prototype.plugins",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Navigator.prototype.mimeTypes",
      "propertyName": "_accessException",
      "property": "TypeError: The Navigator.mimeTypes getter can only be used on instances of Navigator"
    },
    {
      "path": "window.Navigator.prototype.mimeTypes",
      "propertyName": "_get",
      "property": "function mimeTypes() {\n    [native code]\n}"
    },
    {
      "path": "window.Navigator.prototype.mimeTypes",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Navigator.prototype.cookieEnabled",
      "propertyName": "_accessException",
      "property": "TypeError: The Navigator.cookieEnabled getter can only be used on instances of Navigator"
    },
    {
      "path": "window.Navigator.prototype.cookieEnabled",
      "propertyName": "_get",
      "property": "function cookieEnabled() {\n    [native code]\n}"
    },
    {
      "path": "window.Navigator.prototype.cookieEnabled",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Navigator.prototype.credentials",
      "propertyName": "_accessException",
      "property": "TypeError: The Navigator.credentials getter can only be used on instances of Navigator"
    },
    {
      "path": "window.Navigator.prototype.credentials",
      "propertyName": "_get",
      "property": "function credentials() {\n    [native code]\n}"
    },
    {
      "path": "window.Navigator.prototype.credentials",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Navigator.prototype.geolocation",
      "propertyName": "_accessException",
      "property": "TypeError: The Navigator.geolocation getter can only be used on instances of Navigator"
    },
    {
      "path": "window.Navigator.prototype.geolocation",
      "propertyName": "_get",
      "property": "function geolocation() {\n    [native code]\n}"
    },
    {
      "path": "window.Navigator.prototype.geolocation",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Navigator.prototype.mediaCapabilities",
      "propertyName": "_accessException",
      "property": "TypeError: The Navigator.mediaCapabilities getter can only be used on instances of Navigator"
    },
    {
      "path": "window.Navigator.prototype.mediaCapabilities",
      "propertyName": "_get",
      "property": "function mediaCapabilities() {\n    [native code]\n}"
    },
    {
      "path": "window.Navigator.prototype.mediaCapabilities",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Navigator.prototype.mediaDevices",
      "propertyName": "_accessException",
      "property": "TypeError: The Navigator.mediaDevices getter can only be used on instances of Navigator"
    },
    {
      "path": "window.Navigator.prototype.mediaDevices",
      "propertyName": "_get",
      "property": "function mediaDevices() {\n    [native code]\n}"
    },
    {
      "path": "window.Navigator.prototype.mediaDevices",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Navigator.prototype.webdriver",
      "propertyName": "_accessException",
      "property": "TypeError: The Navigator.webdriver getter can only be used on instances of Navigator"
    },
    {
      "path": "window.Navigator.prototype.webdriver",
      "propertyName": "_get",
      "property": "function webdriver() {\n    [native code]\n}"
    },
    {
      "path": "window.Navigator.prototype.webdriver",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Navigator.prototype.maxTouchPoints",
      "propertyName": "_accessException",
      "property": "TypeError: The Navigator.maxTouchPoints getter can only be used on instances of Navigator"
    },
    {
      "path": "window.Navigator.prototype.maxTouchPoints",
      "propertyName": "_get",
      "property": "function maxTouchPoints() {\n    [native code]\n}"
    },
    {
      "path": "window.Navigator.prototype.maxTouchPoints",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Navigator.prototype.appCodeName",
      "propertyName": "_accessException",
      "property": "TypeError: The Navigator.appCodeName getter can only be used on instances of Navigator"
    },
    {
      "path": "window.Navigator.prototype.appCodeName",
      "propertyName": "_get",
      "property": "function appCodeName() {\n    [native code]\n}"
    },
    {
      "path": "window.Navigator.prototype.appCodeName",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Navigator.prototype.appName",
      "propertyName": "_accessException",
      "property": "TypeError: The Navigator.appName getter can only be used on instances of Navigator"
    },
    {
      "path": "window.Navigator.prototype.appName",
      "propertyName": "_get",
      "property": "function appName() {\n    [native code]\n}"
    },
    {
      "path": "window.Navigator.prototype.appName",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Navigator.prototype.appVersion",
      "propertyName": "_accessException",
      "property": "TypeError: The Navigator.appVersion getter can only be used on instances of Navigator"
    },
    {
      "path": "window.Navigator.prototype.appVersion",
      "propertyName": "_get",
      "property": "function appVersion() {\n    [native code]\n}"
    },
    {
      "path": "window.Navigator.prototype.appVersion",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Navigator.prototype.platform",
      "propertyName": "_accessException",
      "property": "TypeError: The Navigator.platform getter can only be used on instances of Navigator"
    },
    {
      "path": "window.Navigator.prototype.platform",
      "propertyName": "_get",
      "property": "function platform() {\n    [native code]\n}"
    },
    {
      "path": "window.Navigator.prototype.platform",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Navigator.prototype.product",
      "propertyName": "_accessException",
      "property": "TypeError: The Navigator.product getter can only be used on instances of Navigator"
    },
    {
      "path": "window.Navigator.prototype.product",
      "propertyName": "_get",
      "property": "function product() {\n    [native code]\n}"
    },
    {
      "path": "window.Navigator.prototype.product",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Navigator.prototype.productSub",
      "propertyName": "_accessException",
      "property": "TypeError: The Navigator.productSub getter can only be used on instances of Navigator"
    },
    {
      "path": "window.Navigator.prototype.productSub",
      "propertyName": "_get",
      "property": "function productSub() {\n    [native code]\n}"
    },
    {
      "path": "window.Navigator.prototype.productSub",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Navigator.prototype.userAgent",
      "propertyName": "_accessException",
      "property": "TypeError: The Navigator.userAgent getter can only be used on instances of Navigator"
    },
    {
      "path": "window.Navigator.prototype.userAgent",
      "propertyName": "_get",
      "property": "function userAgent() {\n    [native code]\n}"
    },
    {
      "path": "window.Navigator.prototype.userAgent",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Navigator.prototype.vendor",
      "propertyName": "_accessException",
      "property": "TypeError: The Navigator.vendor getter can only be used on instances of Navigator"
    },
    {
      "path": "window.Navigator.prototype.vendor",
      "propertyName": "_get",
      "property": "function vendor() {\n    [native code]\n}"
    },
    {
      "path": "window.Navigator.prototype.vendor",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Navigator.prototype.vendorSub",
      "propertyName": "_accessException",
      "property": "TypeError: The Navigator.vendorSub getter can only be used on instances of Navigator"
    },
    {
      "path": "window.Navigator.prototype.vendorSub",
      "propertyName": "_get",
      "property": "function vendorSub() {\n    [native code]\n}"
    },
    {
      "path": "window.Navigator.prototype.vendorSub",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Navigator.prototype.language",
      "propertyName": "_accessException",
      "property": "TypeError: The Navigator.language getter can only be used on instances of Navigator"
    },
    {
      "path": "window.Navigator.prototype.language",
      "propertyName": "_get",
      "property": "function language() {\n    [native code]\n}"
    },
    {
      "path": "window.Navigator.prototype.language",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Navigator.prototype.languages",
      "propertyName": "_accessException",
      "property": "TypeError: The Navigator.languages getter can only be used on instances of Navigator"
    },
    {
      "path": "window.Navigator.prototype.languages",
      "propertyName": "_get",
      "property": "function languages() {\n    [native code]\n}"
    },
    {
      "path": "window.Navigator.prototype.languages",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Navigator.prototype.onLine",
      "propertyName": "_accessException",
      "property": "TypeError: The Navigator.onLine getter can only be used on instances of Navigator"
    },
    {
      "path": "window.Navigator.prototype.onLine",
      "propertyName": "_get",
      "property": "function onLine() {\n    [native code]\n}"
    },
    {
      "path": "window.Navigator.prototype.onLine",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Navigator.prototype.serviceWorker",
      "propertyName": "_accessException",
      "property": "TypeError: The Navigator.serviceWorker getter can only be used on instances of Navigator"
    },
    {
      "path": "window.Navigator.prototype.serviceWorker",
      "propertyName": "_get",
      "property": "function serviceWorker() {\n    [native code]\n}"
    },
    {
      "path": "window.Navigator.prototype.serviceWorker",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Navigator.prototype.javaEnabled",
      "propertyName": "_function",
      "property": "function javaEnabled() {\n    [native code]\n}"
    },
    {
      "path": "window.Navigator.prototype.sendBeacon",
      "propertyName": "_function",
      "property": "function sendBeacon() {\n    [native code]\n}"
    },
    {
      "path": "window.Navigator.prototype.requestMediaKeySystemAccess.name",
      "propertyName": "_value",
      "property": "requestMediaKeySystemAccess"
    },
    {
      "path": "window.Navigator.prototype.requestMediaKeySystemAccess",
      "propertyName": "_function",
      "property": "function requestMediaKeySystemAccess() {\n    [native code]\n}"
    },
    {
      "path": "window.Navigator.prototype.getGamepads",
      "propertyName": "_function",
      "property": "function getGamepads() {\n    [native code]\n}"
    },
    {
      "path": "window.Navigator",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.Navigator",
      "propertyName": "_function",
      "property": "function Navigator() {\n    [native code]\n}"
    },
    {
      "path": "window.Performance.prototype.navigation",
      "propertyName": "_accessException",
      "property": "TypeError: The Performance.navigation getter can only be used on instances of Performance"
    },
    {
      "path": "window.Performance.prototype.navigation",
      "propertyName": "_get",
      "property": "function navigation() {\n    [native code]\n}"
    },
    {
      "path": "window.Performance.prototype.navigation",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Performance.prototype.timing",
      "propertyName": "_accessException",
      "property": "TypeError: The Performance.timing getter can only be used on instances of Performance"
    },
    {
      "path": "window.Performance.prototype.timing",
      "propertyName": "_get",
      "property": "function timing() {\n    [native code]\n}"
    },
    {
      "path": "window.Performance.prototype.timing",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Performance.prototype.onresourcetimingbufferfull",
      "propertyName": "_accessException",
      "property": "TypeError: The Performance.onresourcetimingbufferfull getter can only be used on instances of Performance"
    },
    {
      "path": "window.Performance.prototype.onresourcetimingbufferfull",
      "propertyName": "_get",
      "property": "function onresourcetimingbufferfull() {\n    [native code]\n}"
    },
    {
      "path": "window.Performance.prototype.onresourcetimingbufferfull",
      "propertyName": "_set",
      "property": "function onresourcetimingbufferfull() {\n    [native code]\n}"
    },
    {
      "path": "window.Performance.prototype.onresourcetimingbufferfull",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Performance.prototype.onresourcetimingbufferfull",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Performance.prototype.now",
      "propertyName": "_function",
      "property": "function now() {\n    [native code]\n}"
    },
    {
      "path": "window.Performance.prototype.getEntries",
      "propertyName": "_function",
      "property": "function getEntries() {\n    [native code]\n}"
    },
    {
      "path": "window.Performance.prototype.getEntriesByType",
      "propertyName": "_function",
      "property": "function getEntriesByType() {\n    [native code]\n}"
    },
    {
      "path": "window.Performance.prototype.getEntriesByName",
      "propertyName": "_function",
      "property": "function getEntriesByName() {\n    [native code]\n}"
    },
    {
      "path": "window.Performance.prototype.clearResourceTimings",
      "propertyName": "_function",
      "property": "function clearResourceTimings() {\n    [native code]\n}"
    },
    {
      "path": "window.Performance.prototype.setResourceTimingBufferSize",
      "propertyName": "_function",
      "property": "function setResourceTimingBufferSize() {\n    [native code]\n}"
    },
    {
      "path": "window.Performance.prototype.mark",
      "propertyName": "_function",
      "property": "function mark() {\n    [native code]\n}"
    },
    {
      "path": "window.Performance.prototype.clearMarks",
      "propertyName": "_function",
      "property": "function clearMarks() {\n    [native code]\n}"
    },
    {
      "path": "window.Performance.prototype.measure",
      "propertyName": "_function",
      "property": "function measure() {\n    [native code]\n}"
    },
    {
      "path": "window.Performance.prototype.clearMeasures",
      "propertyName": "_function",
      "property": "function clearMeasures() {\n    [native code]\n}"
    },
    {
      "path": "window.Performance",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.Performance",
      "propertyName": "_function",
      "property": "function Performance() {\n    [native code]\n}"
    },
    {
      "path": "window.PerformanceNavigation.prototype.type",
      "propertyName": "_accessException",
      "property": "TypeError: The PerformanceNavigation.type getter can only be used on instances of PerformanceNavigation"
    },
    {
      "path": "window.PerformanceNavigation.prototype.type",
      "propertyName": "_get",
      "property": "function type() {\n    [native code]\n}"
    },
    {
      "path": "window.PerformanceNavigation.prototype.type",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.PerformanceNavigation.prototype.redirectCount",
      "propertyName": "_accessException",
      "property": "TypeError: The PerformanceNavigation.redirectCount getter can only be used on instances of PerformanceNavigation"
    },
    {
      "path": "window.PerformanceNavigation.prototype.redirectCount",
      "propertyName": "_get",
      "property": "function redirectCount() {\n    [native code]\n}"
    },
    {
      "path": "window.PerformanceNavigation.prototype.redirectCount",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.PerformanceNavigation",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.PerformanceNavigation",
      "propertyName": "_function",
      "property": "function PerformanceNavigation() {\n    [native code]\n}"
    },
    {
      "path": "window.PerformanceTiming.prototype.navigationStart",
      "propertyName": "_accessException",
      "property": "TypeError: The PerformanceTiming.navigationStart getter can only be used on instances of PerformanceTiming"
    },
    {
      "path": "window.PerformanceTiming.prototype.navigationStart",
      "propertyName": "_get",
      "property": "function navigationStart() {\n    [native code]\n}"
    },
    {
      "path": "window.PerformanceTiming.prototype.navigationStart",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.PerformanceTiming.prototype.unloadEventStart",
      "propertyName": "_accessException",
      "property": "TypeError: The PerformanceTiming.unloadEventStart getter can only be used on instances of PerformanceTiming"
    },
    {
      "path": "window.PerformanceTiming.prototype.unloadEventStart",
      "propertyName": "_get",
      "property": "function unloadEventStart() {\n    [native code]\n}"
    },
    {
      "path": "window.PerformanceTiming.prototype.unloadEventStart",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.PerformanceTiming.prototype.unloadEventEnd",
      "propertyName": "_accessException",
      "property": "TypeError: The PerformanceTiming.unloadEventEnd getter can only be used on instances of PerformanceTiming"
    },
    {
      "path": "window.PerformanceTiming.prototype.unloadEventEnd",
      "propertyName": "_get",
      "property": "function unloadEventEnd() {\n    [native code]\n}"
    },
    {
      "path": "window.PerformanceTiming.prototype.unloadEventEnd",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.PerformanceTiming.prototype.redirectStart",
      "propertyName": "_accessException",
      "property": "TypeError: The PerformanceTiming.redirectStart getter can only be used on instances of PerformanceTiming"
    },
    {
      "path": "window.PerformanceTiming.prototype.redirectStart",
      "propertyName": "_get",
      "property": "function redirectStart() {\n    [native code]\n}"
    },
    {
      "path": "window.PerformanceTiming.prototype.redirectStart",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.PerformanceTiming.prototype.redirectEnd",
      "propertyName": "_accessException",
      "property": "TypeError: The PerformanceTiming.redirectEnd getter can only be used on instances of PerformanceTiming"
    },
    {
      "path": "window.PerformanceTiming.prototype.redirectEnd",
      "propertyName": "_get",
      "property": "function redirectEnd() {\n    [native code]\n}"
    },
    {
      "path": "window.PerformanceTiming.prototype.redirectEnd",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.PerformanceTiming.prototype.fetchStart",
      "propertyName": "_accessException",
      "property": "TypeError: The PerformanceTiming.fetchStart getter can only be used on instances of PerformanceTiming"
    },
    {
      "path": "window.PerformanceTiming.prototype.fetchStart",
      "propertyName": "_get",
      "property": "function fetchStart() {\n    [native code]\n}"
    },
    {
      "path": "window.PerformanceTiming.prototype.fetchStart",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.PerformanceTiming.prototype.domainLookupStart",
      "propertyName": "_accessException",
      "property": "TypeError: The PerformanceTiming.domainLookupStart getter can only be used on instances of PerformanceTiming"
    },
    {
      "path": "window.PerformanceTiming.prototype.domainLookupStart",
      "propertyName": "_get",
      "property": "function domainLookupStart() {\n    [native code]\n}"
    },
    {
      "path": "window.PerformanceTiming.prototype.domainLookupStart",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.PerformanceTiming.prototype.domainLookupEnd",
      "propertyName": "_accessException",
      "property": "TypeError: The PerformanceTiming.domainLookupEnd getter can only be used on instances of PerformanceTiming"
    },
    {
      "path": "window.PerformanceTiming.prototype.domainLookupEnd",
      "propertyName": "_get",
      "property": "function domainLookupEnd() {\n    [native code]\n}"
    },
    {
      "path": "window.PerformanceTiming.prototype.domainLookupEnd",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.PerformanceTiming.prototype.connectStart",
      "propertyName": "_accessException",
      "property": "TypeError: The PerformanceTiming.connectStart getter can only be used on instances of PerformanceTiming"
    },
    {
      "path": "window.PerformanceTiming.prototype.connectStart",
      "propertyName": "_get",
      "property": "function connectStart() {\n    [native code]\n}"
    },
    {
      "path": "window.PerformanceTiming.prototype.connectStart",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.PerformanceTiming.prototype.connectEnd",
      "propertyName": "_accessException",
      "property": "TypeError: The PerformanceTiming.connectEnd getter can only be used on instances of PerformanceTiming"
    },
    {
      "path": "window.PerformanceTiming.prototype.connectEnd",
      "propertyName": "_get",
      "property": "function connectEnd() {\n    [native code]\n}"
    },
    {
      "path": "window.PerformanceTiming.prototype.connectEnd",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.PerformanceTiming.prototype.secureConnectionStart",
      "propertyName": "_accessException",
      "property": "TypeError: The PerformanceTiming.secureConnectionStart getter can only be used on instances of PerformanceTiming"
    },
    {
      "path": "window.PerformanceTiming.prototype.secureConnectionStart",
      "propertyName": "_get",
      "property": "function secureConnectionStart() {\n    [native code]\n}"
    },
    {
      "path": "window.PerformanceTiming.prototype.secureConnectionStart",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.PerformanceTiming.prototype.requestStart",
      "propertyName": "_accessException",
      "property": "TypeError: The PerformanceTiming.requestStart getter can only be used on instances of PerformanceTiming"
    },
    {
      "path": "window.PerformanceTiming.prototype.requestStart",
      "propertyName": "_get",
      "property": "function requestStart() {\n    [native code]\n}"
    },
    {
      "path": "window.PerformanceTiming.prototype.requestStart",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.PerformanceTiming.prototype.responseStart",
      "propertyName": "_accessException",
      "property": "TypeError: The PerformanceTiming.responseStart getter can only be used on instances of PerformanceTiming"
    },
    {
      "path": "window.PerformanceTiming.prototype.responseStart",
      "propertyName": "_get",
      "property": "function responseStart() {\n    [native code]\n}"
    },
    {
      "path": "window.PerformanceTiming.prototype.responseStart",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.PerformanceTiming.prototype.responseEnd",
      "propertyName": "_accessException",
      "property": "TypeError: The PerformanceTiming.responseEnd getter can only be used on instances of PerformanceTiming"
    },
    {
      "path": "window.PerformanceTiming.prototype.responseEnd",
      "propertyName": "_get",
      "property": "function responseEnd() {\n    [native code]\n}"
    },
    {
      "path": "window.PerformanceTiming.prototype.responseEnd",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.PerformanceTiming.prototype.domLoading",
      "propertyName": "_accessException",
      "property": "TypeError: The PerformanceTiming.domLoading getter can only be used on instances of PerformanceTiming"
    },
    {
      "path": "window.PerformanceTiming.prototype.domLoading",
      "propertyName": "_get",
      "property": "function domLoading() {\n    [native code]\n}"
    },
    {
      "path": "window.PerformanceTiming.prototype.domLoading",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.PerformanceTiming.prototype.domInteractive",
      "propertyName": "_accessException",
      "property": "TypeError: The PerformanceTiming.domInteractive getter can only be used on instances of PerformanceTiming"
    },
    {
      "path": "window.PerformanceTiming.prototype.domInteractive",
      "propertyName": "_get",
      "property": "function domInteractive() {\n    [native code]\n}"
    },
    {
      "path": "window.PerformanceTiming.prototype.domInteractive",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.PerformanceTiming.prototype.domContentLoadedEventStart",
      "propertyName": "_accessException",
      "property": "TypeError: The PerformanceTiming.domContentLoadedEventStart getter can only be used on instances of PerformanceTiming"
    },
    {
      "path": "window.PerformanceTiming.prototype.domContentLoadedEventStart",
      "propertyName": "_get",
      "property": "function domContentLoadedEventStart() {\n    [native code]\n}"
    },
    {
      "path": "window.PerformanceTiming.prototype.domContentLoadedEventStart",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.PerformanceTiming.prototype.domContentLoadedEventEnd",
      "propertyName": "_accessException",
      "property": "TypeError: The PerformanceTiming.domContentLoadedEventEnd getter can only be used on instances of PerformanceTiming"
    },
    {
      "path": "window.PerformanceTiming.prototype.domContentLoadedEventEnd",
      "propertyName": "_get",
      "property": "function domContentLoadedEventEnd() {\n    [native code]\n}"
    },
    {
      "path": "window.PerformanceTiming.prototype.domContentLoadedEventEnd",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.PerformanceTiming.prototype.domComplete",
      "propertyName": "_accessException",
      "property": "TypeError: The PerformanceTiming.domComplete getter can only be used on instances of PerformanceTiming"
    },
    {
      "path": "window.PerformanceTiming.prototype.domComplete",
      "propertyName": "_get",
      "property": "function domComplete() {\n    [native code]\n}"
    },
    {
      "path": "window.PerformanceTiming.prototype.domComplete",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.PerformanceTiming.prototype.loadEventStart",
      "propertyName": "_accessException",
      "property": "TypeError: The PerformanceTiming.loadEventStart getter can only be used on instances of PerformanceTiming"
    },
    {
      "path": "window.PerformanceTiming.prototype.loadEventStart",
      "propertyName": "_get",
      "property": "function loadEventStart() {\n    [native code]\n}"
    },
    {
      "path": "window.PerformanceTiming.prototype.loadEventStart",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.PerformanceTiming.prototype.loadEventEnd",
      "propertyName": "_accessException",
      "property": "TypeError: The PerformanceTiming.loadEventEnd getter can only be used on instances of PerformanceTiming"
    },
    {
      "path": "window.PerformanceTiming.prototype.loadEventEnd",
      "propertyName": "_get",
      "property": "function loadEventEnd() {\n    [native code]\n}"
    },
    {
      "path": "window.PerformanceTiming.prototype.loadEventEnd",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.PerformanceTiming.prototype.toJSON",
      "propertyName": "_function",
      "property": "function toJSON() {\n    [native code]\n}"
    },
    {
      "path": "window.PerformanceTiming",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.PerformanceTiming",
      "propertyName": "_function",
      "property": "function PerformanceTiming() {\n    [native code]\n}"
    },
    {
      "path": "window.Screen.prototype.height",
      "propertyName": "_accessException",
      "property": "TypeError: The Screen.height getter can only be used on instances of Screen"
    },
    {
      "path": "window.Screen.prototype.height",
      "propertyName": "_get",
      "property": "function height() {\n    [native code]\n}"
    },
    {
      "path": "window.Screen.prototype.height",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Screen.prototype.width",
      "propertyName": "_accessException",
      "property": "TypeError: The Screen.width getter can only be used on instances of Screen"
    },
    {
      "path": "window.Screen.prototype.width",
      "propertyName": "_get",
      "property": "function width() {\n    [native code]\n}"
    },
    {
      "path": "window.Screen.prototype.width",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Screen.prototype.colorDepth",
      "propertyName": "_accessException",
      "property": "TypeError: The Screen.colorDepth getter can only be used on instances of Screen"
    },
    {
      "path": "window.Screen.prototype.colorDepth",
      "propertyName": "_get",
      "property": "function colorDepth() {\n    [native code]\n}"
    },
    {
      "path": "window.Screen.prototype.colorDepth",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Screen.prototype.pixelDepth",
      "propertyName": "_accessException",
      "property": "TypeError: The Screen.pixelDepth getter can only be used on instances of Screen"
    },
    {
      "path": "window.Screen.prototype.pixelDepth",
      "propertyName": "_get",
      "property": "function pixelDepth() {\n    [native code]\n}"
    },
    {
      "path": "window.Screen.prototype.pixelDepth",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Screen.prototype.availLeft",
      "propertyName": "_accessException",
      "property": "TypeError: The Screen.availLeft getter can only be used on instances of Screen"
    },
    {
      "path": "window.Screen.prototype.availLeft",
      "propertyName": "_get",
      "property": "function availLeft() {\n    [native code]\n}"
    },
    {
      "path": "window.Screen.prototype.availLeft",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Screen.prototype.availTop",
      "propertyName": "_accessException",
      "property": "TypeError: The Screen.availTop getter can only be used on instances of Screen"
    },
    {
      "path": "window.Screen.prototype.availTop",
      "propertyName": "_get",
      "property": "function availTop() {\n    [native code]\n}"
    },
    {
      "path": "window.Screen.prototype.availTop",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Screen.prototype.availHeight",
      "propertyName": "_accessException",
      "property": "TypeError: The Screen.availHeight getter can only be used on instances of Screen"
    },
    {
      "path": "window.Screen.prototype.availHeight",
      "propertyName": "_get",
      "property": "function availHeight() {\n    [native code]\n}"
    },
    {
      "path": "window.Screen.prototype.availHeight",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Screen.prototype.availWidth",
      "propertyName": "_accessException",
      "property": "TypeError: The Screen.availWidth getter can only be used on instances of Screen"
    },
    {
      "path": "window.Screen.prototype.availWidth",
      "propertyName": "_get",
      "property": "function availWidth() {\n    [native code]\n}"
    },
    {
      "path": "window.Screen.prototype.availWidth",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Screen",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.Screen",
      "propertyName": "_function",
      "property": "function Screen() {\n    [native code]\n}"
    },
    {
      "path": "window.MimeType.prototype.type",
      "propertyName": "_accessException",
      "property": "TypeError: The MimeType.type getter can only be used on instances of MimeType"
    },
    {
      "path": "window.MimeType.prototype.type",
      "propertyName": "_get",
      "property": "function type() {\n    [native code]\n}"
    },
    {
      "path": "window.MimeType.prototype.type",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.MimeType.prototype.suffixes",
      "propertyName": "_accessException",
      "property": "TypeError: The MimeType.suffixes getter can only be used on instances of MimeType"
    },
    {
      "path": "window.MimeType.prototype.suffixes",
      "propertyName": "_get",
      "property": "function suffixes() {\n    [native code]\n}"
    },
    {
      "path": "window.MimeType.prototype.suffixes",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.MimeType.prototype.description",
      "propertyName": "_accessException",
      "property": "TypeError: The MimeType.description getter can only be used on instances of MimeType"
    },
    {
      "path": "window.MimeType.prototype.description",
      "propertyName": "_get",
      "property": "function description() {\n    [native code]\n}"
    },
    {
      "path": "window.MimeType.prototype.description",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.MimeType.prototype.enabledPlugin",
      "propertyName": "_accessException",
      "property": "TypeError: The MimeType.enabledPlugin getter can only be used on instances of MimeType"
    },
    {
      "path": "window.MimeType.prototype.enabledPlugin",
      "propertyName": "_get",
      "property": "function enabledPlugin() {\n    [native code]\n}"
    },
    {
      "path": "window.MimeType.prototype.enabledPlugin",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.MimeType",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.MimeType",
      "propertyName": "_function",
      "property": "function MimeType() {\n    [native code]\n}"
    },
    {
      "path": "window.MimeTypeArray.prototype.length",
      "propertyName": "_accessException",
      "property": "TypeError: The MimeTypeArray.length getter can only be used on instances of MimeTypeArray"
    },
    {
      "path": "window.MimeTypeArray.prototype.length",
      "propertyName": "_get",
      "property": "function length() {\n    [native code]\n}"
    },
    {
      "path": "window.MimeTypeArray.prototype.length",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.MimeTypeArray.prototype.item",
      "propertyName": "_function",
      "property": "function item() {\n    [native code]\n}"
    },
    {
      "path": "window.MimeTypeArray.prototype.namedItem",
      "propertyName": "_function",
      "property": "function namedItem() {\n    [native code]\n}"
    },
    {
      "path": "window.MimeTypeArray.prototype",
      "propertyName": "Symbol.iterator",
      "property": "REF: window.DOMStringList.prototype.Symbol(Symbol.iterator)"
    },
    {
      "path": "window.MimeTypeArray",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.MimeTypeArray",
      "propertyName": "_function",
      "property": "function MimeTypeArray() {\n    [native code]\n}"
    },
    {
      "path": "window.Plugin.prototype.name",
      "propertyName": "_accessException",
      "property": "TypeError: The Plugin.name getter can only be used on instances of Plugin"
    },
    {
      "path": "window.Plugin.prototype.name",
      "propertyName": "_get",
      "property": "function name() {\n    [native code]\n}"
    },
    {
      "path": "window.Plugin.prototype.name",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Plugin.prototype.filename",
      "propertyName": "_accessException",
      "property": "TypeError: The Plugin.filename getter can only be used on instances of Plugin"
    },
    {
      "path": "window.Plugin.prototype.filename",
      "propertyName": "_get",
      "property": "function filename() {\n    [native code]\n}"
    },
    {
      "path": "window.Plugin.prototype.filename",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Plugin.prototype.description",
      "propertyName": "_accessException",
      "property": "TypeError: The Plugin.description getter can only be used on instances of Plugin"
    },
    {
      "path": "window.Plugin.prototype.description",
      "propertyName": "_get",
      "property": "function description() {\n    [native code]\n}"
    },
    {
      "path": "window.Plugin.prototype.description",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Plugin.prototype.length",
      "propertyName": "_accessException",
      "property": "TypeError: The Plugin.length getter can only be used on instances of Plugin"
    },
    {
      "path": "window.Plugin.prototype.length",
      "propertyName": "_get",
      "property": "function length() {\n    [native code]\n}"
    },
    {
      "path": "window.Plugin.prototype.length",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Plugin.prototype.item",
      "propertyName": "_function",
      "property": "function item() {\n    [native code]\n}"
    },
    {
      "path": "window.Plugin.prototype.namedItem",
      "propertyName": "_function",
      "property": "function namedItem() {\n    [native code]\n}"
    },
    {
      "path": "window.Plugin.prototype",
      "propertyName": "Symbol.iterator",
      "property": "REF: window.DOMStringList.prototype.Symbol(Symbol.iterator)"
    },
    {
      "path": "window.Plugin",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.Plugin",
      "propertyName": "_function",
      "property": "function Plugin() {\n    [native code]\n}"
    },
    {
      "path": "window.PluginArray.prototype.length",
      "propertyName": "_accessException",
      "property": "TypeError: The PluginArray.length getter can only be used on instances of PluginArray"
    },
    {
      "path": "window.PluginArray.prototype.length",
      "propertyName": "_get",
      "property": "function length() {\n    [native code]\n}"
    },
    {
      "path": "window.PluginArray.prototype.length",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.PluginArray.prototype.item",
      "propertyName": "_function",
      "property": "function item() {\n    [native code]\n}"
    },
    {
      "path": "window.PluginArray.prototype.namedItem",
      "propertyName": "_function",
      "property": "function namedItem() {\n    [native code]\n}"
    },
    {
      "path": "window.PluginArray.prototype.refresh",
      "propertyName": "_function",
      "property": "function refresh() {\n    [native code]\n}"
    },
    {
      "path": "window.PluginArray.prototype",
      "propertyName": "Symbol.iterator",
      "property": "REF: window.DOMStringList.prototype.Symbol(Symbol.iterator)"
    },
    {
      "path": "window.PluginArray",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.PluginArray",
      "propertyName": "_function",
      "property": "function PluginArray() {\n    [native code]\n}"
    },
    {
      "path": "window.Storage.prototype.length",
      "propertyName": "_accessException",
      "property": "TypeError: The Storage.length getter can only be used on instances of Storage"
    },
    {
      "path": "window.Storage.prototype.length",
      "propertyName": "_get",
      "property": "function length() {\n    [native code]\n}"
    },
    {
      "path": "window.Storage.prototype.length",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Storage.prototype.key",
      "propertyName": "_function",
      "property": "function key() {\n    [native code]\n}"
    },
    {
      "path": "window.Storage.prototype.getItem",
      "propertyName": "_function",
      "property": "function getItem() {\n    [native code]\n}"
    },
    {
      "path": "window.Storage.prototype.setItem",
      "propertyName": "_function",
      "property": "function setItem() {\n    [native code]\n}"
    },
    {
      "path": "window.Storage.prototype.removeItem",
      "propertyName": "_function",
      "property": "function removeItem() {\n    [native code]\n}"
    },
    {
      "path": "window.Storage.prototype.clear",
      "propertyName": "_function",
      "property": "function clear() {\n    [native code]\n}"
    },
    {
      "path": "window.Storage",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.Storage",
      "propertyName": "_function",
      "property": "function Storage() {\n    [native code]\n}"
    },
    {
      "path": "window.StorageEvent.prototype.key",
      "propertyName": "_accessException",
      "property": "TypeError: The StorageEvent.key getter can only be used on instances of StorageEvent"
    },
    {
      "path": "window.StorageEvent.prototype.key",
      "propertyName": "_get",
      "property": "function key() {\n    [native code]\n}"
    },
    {
      "path": "window.StorageEvent.prototype.key",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.StorageEvent.prototype.oldValue",
      "propertyName": "_accessException",
      "property": "TypeError: The StorageEvent.oldValue getter can only be used on instances of StorageEvent"
    },
    {
      "path": "window.StorageEvent.prototype.oldValue",
      "propertyName": "_get",
      "property": "function oldValue() {\n    [native code]\n}"
    },
    {
      "path": "window.StorageEvent.prototype.oldValue",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.StorageEvent.prototype.newValue",
      "propertyName": "_accessException",
      "property": "TypeError: The StorageEvent.newValue getter can only be used on instances of StorageEvent"
    },
    {
      "path": "window.StorageEvent.prototype.newValue",
      "propertyName": "_get",
      "property": "function newValue() {\n    [native code]\n}"
    },
    {
      "path": "window.StorageEvent.prototype.newValue",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.StorageEvent.prototype.url",
      "propertyName": "_accessException",
      "property": "TypeError: The StorageEvent.url getter can only be used on instances of StorageEvent"
    },
    {
      "path": "window.StorageEvent.prototype.url",
      "propertyName": "_get",
      "property": "function url() {\n    [native code]\n}"
    },
    {
      "path": "window.StorageEvent.prototype.url",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.StorageEvent.prototype.storageArea",
      "propertyName": "_accessException",
      "property": "TypeError: The StorageEvent.storageArea getter can only be used on instances of StorageEvent"
    },
    {
      "path": "window.StorageEvent.prototype.storageArea",
      "propertyName": "_get",
      "property": "function storageArea() {\n    [native code]\n}"
    },
    {
      "path": "window.StorageEvent.prototype.storageArea",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.StorageEvent.prototype.initStorageEvent",
      "propertyName": "_function",
      "property": "function initStorageEvent() {\n    [native code]\n}"
    },
    {
      "path": "window.StorageEvent",
      "propertyName": "new()",
      "property": "TypeError: Not enough arguments"
    },
    {
      "path": "window.StorageEvent",
      "propertyName": "_function",
      "property": "function StorageEvent() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGAElement.prototype.target",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGAElement.target getter can only be used on instances of SVGAElement"
    },
    {
      "path": "window.SVGAElement.prototype.target",
      "propertyName": "_get",
      "property": "function target() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGAElement.prototype.target",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGAElement.prototype.href",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGAElement.href getter can only be used on instances of SVGAElement"
    },
    {
      "path": "window.SVGAElement.prototype.href",
      "propertyName": "_get",
      "property": "function href() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGAElement.prototype.href",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGAElement",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.SVGAElement",
      "propertyName": "_function",
      "property": "function SVGAElement() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGAngle.prototype.unitType",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGAngle.unitType getter can only be used on instances of SVGAngle"
    },
    {
      "path": "window.SVGAngle.prototype.unitType",
      "propertyName": "_get",
      "property": "function unitType() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGAngle.prototype.unitType",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGAngle.prototype.value",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGAngle.value getter can only be used on instances of SVGAngle"
    },
    {
      "path": "window.SVGAngle.prototype.value",
      "propertyName": "_get",
      "property": "function value() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGAngle.prototype.value",
      "propertyName": "_set",
      "property": "function value() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGAngle.prototype.value",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGAngle.prototype.value",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGAngle.prototype.valueInSpecifiedUnits",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGAngle.valueInSpecifiedUnits getter can only be used on instances of SVGAngle"
    },
    {
      "path": "window.SVGAngle.prototype.valueInSpecifiedUnits",
      "propertyName": "_get",
      "property": "function valueInSpecifiedUnits() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGAngle.prototype.valueInSpecifiedUnits",
      "propertyName": "_set",
      "property": "function valueInSpecifiedUnits() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGAngle.prototype.valueInSpecifiedUnits",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGAngle.prototype.valueInSpecifiedUnits",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGAngle.prototype.valueAsString",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGAngle.valueAsString getter can only be used on instances of SVGAngle"
    },
    {
      "path": "window.SVGAngle.prototype.valueAsString",
      "propertyName": "_get",
      "property": "function valueAsString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGAngle.prototype.valueAsString",
      "propertyName": "_set",
      "property": "function valueAsString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGAngle.prototype.valueAsString",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGAngle.prototype.valueAsString",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGAngle.prototype.newValueSpecifiedUnits",
      "propertyName": "_function",
      "property": "function newValueSpecifiedUnits() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGAngle.prototype.convertToSpecifiedUnits",
      "propertyName": "_function",
      "property": "function convertToSpecifiedUnits() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGAngle",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.SVGAngle",
      "propertyName": "_function",
      "property": "function SVGAngle() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGAnimateElement",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.SVGAnimateElement",
      "propertyName": "_function",
      "property": "function SVGAnimateElement() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGAnimateMotionElement",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.SVGAnimateMotionElement",
      "propertyName": "_function",
      "property": "function SVGAnimateMotionElement() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGAnimateTransformElement",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.SVGAnimateTransformElement",
      "propertyName": "_function",
      "property": "function SVGAnimateTransformElement() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGAnimatedAngle.prototype.baseVal",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGAnimatedAngle.baseVal getter can only be used on instances of SVGAnimatedAngle"
    },
    {
      "path": "window.SVGAnimatedAngle.prototype.baseVal",
      "propertyName": "_get",
      "property": "function baseVal() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGAnimatedAngle.prototype.baseVal",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGAnimatedAngle.prototype.animVal",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGAnimatedAngle.animVal getter can only be used on instances of SVGAnimatedAngle"
    },
    {
      "path": "window.SVGAnimatedAngle.prototype.animVal",
      "propertyName": "_get",
      "property": "function animVal() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGAnimatedAngle.prototype.animVal",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGAnimatedAngle",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.SVGAnimatedAngle",
      "propertyName": "_function",
      "property": "function SVGAnimatedAngle() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGAnimatedBoolean.prototype.baseVal",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGAnimatedBoolean.baseVal getter can only be used on instances of SVGAnimatedBoolean"
    },
    {
      "path": "window.SVGAnimatedBoolean.prototype.baseVal",
      "propertyName": "_get",
      "property": "function baseVal() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGAnimatedBoolean.prototype.baseVal",
      "propertyName": "_set",
      "property": "function baseVal() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGAnimatedBoolean.prototype.baseVal",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGAnimatedBoolean.prototype.baseVal",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGAnimatedBoolean.prototype.animVal",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGAnimatedBoolean.animVal getter can only be used on instances of SVGAnimatedBoolean"
    },
    {
      "path": "window.SVGAnimatedBoolean.prototype.animVal",
      "propertyName": "_get",
      "property": "function animVal() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGAnimatedBoolean.prototype.animVal",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGAnimatedBoolean",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.SVGAnimatedBoolean",
      "propertyName": "_function",
      "property": "function SVGAnimatedBoolean() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGAnimatedEnumeration.prototype.baseVal",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGAnimatedEnumeration.baseVal getter can only be used on instances of SVGAnimatedEnumeration"
    },
    {
      "path": "window.SVGAnimatedEnumeration.prototype.baseVal",
      "propertyName": "_get",
      "property": "function baseVal() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGAnimatedEnumeration.prototype.baseVal",
      "propertyName": "_set",
      "property": "function baseVal() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGAnimatedEnumeration.prototype.baseVal",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGAnimatedEnumeration.prototype.baseVal",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGAnimatedEnumeration.prototype.animVal",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGAnimatedEnumeration.animVal getter can only be used on instances of SVGAnimatedEnumeration"
    },
    {
      "path": "window.SVGAnimatedEnumeration.prototype.animVal",
      "propertyName": "_get",
      "property": "function animVal() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGAnimatedEnumeration.prototype.animVal",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGAnimatedEnumeration",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.SVGAnimatedEnumeration",
      "propertyName": "_function",
      "property": "function SVGAnimatedEnumeration() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGAnimatedInteger.prototype.baseVal",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGAnimatedInteger.baseVal getter can only be used on instances of SVGAnimatedInteger"
    },
    {
      "path": "window.SVGAnimatedInteger.prototype.baseVal",
      "propertyName": "_get",
      "property": "function baseVal() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGAnimatedInteger.prototype.baseVal",
      "propertyName": "_set",
      "property": "function baseVal() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGAnimatedInteger.prototype.baseVal",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGAnimatedInteger.prototype.baseVal",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGAnimatedInteger.prototype.animVal",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGAnimatedInteger.animVal getter can only be used on instances of SVGAnimatedInteger"
    },
    {
      "path": "window.SVGAnimatedInteger.prototype.animVal",
      "propertyName": "_get",
      "property": "function animVal() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGAnimatedInteger.prototype.animVal",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGAnimatedInteger",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.SVGAnimatedInteger",
      "propertyName": "_function",
      "property": "function SVGAnimatedInteger() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGAnimatedLength.prototype.baseVal",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGAnimatedLength.baseVal getter can only be used on instances of SVGAnimatedLength"
    },
    {
      "path": "window.SVGAnimatedLength.prototype.baseVal",
      "propertyName": "_get",
      "property": "function baseVal() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGAnimatedLength.prototype.baseVal",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGAnimatedLength.prototype.animVal",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGAnimatedLength.animVal getter can only be used on instances of SVGAnimatedLength"
    },
    {
      "path": "window.SVGAnimatedLength.prototype.animVal",
      "propertyName": "_get",
      "property": "function animVal() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGAnimatedLength.prototype.animVal",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGAnimatedLength",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.SVGAnimatedLength",
      "propertyName": "_function",
      "property": "function SVGAnimatedLength() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGAnimatedLengthList.prototype.baseVal",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGAnimatedLengthList.baseVal getter can only be used on instances of SVGAnimatedLengthList"
    },
    {
      "path": "window.SVGAnimatedLengthList.prototype.baseVal",
      "propertyName": "_get",
      "property": "function baseVal() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGAnimatedLengthList.prototype.baseVal",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGAnimatedLengthList.prototype.animVal",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGAnimatedLengthList.animVal getter can only be used on instances of SVGAnimatedLengthList"
    },
    {
      "path": "window.SVGAnimatedLengthList.prototype.animVal",
      "propertyName": "_get",
      "property": "function animVal() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGAnimatedLengthList.prototype.animVal",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGAnimatedLengthList",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.SVGAnimatedLengthList",
      "propertyName": "_function",
      "property": "function SVGAnimatedLengthList() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGAnimatedNumber.prototype.baseVal",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGAnimatedNumber.baseVal getter can only be used on instances of SVGAnimatedNumber"
    },
    {
      "path": "window.SVGAnimatedNumber.prototype.baseVal",
      "propertyName": "_get",
      "property": "function baseVal() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGAnimatedNumber.prototype.baseVal",
      "propertyName": "_set",
      "property": "function baseVal() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGAnimatedNumber.prototype.baseVal",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGAnimatedNumber.prototype.baseVal",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGAnimatedNumber.prototype.animVal",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGAnimatedNumber.animVal getter can only be used on instances of SVGAnimatedNumber"
    },
    {
      "path": "window.SVGAnimatedNumber.prototype.animVal",
      "propertyName": "_get",
      "property": "function animVal() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGAnimatedNumber.prototype.animVal",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGAnimatedNumber",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.SVGAnimatedNumber",
      "propertyName": "_function",
      "property": "function SVGAnimatedNumber() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGAnimatedNumberList.prototype.baseVal",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGAnimatedNumberList.baseVal getter can only be used on instances of SVGAnimatedNumberList"
    },
    {
      "path": "window.SVGAnimatedNumberList.prototype.baseVal",
      "propertyName": "_get",
      "property": "function baseVal() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGAnimatedNumberList.prototype.baseVal",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGAnimatedNumberList.prototype.animVal",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGAnimatedNumberList.animVal getter can only be used on instances of SVGAnimatedNumberList"
    },
    {
      "path": "window.SVGAnimatedNumberList.prototype.animVal",
      "propertyName": "_get",
      "property": "function animVal() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGAnimatedNumberList.prototype.animVal",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGAnimatedNumberList",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.SVGAnimatedNumberList",
      "propertyName": "_function",
      "property": "function SVGAnimatedNumberList() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGAnimatedPreserveAspectRatio.prototype.baseVal",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGAnimatedPreserveAspectRatio.baseVal getter can only be used on instances of SVGAnimatedPreserveAspectRatio"
    },
    {
      "path": "window.SVGAnimatedPreserveAspectRatio.prototype.baseVal",
      "propertyName": "_get",
      "property": "function baseVal() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGAnimatedPreserveAspectRatio.prototype.baseVal",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGAnimatedPreserveAspectRatio.prototype.animVal",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGAnimatedPreserveAspectRatio.animVal getter can only be used on instances of SVGAnimatedPreserveAspectRatio"
    },
    {
      "path": "window.SVGAnimatedPreserveAspectRatio.prototype.animVal",
      "propertyName": "_get",
      "property": "function animVal() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGAnimatedPreserveAspectRatio.prototype.animVal",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGAnimatedPreserveAspectRatio",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.SVGAnimatedPreserveAspectRatio",
      "propertyName": "_function",
      "property": "function SVGAnimatedPreserveAspectRatio() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGAnimatedRect.prototype.baseVal",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGAnimatedRect.baseVal getter can only be used on instances of SVGAnimatedRect"
    },
    {
      "path": "window.SVGAnimatedRect.prototype.baseVal",
      "propertyName": "_get",
      "property": "function baseVal() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGAnimatedRect.prototype.baseVal",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGAnimatedRect.prototype.animVal",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGAnimatedRect.animVal getter can only be used on instances of SVGAnimatedRect"
    },
    {
      "path": "window.SVGAnimatedRect.prototype.animVal",
      "propertyName": "_get",
      "property": "function animVal() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGAnimatedRect.prototype.animVal",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGAnimatedRect",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.SVGAnimatedRect",
      "propertyName": "_function",
      "property": "function SVGAnimatedRect() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGAnimatedString.prototype.baseVal",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGAnimatedString.baseVal getter can only be used on instances of SVGAnimatedString"
    },
    {
      "path": "window.SVGAnimatedString.prototype.baseVal",
      "propertyName": "_get",
      "property": "function baseVal() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGAnimatedString.prototype.baseVal",
      "propertyName": "_set",
      "property": "function baseVal() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGAnimatedString.prototype.baseVal",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGAnimatedString.prototype.baseVal",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGAnimatedString.prototype.animVal",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGAnimatedString.animVal getter can only be used on instances of SVGAnimatedString"
    },
    {
      "path": "window.SVGAnimatedString.prototype.animVal",
      "propertyName": "_get",
      "property": "function animVal() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGAnimatedString.prototype.animVal",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGAnimatedString",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.SVGAnimatedString",
      "propertyName": "_function",
      "property": "function SVGAnimatedString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGAnimatedTransformList.prototype.baseVal",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGAnimatedTransformList.baseVal getter can only be used on instances of SVGAnimatedTransformList"
    },
    {
      "path": "window.SVGAnimatedTransformList.prototype.baseVal",
      "propertyName": "_get",
      "property": "function baseVal() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGAnimatedTransformList.prototype.baseVal",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGAnimatedTransformList.prototype.animVal",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGAnimatedTransformList.animVal getter can only be used on instances of SVGAnimatedTransformList"
    },
    {
      "path": "window.SVGAnimatedTransformList.prototype.animVal",
      "propertyName": "_get",
      "property": "function animVal() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGAnimatedTransformList.prototype.animVal",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGAnimatedTransformList",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.SVGAnimatedTransformList",
      "propertyName": "_function",
      "property": "function SVGAnimatedTransformList() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGAnimationElement.prototype.targetElement",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGAnimationElement.targetElement getter can only be used on instances of SVGAnimationElement"
    },
    {
      "path": "window.SVGAnimationElement.prototype.targetElement",
      "propertyName": "_get",
      "property": "function targetElement() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGAnimationElement.prototype.targetElement",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGAnimationElement.prototype.requiredExtensions",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGAnimationElement.requiredExtensions getter can only be used on instances of SVGAnimationElement"
    },
    {
      "path": "window.SVGAnimationElement.prototype.requiredExtensions",
      "propertyName": "_get",
      "property": "function requiredExtensions() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGAnimationElement.prototype.requiredExtensions",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGAnimationElement.prototype.systemLanguage",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGAnimationElement.systemLanguage getter can only be used on instances of SVGAnimationElement"
    },
    {
      "path": "window.SVGAnimationElement.prototype.systemLanguage",
      "propertyName": "_get",
      "property": "function systemLanguage() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGAnimationElement.prototype.systemLanguage",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGAnimationElement.prototype.getStartTime",
      "propertyName": "_function",
      "property": "function getStartTime() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGAnimationElement.prototype.getCurrentTime",
      "propertyName": "_function",
      "property": "function getCurrentTime() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGAnimationElement.prototype.getSimpleDuration",
      "propertyName": "_function",
      "property": "function getSimpleDuration() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGAnimationElement.prototype.beginElement",
      "propertyName": "_function",
      "property": "function beginElement() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGAnimationElement.prototype.beginElementAt",
      "propertyName": "_function",
      "property": "function beginElementAt() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGAnimationElement.prototype.endElement",
      "propertyName": "_function",
      "property": "function endElement() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGAnimationElement.prototype.endElementAt",
      "propertyName": "_function",
      "property": "function endElementAt() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGAnimationElement",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.SVGAnimationElement",
      "propertyName": "_function",
      "property": "function SVGAnimationElement() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGCircleElement.prototype.cx",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGCircleElement.cx getter can only be used on instances of SVGCircleElement"
    },
    {
      "path": "window.SVGCircleElement.prototype.cx",
      "propertyName": "_get",
      "property": "function cx() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGCircleElement.prototype.cx",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGCircleElement.prototype.cy",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGCircleElement.cy getter can only be used on instances of SVGCircleElement"
    },
    {
      "path": "window.SVGCircleElement.prototype.cy",
      "propertyName": "_get",
      "property": "function cy() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGCircleElement.prototype.cy",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGCircleElement.prototype.r",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGCircleElement.r getter can only be used on instances of SVGCircleElement"
    },
    {
      "path": "window.SVGCircleElement.prototype.r",
      "propertyName": "_get",
      "property": "function r() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGCircleElement.prototype.r",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGCircleElement",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.SVGCircleElement",
      "propertyName": "_function",
      "property": "function SVGCircleElement() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGClipPathElement.prototype.clipPathUnits",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGClipPathElement.clipPathUnits getter can only be used on instances of SVGClipPathElement"
    },
    {
      "path": "window.SVGClipPathElement.prototype.clipPathUnits",
      "propertyName": "_get",
      "property": "function clipPathUnits() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGClipPathElement.prototype.clipPathUnits",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGClipPathElement",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.SVGClipPathElement",
      "propertyName": "_function",
      "property": "function SVGClipPathElement() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGComponentTransferFunctionElement.prototype.type",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGComponentTransferFunctionElement.type getter can only be used on instances of SVGComponentTransferFunctionElement"
    },
    {
      "path": "window.SVGComponentTransferFunctionElement.prototype.type",
      "propertyName": "_get",
      "property": "function type() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGComponentTransferFunctionElement.prototype.type",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGComponentTransferFunctionElement.prototype.tableValues",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGComponentTransferFunctionElement.tableValues getter can only be used on instances of SVGComponentTransferFunctionElement"
    },
    {
      "path": "window.SVGComponentTransferFunctionElement.prototype.tableValues",
      "propertyName": "_get",
      "property": "function tableValues() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGComponentTransferFunctionElement.prototype.tableValues",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGComponentTransferFunctionElement.prototype.slope",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGComponentTransferFunctionElement.slope getter can only be used on instances of SVGComponentTransferFunctionElement"
    },
    {
      "path": "window.SVGComponentTransferFunctionElement.prototype.slope",
      "propertyName": "_get",
      "property": "function slope() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGComponentTransferFunctionElement.prototype.slope",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGComponentTransferFunctionElement.prototype.intercept",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGComponentTransferFunctionElement.intercept getter can only be used on instances of SVGComponentTransferFunctionElement"
    },
    {
      "path": "window.SVGComponentTransferFunctionElement.prototype.intercept",
      "propertyName": "_get",
      "property": "function intercept() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGComponentTransferFunctionElement.prototype.intercept",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGComponentTransferFunctionElement.prototype.amplitude",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGComponentTransferFunctionElement.amplitude getter can only be used on instances of SVGComponentTransferFunctionElement"
    },
    {
      "path": "window.SVGComponentTransferFunctionElement.prototype.amplitude",
      "propertyName": "_get",
      "property": "function amplitude() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGComponentTransferFunctionElement.prototype.amplitude",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGComponentTransferFunctionElement.prototype.exponent",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGComponentTransferFunctionElement.exponent getter can only be used on instances of SVGComponentTransferFunctionElement"
    },
    {
      "path": "window.SVGComponentTransferFunctionElement.prototype.exponent",
      "propertyName": "_get",
      "property": "function exponent() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGComponentTransferFunctionElement.prototype.exponent",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGComponentTransferFunctionElement.prototype.offset",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGComponentTransferFunctionElement.offset getter can only be used on instances of SVGComponentTransferFunctionElement"
    },
    {
      "path": "window.SVGComponentTransferFunctionElement.prototype.offset",
      "propertyName": "_get",
      "property": "function offset() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGComponentTransferFunctionElement.prototype.offset",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGComponentTransferFunctionElement",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.SVGComponentTransferFunctionElement",
      "propertyName": "_function",
      "property": "function SVGComponentTransferFunctionElement() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGDefsElement",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.SVGDefsElement",
      "propertyName": "_function",
      "property": "function SVGDefsElement() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGDescElement",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.SVGDescElement",
      "propertyName": "_function",
      "property": "function SVGDescElement() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.ownerSVGElement",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGElement.ownerSVGElement getter can only be used on instances of SVGElement"
    },
    {
      "path": "window.SVGElement.prototype.ownerSVGElement",
      "propertyName": "_get",
      "property": "function ownerSVGElement() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.ownerSVGElement",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.viewportElement",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGElement.viewportElement getter can only be used on instances of SVGElement"
    },
    {
      "path": "window.SVGElement.prototype.viewportElement",
      "propertyName": "_get",
      "property": "function viewportElement() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.viewportElement",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.className",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGElement.className getter can only be used on instances of SVGElement"
    },
    {
      "path": "window.SVGElement.prototype.className",
      "propertyName": "_get",
      "property": "function className() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.className",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.tabIndex",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGElement.tabIndex getter can only be used on instances of SVGElement"
    },
    {
      "path": "window.SVGElement.prototype.tabIndex",
      "propertyName": "_get",
      "property": "function tabIndex() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.tabIndex",
      "propertyName": "_set",
      "property": "function tabIndex() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.tabIndex",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.tabIndex",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.dataset",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGElement.dataset getter can only be used on instances of SVGElement"
    },
    {
      "path": "window.SVGElement.prototype.dataset",
      "propertyName": "_get",
      "property": "function dataset() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.dataset",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.style",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGElement.style getter can only be used on instances of SVGElement"
    },
    {
      "path": "window.SVGElement.prototype.style",
      "propertyName": "_get",
      "property": "function style() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.style",
      "propertyName": "_set",
      "property": "function style() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.style",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.style",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onabort",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGElement.onabort getter can only be used on instances of SVGElement"
    },
    {
      "path": "window.SVGElement.prototype.onabort",
      "propertyName": "_get",
      "property": "function onabort() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onabort",
      "propertyName": "_set",
      "property": "function onabort() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onabort",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onabort",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onblur",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGElement.onblur getter can only be used on instances of SVGElement"
    },
    {
      "path": "window.SVGElement.prototype.onblur",
      "propertyName": "_get",
      "property": "function onblur() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onblur",
      "propertyName": "_set",
      "property": "function onblur() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onblur",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onblur",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.oncanplay",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGElement.oncanplay getter can only be used on instances of SVGElement"
    },
    {
      "path": "window.SVGElement.prototype.oncanplay",
      "propertyName": "_get",
      "property": "function oncanplay() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.oncanplay",
      "propertyName": "_set",
      "property": "function oncanplay() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.oncanplay",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.oncanplay",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.oncanplaythrough",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGElement.oncanplaythrough getter can only be used on instances of SVGElement"
    },
    {
      "path": "window.SVGElement.prototype.oncanplaythrough",
      "propertyName": "_get",
      "property": "function oncanplaythrough() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.oncanplaythrough",
      "propertyName": "_set",
      "property": "function oncanplaythrough() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.oncanplaythrough",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.oncanplaythrough",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onchange",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGElement.onchange getter can only be used on instances of SVGElement"
    },
    {
      "path": "window.SVGElement.prototype.onchange",
      "propertyName": "_get",
      "property": "function onchange() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onchange",
      "propertyName": "_set",
      "property": "function onchange() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onchange",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onchange",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onclick",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGElement.onclick getter can only be used on instances of SVGElement"
    },
    {
      "path": "window.SVGElement.prototype.onclick",
      "propertyName": "_get",
      "property": "function onclick() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onclick",
      "propertyName": "_set",
      "property": "function onclick() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onclick",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onclick",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.oncontextmenu",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGElement.oncontextmenu getter can only be used on instances of SVGElement"
    },
    {
      "path": "window.SVGElement.prototype.oncontextmenu",
      "propertyName": "_get",
      "property": "function oncontextmenu() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.oncontextmenu",
      "propertyName": "_set",
      "property": "function oncontextmenu() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.oncontextmenu",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.oncontextmenu",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.oncuechange",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGElement.oncuechange getter can only be used on instances of SVGElement"
    },
    {
      "path": "window.SVGElement.prototype.oncuechange",
      "propertyName": "_get",
      "property": "function oncuechange() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.oncuechange",
      "propertyName": "_set",
      "property": "function oncuechange() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.oncuechange",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.oncuechange",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.ondblclick",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGElement.ondblclick getter can only be used on instances of SVGElement"
    },
    {
      "path": "window.SVGElement.prototype.ondblclick",
      "propertyName": "_get",
      "property": "function ondblclick() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.ondblclick",
      "propertyName": "_set",
      "property": "function ondblclick() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.ondblclick",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.ondblclick",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.ondrag",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGElement.ondrag getter can only be used on instances of SVGElement"
    },
    {
      "path": "window.SVGElement.prototype.ondrag",
      "propertyName": "_get",
      "property": "function ondrag() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.ondrag",
      "propertyName": "_set",
      "property": "function ondrag() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.ondrag",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.ondrag",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.ondragend",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGElement.ondragend getter can only be used on instances of SVGElement"
    },
    {
      "path": "window.SVGElement.prototype.ondragend",
      "propertyName": "_get",
      "property": "function ondragend() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.ondragend",
      "propertyName": "_set",
      "property": "function ondragend() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.ondragend",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.ondragend",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.ondragenter",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGElement.ondragenter getter can only be used on instances of SVGElement"
    },
    {
      "path": "window.SVGElement.prototype.ondragenter",
      "propertyName": "_get",
      "property": "function ondragenter() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.ondragenter",
      "propertyName": "_set",
      "property": "function ondragenter() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.ondragenter",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.ondragenter",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.ondragleave",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGElement.ondragleave getter can only be used on instances of SVGElement"
    },
    {
      "path": "window.SVGElement.prototype.ondragleave",
      "propertyName": "_get",
      "property": "function ondragleave() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.ondragleave",
      "propertyName": "_set",
      "property": "function ondragleave() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.ondragleave",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.ondragleave",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.ondragover",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGElement.ondragover getter can only be used on instances of SVGElement"
    },
    {
      "path": "window.SVGElement.prototype.ondragover",
      "propertyName": "_get",
      "property": "function ondragover() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.ondragover",
      "propertyName": "_set",
      "property": "function ondragover() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.ondragover",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.ondragover",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.ondragstart",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGElement.ondragstart getter can only be used on instances of SVGElement"
    },
    {
      "path": "window.SVGElement.prototype.ondragstart",
      "propertyName": "_get",
      "property": "function ondragstart() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.ondragstart",
      "propertyName": "_set",
      "property": "function ondragstart() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.ondragstart",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.ondragstart",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.ondrop",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGElement.ondrop getter can only be used on instances of SVGElement"
    },
    {
      "path": "window.SVGElement.prototype.ondrop",
      "propertyName": "_get",
      "property": "function ondrop() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.ondrop",
      "propertyName": "_set",
      "property": "function ondrop() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.ondrop",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.ondrop",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.ondurationchange",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGElement.ondurationchange getter can only be used on instances of SVGElement"
    },
    {
      "path": "window.SVGElement.prototype.ondurationchange",
      "propertyName": "_get",
      "property": "function ondurationchange() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.ondurationchange",
      "propertyName": "_set",
      "property": "function ondurationchange() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.ondurationchange",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.ondurationchange",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onemptied",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGElement.onemptied getter can only be used on instances of SVGElement"
    },
    {
      "path": "window.SVGElement.prototype.onemptied",
      "propertyName": "_get",
      "property": "function onemptied() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onemptied",
      "propertyName": "_set",
      "property": "function onemptied() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onemptied",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onemptied",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onended",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGElement.onended getter can only be used on instances of SVGElement"
    },
    {
      "path": "window.SVGElement.prototype.onended",
      "propertyName": "_get",
      "property": "function onended() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onended",
      "propertyName": "_set",
      "property": "function onended() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onended",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onended",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onerror",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGElement.onerror getter can only be used on instances of SVGElement"
    },
    {
      "path": "window.SVGElement.prototype.onerror",
      "propertyName": "_get",
      "property": "function onerror() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onerror",
      "propertyName": "_set",
      "property": "function onerror() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onerror",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onerror",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onfocus",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGElement.onfocus getter can only be used on instances of SVGElement"
    },
    {
      "path": "window.SVGElement.prototype.onfocus",
      "propertyName": "_get",
      "property": "function onfocus() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onfocus",
      "propertyName": "_set",
      "property": "function onfocus() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onfocus",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onfocus",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.oninput",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGElement.oninput getter can only be used on instances of SVGElement"
    },
    {
      "path": "window.SVGElement.prototype.oninput",
      "propertyName": "_get",
      "property": "function oninput() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.oninput",
      "propertyName": "_set",
      "property": "function oninput() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.oninput",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.oninput",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.oninvalid",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGElement.oninvalid getter can only be used on instances of SVGElement"
    },
    {
      "path": "window.SVGElement.prototype.oninvalid",
      "propertyName": "_get",
      "property": "function oninvalid() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.oninvalid",
      "propertyName": "_set",
      "property": "function oninvalid() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.oninvalid",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.oninvalid",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onkeydown",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGElement.onkeydown getter can only be used on instances of SVGElement"
    },
    {
      "path": "window.SVGElement.prototype.onkeydown",
      "propertyName": "_get",
      "property": "function onkeydown() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onkeydown",
      "propertyName": "_set",
      "property": "function onkeydown() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onkeydown",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onkeydown",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onkeypress",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGElement.onkeypress getter can only be used on instances of SVGElement"
    },
    {
      "path": "window.SVGElement.prototype.onkeypress",
      "propertyName": "_get",
      "property": "function onkeypress() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onkeypress",
      "propertyName": "_set",
      "property": "function onkeypress() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onkeypress",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onkeypress",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onkeyup",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGElement.onkeyup getter can only be used on instances of SVGElement"
    },
    {
      "path": "window.SVGElement.prototype.onkeyup",
      "propertyName": "_get",
      "property": "function onkeyup() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onkeyup",
      "propertyName": "_set",
      "property": "function onkeyup() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onkeyup",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onkeyup",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onload",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGElement.onload getter can only be used on instances of SVGElement"
    },
    {
      "path": "window.SVGElement.prototype.onload",
      "propertyName": "_get",
      "property": "function onload() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onload",
      "propertyName": "_set",
      "property": "function onload() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onload",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onload",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onloadeddata",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGElement.onloadeddata getter can only be used on instances of SVGElement"
    },
    {
      "path": "window.SVGElement.prototype.onloadeddata",
      "propertyName": "_get",
      "property": "function onloadeddata() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onloadeddata",
      "propertyName": "_set",
      "property": "function onloadeddata() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onloadeddata",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onloadeddata",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onloadedmetadata",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGElement.onloadedmetadata getter can only be used on instances of SVGElement"
    },
    {
      "path": "window.SVGElement.prototype.onloadedmetadata",
      "propertyName": "_get",
      "property": "function onloadedmetadata() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onloadedmetadata",
      "propertyName": "_set",
      "property": "function onloadedmetadata() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onloadedmetadata",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onloadedmetadata",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onloadstart",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGElement.onloadstart getter can only be used on instances of SVGElement"
    },
    {
      "path": "window.SVGElement.prototype.onloadstart",
      "propertyName": "_get",
      "property": "function onloadstart() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onloadstart",
      "propertyName": "_set",
      "property": "function onloadstart() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onloadstart",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onloadstart",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onmousedown",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGElement.onmousedown getter can only be used on instances of SVGElement"
    },
    {
      "path": "window.SVGElement.prototype.onmousedown",
      "propertyName": "_get",
      "property": "function onmousedown() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onmousedown",
      "propertyName": "_set",
      "property": "function onmousedown() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onmousedown",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onmousedown",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onmouseenter",
      "propertyName": "_get",
      "property": "function onmouseenter() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onmouseenter",
      "propertyName": "_set",
      "property": "function onmouseenter() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onmouseenter",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onmouseenter",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onmouseleave",
      "propertyName": "_get",
      "property": "function onmouseleave() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onmouseleave",
      "propertyName": "_set",
      "property": "function onmouseleave() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onmouseleave",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onmouseleave",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onmousemove",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGElement.onmousemove getter can only be used on instances of SVGElement"
    },
    {
      "path": "window.SVGElement.prototype.onmousemove",
      "propertyName": "_get",
      "property": "function onmousemove() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onmousemove",
      "propertyName": "_set",
      "property": "function onmousemove() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onmousemove",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onmousemove",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onmouseout",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGElement.onmouseout getter can only be used on instances of SVGElement"
    },
    {
      "path": "window.SVGElement.prototype.onmouseout",
      "propertyName": "_get",
      "property": "function onmouseout() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onmouseout",
      "propertyName": "_set",
      "property": "function onmouseout() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onmouseout",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onmouseout",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onmouseover",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGElement.onmouseover getter can only be used on instances of SVGElement"
    },
    {
      "path": "window.SVGElement.prototype.onmouseover",
      "propertyName": "_get",
      "property": "function onmouseover() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onmouseover",
      "propertyName": "_set",
      "property": "function onmouseover() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onmouseover",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onmouseover",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onmouseup",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGElement.onmouseup getter can only be used on instances of SVGElement"
    },
    {
      "path": "window.SVGElement.prototype.onmouseup",
      "propertyName": "_get",
      "property": "function onmouseup() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onmouseup",
      "propertyName": "_set",
      "property": "function onmouseup() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onmouseup",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onmouseup",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onmousewheel",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGElement.onmousewheel getter can only be used on instances of SVGElement"
    },
    {
      "path": "window.SVGElement.prototype.onmousewheel",
      "propertyName": "_get",
      "property": "function onmousewheel() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onmousewheel",
      "propertyName": "_set",
      "property": "function onmousewheel() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onmousewheel",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onmousewheel",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onpause",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGElement.onpause getter can only be used on instances of SVGElement"
    },
    {
      "path": "window.SVGElement.prototype.onpause",
      "propertyName": "_get",
      "property": "function onpause() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onpause",
      "propertyName": "_set",
      "property": "function onpause() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onpause",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onpause",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onplay",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGElement.onplay getter can only be used on instances of SVGElement"
    },
    {
      "path": "window.SVGElement.prototype.onplay",
      "propertyName": "_get",
      "property": "function onplay() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onplay",
      "propertyName": "_set",
      "property": "function onplay() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onplay",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onplay",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onplaying",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGElement.onplaying getter can only be used on instances of SVGElement"
    },
    {
      "path": "window.SVGElement.prototype.onplaying",
      "propertyName": "_get",
      "property": "function onplaying() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onplaying",
      "propertyName": "_set",
      "property": "function onplaying() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onplaying",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onplaying",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onprogress",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGElement.onprogress getter can only be used on instances of SVGElement"
    },
    {
      "path": "window.SVGElement.prototype.onprogress",
      "propertyName": "_get",
      "property": "function onprogress() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onprogress",
      "propertyName": "_set",
      "property": "function onprogress() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onprogress",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onprogress",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onratechange",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGElement.onratechange getter can only be used on instances of SVGElement"
    },
    {
      "path": "window.SVGElement.prototype.onratechange",
      "propertyName": "_get",
      "property": "function onratechange() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onratechange",
      "propertyName": "_set",
      "property": "function onratechange() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onratechange",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onratechange",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onreset",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGElement.onreset getter can only be used on instances of SVGElement"
    },
    {
      "path": "window.SVGElement.prototype.onreset",
      "propertyName": "_get",
      "property": "function onreset() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onreset",
      "propertyName": "_set",
      "property": "function onreset() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onreset",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onreset",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onresize",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGElement.onresize getter can only be used on instances of SVGElement"
    },
    {
      "path": "window.SVGElement.prototype.onresize",
      "propertyName": "_get",
      "property": "function onresize() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onresize",
      "propertyName": "_set",
      "property": "function onresize() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onresize",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onresize",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onscroll",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGElement.onscroll getter can only be used on instances of SVGElement"
    },
    {
      "path": "window.SVGElement.prototype.onscroll",
      "propertyName": "_get",
      "property": "function onscroll() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onscroll",
      "propertyName": "_set",
      "property": "function onscroll() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onscroll",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onscroll",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onseeked",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGElement.onseeked getter can only be used on instances of SVGElement"
    },
    {
      "path": "window.SVGElement.prototype.onseeked",
      "propertyName": "_get",
      "property": "function onseeked() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onseeked",
      "propertyName": "_set",
      "property": "function onseeked() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onseeked",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onseeked",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onseeking",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGElement.onseeking getter can only be used on instances of SVGElement"
    },
    {
      "path": "window.SVGElement.prototype.onseeking",
      "propertyName": "_get",
      "property": "function onseeking() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onseeking",
      "propertyName": "_set",
      "property": "function onseeking() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onseeking",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onseeking",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onselect",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGElement.onselect getter can only be used on instances of SVGElement"
    },
    {
      "path": "window.SVGElement.prototype.onselect",
      "propertyName": "_get",
      "property": "function onselect() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onselect",
      "propertyName": "_set",
      "property": "function onselect() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onselect",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onselect",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onstalled",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGElement.onstalled getter can only be used on instances of SVGElement"
    },
    {
      "path": "window.SVGElement.prototype.onstalled",
      "propertyName": "_get",
      "property": "function onstalled() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onstalled",
      "propertyName": "_set",
      "property": "function onstalled() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onstalled",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onstalled",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onsubmit",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGElement.onsubmit getter can only be used on instances of SVGElement"
    },
    {
      "path": "window.SVGElement.prototype.onsubmit",
      "propertyName": "_get",
      "property": "function onsubmit() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onsubmit",
      "propertyName": "_set",
      "property": "function onsubmit() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onsubmit",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onsubmit",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onsuspend",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGElement.onsuspend getter can only be used on instances of SVGElement"
    },
    {
      "path": "window.SVGElement.prototype.onsuspend",
      "propertyName": "_get",
      "property": "function onsuspend() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onsuspend",
      "propertyName": "_set",
      "property": "function onsuspend() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onsuspend",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onsuspend",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.ontimeupdate",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGElement.ontimeupdate getter can only be used on instances of SVGElement"
    },
    {
      "path": "window.SVGElement.prototype.ontimeupdate",
      "propertyName": "_get",
      "property": "function ontimeupdate() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.ontimeupdate",
      "propertyName": "_set",
      "property": "function ontimeupdate() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.ontimeupdate",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.ontimeupdate",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.ontoggle",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGElement.ontoggle getter can only be used on instances of SVGElement"
    },
    {
      "path": "window.SVGElement.prototype.ontoggle",
      "propertyName": "_get",
      "property": "function ontoggle() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.ontoggle",
      "propertyName": "_set",
      "property": "function ontoggle() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.ontoggle",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.ontoggle",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onvolumechange",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGElement.onvolumechange getter can only be used on instances of SVGElement"
    },
    {
      "path": "window.SVGElement.prototype.onvolumechange",
      "propertyName": "_get",
      "property": "function onvolumechange() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onvolumechange",
      "propertyName": "_set",
      "property": "function onvolumechange() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onvolumechange",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onvolumechange",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onwaiting",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGElement.onwaiting getter can only be used on instances of SVGElement"
    },
    {
      "path": "window.SVGElement.prototype.onwaiting",
      "propertyName": "_get",
      "property": "function onwaiting() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onwaiting",
      "propertyName": "_set",
      "property": "function onwaiting() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onwaiting",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onwaiting",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.ontransitionend",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGElement.ontransitionend getter can only be used on instances of SVGElement"
    },
    {
      "path": "window.SVGElement.prototype.ontransitionend",
      "propertyName": "_get",
      "property": "function ontransitionend() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.ontransitionend",
      "propertyName": "_set",
      "property": "function ontransitionend() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.ontransitionend",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.ontransitionend",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onanimationend",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGElement.onanimationend getter can only be used on instances of SVGElement"
    },
    {
      "path": "window.SVGElement.prototype.onanimationend",
      "propertyName": "_get",
      "property": "function onanimationend() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onanimationend",
      "propertyName": "_set",
      "property": "function onanimationend() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onanimationend",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onanimationend",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onanimationiteration",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGElement.onanimationiteration getter can only be used on instances of SVGElement"
    },
    {
      "path": "window.SVGElement.prototype.onanimationiteration",
      "propertyName": "_get",
      "property": "function onanimationiteration() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onanimationiteration",
      "propertyName": "_set",
      "property": "function onanimationiteration() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onanimationiteration",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onanimationiteration",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onanimationstart",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGElement.onanimationstart getter can only be used on instances of SVGElement"
    },
    {
      "path": "window.SVGElement.prototype.onanimationstart",
      "propertyName": "_get",
      "property": "function onanimationstart() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onanimationstart",
      "propertyName": "_set",
      "property": "function onanimationstart() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onanimationstart",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onanimationstart",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.ongotpointercapture",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGElement.ongotpointercapture getter can only be used on instances of SVGElement"
    },
    {
      "path": "window.SVGElement.prototype.ongotpointercapture",
      "propertyName": "_get",
      "property": "function ongotpointercapture() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.ongotpointercapture",
      "propertyName": "_set",
      "property": "function ongotpointercapture() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.ongotpointercapture",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.ongotpointercapture",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onlostpointercapture",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGElement.onlostpointercapture getter can only be used on instances of SVGElement"
    },
    {
      "path": "window.SVGElement.prototype.onlostpointercapture",
      "propertyName": "_get",
      "property": "function onlostpointercapture() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onlostpointercapture",
      "propertyName": "_set",
      "property": "function onlostpointercapture() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onlostpointercapture",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onlostpointercapture",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onpointerdown",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGElement.onpointerdown getter can only be used on instances of SVGElement"
    },
    {
      "path": "window.SVGElement.prototype.onpointerdown",
      "propertyName": "_get",
      "property": "function onpointerdown() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onpointerdown",
      "propertyName": "_set",
      "property": "function onpointerdown() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onpointerdown",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onpointerdown",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onpointermove",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGElement.onpointermove getter can only be used on instances of SVGElement"
    },
    {
      "path": "window.SVGElement.prototype.onpointermove",
      "propertyName": "_get",
      "property": "function onpointermove() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onpointermove",
      "propertyName": "_set",
      "property": "function onpointermove() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onpointermove",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onpointermove",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onpointerup",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGElement.onpointerup getter can only be used on instances of SVGElement"
    },
    {
      "path": "window.SVGElement.prototype.onpointerup",
      "propertyName": "_get",
      "property": "function onpointerup() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onpointerup",
      "propertyName": "_set",
      "property": "function onpointerup() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onpointerup",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onpointerup",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onpointercancel",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGElement.onpointercancel getter can only be used on instances of SVGElement"
    },
    {
      "path": "window.SVGElement.prototype.onpointercancel",
      "propertyName": "_get",
      "property": "function onpointercancel() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onpointercancel",
      "propertyName": "_set",
      "property": "function onpointercancel() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onpointercancel",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onpointercancel",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onpointerover",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGElement.onpointerover getter can only be used on instances of SVGElement"
    },
    {
      "path": "window.SVGElement.prototype.onpointerover",
      "propertyName": "_get",
      "property": "function onpointerover() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onpointerover",
      "propertyName": "_set",
      "property": "function onpointerover() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onpointerover",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onpointerover",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onpointerout",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGElement.onpointerout getter can only be used on instances of SVGElement"
    },
    {
      "path": "window.SVGElement.prototype.onpointerout",
      "propertyName": "_get",
      "property": "function onpointerout() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onpointerout",
      "propertyName": "_set",
      "property": "function onpointerout() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onpointerout",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onpointerout",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onpointerenter",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGElement.onpointerenter getter can only be used on instances of SVGElement"
    },
    {
      "path": "window.SVGElement.prototype.onpointerenter",
      "propertyName": "_get",
      "property": "function onpointerenter() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onpointerenter",
      "propertyName": "_set",
      "property": "function onpointerenter() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onpointerenter",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onpointerenter",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onpointerleave",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGElement.onpointerleave getter can only be used on instances of SVGElement"
    },
    {
      "path": "window.SVGElement.prototype.onpointerleave",
      "propertyName": "_get",
      "property": "function onpointerleave() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onpointerleave",
      "propertyName": "_set",
      "property": "function onpointerleave() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onpointerleave",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onpointerleave",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onwheel",
      "propertyName": "_flags",
      "property": "c"
    },
    {
      "path": "window.SVGElement.prototype.onwheel",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGElement.onwheel getter can only be used on instances of SVGElement"
    },
    {
      "path": "window.SVGElement.prototype.onwheel",
      "propertyName": "_get",
      "property": "function onwheel() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onwheel",
      "propertyName": "_set",
      "property": "function onwheel() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onwheel",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.onwheel",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.focus",
      "propertyName": "_function",
      "property": "function focus() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement.prototype.blur",
      "propertyName": "_function",
      "property": "function blur() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGElement",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.SVGElement",
      "propertyName": "_function",
      "property": "function SVGElement() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGEllipseElement.prototype.cx",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGEllipseElement.cx getter can only be used on instances of SVGEllipseElement"
    },
    {
      "path": "window.SVGEllipseElement.prototype.cx",
      "propertyName": "_get",
      "property": "function cx() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGEllipseElement.prototype.cx",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGEllipseElement.prototype.cy",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGEllipseElement.cy getter can only be used on instances of SVGEllipseElement"
    },
    {
      "path": "window.SVGEllipseElement.prototype.cy",
      "propertyName": "_get",
      "property": "function cy() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGEllipseElement.prototype.cy",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGEllipseElement.prototype.rx",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGEllipseElement.rx getter can only be used on instances of SVGEllipseElement"
    },
    {
      "path": "window.SVGEllipseElement.prototype.rx",
      "propertyName": "_get",
      "property": "function rx() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGEllipseElement.prototype.rx",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGEllipseElement.prototype.ry",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGEllipseElement.ry getter can only be used on instances of SVGEllipseElement"
    },
    {
      "path": "window.SVGEllipseElement.prototype.ry",
      "propertyName": "_get",
      "property": "function ry() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGEllipseElement.prototype.ry",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGEllipseElement",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.SVGEllipseElement",
      "propertyName": "_function",
      "property": "function SVGEllipseElement() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEBlendElement.prototype.in1",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFEBlendElement.in1 getter can only be used on instances of SVGFEBlendElement"
    },
    {
      "path": "window.SVGFEBlendElement.prototype.in1",
      "propertyName": "_get",
      "property": "function in1() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEBlendElement.prototype.in1",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEBlendElement.prototype.in2",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFEBlendElement.in2 getter can only be used on instances of SVGFEBlendElement"
    },
    {
      "path": "window.SVGFEBlendElement.prototype.in2",
      "propertyName": "_get",
      "property": "function in2() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEBlendElement.prototype.in2",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEBlendElement.prototype.mode",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFEBlendElement.mode getter can only be used on instances of SVGFEBlendElement"
    },
    {
      "path": "window.SVGFEBlendElement.prototype.mode",
      "propertyName": "_get",
      "property": "function mode() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEBlendElement.prototype.mode",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEBlendElement.prototype.x",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFEBlendElement.x getter can only be used on instances of SVGFEBlendElement"
    },
    {
      "path": "window.SVGFEBlendElement.prototype.x",
      "propertyName": "_get",
      "property": "function x() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEBlendElement.prototype.x",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEBlendElement.prototype.y",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFEBlendElement.y getter can only be used on instances of SVGFEBlendElement"
    },
    {
      "path": "window.SVGFEBlendElement.prototype.y",
      "propertyName": "_get",
      "property": "function y() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEBlendElement.prototype.y",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEBlendElement.prototype.width",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFEBlendElement.width getter can only be used on instances of SVGFEBlendElement"
    },
    {
      "path": "window.SVGFEBlendElement.prototype.width",
      "propertyName": "_get",
      "property": "function width() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEBlendElement.prototype.width",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEBlendElement.prototype.height",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFEBlendElement.height getter can only be used on instances of SVGFEBlendElement"
    },
    {
      "path": "window.SVGFEBlendElement.prototype.height",
      "propertyName": "_get",
      "property": "function height() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEBlendElement.prototype.height",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEBlendElement.prototype.result",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFEBlendElement.result getter can only be used on instances of SVGFEBlendElement"
    },
    {
      "path": "window.SVGFEBlendElement.prototype.result",
      "propertyName": "_get",
      "property": "function result() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEBlendElement.prototype.result",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEBlendElement",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.SVGFEBlendElement",
      "propertyName": "_function",
      "property": "function SVGFEBlendElement() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEColorMatrixElement.prototype.in1",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFEColorMatrixElement.in1 getter can only be used on instances of SVGFEColorMatrixElement"
    },
    {
      "path": "window.SVGFEColorMatrixElement.prototype.in1",
      "propertyName": "_get",
      "property": "function in1() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEColorMatrixElement.prototype.in1",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEColorMatrixElement.prototype.type",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFEColorMatrixElement.type getter can only be used on instances of SVGFEColorMatrixElement"
    },
    {
      "path": "window.SVGFEColorMatrixElement.prototype.type",
      "propertyName": "_get",
      "property": "function type() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEColorMatrixElement.prototype.type",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEColorMatrixElement.prototype.values",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFEColorMatrixElement.values getter can only be used on instances of SVGFEColorMatrixElement"
    },
    {
      "path": "window.SVGFEColorMatrixElement.prototype.values",
      "propertyName": "_get",
      "property": "function values() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEColorMatrixElement.prototype.values",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEColorMatrixElement.prototype.x",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFEColorMatrixElement.x getter can only be used on instances of SVGFEColorMatrixElement"
    },
    {
      "path": "window.SVGFEColorMatrixElement.prototype.x",
      "propertyName": "_get",
      "property": "function x() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEColorMatrixElement.prototype.x",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEColorMatrixElement.prototype.y",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFEColorMatrixElement.y getter can only be used on instances of SVGFEColorMatrixElement"
    },
    {
      "path": "window.SVGFEColorMatrixElement.prototype.y",
      "propertyName": "_get",
      "property": "function y() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEColorMatrixElement.prototype.y",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEColorMatrixElement.prototype.width",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFEColorMatrixElement.width getter can only be used on instances of SVGFEColorMatrixElement"
    },
    {
      "path": "window.SVGFEColorMatrixElement.prototype.width",
      "propertyName": "_get",
      "property": "function width() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEColorMatrixElement.prototype.width",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEColorMatrixElement.prototype.height",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFEColorMatrixElement.height getter can only be used on instances of SVGFEColorMatrixElement"
    },
    {
      "path": "window.SVGFEColorMatrixElement.prototype.height",
      "propertyName": "_get",
      "property": "function height() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEColorMatrixElement.prototype.height",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEColorMatrixElement.prototype.result",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFEColorMatrixElement.result getter can only be used on instances of SVGFEColorMatrixElement"
    },
    {
      "path": "window.SVGFEColorMatrixElement.prototype.result",
      "propertyName": "_get",
      "property": "function result() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEColorMatrixElement.prototype.result",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEColorMatrixElement",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.SVGFEColorMatrixElement",
      "propertyName": "_function",
      "property": "function SVGFEColorMatrixElement() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEComponentTransferElement.prototype.in1",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFEComponentTransferElement.in1 getter can only be used on instances of SVGFEComponentTransferElement"
    },
    {
      "path": "window.SVGFEComponentTransferElement.prototype.in1",
      "propertyName": "_get",
      "property": "function in1() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEComponentTransferElement.prototype.in1",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEComponentTransferElement.prototype.x",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFEComponentTransferElement.x getter can only be used on instances of SVGFEComponentTransferElement"
    },
    {
      "path": "window.SVGFEComponentTransferElement.prototype.x",
      "propertyName": "_get",
      "property": "function x() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEComponentTransferElement.prototype.x",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEComponentTransferElement.prototype.y",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFEComponentTransferElement.y getter can only be used on instances of SVGFEComponentTransferElement"
    },
    {
      "path": "window.SVGFEComponentTransferElement.prototype.y",
      "propertyName": "_get",
      "property": "function y() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEComponentTransferElement.prototype.y",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEComponentTransferElement.prototype.width",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFEComponentTransferElement.width getter can only be used on instances of SVGFEComponentTransferElement"
    },
    {
      "path": "window.SVGFEComponentTransferElement.prototype.width",
      "propertyName": "_get",
      "property": "function width() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEComponentTransferElement.prototype.width",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEComponentTransferElement.prototype.height",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFEComponentTransferElement.height getter can only be used on instances of SVGFEComponentTransferElement"
    },
    {
      "path": "window.SVGFEComponentTransferElement.prototype.height",
      "propertyName": "_get",
      "property": "function height() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEComponentTransferElement.prototype.height",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEComponentTransferElement.prototype.result",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFEComponentTransferElement.result getter can only be used on instances of SVGFEComponentTransferElement"
    },
    {
      "path": "window.SVGFEComponentTransferElement.prototype.result",
      "propertyName": "_get",
      "property": "function result() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEComponentTransferElement.prototype.result",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEComponentTransferElement",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.SVGFEComponentTransferElement",
      "propertyName": "_function",
      "property": "function SVGFEComponentTransferElement() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFECompositeElement.prototype.in1",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFECompositeElement.in1 getter can only be used on instances of SVGFECompositeElement"
    },
    {
      "path": "window.SVGFECompositeElement.prototype.in1",
      "propertyName": "_get",
      "property": "function in1() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFECompositeElement.prototype.in1",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFECompositeElement.prototype.in2",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFECompositeElement.in2 getter can only be used on instances of SVGFECompositeElement"
    },
    {
      "path": "window.SVGFECompositeElement.prototype.in2",
      "propertyName": "_get",
      "property": "function in2() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFECompositeElement.prototype.in2",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFECompositeElement.prototype.operator",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFECompositeElement.operator getter can only be used on instances of SVGFECompositeElement"
    },
    {
      "path": "window.SVGFECompositeElement.prototype.operator",
      "propertyName": "_get",
      "property": "function operator() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFECompositeElement.prototype.operator",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFECompositeElement.prototype.k1",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFECompositeElement.k1 getter can only be used on instances of SVGFECompositeElement"
    },
    {
      "path": "window.SVGFECompositeElement.prototype.k1",
      "propertyName": "_get",
      "property": "function k1() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFECompositeElement.prototype.k1",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFECompositeElement.prototype.k2",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFECompositeElement.k2 getter can only be used on instances of SVGFECompositeElement"
    },
    {
      "path": "window.SVGFECompositeElement.prototype.k2",
      "propertyName": "_get",
      "property": "function k2() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFECompositeElement.prototype.k2",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFECompositeElement.prototype.k3",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFECompositeElement.k3 getter can only be used on instances of SVGFECompositeElement"
    },
    {
      "path": "window.SVGFECompositeElement.prototype.k3",
      "propertyName": "_get",
      "property": "function k3() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFECompositeElement.prototype.k3",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFECompositeElement.prototype.k4",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFECompositeElement.k4 getter can only be used on instances of SVGFECompositeElement"
    },
    {
      "path": "window.SVGFECompositeElement.prototype.k4",
      "propertyName": "_get",
      "property": "function k4() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFECompositeElement.prototype.k4",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFECompositeElement.prototype.x",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFECompositeElement.x getter can only be used on instances of SVGFECompositeElement"
    },
    {
      "path": "window.SVGFECompositeElement.prototype.x",
      "propertyName": "_get",
      "property": "function x() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFECompositeElement.prototype.x",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFECompositeElement.prototype.y",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFECompositeElement.y getter can only be used on instances of SVGFECompositeElement"
    },
    {
      "path": "window.SVGFECompositeElement.prototype.y",
      "propertyName": "_get",
      "property": "function y() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFECompositeElement.prototype.y",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFECompositeElement.prototype.width",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFECompositeElement.width getter can only be used on instances of SVGFECompositeElement"
    },
    {
      "path": "window.SVGFECompositeElement.prototype.width",
      "propertyName": "_get",
      "property": "function width() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFECompositeElement.prototype.width",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFECompositeElement.prototype.height",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFECompositeElement.height getter can only be used on instances of SVGFECompositeElement"
    },
    {
      "path": "window.SVGFECompositeElement.prototype.height",
      "propertyName": "_get",
      "property": "function height() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFECompositeElement.prototype.height",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFECompositeElement.prototype.result",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFECompositeElement.result getter can only be used on instances of SVGFECompositeElement"
    },
    {
      "path": "window.SVGFECompositeElement.prototype.result",
      "propertyName": "_get",
      "property": "function result() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFECompositeElement.prototype.result",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFECompositeElement",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.SVGFECompositeElement",
      "propertyName": "_function",
      "property": "function SVGFECompositeElement() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEConvolveMatrixElement.prototype.in1",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFEConvolveMatrixElement.in1 getter can only be used on instances of SVGFEConvolveMatrixElement"
    },
    {
      "path": "window.SVGFEConvolveMatrixElement.prototype.in1",
      "propertyName": "_get",
      "property": "function in1() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEConvolveMatrixElement.prototype.in1",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEConvolveMatrixElement.prototype.orderX",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFEConvolveMatrixElement.orderX getter can only be used on instances of SVGFEConvolveMatrixElement"
    },
    {
      "path": "window.SVGFEConvolveMatrixElement.prototype.orderX",
      "propertyName": "_get",
      "property": "function orderX() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEConvolveMatrixElement.prototype.orderX",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEConvolveMatrixElement.prototype.orderY",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFEConvolveMatrixElement.orderY getter can only be used on instances of SVGFEConvolveMatrixElement"
    },
    {
      "path": "window.SVGFEConvolveMatrixElement.prototype.orderY",
      "propertyName": "_get",
      "property": "function orderY() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEConvolveMatrixElement.prototype.orderY",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEConvolveMatrixElement.prototype.kernelMatrix",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFEConvolveMatrixElement.kernelMatrix getter can only be used on instances of SVGFEConvolveMatrixElement"
    },
    {
      "path": "window.SVGFEConvolveMatrixElement.prototype.kernelMatrix",
      "propertyName": "_get",
      "property": "function kernelMatrix() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEConvolveMatrixElement.prototype.kernelMatrix",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEConvolveMatrixElement.prototype.divisor",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFEConvolveMatrixElement.divisor getter can only be used on instances of SVGFEConvolveMatrixElement"
    },
    {
      "path": "window.SVGFEConvolveMatrixElement.prototype.divisor",
      "propertyName": "_get",
      "property": "function divisor() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEConvolveMatrixElement.prototype.divisor",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEConvolveMatrixElement.prototype.bias",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFEConvolveMatrixElement.bias getter can only be used on instances of SVGFEConvolveMatrixElement"
    },
    {
      "path": "window.SVGFEConvolveMatrixElement.prototype.bias",
      "propertyName": "_get",
      "property": "function bias() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEConvolveMatrixElement.prototype.bias",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEConvolveMatrixElement.prototype.targetX",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFEConvolveMatrixElement.targetX getter can only be used on instances of SVGFEConvolveMatrixElement"
    },
    {
      "path": "window.SVGFEConvolveMatrixElement.prototype.targetX",
      "propertyName": "_get",
      "property": "function targetX() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEConvolveMatrixElement.prototype.targetX",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEConvolveMatrixElement.prototype.targetY",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFEConvolveMatrixElement.targetY getter can only be used on instances of SVGFEConvolveMatrixElement"
    },
    {
      "path": "window.SVGFEConvolveMatrixElement.prototype.targetY",
      "propertyName": "_get",
      "property": "function targetY() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEConvolveMatrixElement.prototype.targetY",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEConvolveMatrixElement.prototype.edgeMode",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFEConvolveMatrixElement.edgeMode getter can only be used on instances of SVGFEConvolveMatrixElement"
    },
    {
      "path": "window.SVGFEConvolveMatrixElement.prototype.edgeMode",
      "propertyName": "_get",
      "property": "function edgeMode() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEConvolveMatrixElement.prototype.edgeMode",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEConvolveMatrixElement.prototype.kernelUnitLengthX",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFEConvolveMatrixElement.kernelUnitLengthX getter can only be used on instances of SVGFEConvolveMatrixElement"
    },
    {
      "path": "window.SVGFEConvolveMatrixElement.prototype.kernelUnitLengthX",
      "propertyName": "_get",
      "property": "function kernelUnitLengthX() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEConvolveMatrixElement.prototype.kernelUnitLengthX",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEConvolveMatrixElement.prototype.kernelUnitLengthY",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFEConvolveMatrixElement.kernelUnitLengthY getter can only be used on instances of SVGFEConvolveMatrixElement"
    },
    {
      "path": "window.SVGFEConvolveMatrixElement.prototype.kernelUnitLengthY",
      "propertyName": "_get",
      "property": "function kernelUnitLengthY() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEConvolveMatrixElement.prototype.kernelUnitLengthY",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEConvolveMatrixElement.prototype.preserveAlpha",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFEConvolveMatrixElement.preserveAlpha getter can only be used on instances of SVGFEConvolveMatrixElement"
    },
    {
      "path": "window.SVGFEConvolveMatrixElement.prototype.preserveAlpha",
      "propertyName": "_get",
      "property": "function preserveAlpha() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEConvolveMatrixElement.prototype.preserveAlpha",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEConvolveMatrixElement.prototype.x",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFEConvolveMatrixElement.x getter can only be used on instances of SVGFEConvolveMatrixElement"
    },
    {
      "path": "window.SVGFEConvolveMatrixElement.prototype.x",
      "propertyName": "_get",
      "property": "function x() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEConvolveMatrixElement.prototype.x",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEConvolveMatrixElement.prototype.y",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFEConvolveMatrixElement.y getter can only be used on instances of SVGFEConvolveMatrixElement"
    },
    {
      "path": "window.SVGFEConvolveMatrixElement.prototype.y",
      "propertyName": "_get",
      "property": "function y() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEConvolveMatrixElement.prototype.y",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEConvolveMatrixElement.prototype.width",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFEConvolveMatrixElement.width getter can only be used on instances of SVGFEConvolveMatrixElement"
    },
    {
      "path": "window.SVGFEConvolveMatrixElement.prototype.width",
      "propertyName": "_get",
      "property": "function width() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEConvolveMatrixElement.prototype.width",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEConvolveMatrixElement.prototype.height",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFEConvolveMatrixElement.height getter can only be used on instances of SVGFEConvolveMatrixElement"
    },
    {
      "path": "window.SVGFEConvolveMatrixElement.prototype.height",
      "propertyName": "_get",
      "property": "function height() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEConvolveMatrixElement.prototype.height",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEConvolveMatrixElement.prototype.result",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFEConvolveMatrixElement.result getter can only be used on instances of SVGFEConvolveMatrixElement"
    },
    {
      "path": "window.SVGFEConvolveMatrixElement.prototype.result",
      "propertyName": "_get",
      "property": "function result() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEConvolveMatrixElement.prototype.result",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEConvolveMatrixElement",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.SVGFEConvolveMatrixElement",
      "propertyName": "_function",
      "property": "function SVGFEConvolveMatrixElement() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEDiffuseLightingElement.prototype.in1",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFEDiffuseLightingElement.in1 getter can only be used on instances of SVGFEDiffuseLightingElement"
    },
    {
      "path": "window.SVGFEDiffuseLightingElement.prototype.in1",
      "propertyName": "_get",
      "property": "function in1() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEDiffuseLightingElement.prototype.in1",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEDiffuseLightingElement.prototype.surfaceScale",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFEDiffuseLightingElement.surfaceScale getter can only be used on instances of SVGFEDiffuseLightingElement"
    },
    {
      "path": "window.SVGFEDiffuseLightingElement.prototype.surfaceScale",
      "propertyName": "_get",
      "property": "function surfaceScale() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEDiffuseLightingElement.prototype.surfaceScale",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEDiffuseLightingElement.prototype.diffuseConstant",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFEDiffuseLightingElement.diffuseConstant getter can only be used on instances of SVGFEDiffuseLightingElement"
    },
    {
      "path": "window.SVGFEDiffuseLightingElement.prototype.diffuseConstant",
      "propertyName": "_get",
      "property": "function diffuseConstant() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEDiffuseLightingElement.prototype.diffuseConstant",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEDiffuseLightingElement.prototype.kernelUnitLengthX",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFEDiffuseLightingElement.kernelUnitLengthX getter can only be used on instances of SVGFEDiffuseLightingElement"
    },
    {
      "path": "window.SVGFEDiffuseLightingElement.prototype.kernelUnitLengthX",
      "propertyName": "_get",
      "property": "function kernelUnitLengthX() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEDiffuseLightingElement.prototype.kernelUnitLengthX",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEDiffuseLightingElement.prototype.kernelUnitLengthY",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFEDiffuseLightingElement.kernelUnitLengthY getter can only be used on instances of SVGFEDiffuseLightingElement"
    },
    {
      "path": "window.SVGFEDiffuseLightingElement.prototype.kernelUnitLengthY",
      "propertyName": "_get",
      "property": "function kernelUnitLengthY() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEDiffuseLightingElement.prototype.kernelUnitLengthY",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEDiffuseLightingElement.prototype.x",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFEDiffuseLightingElement.x getter can only be used on instances of SVGFEDiffuseLightingElement"
    },
    {
      "path": "window.SVGFEDiffuseLightingElement.prototype.x",
      "propertyName": "_get",
      "property": "function x() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEDiffuseLightingElement.prototype.x",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEDiffuseLightingElement.prototype.y",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFEDiffuseLightingElement.y getter can only be used on instances of SVGFEDiffuseLightingElement"
    },
    {
      "path": "window.SVGFEDiffuseLightingElement.prototype.y",
      "propertyName": "_get",
      "property": "function y() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEDiffuseLightingElement.prototype.y",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEDiffuseLightingElement.prototype.width",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFEDiffuseLightingElement.width getter can only be used on instances of SVGFEDiffuseLightingElement"
    },
    {
      "path": "window.SVGFEDiffuseLightingElement.prototype.width",
      "propertyName": "_get",
      "property": "function width() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEDiffuseLightingElement.prototype.width",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEDiffuseLightingElement.prototype.height",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFEDiffuseLightingElement.height getter can only be used on instances of SVGFEDiffuseLightingElement"
    },
    {
      "path": "window.SVGFEDiffuseLightingElement.prototype.height",
      "propertyName": "_get",
      "property": "function height() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEDiffuseLightingElement.prototype.height",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEDiffuseLightingElement.prototype.result",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFEDiffuseLightingElement.result getter can only be used on instances of SVGFEDiffuseLightingElement"
    },
    {
      "path": "window.SVGFEDiffuseLightingElement.prototype.result",
      "propertyName": "_get",
      "property": "function result() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEDiffuseLightingElement.prototype.result",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEDiffuseLightingElement",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.SVGFEDiffuseLightingElement",
      "propertyName": "_function",
      "property": "function SVGFEDiffuseLightingElement() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEDisplacementMapElement.prototype.in1",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFEDisplacementMapElement.in1 getter can only be used on instances of SVGFEDisplacementMapElement"
    },
    {
      "path": "window.SVGFEDisplacementMapElement.prototype.in1",
      "propertyName": "_get",
      "property": "function in1() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEDisplacementMapElement.prototype.in1",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEDisplacementMapElement.prototype.in2",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFEDisplacementMapElement.in2 getter can only be used on instances of SVGFEDisplacementMapElement"
    },
    {
      "path": "window.SVGFEDisplacementMapElement.prototype.in2",
      "propertyName": "_get",
      "property": "function in2() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEDisplacementMapElement.prototype.in2",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEDisplacementMapElement.prototype.scale",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFEDisplacementMapElement.scale getter can only be used on instances of SVGFEDisplacementMapElement"
    },
    {
      "path": "window.SVGFEDisplacementMapElement.prototype.scale",
      "propertyName": "_get",
      "property": "function scale() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEDisplacementMapElement.prototype.scale",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEDisplacementMapElement.prototype.xChannelSelector",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFEDisplacementMapElement.xChannelSelector getter can only be used on instances of SVGFEDisplacementMapElement"
    },
    {
      "path": "window.SVGFEDisplacementMapElement.prototype.xChannelSelector",
      "propertyName": "_get",
      "property": "function xChannelSelector() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEDisplacementMapElement.prototype.xChannelSelector",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEDisplacementMapElement.prototype.yChannelSelector",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFEDisplacementMapElement.yChannelSelector getter can only be used on instances of SVGFEDisplacementMapElement"
    },
    {
      "path": "window.SVGFEDisplacementMapElement.prototype.yChannelSelector",
      "propertyName": "_get",
      "property": "function yChannelSelector() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEDisplacementMapElement.prototype.yChannelSelector",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEDisplacementMapElement.prototype.x",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFEDisplacementMapElement.x getter can only be used on instances of SVGFEDisplacementMapElement"
    },
    {
      "path": "window.SVGFEDisplacementMapElement.prototype.x",
      "propertyName": "_get",
      "property": "function x() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEDisplacementMapElement.prototype.x",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEDisplacementMapElement.prototype.y",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFEDisplacementMapElement.y getter can only be used on instances of SVGFEDisplacementMapElement"
    },
    {
      "path": "window.SVGFEDisplacementMapElement.prototype.y",
      "propertyName": "_get",
      "property": "function y() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEDisplacementMapElement.prototype.y",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEDisplacementMapElement.prototype.width",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFEDisplacementMapElement.width getter can only be used on instances of SVGFEDisplacementMapElement"
    },
    {
      "path": "window.SVGFEDisplacementMapElement.prototype.width",
      "propertyName": "_get",
      "property": "function width() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEDisplacementMapElement.prototype.width",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEDisplacementMapElement.prototype.height",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFEDisplacementMapElement.height getter can only be used on instances of SVGFEDisplacementMapElement"
    },
    {
      "path": "window.SVGFEDisplacementMapElement.prototype.height",
      "propertyName": "_get",
      "property": "function height() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEDisplacementMapElement.prototype.height",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEDisplacementMapElement.prototype.result",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFEDisplacementMapElement.result getter can only be used on instances of SVGFEDisplacementMapElement"
    },
    {
      "path": "window.SVGFEDisplacementMapElement.prototype.result",
      "propertyName": "_get",
      "property": "function result() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEDisplacementMapElement.prototype.result",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEDisplacementMapElement",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.SVGFEDisplacementMapElement",
      "propertyName": "_function",
      "property": "function SVGFEDisplacementMapElement() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEDistantLightElement.prototype.azimuth",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFEDistantLightElement.azimuth getter can only be used on instances of SVGFEDistantLightElement"
    },
    {
      "path": "window.SVGFEDistantLightElement.prototype.azimuth",
      "propertyName": "_get",
      "property": "function azimuth() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEDistantLightElement.prototype.azimuth",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEDistantLightElement.prototype.elevation",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFEDistantLightElement.elevation getter can only be used on instances of SVGFEDistantLightElement"
    },
    {
      "path": "window.SVGFEDistantLightElement.prototype.elevation",
      "propertyName": "_get",
      "property": "function elevation() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEDistantLightElement.prototype.elevation",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEDistantLightElement",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.SVGFEDistantLightElement",
      "propertyName": "_function",
      "property": "function SVGFEDistantLightElement() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEDropShadowElement.prototype.in1",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFEDropShadowElement.in1 getter can only be used on instances of SVGFEDropShadowElement"
    },
    {
      "path": "window.SVGFEDropShadowElement.prototype.in1",
      "propertyName": "_get",
      "property": "function in1() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEDropShadowElement.prototype.in1",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEDropShadowElement.prototype.dx",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFEDropShadowElement.dx getter can only be used on instances of SVGFEDropShadowElement"
    },
    {
      "path": "window.SVGFEDropShadowElement.prototype.dx",
      "propertyName": "_get",
      "property": "function dx() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEDropShadowElement.prototype.dx",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEDropShadowElement.prototype.dy",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFEDropShadowElement.dy getter can only be used on instances of SVGFEDropShadowElement"
    },
    {
      "path": "window.SVGFEDropShadowElement.prototype.dy",
      "propertyName": "_get",
      "property": "function dy() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEDropShadowElement.prototype.dy",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEDropShadowElement.prototype.stdDeviationX",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFEDropShadowElement.stdDeviationX getter can only be used on instances of SVGFEDropShadowElement"
    },
    {
      "path": "window.SVGFEDropShadowElement.prototype.stdDeviationX",
      "propertyName": "_get",
      "property": "function stdDeviationX() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEDropShadowElement.prototype.stdDeviationX",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEDropShadowElement.prototype.stdDeviationY",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFEDropShadowElement.stdDeviationY getter can only be used on instances of SVGFEDropShadowElement"
    },
    {
      "path": "window.SVGFEDropShadowElement.prototype.stdDeviationY",
      "propertyName": "_get",
      "property": "function stdDeviationY() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEDropShadowElement.prototype.stdDeviationY",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEDropShadowElement.prototype.x",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFEDropShadowElement.x getter can only be used on instances of SVGFEDropShadowElement"
    },
    {
      "path": "window.SVGFEDropShadowElement.prototype.x",
      "propertyName": "_get",
      "property": "function x() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEDropShadowElement.prototype.x",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEDropShadowElement.prototype.y",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFEDropShadowElement.y getter can only be used on instances of SVGFEDropShadowElement"
    },
    {
      "path": "window.SVGFEDropShadowElement.prototype.y",
      "propertyName": "_get",
      "property": "function y() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEDropShadowElement.prototype.y",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEDropShadowElement.prototype.width",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFEDropShadowElement.width getter can only be used on instances of SVGFEDropShadowElement"
    },
    {
      "path": "window.SVGFEDropShadowElement.prototype.width",
      "propertyName": "_get",
      "property": "function width() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEDropShadowElement.prototype.width",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEDropShadowElement.prototype.height",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFEDropShadowElement.height getter can only be used on instances of SVGFEDropShadowElement"
    },
    {
      "path": "window.SVGFEDropShadowElement.prototype.height",
      "propertyName": "_get",
      "property": "function height() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEDropShadowElement.prototype.height",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEDropShadowElement.prototype.result",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFEDropShadowElement.result getter can only be used on instances of SVGFEDropShadowElement"
    },
    {
      "path": "window.SVGFEDropShadowElement.prototype.result",
      "propertyName": "_get",
      "property": "function result() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEDropShadowElement.prototype.result",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEDropShadowElement.prototype.setStdDeviation",
      "propertyName": "_function",
      "property": "function setStdDeviation() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEDropShadowElement",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.SVGFEDropShadowElement",
      "propertyName": "_function",
      "property": "function SVGFEDropShadowElement() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEFloodElement.prototype.x",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFEFloodElement.x getter can only be used on instances of SVGFEFloodElement"
    },
    {
      "path": "window.SVGFEFloodElement.prototype.x",
      "propertyName": "_get",
      "property": "function x() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEFloodElement.prototype.x",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEFloodElement.prototype.y",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFEFloodElement.y getter can only be used on instances of SVGFEFloodElement"
    },
    {
      "path": "window.SVGFEFloodElement.prototype.y",
      "propertyName": "_get",
      "property": "function y() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEFloodElement.prototype.y",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEFloodElement.prototype.width",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFEFloodElement.width getter can only be used on instances of SVGFEFloodElement"
    },
    {
      "path": "window.SVGFEFloodElement.prototype.width",
      "propertyName": "_get",
      "property": "function width() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEFloodElement.prototype.width",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEFloodElement.prototype.height",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFEFloodElement.height getter can only be used on instances of SVGFEFloodElement"
    },
    {
      "path": "window.SVGFEFloodElement.prototype.height",
      "propertyName": "_get",
      "property": "function height() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEFloodElement.prototype.height",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEFloodElement.prototype.result",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFEFloodElement.result getter can only be used on instances of SVGFEFloodElement"
    },
    {
      "path": "window.SVGFEFloodElement.prototype.result",
      "propertyName": "_get",
      "property": "function result() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEFloodElement.prototype.result",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEFloodElement",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.SVGFEFloodElement",
      "propertyName": "_function",
      "property": "function SVGFEFloodElement() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEFuncAElement",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.SVGFEFuncAElement",
      "propertyName": "_function",
      "property": "function SVGFEFuncAElement() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEFuncBElement",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.SVGFEFuncBElement",
      "propertyName": "_function",
      "property": "function SVGFEFuncBElement() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEFuncGElement",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.SVGFEFuncGElement",
      "propertyName": "_function",
      "property": "function SVGFEFuncGElement() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEFuncRElement",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.SVGFEFuncRElement",
      "propertyName": "_function",
      "property": "function SVGFEFuncRElement() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEGaussianBlurElement.prototype.in1",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFEGaussianBlurElement.in1 getter can only be used on instances of SVGFEGaussianBlurElement"
    },
    {
      "path": "window.SVGFEGaussianBlurElement.prototype.in1",
      "propertyName": "_get",
      "property": "function in1() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEGaussianBlurElement.prototype.in1",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEGaussianBlurElement.prototype.stdDeviationX",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFEGaussianBlurElement.stdDeviationX getter can only be used on instances of SVGFEGaussianBlurElement"
    },
    {
      "path": "window.SVGFEGaussianBlurElement.prototype.stdDeviationX",
      "propertyName": "_get",
      "property": "function stdDeviationX() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEGaussianBlurElement.prototype.stdDeviationX",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEGaussianBlurElement.prototype.stdDeviationY",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFEGaussianBlurElement.stdDeviationY getter can only be used on instances of SVGFEGaussianBlurElement"
    },
    {
      "path": "window.SVGFEGaussianBlurElement.prototype.stdDeviationY",
      "propertyName": "_get",
      "property": "function stdDeviationY() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEGaussianBlurElement.prototype.stdDeviationY",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEGaussianBlurElement.prototype.x",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFEGaussianBlurElement.x getter can only be used on instances of SVGFEGaussianBlurElement"
    },
    {
      "path": "window.SVGFEGaussianBlurElement.prototype.x",
      "propertyName": "_get",
      "property": "function x() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEGaussianBlurElement.prototype.x",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEGaussianBlurElement.prototype.y",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFEGaussianBlurElement.y getter can only be used on instances of SVGFEGaussianBlurElement"
    },
    {
      "path": "window.SVGFEGaussianBlurElement.prototype.y",
      "propertyName": "_get",
      "property": "function y() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEGaussianBlurElement.prototype.y",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEGaussianBlurElement.prototype.width",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFEGaussianBlurElement.width getter can only be used on instances of SVGFEGaussianBlurElement"
    },
    {
      "path": "window.SVGFEGaussianBlurElement.prototype.width",
      "propertyName": "_get",
      "property": "function width() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEGaussianBlurElement.prototype.width",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEGaussianBlurElement.prototype.height",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFEGaussianBlurElement.height getter can only be used on instances of SVGFEGaussianBlurElement"
    },
    {
      "path": "window.SVGFEGaussianBlurElement.prototype.height",
      "propertyName": "_get",
      "property": "function height() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEGaussianBlurElement.prototype.height",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEGaussianBlurElement.prototype.result",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFEGaussianBlurElement.result getter can only be used on instances of SVGFEGaussianBlurElement"
    },
    {
      "path": "window.SVGFEGaussianBlurElement.prototype.result",
      "propertyName": "_get",
      "property": "function result() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEGaussianBlurElement.prototype.result",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEGaussianBlurElement.prototype.setStdDeviation",
      "propertyName": "_function",
      "property": "function setStdDeviation() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEGaussianBlurElement",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.SVGFEGaussianBlurElement",
      "propertyName": "_function",
      "property": "function SVGFEGaussianBlurElement() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEImageElement.prototype.preserveAspectRatio",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFEImageElement.preserveAspectRatio getter can only be used on instances of SVGFEImageElement"
    },
    {
      "path": "window.SVGFEImageElement.prototype.preserveAspectRatio",
      "propertyName": "_get",
      "property": "function preserveAspectRatio() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEImageElement.prototype.preserveAspectRatio",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEImageElement.prototype.x",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFEImageElement.x getter can only be used on instances of SVGFEImageElement"
    },
    {
      "path": "window.SVGFEImageElement.prototype.x",
      "propertyName": "_get",
      "property": "function x() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEImageElement.prototype.x",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEImageElement.prototype.y",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFEImageElement.y getter can only be used on instances of SVGFEImageElement"
    },
    {
      "path": "window.SVGFEImageElement.prototype.y",
      "propertyName": "_get",
      "property": "function y() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEImageElement.prototype.y",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEImageElement.prototype.width",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFEImageElement.width getter can only be used on instances of SVGFEImageElement"
    },
    {
      "path": "window.SVGFEImageElement.prototype.width",
      "propertyName": "_get",
      "property": "function width() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEImageElement.prototype.width",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEImageElement.prototype.height",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFEImageElement.height getter can only be used on instances of SVGFEImageElement"
    },
    {
      "path": "window.SVGFEImageElement.prototype.height",
      "propertyName": "_get",
      "property": "function height() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEImageElement.prototype.height",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEImageElement.prototype.result",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFEImageElement.result getter can only be used on instances of SVGFEImageElement"
    },
    {
      "path": "window.SVGFEImageElement.prototype.result",
      "propertyName": "_get",
      "property": "function result() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEImageElement.prototype.result",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEImageElement.prototype.href",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFEImageElement.href getter can only be used on instances of SVGFEImageElement"
    },
    {
      "path": "window.SVGFEImageElement.prototype.href",
      "propertyName": "_get",
      "property": "function href() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEImageElement.prototype.href",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEImageElement",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.SVGFEImageElement",
      "propertyName": "_function",
      "property": "function SVGFEImageElement() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEMergeElement.prototype.x",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFEMergeElement.x getter can only be used on instances of SVGFEMergeElement"
    },
    {
      "path": "window.SVGFEMergeElement.prototype.x",
      "propertyName": "_get",
      "property": "function x() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEMergeElement.prototype.x",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEMergeElement.prototype.y",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFEMergeElement.y getter can only be used on instances of SVGFEMergeElement"
    },
    {
      "path": "window.SVGFEMergeElement.prototype.y",
      "propertyName": "_get",
      "property": "function y() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEMergeElement.prototype.y",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEMergeElement.prototype.width",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFEMergeElement.width getter can only be used on instances of SVGFEMergeElement"
    },
    {
      "path": "window.SVGFEMergeElement.prototype.width",
      "propertyName": "_get",
      "property": "function width() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEMergeElement.prototype.width",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEMergeElement.prototype.height",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFEMergeElement.height getter can only be used on instances of SVGFEMergeElement"
    },
    {
      "path": "window.SVGFEMergeElement.prototype.height",
      "propertyName": "_get",
      "property": "function height() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEMergeElement.prototype.height",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEMergeElement.prototype.result",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFEMergeElement.result getter can only be used on instances of SVGFEMergeElement"
    },
    {
      "path": "window.SVGFEMergeElement.prototype.result",
      "propertyName": "_get",
      "property": "function result() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEMergeElement.prototype.result",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEMergeElement",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.SVGFEMergeElement",
      "propertyName": "_function",
      "property": "function SVGFEMergeElement() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEMergeNodeElement.prototype.in1",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFEMergeNodeElement.in1 getter can only be used on instances of SVGFEMergeNodeElement"
    },
    {
      "path": "window.SVGFEMergeNodeElement.prototype.in1",
      "propertyName": "_get",
      "property": "function in1() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEMergeNodeElement.prototype.in1",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEMergeNodeElement",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.SVGFEMergeNodeElement",
      "propertyName": "_function",
      "property": "function SVGFEMergeNodeElement() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEMorphologyElement.prototype.in1",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFEMorphologyElement.in1 getter can only be used on instances of SVGFEMorphologyElement"
    },
    {
      "path": "window.SVGFEMorphologyElement.prototype.in1",
      "propertyName": "_get",
      "property": "function in1() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEMorphologyElement.prototype.in1",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEMorphologyElement.prototype.operator",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFEMorphologyElement.operator getter can only be used on instances of SVGFEMorphologyElement"
    },
    {
      "path": "window.SVGFEMorphologyElement.prototype.operator",
      "propertyName": "_get",
      "property": "function operator() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEMorphologyElement.prototype.operator",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEMorphologyElement.prototype.radiusX",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFEMorphologyElement.radiusX getter can only be used on instances of SVGFEMorphologyElement"
    },
    {
      "path": "window.SVGFEMorphologyElement.prototype.radiusX",
      "propertyName": "_get",
      "property": "function radiusX() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEMorphologyElement.prototype.radiusX",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEMorphologyElement.prototype.radiusY",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFEMorphologyElement.radiusY getter can only be used on instances of SVGFEMorphologyElement"
    },
    {
      "path": "window.SVGFEMorphologyElement.prototype.radiusY",
      "propertyName": "_get",
      "property": "function radiusY() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEMorphologyElement.prototype.radiusY",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEMorphologyElement.prototype.x",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFEMorphologyElement.x getter can only be used on instances of SVGFEMorphologyElement"
    },
    {
      "path": "window.SVGFEMorphologyElement.prototype.x",
      "propertyName": "_get",
      "property": "function x() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEMorphologyElement.prototype.x",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEMorphologyElement.prototype.y",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFEMorphologyElement.y getter can only be used on instances of SVGFEMorphologyElement"
    },
    {
      "path": "window.SVGFEMorphologyElement.prototype.y",
      "propertyName": "_get",
      "property": "function y() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEMorphologyElement.prototype.y",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEMorphologyElement.prototype.width",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFEMorphologyElement.width getter can only be used on instances of SVGFEMorphologyElement"
    },
    {
      "path": "window.SVGFEMorphologyElement.prototype.width",
      "propertyName": "_get",
      "property": "function width() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEMorphologyElement.prototype.width",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEMorphologyElement.prototype.height",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFEMorphologyElement.height getter can only be used on instances of SVGFEMorphologyElement"
    },
    {
      "path": "window.SVGFEMorphologyElement.prototype.height",
      "propertyName": "_get",
      "property": "function height() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEMorphologyElement.prototype.height",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEMorphologyElement.prototype.result",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFEMorphologyElement.result getter can only be used on instances of SVGFEMorphologyElement"
    },
    {
      "path": "window.SVGFEMorphologyElement.prototype.result",
      "propertyName": "_get",
      "property": "function result() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEMorphologyElement.prototype.result",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEMorphologyElement",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.SVGFEMorphologyElement",
      "propertyName": "_function",
      "property": "function SVGFEMorphologyElement() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEOffsetElement.prototype.in1",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFEOffsetElement.in1 getter can only be used on instances of SVGFEOffsetElement"
    },
    {
      "path": "window.SVGFEOffsetElement.prototype.in1",
      "propertyName": "_get",
      "property": "function in1() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEOffsetElement.prototype.in1",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEOffsetElement.prototype.dx",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFEOffsetElement.dx getter can only be used on instances of SVGFEOffsetElement"
    },
    {
      "path": "window.SVGFEOffsetElement.prototype.dx",
      "propertyName": "_get",
      "property": "function dx() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEOffsetElement.prototype.dx",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEOffsetElement.prototype.dy",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFEOffsetElement.dy getter can only be used on instances of SVGFEOffsetElement"
    },
    {
      "path": "window.SVGFEOffsetElement.prototype.dy",
      "propertyName": "_get",
      "property": "function dy() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEOffsetElement.prototype.dy",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEOffsetElement.prototype.x",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFEOffsetElement.x getter can only be used on instances of SVGFEOffsetElement"
    },
    {
      "path": "window.SVGFEOffsetElement.prototype.x",
      "propertyName": "_get",
      "property": "function x() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEOffsetElement.prototype.x",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEOffsetElement.prototype.y",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFEOffsetElement.y getter can only be used on instances of SVGFEOffsetElement"
    },
    {
      "path": "window.SVGFEOffsetElement.prototype.y",
      "propertyName": "_get",
      "property": "function y() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEOffsetElement.prototype.y",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEOffsetElement.prototype.width",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFEOffsetElement.width getter can only be used on instances of SVGFEOffsetElement"
    },
    {
      "path": "window.SVGFEOffsetElement.prototype.width",
      "propertyName": "_get",
      "property": "function width() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEOffsetElement.prototype.width",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEOffsetElement.prototype.height",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFEOffsetElement.height getter can only be used on instances of SVGFEOffsetElement"
    },
    {
      "path": "window.SVGFEOffsetElement.prototype.height",
      "propertyName": "_get",
      "property": "function height() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEOffsetElement.prototype.height",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEOffsetElement.prototype.result",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFEOffsetElement.result getter can only be used on instances of SVGFEOffsetElement"
    },
    {
      "path": "window.SVGFEOffsetElement.prototype.result",
      "propertyName": "_get",
      "property": "function result() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEOffsetElement.prototype.result",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEOffsetElement",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.SVGFEOffsetElement",
      "propertyName": "_function",
      "property": "function SVGFEOffsetElement() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEPointLightElement.prototype.x",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFEPointLightElement.x getter can only be used on instances of SVGFEPointLightElement"
    },
    {
      "path": "window.SVGFEPointLightElement.prototype.x",
      "propertyName": "_get",
      "property": "function x() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEPointLightElement.prototype.x",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEPointLightElement.prototype.y",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFEPointLightElement.y getter can only be used on instances of SVGFEPointLightElement"
    },
    {
      "path": "window.SVGFEPointLightElement.prototype.y",
      "propertyName": "_get",
      "property": "function y() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEPointLightElement.prototype.y",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEPointLightElement.prototype.z",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFEPointLightElement.z getter can only be used on instances of SVGFEPointLightElement"
    },
    {
      "path": "window.SVGFEPointLightElement.prototype.z",
      "propertyName": "_get",
      "property": "function z() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEPointLightElement.prototype.z",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFEPointLightElement",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.SVGFEPointLightElement",
      "propertyName": "_function",
      "property": "function SVGFEPointLightElement() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFESpecularLightingElement.prototype.in1",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFESpecularLightingElement.in1 getter can only be used on instances of SVGFESpecularLightingElement"
    },
    {
      "path": "window.SVGFESpecularLightingElement.prototype.in1",
      "propertyName": "_get",
      "property": "function in1() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFESpecularLightingElement.prototype.in1",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFESpecularLightingElement.prototype.surfaceScale",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFESpecularLightingElement.surfaceScale getter can only be used on instances of SVGFESpecularLightingElement"
    },
    {
      "path": "window.SVGFESpecularLightingElement.prototype.surfaceScale",
      "propertyName": "_get",
      "property": "function surfaceScale() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFESpecularLightingElement.prototype.surfaceScale",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFESpecularLightingElement.prototype.specularConstant",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFESpecularLightingElement.specularConstant getter can only be used on instances of SVGFESpecularLightingElement"
    },
    {
      "path": "window.SVGFESpecularLightingElement.prototype.specularConstant",
      "propertyName": "_get",
      "property": "function specularConstant() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFESpecularLightingElement.prototype.specularConstant",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFESpecularLightingElement.prototype.specularExponent",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFESpecularLightingElement.specularExponent getter can only be used on instances of SVGFESpecularLightingElement"
    },
    {
      "path": "window.SVGFESpecularLightingElement.prototype.specularExponent",
      "propertyName": "_get",
      "property": "function specularExponent() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFESpecularLightingElement.prototype.specularExponent",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFESpecularLightingElement.prototype.x",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFESpecularLightingElement.x getter can only be used on instances of SVGFESpecularLightingElement"
    },
    {
      "path": "window.SVGFESpecularLightingElement.prototype.x",
      "propertyName": "_get",
      "property": "function x() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFESpecularLightingElement.prototype.x",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFESpecularLightingElement.prototype.y",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFESpecularLightingElement.y getter can only be used on instances of SVGFESpecularLightingElement"
    },
    {
      "path": "window.SVGFESpecularLightingElement.prototype.y",
      "propertyName": "_get",
      "property": "function y() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFESpecularLightingElement.prototype.y",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFESpecularLightingElement.prototype.width",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFESpecularLightingElement.width getter can only be used on instances of SVGFESpecularLightingElement"
    },
    {
      "path": "window.SVGFESpecularLightingElement.prototype.width",
      "propertyName": "_get",
      "property": "function width() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFESpecularLightingElement.prototype.width",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFESpecularLightingElement.prototype.height",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFESpecularLightingElement.height getter can only be used on instances of SVGFESpecularLightingElement"
    },
    {
      "path": "window.SVGFESpecularLightingElement.prototype.height",
      "propertyName": "_get",
      "property": "function height() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFESpecularLightingElement.prototype.height",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFESpecularLightingElement.prototype.result",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFESpecularLightingElement.result getter can only be used on instances of SVGFESpecularLightingElement"
    },
    {
      "path": "window.SVGFESpecularLightingElement.prototype.result",
      "propertyName": "_get",
      "property": "function result() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFESpecularLightingElement.prototype.result",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFESpecularLightingElement",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.SVGFESpecularLightingElement",
      "propertyName": "_function",
      "property": "function SVGFESpecularLightingElement() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFESpotLightElement.prototype.x",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFESpotLightElement.x getter can only be used on instances of SVGFESpotLightElement"
    },
    {
      "path": "window.SVGFESpotLightElement.prototype.x",
      "propertyName": "_get",
      "property": "function x() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFESpotLightElement.prototype.x",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFESpotLightElement.prototype.y",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFESpotLightElement.y getter can only be used on instances of SVGFESpotLightElement"
    },
    {
      "path": "window.SVGFESpotLightElement.prototype.y",
      "propertyName": "_get",
      "property": "function y() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFESpotLightElement.prototype.y",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFESpotLightElement.prototype.z",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFESpotLightElement.z getter can only be used on instances of SVGFESpotLightElement"
    },
    {
      "path": "window.SVGFESpotLightElement.prototype.z",
      "propertyName": "_get",
      "property": "function z() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFESpotLightElement.prototype.z",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFESpotLightElement.prototype.pointsAtX",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFESpotLightElement.pointsAtX getter can only be used on instances of SVGFESpotLightElement"
    },
    {
      "path": "window.SVGFESpotLightElement.prototype.pointsAtX",
      "propertyName": "_get",
      "property": "function pointsAtX() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFESpotLightElement.prototype.pointsAtX",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFESpotLightElement.prototype.pointsAtY",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFESpotLightElement.pointsAtY getter can only be used on instances of SVGFESpotLightElement"
    },
    {
      "path": "window.SVGFESpotLightElement.prototype.pointsAtY",
      "propertyName": "_get",
      "property": "function pointsAtY() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFESpotLightElement.prototype.pointsAtY",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFESpotLightElement.prototype.pointsAtZ",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFESpotLightElement.pointsAtZ getter can only be used on instances of SVGFESpotLightElement"
    },
    {
      "path": "window.SVGFESpotLightElement.prototype.pointsAtZ",
      "propertyName": "_get",
      "property": "function pointsAtZ() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFESpotLightElement.prototype.pointsAtZ",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFESpotLightElement.prototype.specularExponent",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFESpotLightElement.specularExponent getter can only be used on instances of SVGFESpotLightElement"
    },
    {
      "path": "window.SVGFESpotLightElement.prototype.specularExponent",
      "propertyName": "_get",
      "property": "function specularExponent() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFESpotLightElement.prototype.specularExponent",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFESpotLightElement.prototype.limitingConeAngle",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFESpotLightElement.limitingConeAngle getter can only be used on instances of SVGFESpotLightElement"
    },
    {
      "path": "window.SVGFESpotLightElement.prototype.limitingConeAngle",
      "propertyName": "_get",
      "property": "function limitingConeAngle() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFESpotLightElement.prototype.limitingConeAngle",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFESpotLightElement",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.SVGFESpotLightElement",
      "propertyName": "_function",
      "property": "function SVGFESpotLightElement() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFETileElement.prototype.in1",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFETileElement.in1 getter can only be used on instances of SVGFETileElement"
    },
    {
      "path": "window.SVGFETileElement.prototype.in1",
      "propertyName": "_get",
      "property": "function in1() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFETileElement.prototype.in1",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFETileElement.prototype.x",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFETileElement.x getter can only be used on instances of SVGFETileElement"
    },
    {
      "path": "window.SVGFETileElement.prototype.x",
      "propertyName": "_get",
      "property": "function x() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFETileElement.prototype.x",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFETileElement.prototype.y",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFETileElement.y getter can only be used on instances of SVGFETileElement"
    },
    {
      "path": "window.SVGFETileElement.prototype.y",
      "propertyName": "_get",
      "property": "function y() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFETileElement.prototype.y",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFETileElement.prototype.width",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFETileElement.width getter can only be used on instances of SVGFETileElement"
    },
    {
      "path": "window.SVGFETileElement.prototype.width",
      "propertyName": "_get",
      "property": "function width() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFETileElement.prototype.width",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFETileElement.prototype.height",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFETileElement.height getter can only be used on instances of SVGFETileElement"
    },
    {
      "path": "window.SVGFETileElement.prototype.height",
      "propertyName": "_get",
      "property": "function height() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFETileElement.prototype.height",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFETileElement.prototype.result",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFETileElement.result getter can only be used on instances of SVGFETileElement"
    },
    {
      "path": "window.SVGFETileElement.prototype.result",
      "propertyName": "_get",
      "property": "function result() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFETileElement.prototype.result",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFETileElement",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.SVGFETileElement",
      "propertyName": "_function",
      "property": "function SVGFETileElement() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFETurbulenceElement.prototype.baseFrequencyX",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFETurbulenceElement.baseFrequencyX getter can only be used on instances of SVGFETurbulenceElement"
    },
    {
      "path": "window.SVGFETurbulenceElement.prototype.baseFrequencyX",
      "propertyName": "_get",
      "property": "function baseFrequencyX() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFETurbulenceElement.prototype.baseFrequencyX",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFETurbulenceElement.prototype.baseFrequencyY",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFETurbulenceElement.baseFrequencyY getter can only be used on instances of SVGFETurbulenceElement"
    },
    {
      "path": "window.SVGFETurbulenceElement.prototype.baseFrequencyY",
      "propertyName": "_get",
      "property": "function baseFrequencyY() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFETurbulenceElement.prototype.baseFrequencyY",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFETurbulenceElement.prototype.numOctaves",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFETurbulenceElement.numOctaves getter can only be used on instances of SVGFETurbulenceElement"
    },
    {
      "path": "window.SVGFETurbulenceElement.prototype.numOctaves",
      "propertyName": "_get",
      "property": "function numOctaves() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFETurbulenceElement.prototype.numOctaves",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFETurbulenceElement.prototype.seed",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFETurbulenceElement.seed getter can only be used on instances of SVGFETurbulenceElement"
    },
    {
      "path": "window.SVGFETurbulenceElement.prototype.seed",
      "propertyName": "_get",
      "property": "function seed() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFETurbulenceElement.prototype.seed",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFETurbulenceElement.prototype.stitchTiles",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFETurbulenceElement.stitchTiles getter can only be used on instances of SVGFETurbulenceElement"
    },
    {
      "path": "window.SVGFETurbulenceElement.prototype.stitchTiles",
      "propertyName": "_get",
      "property": "function stitchTiles() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFETurbulenceElement.prototype.stitchTiles",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFETurbulenceElement.prototype.type",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFETurbulenceElement.type getter can only be used on instances of SVGFETurbulenceElement"
    },
    {
      "path": "window.SVGFETurbulenceElement.prototype.type",
      "propertyName": "_get",
      "property": "function type() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFETurbulenceElement.prototype.type",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFETurbulenceElement.prototype.x",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFETurbulenceElement.x getter can only be used on instances of SVGFETurbulenceElement"
    },
    {
      "path": "window.SVGFETurbulenceElement.prototype.x",
      "propertyName": "_get",
      "property": "function x() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFETurbulenceElement.prototype.x",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFETurbulenceElement.prototype.y",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFETurbulenceElement.y getter can only be used on instances of SVGFETurbulenceElement"
    },
    {
      "path": "window.SVGFETurbulenceElement.prototype.y",
      "propertyName": "_get",
      "property": "function y() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFETurbulenceElement.prototype.y",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFETurbulenceElement.prototype.width",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFETurbulenceElement.width getter can only be used on instances of SVGFETurbulenceElement"
    },
    {
      "path": "window.SVGFETurbulenceElement.prototype.width",
      "propertyName": "_get",
      "property": "function width() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFETurbulenceElement.prototype.width",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFETurbulenceElement.prototype.height",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFETurbulenceElement.height getter can only be used on instances of SVGFETurbulenceElement"
    },
    {
      "path": "window.SVGFETurbulenceElement.prototype.height",
      "propertyName": "_get",
      "property": "function height() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFETurbulenceElement.prototype.height",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFETurbulenceElement.prototype.result",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFETurbulenceElement.result getter can only be used on instances of SVGFETurbulenceElement"
    },
    {
      "path": "window.SVGFETurbulenceElement.prototype.result",
      "propertyName": "_get",
      "property": "function result() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFETurbulenceElement.prototype.result",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFETurbulenceElement",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.SVGFETurbulenceElement",
      "propertyName": "_function",
      "property": "function SVGFETurbulenceElement() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFilterElement.prototype.filterUnits",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFilterElement.filterUnits getter can only be used on instances of SVGFilterElement"
    },
    {
      "path": "window.SVGFilterElement.prototype.filterUnits",
      "propertyName": "_get",
      "property": "function filterUnits() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFilterElement.prototype.filterUnits",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFilterElement.prototype.primitiveUnits",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFilterElement.primitiveUnits getter can only be used on instances of SVGFilterElement"
    },
    {
      "path": "window.SVGFilterElement.prototype.primitiveUnits",
      "propertyName": "_get",
      "property": "function primitiveUnits() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFilterElement.prototype.primitiveUnits",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFilterElement.prototype.x",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFilterElement.x getter can only be used on instances of SVGFilterElement"
    },
    {
      "path": "window.SVGFilterElement.prototype.x",
      "propertyName": "_get",
      "property": "function x() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFilterElement.prototype.x",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFilterElement.prototype.y",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFilterElement.y getter can only be used on instances of SVGFilterElement"
    },
    {
      "path": "window.SVGFilterElement.prototype.y",
      "propertyName": "_get",
      "property": "function y() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFilterElement.prototype.y",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFilterElement.prototype.width",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFilterElement.width getter can only be used on instances of SVGFilterElement"
    },
    {
      "path": "window.SVGFilterElement.prototype.width",
      "propertyName": "_get",
      "property": "function width() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFilterElement.prototype.width",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFilterElement.prototype.height",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFilterElement.height getter can only be used on instances of SVGFilterElement"
    },
    {
      "path": "window.SVGFilterElement.prototype.height",
      "propertyName": "_get",
      "property": "function height() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFilterElement.prototype.height",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFilterElement.prototype.href",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGFilterElement.href getter can only be used on instances of SVGFilterElement"
    },
    {
      "path": "window.SVGFilterElement.prototype.href",
      "propertyName": "_get",
      "property": "function href() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFilterElement.prototype.href",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGFilterElement",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.SVGFilterElement",
      "propertyName": "_function",
      "property": "function SVGFilterElement() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGForeignObjectElement.prototype.x",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGForeignObjectElement.x getter can only be used on instances of SVGForeignObjectElement"
    },
    {
      "path": "window.SVGForeignObjectElement.prototype.x",
      "propertyName": "_get",
      "property": "function x() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGForeignObjectElement.prototype.x",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGForeignObjectElement.prototype.y",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGForeignObjectElement.y getter can only be used on instances of SVGForeignObjectElement"
    },
    {
      "path": "window.SVGForeignObjectElement.prototype.y",
      "propertyName": "_get",
      "property": "function y() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGForeignObjectElement.prototype.y",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGForeignObjectElement.prototype.width",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGForeignObjectElement.width getter can only be used on instances of SVGForeignObjectElement"
    },
    {
      "path": "window.SVGForeignObjectElement.prototype.width",
      "propertyName": "_get",
      "property": "function width() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGForeignObjectElement.prototype.width",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGForeignObjectElement.prototype.height",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGForeignObjectElement.height getter can only be used on instances of SVGForeignObjectElement"
    },
    {
      "path": "window.SVGForeignObjectElement.prototype.height",
      "propertyName": "_get",
      "property": "function height() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGForeignObjectElement.prototype.height",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGForeignObjectElement",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.SVGForeignObjectElement",
      "propertyName": "_function",
      "property": "function SVGForeignObjectElement() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGGElement",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.SVGGElement",
      "propertyName": "_function",
      "property": "function SVGGElement() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGGeometryElement.prototype.pathLength",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGGeometryElement.pathLength getter can only be used on instances of SVGGeometryElement"
    },
    {
      "path": "window.SVGGeometryElement.prototype.pathLength",
      "propertyName": "_get",
      "property": "function pathLength() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGGeometryElement.prototype.pathLength",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGGeometryElement.prototype.isPointInFill",
      "propertyName": "_function",
      "property": "function isPointInFill() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGGeometryElement.prototype.isPointInStroke",
      "propertyName": "_function",
      "property": "function isPointInStroke() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGGeometryElement.prototype.getTotalLength",
      "propertyName": "_function",
      "property": "function getTotalLength() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGGeometryElement.prototype.getPointAtLength",
      "propertyName": "_function",
      "property": "function getPointAtLength() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGGeometryElement",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.SVGGeometryElement",
      "propertyName": "_function",
      "property": "function SVGGeometryElement() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGGradientElement.prototype.gradientUnits",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGGradientElement.gradientUnits getter can only be used on instances of SVGGradientElement"
    },
    {
      "path": "window.SVGGradientElement.prototype.gradientUnits",
      "propertyName": "_get",
      "property": "function gradientUnits() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGGradientElement.prototype.gradientUnits",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGGradientElement.prototype.gradientTransform",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGGradientElement.gradientTransform getter can only be used on instances of SVGGradientElement"
    },
    {
      "path": "window.SVGGradientElement.prototype.gradientTransform",
      "propertyName": "_get",
      "property": "function gradientTransform() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGGradientElement.prototype.gradientTransform",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGGradientElement.prototype.spreadMethod",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGGradientElement.spreadMethod getter can only be used on instances of SVGGradientElement"
    },
    {
      "path": "window.SVGGradientElement.prototype.spreadMethod",
      "propertyName": "_get",
      "property": "function spreadMethod() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGGradientElement.prototype.spreadMethod",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGGradientElement.prototype.href",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGGradientElement.href getter can only be used on instances of SVGGradientElement"
    },
    {
      "path": "window.SVGGradientElement.prototype.href",
      "propertyName": "_get",
      "property": "function href() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGGradientElement.prototype.href",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGGradientElement",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.SVGGradientElement",
      "propertyName": "_function",
      "property": "function SVGGradientElement() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGGraphicsElement.prototype.transform",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGGraphicsElement.transform getter can only be used on instances of SVGGraphicsElement"
    },
    {
      "path": "window.SVGGraphicsElement.prototype.transform",
      "propertyName": "_get",
      "property": "function transform() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGGraphicsElement.prototype.transform",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGGraphicsElement.prototype.nearestViewportElement",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGGraphicsElement.nearestViewportElement getter can only be used on instances of SVGGraphicsElement"
    },
    {
      "path": "window.SVGGraphicsElement.prototype.nearestViewportElement",
      "propertyName": "_get",
      "property": "function nearestViewportElement() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGGraphicsElement.prototype.nearestViewportElement",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGGraphicsElement.prototype.farthestViewportElement",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGGraphicsElement.farthestViewportElement getter can only be used on instances of SVGGraphicsElement"
    },
    {
      "path": "window.SVGGraphicsElement.prototype.farthestViewportElement",
      "propertyName": "_get",
      "property": "function farthestViewportElement() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGGraphicsElement.prototype.farthestViewportElement",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGGraphicsElement.prototype.requiredExtensions",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGGraphicsElement.requiredExtensions getter can only be used on instances of SVGGraphicsElement"
    },
    {
      "path": "window.SVGGraphicsElement.prototype.requiredExtensions",
      "propertyName": "_get",
      "property": "function requiredExtensions() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGGraphicsElement.prototype.requiredExtensions",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGGraphicsElement.prototype.systemLanguage",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGGraphicsElement.systemLanguage getter can only be used on instances of SVGGraphicsElement"
    },
    {
      "path": "window.SVGGraphicsElement.prototype.systemLanguage",
      "propertyName": "_get",
      "property": "function systemLanguage() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGGraphicsElement.prototype.systemLanguage",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGGraphicsElement.prototype.getBBox",
      "propertyName": "_function",
      "property": "function getBBox() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGGraphicsElement.prototype.getCTM",
      "propertyName": "_function",
      "property": "function getCTM() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGGraphicsElement.prototype.getScreenCTM",
      "propertyName": "_function",
      "property": "function getScreenCTM() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGGraphicsElement",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.SVGGraphicsElement",
      "propertyName": "_function",
      "property": "function SVGGraphicsElement() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGImageElement.prototype.x",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGImageElement.x getter can only be used on instances of SVGImageElement"
    },
    {
      "path": "window.SVGImageElement.prototype.x",
      "propertyName": "_get",
      "property": "function x() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGImageElement.prototype.x",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGImageElement.prototype.y",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGImageElement.y getter can only be used on instances of SVGImageElement"
    },
    {
      "path": "window.SVGImageElement.prototype.y",
      "propertyName": "_get",
      "property": "function y() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGImageElement.prototype.y",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGImageElement.prototype.width",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGImageElement.width getter can only be used on instances of SVGImageElement"
    },
    {
      "path": "window.SVGImageElement.prototype.width",
      "propertyName": "_get",
      "property": "function width() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGImageElement.prototype.width",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGImageElement.prototype.height",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGImageElement.height getter can only be used on instances of SVGImageElement"
    },
    {
      "path": "window.SVGImageElement.prototype.height",
      "propertyName": "_get",
      "property": "function height() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGImageElement.prototype.height",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGImageElement.prototype.preserveAspectRatio",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGImageElement.preserveAspectRatio getter can only be used on instances of SVGImageElement"
    },
    {
      "path": "window.SVGImageElement.prototype.preserveAspectRatio",
      "propertyName": "_get",
      "property": "function preserveAspectRatio() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGImageElement.prototype.preserveAspectRatio",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGImageElement.prototype.href",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGImageElement.href getter can only be used on instances of SVGImageElement"
    },
    {
      "path": "window.SVGImageElement.prototype.href",
      "propertyName": "_get",
      "property": "function href() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGImageElement.prototype.href",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGImageElement",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.SVGImageElement",
      "propertyName": "_function",
      "property": "function SVGImageElement() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGLength.prototype.unitType",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGLength.unitType getter can only be used on instances of SVGLength"
    },
    {
      "path": "window.SVGLength.prototype.unitType",
      "propertyName": "_get",
      "property": "function unitType() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGLength.prototype.unitType",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGLength.prototype.value",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGLength.value getter can only be used on instances of SVGLength"
    },
    {
      "path": "window.SVGLength.prototype.value",
      "propertyName": "_get",
      "property": "function value() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGLength.prototype.value",
      "propertyName": "_set",
      "property": "function value() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGLength.prototype.value",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGLength.prototype.value",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGLength.prototype.valueInSpecifiedUnits",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGLength.valueInSpecifiedUnits getter can only be used on instances of SVGLength"
    },
    {
      "path": "window.SVGLength.prototype.valueInSpecifiedUnits",
      "propertyName": "_get",
      "property": "function valueInSpecifiedUnits() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGLength.prototype.valueInSpecifiedUnits",
      "propertyName": "_set",
      "property": "function valueInSpecifiedUnits() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGLength.prototype.valueInSpecifiedUnits",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGLength.prototype.valueInSpecifiedUnits",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGLength.prototype.valueAsString",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGLength.valueAsString getter can only be used on instances of SVGLength"
    },
    {
      "path": "window.SVGLength.prototype.valueAsString",
      "propertyName": "_get",
      "property": "function valueAsString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGLength.prototype.valueAsString",
      "propertyName": "_set",
      "property": "function valueAsString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGLength.prototype.valueAsString",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGLength.prototype.valueAsString",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGLength.prototype.newValueSpecifiedUnits",
      "propertyName": "_function",
      "property": "function newValueSpecifiedUnits() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGLength.prototype.convertToSpecifiedUnits",
      "propertyName": "_function",
      "property": "function convertToSpecifiedUnits() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGLength",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.SVGLength",
      "propertyName": "_function",
      "property": "function SVGLength() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGLengthList.prototype.numberOfItems",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGLengthList.numberOfItems getter can only be used on instances of SVGLengthList"
    },
    {
      "path": "window.SVGLengthList.prototype.numberOfItems",
      "propertyName": "_get",
      "property": "function numberOfItems() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGLengthList.prototype.numberOfItems",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGLengthList.prototype.clear",
      "propertyName": "_function",
      "property": "function clear() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGLengthList.prototype.initialize",
      "propertyName": "_function",
      "property": "function initialize() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGLengthList.prototype.getItem",
      "propertyName": "_function",
      "property": "function getItem() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGLengthList.prototype.insertItemBefore",
      "propertyName": "_function",
      "property": "function insertItemBefore() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGLengthList.prototype.replaceItem",
      "propertyName": "_function",
      "property": "function replaceItem() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGLengthList.prototype.removeItem",
      "propertyName": "_function",
      "property": "function removeItem() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGLengthList.prototype.appendItem",
      "propertyName": "_function",
      "property": "function appendItem() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGLengthList",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.SVGLengthList",
      "propertyName": "_function",
      "property": "function SVGLengthList() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGLineElement.prototype.x1",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGLineElement.x1 getter can only be used on instances of SVGLineElement"
    },
    {
      "path": "window.SVGLineElement.prototype.x1",
      "propertyName": "_get",
      "property": "function x1() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGLineElement.prototype.x1",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGLineElement.prototype.y1",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGLineElement.y1 getter can only be used on instances of SVGLineElement"
    },
    {
      "path": "window.SVGLineElement.prototype.y1",
      "propertyName": "_get",
      "property": "function y1() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGLineElement.prototype.y1",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGLineElement.prototype.x2",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGLineElement.x2 getter can only be used on instances of SVGLineElement"
    },
    {
      "path": "window.SVGLineElement.prototype.x2",
      "propertyName": "_get",
      "property": "function x2() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGLineElement.prototype.x2",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGLineElement.prototype.y2",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGLineElement.y2 getter can only be used on instances of SVGLineElement"
    },
    {
      "path": "window.SVGLineElement.prototype.y2",
      "propertyName": "_get",
      "property": "function y2() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGLineElement.prototype.y2",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGLineElement",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.SVGLineElement",
      "propertyName": "_function",
      "property": "function SVGLineElement() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGLinearGradientElement.prototype.x1",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGLinearGradientElement.x1 getter can only be used on instances of SVGLinearGradientElement"
    },
    {
      "path": "window.SVGLinearGradientElement.prototype.x1",
      "propertyName": "_get",
      "property": "function x1() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGLinearGradientElement.prototype.x1",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGLinearGradientElement.prototype.y1",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGLinearGradientElement.y1 getter can only be used on instances of SVGLinearGradientElement"
    },
    {
      "path": "window.SVGLinearGradientElement.prototype.y1",
      "propertyName": "_get",
      "property": "function y1() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGLinearGradientElement.prototype.y1",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGLinearGradientElement.prototype.x2",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGLinearGradientElement.x2 getter can only be used on instances of SVGLinearGradientElement"
    },
    {
      "path": "window.SVGLinearGradientElement.prototype.x2",
      "propertyName": "_get",
      "property": "function x2() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGLinearGradientElement.prototype.x2",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGLinearGradientElement.prototype.y2",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGLinearGradientElement.y2 getter can only be used on instances of SVGLinearGradientElement"
    },
    {
      "path": "window.SVGLinearGradientElement.prototype.y2",
      "propertyName": "_get",
      "property": "function y2() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGLinearGradientElement.prototype.y2",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGLinearGradientElement",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.SVGLinearGradientElement",
      "propertyName": "_function",
      "property": "function SVGLinearGradientElement() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGMPathElement.prototype.href",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGMPathElement.href getter can only be used on instances of SVGMPathElement"
    },
    {
      "path": "window.SVGMPathElement.prototype.href",
      "propertyName": "_get",
      "property": "function href() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGMPathElement.prototype.href",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGMPathElement",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.SVGMPathElement",
      "propertyName": "_function",
      "property": "function SVGMPathElement() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGMarkerElement.prototype.refX",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGMarkerElement.refX getter can only be used on instances of SVGMarkerElement"
    },
    {
      "path": "window.SVGMarkerElement.prototype.refX",
      "propertyName": "_get",
      "property": "function refX() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGMarkerElement.prototype.refX",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGMarkerElement.prototype.refY",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGMarkerElement.refY getter can only be used on instances of SVGMarkerElement"
    },
    {
      "path": "window.SVGMarkerElement.prototype.refY",
      "propertyName": "_get",
      "property": "function refY() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGMarkerElement.prototype.refY",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGMarkerElement.prototype.markerUnits",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGMarkerElement.markerUnits getter can only be used on instances of SVGMarkerElement"
    },
    {
      "path": "window.SVGMarkerElement.prototype.markerUnits",
      "propertyName": "_get",
      "property": "function markerUnits() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGMarkerElement.prototype.markerUnits",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGMarkerElement.prototype.markerWidth",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGMarkerElement.markerWidth getter can only be used on instances of SVGMarkerElement"
    },
    {
      "path": "window.SVGMarkerElement.prototype.markerWidth",
      "propertyName": "_get",
      "property": "function markerWidth() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGMarkerElement.prototype.markerWidth",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGMarkerElement.prototype.markerHeight",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGMarkerElement.markerHeight getter can only be used on instances of SVGMarkerElement"
    },
    {
      "path": "window.SVGMarkerElement.prototype.markerHeight",
      "propertyName": "_get",
      "property": "function markerHeight() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGMarkerElement.prototype.markerHeight",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGMarkerElement.prototype.orientType",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGMarkerElement.orientType getter can only be used on instances of SVGMarkerElement"
    },
    {
      "path": "window.SVGMarkerElement.prototype.orientType",
      "propertyName": "_get",
      "property": "function orientType() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGMarkerElement.prototype.orientType",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGMarkerElement.prototype.orientAngle",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGMarkerElement.orientAngle getter can only be used on instances of SVGMarkerElement"
    },
    {
      "path": "window.SVGMarkerElement.prototype.orientAngle",
      "propertyName": "_get",
      "property": "function orientAngle() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGMarkerElement.prototype.orientAngle",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGMarkerElement.prototype.viewBox",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGMarkerElement.viewBox getter can only be used on instances of SVGMarkerElement"
    },
    {
      "path": "window.SVGMarkerElement.prototype.viewBox",
      "propertyName": "_get",
      "property": "function viewBox() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGMarkerElement.prototype.viewBox",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGMarkerElement.prototype.preserveAspectRatio",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGMarkerElement.preserveAspectRatio getter can only be used on instances of SVGMarkerElement"
    },
    {
      "path": "window.SVGMarkerElement.prototype.preserveAspectRatio",
      "propertyName": "_get",
      "property": "function preserveAspectRatio() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGMarkerElement.prototype.preserveAspectRatio",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGMarkerElement.prototype.setOrientToAuto",
      "propertyName": "_function",
      "property": "function setOrientToAuto() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGMarkerElement.prototype.setOrientToAngle",
      "propertyName": "_function",
      "property": "function setOrientToAngle() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGMarkerElement",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.SVGMarkerElement",
      "propertyName": "_function",
      "property": "function SVGMarkerElement() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGMaskElement.prototype.maskUnits",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGMaskElement.maskUnits getter can only be used on instances of SVGMaskElement"
    },
    {
      "path": "window.SVGMaskElement.prototype.maskUnits",
      "propertyName": "_get",
      "property": "function maskUnits() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGMaskElement.prototype.maskUnits",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGMaskElement.prototype.maskContentUnits",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGMaskElement.maskContentUnits getter can only be used on instances of SVGMaskElement"
    },
    {
      "path": "window.SVGMaskElement.prototype.maskContentUnits",
      "propertyName": "_get",
      "property": "function maskContentUnits() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGMaskElement.prototype.maskContentUnits",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGMaskElement.prototype.x",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGMaskElement.x getter can only be used on instances of SVGMaskElement"
    },
    {
      "path": "window.SVGMaskElement.prototype.x",
      "propertyName": "_get",
      "property": "function x() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGMaskElement.prototype.x",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGMaskElement.prototype.y",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGMaskElement.y getter can only be used on instances of SVGMaskElement"
    },
    {
      "path": "window.SVGMaskElement.prototype.y",
      "propertyName": "_get",
      "property": "function y() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGMaskElement.prototype.y",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGMaskElement.prototype.width",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGMaskElement.width getter can only be used on instances of SVGMaskElement"
    },
    {
      "path": "window.SVGMaskElement.prototype.width",
      "propertyName": "_get",
      "property": "function width() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGMaskElement.prototype.width",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGMaskElement.prototype.height",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGMaskElement.height getter can only be used on instances of SVGMaskElement"
    },
    {
      "path": "window.SVGMaskElement.prototype.height",
      "propertyName": "_get",
      "property": "function height() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGMaskElement.prototype.height",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGMaskElement.prototype.requiredExtensions",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGMaskElement.requiredExtensions getter can only be used on instances of SVGMaskElement"
    },
    {
      "path": "window.SVGMaskElement.prototype.requiredExtensions",
      "propertyName": "_get",
      "property": "function requiredExtensions() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGMaskElement.prototype.requiredExtensions",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGMaskElement.prototype.systemLanguage",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGMaskElement.systemLanguage getter can only be used on instances of SVGMaskElement"
    },
    {
      "path": "window.SVGMaskElement.prototype.systemLanguage",
      "propertyName": "_get",
      "property": "function systemLanguage() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGMaskElement.prototype.systemLanguage",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGMaskElement",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.SVGMaskElement",
      "propertyName": "_function",
      "property": "function SVGMaskElement() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGMatrix.prototype.a",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGMatrix.a getter can only be used on instances of SVGMatrix"
    },
    {
      "path": "window.SVGMatrix.prototype.a",
      "propertyName": "_get",
      "property": "function a() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGMatrix.prototype.a",
      "propertyName": "_set",
      "property": "function a() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGMatrix.prototype.a",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGMatrix.prototype.a",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGMatrix.prototype.b",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGMatrix.b getter can only be used on instances of SVGMatrix"
    },
    {
      "path": "window.SVGMatrix.prototype.b",
      "propertyName": "_get",
      "property": "function b() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGMatrix.prototype.b",
      "propertyName": "_set",
      "property": "function b() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGMatrix.prototype.b",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGMatrix.prototype.b",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGMatrix.prototype.c",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGMatrix.c getter can only be used on instances of SVGMatrix"
    },
    {
      "path": "window.SVGMatrix.prototype.c",
      "propertyName": "_get",
      "property": "function c() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGMatrix.prototype.c",
      "propertyName": "_set",
      "property": "function c() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGMatrix.prototype.c",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGMatrix.prototype.c",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGMatrix.prototype.d",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGMatrix.d getter can only be used on instances of SVGMatrix"
    },
    {
      "path": "window.SVGMatrix.prototype.d",
      "propertyName": "_get",
      "property": "function d() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGMatrix.prototype.d",
      "propertyName": "_set",
      "property": "function d() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGMatrix.prototype.d",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGMatrix.prototype.d",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGMatrix.prototype.e",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGMatrix.e getter can only be used on instances of SVGMatrix"
    },
    {
      "path": "window.SVGMatrix.prototype.e",
      "propertyName": "_get",
      "property": "function e() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGMatrix.prototype.e",
      "propertyName": "_set",
      "property": "function e() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGMatrix.prototype.e",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGMatrix.prototype.e",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGMatrix.prototype.f",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGMatrix.f getter can only be used on instances of SVGMatrix"
    },
    {
      "path": "window.SVGMatrix.prototype.f",
      "propertyName": "_get",
      "property": "function f() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGMatrix.prototype.f",
      "propertyName": "_set",
      "property": "function f() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGMatrix.prototype.f",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGMatrix.prototype.f",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGMatrix.prototype.multiply",
      "propertyName": "_function",
      "property": "function multiply() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGMatrix.prototype.inverse",
      "propertyName": "_function",
      "property": "function inverse() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGMatrix.prototype.translate",
      "propertyName": "_function",
      "property": "function translate() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGMatrix.prototype.scale",
      "propertyName": "_function",
      "property": "function scale() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGMatrix.prototype.scaleNonUniform",
      "propertyName": "_function",
      "property": "function scaleNonUniform() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGMatrix.prototype.rotate",
      "propertyName": "_function",
      "property": "function rotate() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGMatrix.prototype.rotateFromVector",
      "propertyName": "_function",
      "property": "function rotateFromVector() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGMatrix.prototype.flipX",
      "propertyName": "_function",
      "property": "function flipX() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGMatrix.prototype.flipY",
      "propertyName": "_function",
      "property": "function flipY() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGMatrix.prototype.skewX",
      "propertyName": "_function",
      "property": "function skewX() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGMatrix.prototype.skewY",
      "propertyName": "_function",
      "property": "function skewY() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGMatrix",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.SVGMatrix",
      "propertyName": "_function",
      "property": "function SVGMatrix() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGMetadataElement",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.SVGMetadataElement",
      "propertyName": "_function",
      "property": "function SVGMetadataElement() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGNumber.prototype.value",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGNumber.value getter can only be used on instances of SVGNumber"
    },
    {
      "path": "window.SVGNumber.prototype.value",
      "propertyName": "_get",
      "property": "function value() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGNumber.prototype.value",
      "propertyName": "_set",
      "property": "function value() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGNumber.prototype.value",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGNumber.prototype.value",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGNumber",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.SVGNumber",
      "propertyName": "_function",
      "property": "function SVGNumber() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGNumberList.prototype.numberOfItems",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGNumberList.numberOfItems getter can only be used on instances of SVGNumberList"
    },
    {
      "path": "window.SVGNumberList.prototype.numberOfItems",
      "propertyName": "_get",
      "property": "function numberOfItems() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGNumberList.prototype.numberOfItems",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGNumberList.prototype.clear",
      "propertyName": "_function",
      "property": "function clear() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGNumberList.prototype.initialize",
      "propertyName": "_function",
      "property": "function initialize() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGNumberList.prototype.getItem",
      "propertyName": "_function",
      "property": "function getItem() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGNumberList.prototype.insertItemBefore",
      "propertyName": "_function",
      "property": "function insertItemBefore() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGNumberList.prototype.replaceItem",
      "propertyName": "_function",
      "property": "function replaceItem() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGNumberList.prototype.removeItem",
      "propertyName": "_function",
      "property": "function removeItem() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGNumberList.prototype.appendItem",
      "propertyName": "_function",
      "property": "function appendItem() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGNumberList",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.SVGNumberList",
      "propertyName": "_function",
      "property": "function SVGNumberList() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGPathElement",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.SVGPathElement",
      "propertyName": "_function",
      "property": "function SVGPathElement() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGPatternElement.prototype.patternUnits",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGPatternElement.patternUnits getter can only be used on instances of SVGPatternElement"
    },
    {
      "path": "window.SVGPatternElement.prototype.patternUnits",
      "propertyName": "_get",
      "property": "function patternUnits() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGPatternElement.prototype.patternUnits",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGPatternElement.prototype.patternContentUnits",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGPatternElement.patternContentUnits getter can only be used on instances of SVGPatternElement"
    },
    {
      "path": "window.SVGPatternElement.prototype.patternContentUnits",
      "propertyName": "_get",
      "property": "function patternContentUnits() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGPatternElement.prototype.patternContentUnits",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGPatternElement.prototype.patternTransform",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGPatternElement.patternTransform getter can only be used on instances of SVGPatternElement"
    },
    {
      "path": "window.SVGPatternElement.prototype.patternTransform",
      "propertyName": "_get",
      "property": "function patternTransform() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGPatternElement.prototype.patternTransform",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGPatternElement.prototype.x",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGPatternElement.x getter can only be used on instances of SVGPatternElement"
    },
    {
      "path": "window.SVGPatternElement.prototype.x",
      "propertyName": "_get",
      "property": "function x() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGPatternElement.prototype.x",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGPatternElement.prototype.y",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGPatternElement.y getter can only be used on instances of SVGPatternElement"
    },
    {
      "path": "window.SVGPatternElement.prototype.y",
      "propertyName": "_get",
      "property": "function y() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGPatternElement.prototype.y",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGPatternElement.prototype.width",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGPatternElement.width getter can only be used on instances of SVGPatternElement"
    },
    {
      "path": "window.SVGPatternElement.prototype.width",
      "propertyName": "_get",
      "property": "function width() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGPatternElement.prototype.width",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGPatternElement.prototype.height",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGPatternElement.height getter can only be used on instances of SVGPatternElement"
    },
    {
      "path": "window.SVGPatternElement.prototype.height",
      "propertyName": "_get",
      "property": "function height() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGPatternElement.prototype.height",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGPatternElement.prototype.viewBox",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGPatternElement.viewBox getter can only be used on instances of SVGPatternElement"
    },
    {
      "path": "window.SVGPatternElement.prototype.viewBox",
      "propertyName": "_get",
      "property": "function viewBox() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGPatternElement.prototype.viewBox",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGPatternElement.prototype.preserveAspectRatio",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGPatternElement.preserveAspectRatio getter can only be used on instances of SVGPatternElement"
    },
    {
      "path": "window.SVGPatternElement.prototype.preserveAspectRatio",
      "propertyName": "_get",
      "property": "function preserveAspectRatio() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGPatternElement.prototype.preserveAspectRatio",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGPatternElement.prototype.requiredExtensions",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGPatternElement.requiredExtensions getter can only be used on instances of SVGPatternElement"
    },
    {
      "path": "window.SVGPatternElement.prototype.requiredExtensions",
      "propertyName": "_get",
      "property": "function requiredExtensions() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGPatternElement.prototype.requiredExtensions",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGPatternElement.prototype.systemLanguage",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGPatternElement.systemLanguage getter can only be used on instances of SVGPatternElement"
    },
    {
      "path": "window.SVGPatternElement.prototype.systemLanguage",
      "propertyName": "_get",
      "property": "function systemLanguage() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGPatternElement.prototype.systemLanguage",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGPatternElement.prototype.href",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGPatternElement.href getter can only be used on instances of SVGPatternElement"
    },
    {
      "path": "window.SVGPatternElement.prototype.href",
      "propertyName": "_get",
      "property": "function href() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGPatternElement.prototype.href",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGPatternElement",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.SVGPatternElement",
      "propertyName": "_function",
      "property": "function SVGPatternElement() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGPoint.prototype.x",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGPoint.x getter can only be used on instances of SVGPoint"
    },
    {
      "path": "window.SVGPoint.prototype.x",
      "propertyName": "_get",
      "property": "function x() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGPoint.prototype.x",
      "propertyName": "_set",
      "property": "function x() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGPoint.prototype.x",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGPoint.prototype.x",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGPoint.prototype.y",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGPoint.y getter can only be used on instances of SVGPoint"
    },
    {
      "path": "window.SVGPoint.prototype.y",
      "propertyName": "_get",
      "property": "function y() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGPoint.prototype.y",
      "propertyName": "_set",
      "property": "function y() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGPoint.prototype.y",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGPoint.prototype.y",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGPoint.prototype.matrixTransform",
      "propertyName": "_function",
      "property": "function matrixTransform() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGPoint",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.SVGPoint",
      "propertyName": "_function",
      "property": "function SVGPoint() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGPointList.prototype.numberOfItems",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGPointList.numberOfItems getter can only be used on instances of SVGPointList"
    },
    {
      "path": "window.SVGPointList.prototype.numberOfItems",
      "propertyName": "_get",
      "property": "function numberOfItems() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGPointList.prototype.numberOfItems",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGPointList.prototype.clear",
      "propertyName": "_function",
      "property": "function clear() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGPointList.prototype.initialize",
      "propertyName": "_function",
      "property": "function initialize() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGPointList.prototype.getItem",
      "propertyName": "_function",
      "property": "function getItem() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGPointList.prototype.insertItemBefore",
      "propertyName": "_function",
      "property": "function insertItemBefore() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGPointList.prototype.replaceItem",
      "propertyName": "_function",
      "property": "function replaceItem() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGPointList.prototype.removeItem",
      "propertyName": "_function",
      "property": "function removeItem() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGPointList.prototype.appendItem",
      "propertyName": "_function",
      "property": "function appendItem() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGPointList",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.SVGPointList",
      "propertyName": "_function",
      "property": "function SVGPointList() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGPolygonElement.prototype.points",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGPolygonElement.points getter can only be used on instances of SVGPolygonElement"
    },
    {
      "path": "window.SVGPolygonElement.prototype.points",
      "propertyName": "_get",
      "property": "function points() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGPolygonElement.prototype.points",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGPolygonElement.prototype.animatedPoints",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGPolygonElement.animatedPoints getter can only be used on instances of SVGPolygonElement"
    },
    {
      "path": "window.SVGPolygonElement.prototype.animatedPoints",
      "propertyName": "_get",
      "property": "function animatedPoints() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGPolygonElement.prototype.animatedPoints",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGPolygonElement",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.SVGPolygonElement",
      "propertyName": "_function",
      "property": "function SVGPolygonElement() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGPolylineElement.prototype.points",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGPolylineElement.points getter can only be used on instances of SVGPolylineElement"
    },
    {
      "path": "window.SVGPolylineElement.prototype.points",
      "propertyName": "_get",
      "property": "function points() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGPolylineElement.prototype.points",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGPolylineElement.prototype.animatedPoints",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGPolylineElement.animatedPoints getter can only be used on instances of SVGPolylineElement"
    },
    {
      "path": "window.SVGPolylineElement.prototype.animatedPoints",
      "propertyName": "_get",
      "property": "function animatedPoints() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGPolylineElement.prototype.animatedPoints",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGPolylineElement",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.SVGPolylineElement",
      "propertyName": "_function",
      "property": "function SVGPolylineElement() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGPreserveAspectRatio.prototype.align",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGPreserveAspectRatio.align getter can only be used on instances of SVGPreserveAspectRatio"
    },
    {
      "path": "window.SVGPreserveAspectRatio.prototype.align",
      "propertyName": "_get",
      "property": "function align() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGPreserveAspectRatio.prototype.align",
      "propertyName": "_set",
      "property": "function align() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGPreserveAspectRatio.prototype.align",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGPreserveAspectRatio.prototype.align",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGPreserveAspectRatio.prototype.meetOrSlice",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGPreserveAspectRatio.meetOrSlice getter can only be used on instances of SVGPreserveAspectRatio"
    },
    {
      "path": "window.SVGPreserveAspectRatio.prototype.meetOrSlice",
      "propertyName": "_get",
      "property": "function meetOrSlice() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGPreserveAspectRatio.prototype.meetOrSlice",
      "propertyName": "_set",
      "property": "function meetOrSlice() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGPreserveAspectRatio.prototype.meetOrSlice",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGPreserveAspectRatio.prototype.meetOrSlice",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGPreserveAspectRatio",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.SVGPreserveAspectRatio",
      "propertyName": "_function",
      "property": "function SVGPreserveAspectRatio() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGRadialGradientElement.prototype.cx",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGRadialGradientElement.cx getter can only be used on instances of SVGRadialGradientElement"
    },
    {
      "path": "window.SVGRadialGradientElement.prototype.cx",
      "propertyName": "_get",
      "property": "function cx() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGRadialGradientElement.prototype.cx",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGRadialGradientElement.prototype.cy",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGRadialGradientElement.cy getter can only be used on instances of SVGRadialGradientElement"
    },
    {
      "path": "window.SVGRadialGradientElement.prototype.cy",
      "propertyName": "_get",
      "property": "function cy() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGRadialGradientElement.prototype.cy",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGRadialGradientElement.prototype.r",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGRadialGradientElement.r getter can only be used on instances of SVGRadialGradientElement"
    },
    {
      "path": "window.SVGRadialGradientElement.prototype.r",
      "propertyName": "_get",
      "property": "function r() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGRadialGradientElement.prototype.r",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGRadialGradientElement.prototype.fx",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGRadialGradientElement.fx getter can only be used on instances of SVGRadialGradientElement"
    },
    {
      "path": "window.SVGRadialGradientElement.prototype.fx",
      "propertyName": "_get",
      "property": "function fx() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGRadialGradientElement.prototype.fx",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGRadialGradientElement.prototype.fy",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGRadialGradientElement.fy getter can only be used on instances of SVGRadialGradientElement"
    },
    {
      "path": "window.SVGRadialGradientElement.prototype.fy",
      "propertyName": "_get",
      "property": "function fy() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGRadialGradientElement.prototype.fy",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGRadialGradientElement.prototype.fr",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGRadialGradientElement.fr getter can only be used on instances of SVGRadialGradientElement"
    },
    {
      "path": "window.SVGRadialGradientElement.prototype.fr",
      "propertyName": "_get",
      "property": "function fr() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGRadialGradientElement.prototype.fr",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGRadialGradientElement",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.SVGRadialGradientElement",
      "propertyName": "_function",
      "property": "function SVGRadialGradientElement() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGRect.prototype.x",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGRect.x getter can only be used on instances of SVGRect"
    },
    {
      "path": "window.SVGRect.prototype.x",
      "propertyName": "_get",
      "property": "function x() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGRect.prototype.x",
      "propertyName": "_set",
      "property": "function x() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGRect.prototype.x",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGRect.prototype.x",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGRect.prototype.y",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGRect.y getter can only be used on instances of SVGRect"
    },
    {
      "path": "window.SVGRect.prototype.y",
      "propertyName": "_get",
      "property": "function y() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGRect.prototype.y",
      "propertyName": "_set",
      "property": "function y() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGRect.prototype.y",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGRect.prototype.y",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGRect.prototype.width",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGRect.width getter can only be used on instances of SVGRect"
    },
    {
      "path": "window.SVGRect.prototype.width",
      "propertyName": "_get",
      "property": "function width() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGRect.prototype.width",
      "propertyName": "_set",
      "property": "function width() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGRect.prototype.width",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGRect.prototype.width",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGRect.prototype.height",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGRect.height getter can only be used on instances of SVGRect"
    },
    {
      "path": "window.SVGRect.prototype.height",
      "propertyName": "_get",
      "property": "function height() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGRect.prototype.height",
      "propertyName": "_set",
      "property": "function height() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGRect.prototype.height",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGRect.prototype.height",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGRect",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.SVGRect",
      "propertyName": "_function",
      "property": "function SVGRect() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGRectElement.prototype.x",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGRectElement.x getter can only be used on instances of SVGRectElement"
    },
    {
      "path": "window.SVGRectElement.prototype.x",
      "propertyName": "_get",
      "property": "function x() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGRectElement.prototype.x",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGRectElement.prototype.y",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGRectElement.y getter can only be used on instances of SVGRectElement"
    },
    {
      "path": "window.SVGRectElement.prototype.y",
      "propertyName": "_get",
      "property": "function y() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGRectElement.prototype.y",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGRectElement.prototype.width",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGRectElement.width getter can only be used on instances of SVGRectElement"
    },
    {
      "path": "window.SVGRectElement.prototype.width",
      "propertyName": "_get",
      "property": "function width() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGRectElement.prototype.width",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGRectElement.prototype.height",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGRectElement.height getter can only be used on instances of SVGRectElement"
    },
    {
      "path": "window.SVGRectElement.prototype.height",
      "propertyName": "_get",
      "property": "function height() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGRectElement.prototype.height",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGRectElement.prototype.rx",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGRectElement.rx getter can only be used on instances of SVGRectElement"
    },
    {
      "path": "window.SVGRectElement.prototype.rx",
      "propertyName": "_get",
      "property": "function rx() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGRectElement.prototype.rx",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGRectElement.prototype.ry",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGRectElement.ry getter can only be used on instances of SVGRectElement"
    },
    {
      "path": "window.SVGRectElement.prototype.ry",
      "propertyName": "_get",
      "property": "function ry() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGRectElement.prototype.ry",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGRectElement",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.SVGRectElement",
      "propertyName": "_function",
      "property": "function SVGRectElement() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGSVGElement.prototype.x",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGSVGElement.x getter can only be used on instances of SVGSVGElement"
    },
    {
      "path": "window.SVGSVGElement.prototype.x",
      "propertyName": "_get",
      "property": "function x() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGSVGElement.prototype.x",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGSVGElement.prototype.y",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGSVGElement.y getter can only be used on instances of SVGSVGElement"
    },
    {
      "path": "window.SVGSVGElement.prototype.y",
      "propertyName": "_get",
      "property": "function y() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGSVGElement.prototype.y",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGSVGElement.prototype.width",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGSVGElement.width getter can only be used on instances of SVGSVGElement"
    },
    {
      "path": "window.SVGSVGElement.prototype.width",
      "propertyName": "_get",
      "property": "function width() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGSVGElement.prototype.width",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGSVGElement.prototype.height",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGSVGElement.height getter can only be used on instances of SVGSVGElement"
    },
    {
      "path": "window.SVGSVGElement.prototype.height",
      "propertyName": "_get",
      "property": "function height() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGSVGElement.prototype.height",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGSVGElement.prototype.currentScale",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGSVGElement.currentScale getter can only be used on instances of SVGSVGElement"
    },
    {
      "path": "window.SVGSVGElement.prototype.currentScale",
      "propertyName": "_get",
      "property": "function currentScale() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGSVGElement.prototype.currentScale",
      "propertyName": "_set",
      "property": "function currentScale() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGSVGElement.prototype.currentScale",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGSVGElement.prototype.currentScale",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGSVGElement.prototype.currentTranslate",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGSVGElement.currentTranslate getter can only be used on instances of SVGSVGElement"
    },
    {
      "path": "window.SVGSVGElement.prototype.currentTranslate",
      "propertyName": "_get",
      "property": "function currentTranslate() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGSVGElement.prototype.currentTranslate",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGSVGElement.prototype.viewBox",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGSVGElement.viewBox getter can only be used on instances of SVGSVGElement"
    },
    {
      "path": "window.SVGSVGElement.prototype.viewBox",
      "propertyName": "_get",
      "property": "function viewBox() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGSVGElement.prototype.viewBox",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGSVGElement.prototype.preserveAspectRatio",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGSVGElement.preserveAspectRatio getter can only be used on instances of SVGSVGElement"
    },
    {
      "path": "window.SVGSVGElement.prototype.preserveAspectRatio",
      "propertyName": "_get",
      "property": "function preserveAspectRatio() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGSVGElement.prototype.preserveAspectRatio",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGSVGElement.prototype.zoomAndPan",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGSVGElement.zoomAndPan getter can only be used on instances of SVGSVGElement"
    },
    {
      "path": "window.SVGSVGElement.prototype.zoomAndPan",
      "propertyName": "_get",
      "property": "function zoomAndPan() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGSVGElement.prototype.zoomAndPan",
      "propertyName": "_set",
      "property": "function zoomAndPan() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGSVGElement.prototype.zoomAndPan",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGSVGElement.prototype.zoomAndPan",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGSVGElement.prototype.suspendRedraw",
      "propertyName": "_function",
      "property": "function suspendRedraw() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGSVGElement.prototype.unsuspendRedraw",
      "propertyName": "_function",
      "property": "function unsuspendRedraw() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGSVGElement.prototype.unsuspendRedrawAll",
      "propertyName": "_function",
      "property": "function unsuspendRedrawAll() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGSVGElement.prototype.forceRedraw",
      "propertyName": "_function",
      "property": "function forceRedraw() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGSVGElement.prototype.pauseAnimations",
      "propertyName": "_function",
      "property": "function pauseAnimations() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGSVGElement.prototype.unpauseAnimations",
      "propertyName": "_function",
      "property": "function unpauseAnimations() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGSVGElement.prototype.animationsPaused",
      "propertyName": "_function",
      "property": "function animationsPaused() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGSVGElement.prototype.getCurrentTime",
      "propertyName": "_function",
      "property": "function getCurrentTime() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGSVGElement.prototype.setCurrentTime",
      "propertyName": "_function",
      "property": "function setCurrentTime() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGSVGElement.prototype.getIntersectionList",
      "propertyName": "_function",
      "property": "function getIntersectionList() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGSVGElement.prototype.getEnclosureList",
      "propertyName": "_function",
      "property": "function getEnclosureList() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGSVGElement.prototype.checkIntersection",
      "propertyName": "_function",
      "property": "function checkIntersection() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGSVGElement.prototype.checkEnclosure",
      "propertyName": "_function",
      "property": "function checkEnclosure() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGSVGElement.prototype.deselectAll",
      "propertyName": "_function",
      "property": "function deselectAll() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGSVGElement.prototype.createSVGNumber",
      "propertyName": "_function",
      "property": "function createSVGNumber() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGSVGElement.prototype.createSVGLength",
      "propertyName": "_function",
      "property": "function createSVGLength() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGSVGElement.prototype.createSVGAngle",
      "propertyName": "_function",
      "property": "function createSVGAngle() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGSVGElement.prototype.createSVGPoint",
      "propertyName": "_function",
      "property": "function createSVGPoint() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGSVGElement.prototype.createSVGMatrix",
      "propertyName": "_function",
      "property": "function createSVGMatrix() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGSVGElement.prototype.createSVGRect",
      "propertyName": "_function",
      "property": "function createSVGRect() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGSVGElement.prototype.createSVGTransform",
      "propertyName": "_function",
      "property": "function createSVGTransform() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGSVGElement.prototype.createSVGTransformFromMatrix",
      "propertyName": "_function",
      "property": "function createSVGTransformFromMatrix() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGSVGElement.prototype.getElementById",
      "propertyName": "_function",
      "property": "function getElementById() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGSVGElement",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.SVGSVGElement",
      "propertyName": "_function",
      "property": "function SVGSVGElement() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGScriptElement.prototype.type",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGScriptElement.type getter can only be used on instances of SVGScriptElement"
    },
    {
      "path": "window.SVGScriptElement.prototype.type",
      "propertyName": "_get",
      "property": "function type() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGScriptElement.prototype.type",
      "propertyName": "_set",
      "property": "function type() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGScriptElement.prototype.type",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGScriptElement.prototype.type",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGScriptElement.prototype.href",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGScriptElement.href getter can only be used on instances of SVGScriptElement"
    },
    {
      "path": "window.SVGScriptElement.prototype.href",
      "propertyName": "_get",
      "property": "function href() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGScriptElement.prototype.href",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGScriptElement",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.SVGScriptElement",
      "propertyName": "_function",
      "property": "function SVGScriptElement() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGSetElement",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.SVGSetElement",
      "propertyName": "_function",
      "property": "function SVGSetElement() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGStopElement.prototype.offset",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGStopElement.offset getter can only be used on instances of SVGStopElement"
    },
    {
      "path": "window.SVGStopElement.prototype.offset",
      "propertyName": "_get",
      "property": "function offset() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGStopElement.prototype.offset",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGStopElement",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.SVGStopElement",
      "propertyName": "_function",
      "property": "function SVGStopElement() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGStringList.prototype.numberOfItems",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGStringList.numberOfItems getter can only be used on instances of SVGStringList"
    },
    {
      "path": "window.SVGStringList.prototype.numberOfItems",
      "propertyName": "_get",
      "property": "function numberOfItems() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGStringList.prototype.numberOfItems",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGStringList.prototype.clear",
      "propertyName": "_function",
      "property": "function clear() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGStringList.prototype.initialize",
      "propertyName": "_function",
      "property": "function initialize() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGStringList.prototype.getItem",
      "propertyName": "_function",
      "property": "function getItem() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGStringList.prototype.insertItemBefore",
      "propertyName": "_function",
      "property": "function insertItemBefore() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGStringList.prototype.replaceItem",
      "propertyName": "_function",
      "property": "function replaceItem() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGStringList.prototype.removeItem",
      "propertyName": "_function",
      "property": "function removeItem() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGStringList.prototype.appendItem",
      "propertyName": "_function",
      "property": "function appendItem() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGStringList",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.SVGStringList",
      "propertyName": "_function",
      "property": "function SVGStringList() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGStyleElement.prototype.disabled",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGStyleElement.disabled getter can only be used on instances of SVGStyleElement"
    },
    {
      "path": "window.SVGStyleElement.prototype.disabled",
      "propertyName": "_get",
      "property": "function disabled() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGStyleElement.prototype.disabled",
      "propertyName": "_set",
      "property": "function disabled() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGStyleElement.prototype.disabled",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGStyleElement.prototype.disabled",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGStyleElement.prototype.type",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGStyleElement.type getter can only be used on instances of SVGStyleElement"
    },
    {
      "path": "window.SVGStyleElement.prototype.type",
      "propertyName": "_get",
      "property": "function type() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGStyleElement.prototype.type",
      "propertyName": "_set",
      "property": "function type() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGStyleElement.prototype.type",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGStyleElement.prototype.type",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGStyleElement.prototype.media",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGStyleElement.media getter can only be used on instances of SVGStyleElement"
    },
    {
      "path": "window.SVGStyleElement.prototype.media",
      "propertyName": "_get",
      "property": "function media() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGStyleElement.prototype.media",
      "propertyName": "_set",
      "property": "function media() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGStyleElement.prototype.media",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGStyleElement.prototype.media",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGStyleElement.prototype.title",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGStyleElement.title getter can only be used on instances of SVGStyleElement"
    },
    {
      "path": "window.SVGStyleElement.prototype.title",
      "propertyName": "_get",
      "property": "function title() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGStyleElement.prototype.title",
      "propertyName": "_set",
      "property": "function title() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGStyleElement.prototype.title",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGStyleElement.prototype.title",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGStyleElement",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.SVGStyleElement",
      "propertyName": "_function",
      "property": "function SVGStyleElement() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGSwitchElement",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.SVGSwitchElement",
      "propertyName": "_function",
      "property": "function SVGSwitchElement() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGSymbolElement.prototype.viewBox",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGSymbolElement.viewBox getter can only be used on instances of SVGSymbolElement"
    },
    {
      "path": "window.SVGSymbolElement.prototype.viewBox",
      "propertyName": "_get",
      "property": "function viewBox() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGSymbolElement.prototype.viewBox",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGSymbolElement.prototype.preserveAspectRatio",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGSymbolElement.preserveAspectRatio getter can only be used on instances of SVGSymbolElement"
    },
    {
      "path": "window.SVGSymbolElement.prototype.preserveAspectRatio",
      "propertyName": "_get",
      "property": "function preserveAspectRatio() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGSymbolElement.prototype.preserveAspectRatio",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGSymbolElement",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.SVGSymbolElement",
      "propertyName": "_function",
      "property": "function SVGSymbolElement() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGTSpanElement",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.SVGTSpanElement",
      "propertyName": "_function",
      "property": "function SVGTSpanElement() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGTextContentElement.prototype.textLength",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGTextContentElement.textLength getter can only be used on instances of SVGTextContentElement"
    },
    {
      "path": "window.SVGTextContentElement.prototype.textLength",
      "propertyName": "_get",
      "property": "function textLength() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGTextContentElement.prototype.textLength",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGTextContentElement.prototype.lengthAdjust",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGTextContentElement.lengthAdjust getter can only be used on instances of SVGTextContentElement"
    },
    {
      "path": "window.SVGTextContentElement.prototype.lengthAdjust",
      "propertyName": "_get",
      "property": "function lengthAdjust() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGTextContentElement.prototype.lengthAdjust",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGTextContentElement.prototype.getNumberOfChars",
      "propertyName": "_function",
      "property": "function getNumberOfChars() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGTextContentElement.prototype.getComputedTextLength",
      "propertyName": "_function",
      "property": "function getComputedTextLength() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGTextContentElement.prototype.getSubStringLength",
      "propertyName": "_function",
      "property": "function getSubStringLength() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGTextContentElement.prototype.getStartPositionOfChar",
      "propertyName": "_function",
      "property": "function getStartPositionOfChar() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGTextContentElement.prototype.getEndPositionOfChar",
      "propertyName": "_function",
      "property": "function getEndPositionOfChar() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGTextContentElement.prototype.getExtentOfChar",
      "propertyName": "_function",
      "property": "function getExtentOfChar() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGTextContentElement.prototype.getRotationOfChar",
      "propertyName": "_function",
      "property": "function getRotationOfChar() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGTextContentElement.prototype.getCharNumAtPosition",
      "propertyName": "_function",
      "property": "function getCharNumAtPosition() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGTextContentElement.prototype.selectSubString",
      "propertyName": "_function",
      "property": "function selectSubString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGTextContentElement",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.SVGTextContentElement",
      "propertyName": "_function",
      "property": "function SVGTextContentElement() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGTextElement",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.SVGTextElement",
      "propertyName": "_function",
      "property": "function SVGTextElement() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGTextPathElement.prototype.startOffset",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGTextPathElement.startOffset getter can only be used on instances of SVGTextPathElement"
    },
    {
      "path": "window.SVGTextPathElement.prototype.startOffset",
      "propertyName": "_get",
      "property": "function startOffset() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGTextPathElement.prototype.startOffset",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGTextPathElement.prototype.method",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGTextPathElement.method getter can only be used on instances of SVGTextPathElement"
    },
    {
      "path": "window.SVGTextPathElement.prototype.method",
      "propertyName": "_get",
      "property": "function method() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGTextPathElement.prototype.method",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGTextPathElement.prototype.spacing",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGTextPathElement.spacing getter can only be used on instances of SVGTextPathElement"
    },
    {
      "path": "window.SVGTextPathElement.prototype.spacing",
      "propertyName": "_get",
      "property": "function spacing() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGTextPathElement.prototype.spacing",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGTextPathElement.prototype.href",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGTextPathElement.href getter can only be used on instances of SVGTextPathElement"
    },
    {
      "path": "window.SVGTextPathElement.prototype.href",
      "propertyName": "_get",
      "property": "function href() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGTextPathElement.prototype.href",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGTextPathElement",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.SVGTextPathElement",
      "propertyName": "_function",
      "property": "function SVGTextPathElement() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGTextPositioningElement.prototype.x",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGTextPositioningElement.x getter can only be used on instances of SVGTextPositioningElement"
    },
    {
      "path": "window.SVGTextPositioningElement.prototype.x",
      "propertyName": "_get",
      "property": "function x() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGTextPositioningElement.prototype.x",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGTextPositioningElement.prototype.y",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGTextPositioningElement.y getter can only be used on instances of SVGTextPositioningElement"
    },
    {
      "path": "window.SVGTextPositioningElement.prototype.y",
      "propertyName": "_get",
      "property": "function y() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGTextPositioningElement.prototype.y",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGTextPositioningElement.prototype.dx",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGTextPositioningElement.dx getter can only be used on instances of SVGTextPositioningElement"
    },
    {
      "path": "window.SVGTextPositioningElement.prototype.dx",
      "propertyName": "_get",
      "property": "function dx() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGTextPositioningElement.prototype.dx",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGTextPositioningElement.prototype.dy",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGTextPositioningElement.dy getter can only be used on instances of SVGTextPositioningElement"
    },
    {
      "path": "window.SVGTextPositioningElement.prototype.dy",
      "propertyName": "_get",
      "property": "function dy() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGTextPositioningElement.prototype.dy",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGTextPositioningElement.prototype.rotate",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGTextPositioningElement.rotate getter can only be used on instances of SVGTextPositioningElement"
    },
    {
      "path": "window.SVGTextPositioningElement.prototype.rotate",
      "propertyName": "_get",
      "property": "function rotate() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGTextPositioningElement.prototype.rotate",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGTextPositioningElement",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.SVGTextPositioningElement",
      "propertyName": "_function",
      "property": "function SVGTextPositioningElement() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGTitleElement",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.SVGTitleElement",
      "propertyName": "_function",
      "property": "function SVGTitleElement() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGTransform.prototype.type",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGTransform.type getter can only be used on instances of SVGTransform"
    },
    {
      "path": "window.SVGTransform.prototype.type",
      "propertyName": "_get",
      "property": "function type() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGTransform.prototype.type",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGTransform.prototype.matrix",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGTransform.matrix getter can only be used on instances of SVGTransform"
    },
    {
      "path": "window.SVGTransform.prototype.matrix",
      "propertyName": "_get",
      "property": "function matrix() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGTransform.prototype.matrix",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGTransform.prototype.angle",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGTransform.angle getter can only be used on instances of SVGTransform"
    },
    {
      "path": "window.SVGTransform.prototype.angle",
      "propertyName": "_get",
      "property": "function angle() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGTransform.prototype.angle",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGTransform.prototype.setMatrix",
      "propertyName": "_function",
      "property": "function setMatrix() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGTransform.prototype.setTranslate",
      "propertyName": "_function",
      "property": "function setTranslate() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGTransform.prototype.setScale",
      "propertyName": "_function",
      "property": "function setScale() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGTransform.prototype.setRotate",
      "propertyName": "_function",
      "property": "function setRotate() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGTransform.prototype.setSkewX",
      "propertyName": "_function",
      "property": "function setSkewX() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGTransform.prototype.setSkewY",
      "propertyName": "_function",
      "property": "function setSkewY() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGTransform",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.SVGTransform",
      "propertyName": "_function",
      "property": "function SVGTransform() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGTransformList.prototype.numberOfItems",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGTransformList.numberOfItems getter can only be used on instances of SVGTransformList"
    },
    {
      "path": "window.SVGTransformList.prototype.numberOfItems",
      "propertyName": "_get",
      "property": "function numberOfItems() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGTransformList.prototype.numberOfItems",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGTransformList.prototype.clear",
      "propertyName": "_function",
      "property": "function clear() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGTransformList.prototype.initialize",
      "propertyName": "_function",
      "property": "function initialize() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGTransformList.prototype.getItem",
      "propertyName": "_function",
      "property": "function getItem() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGTransformList.prototype.insertItemBefore",
      "propertyName": "_function",
      "property": "function insertItemBefore() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGTransformList.prototype.replaceItem",
      "propertyName": "_function",
      "property": "function replaceItem() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGTransformList.prototype.removeItem",
      "propertyName": "_function",
      "property": "function removeItem() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGTransformList.prototype.appendItem",
      "propertyName": "_function",
      "property": "function appendItem() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGTransformList.prototype.createSVGTransformFromMatrix",
      "propertyName": "_function",
      "property": "function createSVGTransformFromMatrix() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGTransformList.prototype.consolidate",
      "propertyName": "_function",
      "property": "function consolidate() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGTransformList",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.SVGTransformList",
      "propertyName": "_function",
      "property": "function SVGTransformList() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGUnitTypes",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.SVGUnitTypes",
      "propertyName": "_function",
      "property": "function SVGUnitTypes() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGUseElement.prototype.x",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGUseElement.x getter can only be used on instances of SVGUseElement"
    },
    {
      "path": "window.SVGUseElement.prototype.x",
      "propertyName": "_get",
      "property": "function x() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGUseElement.prototype.x",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGUseElement.prototype.y",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGUseElement.y getter can only be used on instances of SVGUseElement"
    },
    {
      "path": "window.SVGUseElement.prototype.y",
      "propertyName": "_get",
      "property": "function y() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGUseElement.prototype.y",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGUseElement.prototype.width",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGUseElement.width getter can only be used on instances of SVGUseElement"
    },
    {
      "path": "window.SVGUseElement.prototype.width",
      "propertyName": "_get",
      "property": "function width() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGUseElement.prototype.width",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGUseElement.prototype.height",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGUseElement.height getter can only be used on instances of SVGUseElement"
    },
    {
      "path": "window.SVGUseElement.prototype.height",
      "propertyName": "_get",
      "property": "function height() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGUseElement.prototype.height",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGUseElement.prototype.href",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGUseElement.href getter can only be used on instances of SVGUseElement"
    },
    {
      "path": "window.SVGUseElement.prototype.href",
      "propertyName": "_get",
      "property": "function href() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGUseElement.prototype.href",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGUseElement",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.SVGUseElement",
      "propertyName": "_function",
      "property": "function SVGUseElement() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGViewElement.prototype.viewBox",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGViewElement.viewBox getter can only be used on instances of SVGViewElement"
    },
    {
      "path": "window.SVGViewElement.prototype.viewBox",
      "propertyName": "_get",
      "property": "function viewBox() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGViewElement.prototype.viewBox",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGViewElement.prototype.preserveAspectRatio",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGViewElement.preserveAspectRatio getter can only be used on instances of SVGViewElement"
    },
    {
      "path": "window.SVGViewElement.prototype.preserveAspectRatio",
      "propertyName": "_get",
      "property": "function preserveAspectRatio() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGViewElement.prototype.preserveAspectRatio",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGViewElement.prototype.zoomAndPan",
      "propertyName": "_accessException",
      "property": "TypeError: The SVGViewElement.zoomAndPan getter can only be used on instances of SVGViewElement"
    },
    {
      "path": "window.SVGViewElement.prototype.zoomAndPan",
      "propertyName": "_get",
      "property": "function zoomAndPan() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGViewElement.prototype.zoomAndPan",
      "propertyName": "_set",
      "property": "function zoomAndPan() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGViewElement.prototype.zoomAndPan",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGViewElement.prototype.zoomAndPan",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.SVGViewElement",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.SVGViewElement",
      "propertyName": "_function",
      "property": "function SVGViewElement() {\n    [native code]\n}"
    },
    {
      "path": "window.Worker.prototype.onmessage",
      "propertyName": "_accessException",
      "property": "TypeError: The Worker.onmessage getter can only be used on instances of Worker"
    },
    {
      "path": "window.Worker.prototype.onmessage",
      "propertyName": "_get",
      "property": "function onmessage() {\n    [native code]\n}"
    },
    {
      "path": "window.Worker.prototype.onmessage",
      "propertyName": "_set",
      "property": "function onmessage() {\n    [native code]\n}"
    },
    {
      "path": "window.Worker.prototype.onmessage",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Worker.prototype.onmessage",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Worker.prototype.onerror",
      "propertyName": "_accessException",
      "property": "TypeError: The Worker.onerror getter can only be used on instances of Worker"
    },
    {
      "path": "window.Worker.prototype.onerror",
      "propertyName": "_get",
      "property": "function onerror() {\n    [native code]\n}"
    },
    {
      "path": "window.Worker.prototype.onerror",
      "propertyName": "_set",
      "property": "function onerror() {\n    [native code]\n}"
    },
    {
      "path": "window.Worker.prototype.onerror",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Worker.prototype.onerror",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Worker.prototype.terminate",
      "propertyName": "_function",
      "property": "function terminate() {\n    [native code]\n}"
    },
    {
      "path": "window.Worker.prototype.postMessage",
      "propertyName": "_function",
      "property": "function postMessage() {\n    [native code]\n}"
    },
    {
      "path": "window.Worker",
      "propertyName": "new()",
      "property": "TypeError: Not enough arguments"
    },
    {
      "path": "window.Worker",
      "propertyName": "_function",
      "property": "function Worker() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMParser.prototype.parseFromString",
      "propertyName": "_function",
      "property": "function parseFromString() {\n    [native code]\n}"
    },
    {
      "path": "window.DOMParser",
      "propertyName": "_function",
      "property": "function DOMParser() {\n    [native code]\n}"
    },
    {
      "path": "window.XMLHttpRequest.prototype.onreadystatechange",
      "propertyName": "_accessException",
      "property": "TypeError: The XMLHttpRequest.onreadystatechange getter can only be used on instances of XMLHttpRequest"
    },
    {
      "path": "window.XMLHttpRequest.prototype.onreadystatechange",
      "propertyName": "_get",
      "property": "function onreadystatechange() {\n    [native code]\n}"
    },
    {
      "path": "window.XMLHttpRequest.prototype.onreadystatechange",
      "propertyName": "_set",
      "property": "function onreadystatechange() {\n    [native code]\n}"
    },
    {
      "path": "window.XMLHttpRequest.prototype.onreadystatechange",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.XMLHttpRequest.prototype.onreadystatechange",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.XMLHttpRequest.prototype.readyState",
      "propertyName": "_accessException",
      "property": "TypeError: The XMLHttpRequest.readyState getter can only be used on instances of XMLHttpRequest"
    },
    {
      "path": "window.XMLHttpRequest.prototype.readyState",
      "propertyName": "_get",
      "property": "function readyState() {\n    [native code]\n}"
    },
    {
      "path": "window.XMLHttpRequest.prototype.readyState",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.XMLHttpRequest.prototype.timeout",
      "propertyName": "_accessException",
      "property": "TypeError: The XMLHttpRequest.timeout getter can only be used on instances of XMLHttpRequest"
    },
    {
      "path": "window.XMLHttpRequest.prototype.timeout",
      "propertyName": "_get",
      "property": "function timeout() {\n    [native code]\n}"
    },
    {
      "path": "window.XMLHttpRequest.prototype.timeout",
      "propertyName": "_set",
      "property": "function timeout() {\n    [native code]\n}"
    },
    {
      "path": "window.XMLHttpRequest.prototype.timeout",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.XMLHttpRequest.prototype.timeout",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.XMLHttpRequest.prototype.withCredentials",
      "propertyName": "_accessException",
      "property": "TypeError: The XMLHttpRequest.withCredentials getter can only be used on instances of XMLHttpRequest"
    },
    {
      "path": "window.XMLHttpRequest.prototype.withCredentials",
      "propertyName": "_get",
      "property": "function withCredentials() {\n    [native code]\n}"
    },
    {
      "path": "window.XMLHttpRequest.prototype.withCredentials",
      "propertyName": "_set",
      "property": "function withCredentials() {\n    [native code]\n}"
    },
    {
      "path": "window.XMLHttpRequest.prototype.withCredentials",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.XMLHttpRequest.prototype.withCredentials",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.XMLHttpRequest.prototype.upload",
      "propertyName": "_accessException",
      "property": "TypeError: The XMLHttpRequest.upload getter can only be used on instances of XMLHttpRequest"
    },
    {
      "path": "window.XMLHttpRequest.prototype.upload",
      "propertyName": "_get",
      "property": "function upload() {\n    [native code]\n}"
    },
    {
      "path": "window.XMLHttpRequest.prototype.upload",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.XMLHttpRequest.prototype.responseURL",
      "propertyName": "_accessException",
      "property": "TypeError: The XMLHttpRequest.responseURL getter can only be used on instances of XMLHttpRequest"
    },
    {
      "path": "window.XMLHttpRequest.prototype.responseURL",
      "propertyName": "_get",
      "property": "function responseURL() {\n    [native code]\n}"
    },
    {
      "path": "window.XMLHttpRequest.prototype.responseURL",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.XMLHttpRequest.prototype.status",
      "propertyName": "_accessException",
      "property": "TypeError: The XMLHttpRequest.status getter can only be used on instances of XMLHttpRequest"
    },
    {
      "path": "window.XMLHttpRequest.prototype.status",
      "propertyName": "_get",
      "property": "function status() {\n    [native code]\n}"
    },
    {
      "path": "window.XMLHttpRequest.prototype.status",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.XMLHttpRequest.prototype.statusText",
      "propertyName": "_accessException",
      "property": "TypeError: The XMLHttpRequest.statusText getter can only be used on instances of XMLHttpRequest"
    },
    {
      "path": "window.XMLHttpRequest.prototype.statusText",
      "propertyName": "_get",
      "property": "function statusText() {\n    [native code]\n}"
    },
    {
      "path": "window.XMLHttpRequest.prototype.statusText",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.XMLHttpRequest.prototype.responseType",
      "propertyName": "_accessException",
      "property": "TypeError: The XMLHttpRequest.responseType getter can only be used on instances of XMLHttpRequest"
    },
    {
      "path": "window.XMLHttpRequest.prototype.responseType",
      "propertyName": "_get",
      "property": "function responseType() {\n    [native code]\n}"
    },
    {
      "path": "window.XMLHttpRequest.prototype.responseType",
      "propertyName": "_set",
      "property": "function responseType() {\n    [native code]\n}"
    },
    {
      "path": "window.XMLHttpRequest.prototype.responseType",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.XMLHttpRequest.prototype.responseType",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.XMLHttpRequest.prototype.response",
      "propertyName": "_accessException",
      "property": "TypeError: The XMLHttpRequest.response getter can only be used on instances of XMLHttpRequest"
    },
    {
      "path": "window.XMLHttpRequest.prototype.response",
      "propertyName": "_get",
      "property": "function response() {\n    [native code]\n}"
    },
    {
      "path": "window.XMLHttpRequest.prototype.response",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.XMLHttpRequest.prototype.responseText",
      "propertyName": "_accessException",
      "property": "TypeError: The XMLHttpRequest.responseText getter can only be used on instances of XMLHttpRequest"
    },
    {
      "path": "window.XMLHttpRequest.prototype.responseText",
      "propertyName": "_get",
      "property": "function responseText() {\n    [native code]\n}"
    },
    {
      "path": "window.XMLHttpRequest.prototype.responseText",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.XMLHttpRequest.prototype.responseXML",
      "propertyName": "_accessException",
      "property": "TypeError: The XMLHttpRequest.responseXML getter can only be used on instances of XMLHttpRequest"
    },
    {
      "path": "window.XMLHttpRequest.prototype.responseXML",
      "propertyName": "_get",
      "property": "function responseXML() {\n    [native code]\n}"
    },
    {
      "path": "window.XMLHttpRequest.prototype.responseXML",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.XMLHttpRequest.prototype.open",
      "propertyName": "_function",
      "property": "function open() {\n    [native code]\n}"
    },
    {
      "path": "window.XMLHttpRequest.prototype.setRequestHeader",
      "propertyName": "_function",
      "property": "function setRequestHeader() {\n    [native code]\n}"
    },
    {
      "path": "window.XMLHttpRequest.prototype.send",
      "propertyName": "_function",
      "property": "function send() {\n    [native code]\n}"
    },
    {
      "path": "window.XMLHttpRequest.prototype.abort",
      "propertyName": "_function",
      "property": "function abort() {\n    [native code]\n}"
    },
    {
      "path": "window.XMLHttpRequest.prototype.getResponseHeader",
      "propertyName": "_function",
      "property": "function getResponseHeader() {\n    [native code]\n}"
    },
    {
      "path": "window.XMLHttpRequest.prototype.getAllResponseHeaders",
      "propertyName": "_function",
      "property": "function getAllResponseHeaders() {\n    [native code]\n}"
    },
    {
      "path": "window.XMLHttpRequest.prototype.overrideMimeType",
      "propertyName": "_function",
      "property": "function overrideMimeType() {\n    [native code]\n}"
    },
    {
      "path": "window.XMLHttpRequest",
      "propertyName": "_function",
      "property": "function XMLHttpRequest() {\n    [native code]\n}"
    },
    {
      "path": "window.XMLHttpRequestEventTarget.prototype.onloadstart",
      "propertyName": "_accessException",
      "property": "TypeError: The XMLHttpRequestEventTarget.onloadstart getter can only be used on instances of XMLHttpRequestEventTarget"
    },
    {
      "path": "window.XMLHttpRequestEventTarget.prototype.onloadstart",
      "propertyName": "_get",
      "property": "function onloadstart() {\n    [native code]\n}"
    },
    {
      "path": "window.XMLHttpRequestEventTarget.prototype.onloadstart",
      "propertyName": "_set",
      "property": "function onloadstart() {\n    [native code]\n}"
    },
    {
      "path": "window.XMLHttpRequestEventTarget.prototype.onloadstart",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.XMLHttpRequestEventTarget.prototype.onloadstart",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.XMLHttpRequestEventTarget.prototype.onprogress",
      "propertyName": "_accessException",
      "property": "TypeError: The XMLHttpRequestEventTarget.onprogress getter can only be used on instances of XMLHttpRequestEventTarget"
    },
    {
      "path": "window.XMLHttpRequestEventTarget.prototype.onprogress",
      "propertyName": "_get",
      "property": "function onprogress() {\n    [native code]\n}"
    },
    {
      "path": "window.XMLHttpRequestEventTarget.prototype.onprogress",
      "propertyName": "_set",
      "property": "function onprogress() {\n    [native code]\n}"
    },
    {
      "path": "window.XMLHttpRequestEventTarget.prototype.onprogress",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.XMLHttpRequestEventTarget.prototype.onprogress",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.XMLHttpRequestEventTarget.prototype.onabort",
      "propertyName": "_accessException",
      "property": "TypeError: The XMLHttpRequestEventTarget.onabort getter can only be used on instances of XMLHttpRequestEventTarget"
    },
    {
      "path": "window.XMLHttpRequestEventTarget.prototype.onabort",
      "propertyName": "_get",
      "property": "function onabort() {\n    [native code]\n}"
    },
    {
      "path": "window.XMLHttpRequestEventTarget.prototype.onabort",
      "propertyName": "_set",
      "property": "function onabort() {\n    [native code]\n}"
    },
    {
      "path": "window.XMLHttpRequestEventTarget.prototype.onabort",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.XMLHttpRequestEventTarget.prototype.onabort",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.XMLHttpRequestEventTarget.prototype.onerror",
      "propertyName": "_accessException",
      "property": "TypeError: The XMLHttpRequestEventTarget.onerror getter can only be used on instances of XMLHttpRequestEventTarget"
    },
    {
      "path": "window.XMLHttpRequestEventTarget.prototype.onerror",
      "propertyName": "_get",
      "property": "function onerror() {\n    [native code]\n}"
    },
    {
      "path": "window.XMLHttpRequestEventTarget.prototype.onerror",
      "propertyName": "_set",
      "property": "function onerror() {\n    [native code]\n}"
    },
    {
      "path": "window.XMLHttpRequestEventTarget.prototype.onerror",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.XMLHttpRequestEventTarget.prototype.onerror",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.XMLHttpRequestEventTarget.prototype.onload",
      "propertyName": "_accessException",
      "property": "TypeError: The XMLHttpRequestEventTarget.onload getter can only be used on instances of XMLHttpRequestEventTarget"
    },
    {
      "path": "window.XMLHttpRequestEventTarget.prototype.onload",
      "propertyName": "_get",
      "property": "function onload() {\n    [native code]\n}"
    },
    {
      "path": "window.XMLHttpRequestEventTarget.prototype.onload",
      "propertyName": "_set",
      "property": "function onload() {\n    [native code]\n}"
    },
    {
      "path": "window.XMLHttpRequestEventTarget.prototype.onload",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.XMLHttpRequestEventTarget.prototype.onload",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.XMLHttpRequestEventTarget.prototype.ontimeout",
      "propertyName": "_accessException",
      "property": "TypeError: The XMLHttpRequestEventTarget.ontimeout getter can only be used on instances of XMLHttpRequestEventTarget"
    },
    {
      "path": "window.XMLHttpRequestEventTarget.prototype.ontimeout",
      "propertyName": "_get",
      "property": "function ontimeout() {\n    [native code]\n}"
    },
    {
      "path": "window.XMLHttpRequestEventTarget.prototype.ontimeout",
      "propertyName": "_set",
      "property": "function ontimeout() {\n    [native code]\n}"
    },
    {
      "path": "window.XMLHttpRequestEventTarget.prototype.ontimeout",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.XMLHttpRequestEventTarget.prototype.ontimeout",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.XMLHttpRequestEventTarget.prototype.onloadend",
      "propertyName": "_accessException",
      "property": "TypeError: The XMLHttpRequestEventTarget.onloadend getter can only be used on instances of XMLHttpRequestEventTarget"
    },
    {
      "path": "window.XMLHttpRequestEventTarget.prototype.onloadend",
      "propertyName": "_get",
      "property": "function onloadend() {\n    [native code]\n}"
    },
    {
      "path": "window.XMLHttpRequestEventTarget.prototype.onloadend",
      "propertyName": "_set",
      "property": "function onloadend() {\n    [native code]\n}"
    },
    {
      "path": "window.XMLHttpRequestEventTarget.prototype.onloadend",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.XMLHttpRequestEventTarget.prototype.onloadend",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.XMLHttpRequestEventTarget",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.XMLHttpRequestEventTarget",
      "propertyName": "_function",
      "property": "function XMLHttpRequestEventTarget() {\n    [native code]\n}"
    },
    {
      "path": "window.XMLHttpRequestUpload",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.XMLHttpRequestUpload",
      "propertyName": "_function",
      "property": "function XMLHttpRequestUpload() {\n    [native code]\n}"
    },
    {
      "path": "window.XMLSerializer.prototype.serializeToString",
      "propertyName": "_function",
      "property": "function serializeToString() {\n    [native code]\n}"
    },
    {
      "path": "window.XMLSerializer",
      "propertyName": "_function",
      "property": "function XMLSerializer() {\n    [native code]\n}"
    },
    {
      "path": "window.XPathEvaluator.prototype.createExpression",
      "propertyName": "_function",
      "property": "function createExpression() {\n    [native code]\n}"
    },
    {
      "path": "window.XPathEvaluator.prototype.createNSResolver",
      "propertyName": "_function",
      "property": "function createNSResolver() {\n    [native code]\n}"
    },
    {
      "path": "window.XPathEvaluator.prototype.evaluate",
      "propertyName": "_function",
      "property": "function evaluate() {\n    [native code]\n}"
    },
    {
      "path": "window.XPathEvaluator",
      "propertyName": "_function",
      "property": "function XPathEvaluator() {\n    [native code]\n}"
    },
    {
      "path": "window.XPathExpression.prototype.evaluate",
      "propertyName": "_function",
      "property": "function evaluate() {\n    [native code]\n}"
    },
    {
      "path": "window.XPathExpression",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.XPathExpression",
      "propertyName": "_function",
      "property": "function XPathExpression() {\n    [native code]\n}"
    },
    {
      "path": "window.XPathResult.prototype.resultType",
      "propertyName": "_accessException",
      "property": "TypeError: The XPathResult.resultType getter can only be used on instances of XPathResult"
    },
    {
      "path": "window.XPathResult.prototype.resultType",
      "propertyName": "_get",
      "property": "function resultType() {\n    [native code]\n}"
    },
    {
      "path": "window.XPathResult.prototype.resultType",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.XPathResult.prototype.numberValue",
      "propertyName": "_accessException",
      "property": "TypeError: The XPathResult.numberValue getter can only be used on instances of XPathResult"
    },
    {
      "path": "window.XPathResult.prototype.numberValue",
      "propertyName": "_get",
      "property": "function numberValue() {\n    [native code]\n}"
    },
    {
      "path": "window.XPathResult.prototype.numberValue",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.XPathResult.prototype.stringValue",
      "propertyName": "_accessException",
      "property": "TypeError: The XPathResult.stringValue getter can only be used on instances of XPathResult"
    },
    {
      "path": "window.XPathResult.prototype.stringValue",
      "propertyName": "_get",
      "property": "function stringValue() {\n    [native code]\n}"
    },
    {
      "path": "window.XPathResult.prototype.stringValue",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.XPathResult.prototype.booleanValue",
      "propertyName": "_accessException",
      "property": "TypeError: The XPathResult.booleanValue getter can only be used on instances of XPathResult"
    },
    {
      "path": "window.XPathResult.prototype.booleanValue",
      "propertyName": "_get",
      "property": "function booleanValue() {\n    [native code]\n}"
    },
    {
      "path": "window.XPathResult.prototype.booleanValue",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.XPathResult.prototype.singleNodeValue",
      "propertyName": "_accessException",
      "property": "TypeError: The XPathResult.singleNodeValue getter can only be used on instances of XPathResult"
    },
    {
      "path": "window.XPathResult.prototype.singleNodeValue",
      "propertyName": "_get",
      "property": "function singleNodeValue() {\n    [native code]\n}"
    },
    {
      "path": "window.XPathResult.prototype.singleNodeValue",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.XPathResult.prototype.invalidIteratorState",
      "propertyName": "_accessException",
      "property": "TypeError: The XPathResult.invalidIteratorState getter can only be used on instances of XPathResult"
    },
    {
      "path": "window.XPathResult.prototype.invalidIteratorState",
      "propertyName": "_get",
      "property": "function invalidIteratorState() {\n    [native code]\n}"
    },
    {
      "path": "window.XPathResult.prototype.invalidIteratorState",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.XPathResult.prototype.snapshotLength",
      "propertyName": "_accessException",
      "property": "TypeError: The XPathResult.snapshotLength getter can only be used on instances of XPathResult"
    },
    {
      "path": "window.XPathResult.prototype.snapshotLength",
      "propertyName": "_get",
      "property": "function snapshotLength() {\n    [native code]\n}"
    },
    {
      "path": "window.XPathResult.prototype.snapshotLength",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.XPathResult.prototype.iterateNext",
      "propertyName": "_function",
      "property": "function iterateNext() {\n    [native code]\n}"
    },
    {
      "path": "window.XPathResult.prototype.snapshotItem",
      "propertyName": "_function",
      "property": "function snapshotItem() {\n    [native code]\n}"
    },
    {
      "path": "window.XPathResult",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.XPathResult",
      "propertyName": "_function",
      "property": "function XPathResult() {\n    [native code]\n}"
    },
    {
      "path": "window.XSLTProcessor.prototype.importStylesheet",
      "propertyName": "_function",
      "property": "function importStylesheet() {\n    [native code]\n}"
    },
    {
      "path": "window.XSLTProcessor.prototype.transformToFragment",
      "propertyName": "_function",
      "property": "function transformToFragment() {\n    [native code]\n}"
    },
    {
      "path": "window.XSLTProcessor.prototype.transformToDocument",
      "propertyName": "_function",
      "property": "function transformToDocument() {\n    [native code]\n}"
    },
    {
      "path": "window.XSLTProcessor.prototype.setParameter",
      "propertyName": "_function",
      "property": "function setParameter() {\n    [native code]\n}"
    },
    {
      "path": "window.XSLTProcessor.prototype.getParameter",
      "propertyName": "_function",
      "property": "function getParameter() {\n    [native code]\n}"
    },
    {
      "path": "window.XSLTProcessor.prototype.removeParameter",
      "propertyName": "_function",
      "property": "function removeParameter() {\n    [native code]\n}"
    },
    {
      "path": "window.XSLTProcessor.prototype.clearParameters",
      "propertyName": "_function",
      "property": "function clearParameters() {\n    [native code]\n}"
    },
    {
      "path": "window.XSLTProcessor.prototype.reset",
      "propertyName": "_function",
      "property": "function reset() {\n    [native code]\n}"
    },
    {
      "path": "window.XSLTProcessor",
      "propertyName": "_function",
      "property": "function XSLTProcessor() {\n    [native code]\n}"
    },
    {
      "path": "window.indexedDB",
      "propertyName": "_get",
      "property": "function indexedDB() {\n    [native code]\n}"
    },
    {
      "path": "window.indexedDB",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.speechSynthesis._protos",
      "propertyName": "0",
      "property": "Object.prototype"
    },
    {
      "path": "window.speechSynthesis._protos",
      "propertyName": "1",
      "property": "Object.prototype"
    },
    {
      "path": "window.speechSynthesis",
      "propertyName": "_get",
      "property": "function speechSynthesis() {\n    [native code]\n}"
    },
    {
      "path": "window.speechSynthesis",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.openDatabase",
      "propertyName": "_function",
      "property": "[object Function]"
    },
    {
      "path": "window.openDatabase",
      "propertyName": "_flags",
      "property": "c"
    },
    {
      "path": "window.onabort",
      "propertyName": "_get",
      "property": "function onabort() {\n    [native code]\n}"
    },
    {
      "path": "window.onabort",
      "propertyName": "_set",
      "property": "function onabort() {\n    [native code]\n}"
    },
    {
      "path": "window.onabort",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.onabort",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.onblur",
      "propertyName": "_get",
      "property": "function onblur() {\n    [native code]\n}"
    },
    {
      "path": "window.onblur",
      "propertyName": "_set",
      "property": "function onblur() {\n    [native code]\n}"
    },
    {
      "path": "window.onblur",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.onblur",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.oncanplay",
      "propertyName": "_get",
      "property": "function oncanplay() {\n    [native code]\n}"
    },
    {
      "path": "window.oncanplay",
      "propertyName": "_set",
      "property": "function oncanplay() {\n    [native code]\n}"
    },
    {
      "path": "window.oncanplay",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.oncanplay",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.oncanplaythrough",
      "propertyName": "_get",
      "property": "function oncanplaythrough() {\n    [native code]\n}"
    },
    {
      "path": "window.oncanplaythrough",
      "propertyName": "_set",
      "property": "function oncanplaythrough() {\n    [native code]\n}"
    },
    {
      "path": "window.oncanplaythrough",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.oncanplaythrough",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.onchange",
      "propertyName": "_get",
      "property": "function onchange() {\n    [native code]\n}"
    },
    {
      "path": "window.onchange",
      "propertyName": "_set",
      "property": "function onchange() {\n    [native code]\n}"
    },
    {
      "path": "window.onchange",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.onchange",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.onclick",
      "propertyName": "_get",
      "property": "function onclick() {\n    [native code]\n}"
    },
    {
      "path": "window.onclick",
      "propertyName": "_set",
      "property": "function onclick() {\n    [native code]\n}"
    },
    {
      "path": "window.onclick",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.onclick",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.oncontextmenu",
      "propertyName": "_get",
      "property": "function oncontextmenu() {\n    [native code]\n}"
    },
    {
      "path": "window.oncontextmenu",
      "propertyName": "_set",
      "property": "function oncontextmenu() {\n    [native code]\n}"
    },
    {
      "path": "window.oncontextmenu",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.oncontextmenu",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.oncuechange",
      "propertyName": "_get",
      "property": "function oncuechange() {\n    [native code]\n}"
    },
    {
      "path": "window.oncuechange",
      "propertyName": "_set",
      "property": "function oncuechange() {\n    [native code]\n}"
    },
    {
      "path": "window.oncuechange",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.oncuechange",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.ondblclick",
      "propertyName": "_get",
      "property": "function ondblclick() {\n    [native code]\n}"
    },
    {
      "path": "window.ondblclick",
      "propertyName": "_set",
      "property": "function ondblclick() {\n    [native code]\n}"
    },
    {
      "path": "window.ondblclick",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.ondblclick",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.ondrag",
      "propertyName": "_get",
      "property": "function ondrag() {\n    [native code]\n}"
    },
    {
      "path": "window.ondrag",
      "propertyName": "_set",
      "property": "function ondrag() {\n    [native code]\n}"
    },
    {
      "path": "window.ondrag",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.ondrag",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.ondragend",
      "propertyName": "_get",
      "property": "function ondragend() {\n    [native code]\n}"
    },
    {
      "path": "window.ondragend",
      "propertyName": "_set",
      "property": "function ondragend() {\n    [native code]\n}"
    },
    {
      "path": "window.ondragend",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.ondragend",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.ondragenter",
      "propertyName": "_get",
      "property": "function ondragenter() {\n    [native code]\n}"
    },
    {
      "path": "window.ondragenter",
      "propertyName": "_set",
      "property": "function ondragenter() {\n    [native code]\n}"
    },
    {
      "path": "window.ondragenter",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.ondragenter",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.ondragleave",
      "propertyName": "_get",
      "property": "function ondragleave() {\n    [native code]\n}"
    },
    {
      "path": "window.ondragleave",
      "propertyName": "_set",
      "property": "function ondragleave() {\n    [native code]\n}"
    },
    {
      "path": "window.ondragleave",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.ondragleave",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.ondragover",
      "propertyName": "_get",
      "property": "function ondragover() {\n    [native code]\n}"
    },
    {
      "path": "window.ondragover",
      "propertyName": "_set",
      "property": "function ondragover() {\n    [native code]\n}"
    },
    {
      "path": "window.ondragover",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.ondragover",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.ondragstart",
      "propertyName": "_get",
      "property": "function ondragstart() {\n    [native code]\n}"
    },
    {
      "path": "window.ondragstart",
      "propertyName": "_set",
      "property": "function ondragstart() {\n    [native code]\n}"
    },
    {
      "path": "window.ondragstart",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.ondragstart",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.ondrop",
      "propertyName": "_get",
      "property": "function ondrop() {\n    [native code]\n}"
    },
    {
      "path": "window.ondrop",
      "propertyName": "_set",
      "property": "function ondrop() {\n    [native code]\n}"
    },
    {
      "path": "window.ondrop",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.ondrop",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.ondurationchange",
      "propertyName": "_get",
      "property": "function ondurationchange() {\n    [native code]\n}"
    },
    {
      "path": "window.ondurationchange",
      "propertyName": "_set",
      "property": "function ondurationchange() {\n    [native code]\n}"
    },
    {
      "path": "window.ondurationchange",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.ondurationchange",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.onemptied",
      "propertyName": "_get",
      "property": "function onemptied() {\n    [native code]\n}"
    },
    {
      "path": "window.onemptied",
      "propertyName": "_set",
      "property": "function onemptied() {\n    [native code]\n}"
    },
    {
      "path": "window.onemptied",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.onemptied",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.onended",
      "propertyName": "_get",
      "property": "function onended() {\n    [native code]\n}"
    },
    {
      "path": "window.onended",
      "propertyName": "_set",
      "property": "function onended() {\n    [native code]\n}"
    },
    {
      "path": "window.onended",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.onended",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.onerror",
      "propertyName": "_get",
      "property": "function onerror() {\n    [native code]\n}"
    },
    {
      "path": "window.onerror",
      "propertyName": "_set",
      "property": "function onerror() {\n    [native code]\n}"
    },
    {
      "path": "window.onerror",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.onerror",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.onfocus",
      "propertyName": "_get",
      "property": "function onfocus() {\n    [native code]\n}"
    },
    {
      "path": "window.onfocus",
      "propertyName": "_set",
      "property": "function onfocus() {\n    [native code]\n}"
    },
    {
      "path": "window.onfocus",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.onfocus",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.oninput",
      "propertyName": "_get",
      "property": "function oninput() {\n    [native code]\n}"
    },
    {
      "path": "window.oninput",
      "propertyName": "_set",
      "property": "function oninput() {\n    [native code]\n}"
    },
    {
      "path": "window.oninput",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.oninput",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.oninvalid",
      "propertyName": "_get",
      "property": "function oninvalid() {\n    [native code]\n}"
    },
    {
      "path": "window.oninvalid",
      "propertyName": "_set",
      "property": "function oninvalid() {\n    [native code]\n}"
    },
    {
      "path": "window.oninvalid",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.oninvalid",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.onkeydown",
      "propertyName": "_get",
      "property": "function onkeydown() {\n    [native code]\n}"
    },
    {
      "path": "window.onkeydown",
      "propertyName": "_set",
      "property": "function onkeydown() {\n    [native code]\n}"
    },
    {
      "path": "window.onkeydown",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.onkeydown",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.onkeypress",
      "propertyName": "_get",
      "property": "function onkeypress() {\n    [native code]\n}"
    },
    {
      "path": "window.onkeypress",
      "propertyName": "_set",
      "property": "function onkeypress() {\n    [native code]\n}"
    },
    {
      "path": "window.onkeypress",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.onkeypress",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.onkeyup",
      "propertyName": "_get",
      "property": "function onkeyup() {\n    [native code]\n}"
    },
    {
      "path": "window.onkeyup",
      "propertyName": "_set",
      "property": "function onkeyup() {\n    [native code]\n}"
    },
    {
      "path": "window.onkeyup",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.onkeyup",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.onload",
      "propertyName": "_get",
      "property": "function onload() {\n    [native code]\n}"
    },
    {
      "path": "window.onload",
      "propertyName": "_set",
      "property": "function onload() {\n    [native code]\n}"
    },
    {
      "path": "window.onload",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.onload",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.onloadeddata",
      "propertyName": "_get",
      "property": "function onloadeddata() {\n    [native code]\n}"
    },
    {
      "path": "window.onloadeddata",
      "propertyName": "_set",
      "property": "function onloadeddata() {\n    [native code]\n}"
    },
    {
      "path": "window.onloadeddata",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.onloadeddata",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.onloadedmetadata",
      "propertyName": "_get",
      "property": "function onloadedmetadata() {\n    [native code]\n}"
    },
    {
      "path": "window.onloadedmetadata",
      "propertyName": "_set",
      "property": "function onloadedmetadata() {\n    [native code]\n}"
    },
    {
      "path": "window.onloadedmetadata",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.onloadedmetadata",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.onloadstart",
      "propertyName": "_get",
      "property": "function onloadstart() {\n    [native code]\n}"
    },
    {
      "path": "window.onloadstart",
      "propertyName": "_set",
      "property": "function onloadstart() {\n    [native code]\n}"
    },
    {
      "path": "window.onloadstart",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.onloadstart",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.onmousedown",
      "propertyName": "_get",
      "property": "function onmousedown() {\n    [native code]\n}"
    },
    {
      "path": "window.onmousedown",
      "propertyName": "_set",
      "property": "function onmousedown() {\n    [native code]\n}"
    },
    {
      "path": "window.onmousedown",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.onmousedown",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.onmouseenter",
      "propertyName": "_get",
      "property": "function onmouseenter() {\n    [native code]\n}"
    },
    {
      "path": "window.onmouseenter",
      "propertyName": "_set",
      "property": "function onmouseenter() {\n    [native code]\n}"
    },
    {
      "path": "window.onmouseenter",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.onmouseenter",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.onmouseleave",
      "propertyName": "_get",
      "property": "function onmouseleave() {\n    [native code]\n}"
    },
    {
      "path": "window.onmouseleave",
      "propertyName": "_set",
      "property": "function onmouseleave() {\n    [native code]\n}"
    },
    {
      "path": "window.onmouseleave",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.onmouseleave",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.onmousemove",
      "propertyName": "_get",
      "property": "function onmousemove() {\n    [native code]\n}"
    },
    {
      "path": "window.onmousemove",
      "propertyName": "_set",
      "property": "function onmousemove() {\n    [native code]\n}"
    },
    {
      "path": "window.onmousemove",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.onmousemove",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.onmouseout",
      "propertyName": "_get",
      "property": "function onmouseout() {\n    [native code]\n}"
    },
    {
      "path": "window.onmouseout",
      "propertyName": "_set",
      "property": "function onmouseout() {\n    [native code]\n}"
    },
    {
      "path": "window.onmouseout",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.onmouseout",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.onmouseover",
      "propertyName": "_get",
      "property": "function onmouseover() {\n    [native code]\n}"
    },
    {
      "path": "window.onmouseover",
      "propertyName": "_set",
      "property": "function onmouseover() {\n    [native code]\n}"
    },
    {
      "path": "window.onmouseover",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.onmouseover",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.onmouseup",
      "propertyName": "_get",
      "property": "function onmouseup() {\n    [native code]\n}"
    },
    {
      "path": "window.onmouseup",
      "propertyName": "_set",
      "property": "function onmouseup() {\n    [native code]\n}"
    },
    {
      "path": "window.onmouseup",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.onmouseup",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.onmousewheel",
      "propertyName": "_get",
      "property": "function onmousewheel() {\n    [native code]\n}"
    },
    {
      "path": "window.onmousewheel",
      "propertyName": "_set",
      "property": "function onmousewheel() {\n    [native code]\n}"
    },
    {
      "path": "window.onmousewheel",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.onmousewheel",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.onpause",
      "propertyName": "_get",
      "property": "function onpause() {\n    [native code]\n}"
    },
    {
      "path": "window.onpause",
      "propertyName": "_set",
      "property": "function onpause() {\n    [native code]\n}"
    },
    {
      "path": "window.onpause",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.onpause",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.onplay",
      "propertyName": "_get",
      "property": "function onplay() {\n    [native code]\n}"
    },
    {
      "path": "window.onplay",
      "propertyName": "_set",
      "property": "function onplay() {\n    [native code]\n}"
    },
    {
      "path": "window.onplay",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.onplay",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.onplaying",
      "propertyName": "_get",
      "property": "function onplaying() {\n    [native code]\n}"
    },
    {
      "path": "window.onplaying",
      "propertyName": "_set",
      "property": "function onplaying() {\n    [native code]\n}"
    },
    {
      "path": "window.onplaying",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.onplaying",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.onprogress",
      "propertyName": "_get",
      "property": "function onprogress() {\n    [native code]\n}"
    },
    {
      "path": "window.onprogress",
      "propertyName": "_set",
      "property": "function onprogress() {\n    [native code]\n}"
    },
    {
      "path": "window.onprogress",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.onprogress",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.onratechange",
      "propertyName": "_get",
      "property": "function onratechange() {\n    [native code]\n}"
    },
    {
      "path": "window.onratechange",
      "propertyName": "_set",
      "property": "function onratechange() {\n    [native code]\n}"
    },
    {
      "path": "window.onratechange",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.onratechange",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.onrejectionhandled",
      "propertyName": "_get",
      "property": "function onrejectionhandled() {\n    [native code]\n}"
    },
    {
      "path": "window.onrejectionhandled",
      "propertyName": "_set",
      "property": "function onrejectionhandled() {\n    [native code]\n}"
    },
    {
      "path": "window.onrejectionhandled",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.onrejectionhandled",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.onreset",
      "propertyName": "_get",
      "property": "function onreset() {\n    [native code]\n}"
    },
    {
      "path": "window.onreset",
      "propertyName": "_set",
      "property": "function onreset() {\n    [native code]\n}"
    },
    {
      "path": "window.onreset",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.onreset",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.onresize",
      "propertyName": "_get",
      "property": "function onresize() {\n    [native code]\n}"
    },
    {
      "path": "window.onresize",
      "propertyName": "_set",
      "property": "function onresize() {\n    [native code]\n}"
    },
    {
      "path": "window.onresize",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.onresize",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.onscroll",
      "propertyName": "_get",
      "property": "function onscroll() {\n    [native code]\n}"
    },
    {
      "path": "window.onscroll",
      "propertyName": "_set",
      "property": "function onscroll() {\n    [native code]\n}"
    },
    {
      "path": "window.onscroll",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.onscroll",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.onseeked",
      "propertyName": "_get",
      "property": "function onseeked() {\n    [native code]\n}"
    },
    {
      "path": "window.onseeked",
      "propertyName": "_set",
      "property": "function onseeked() {\n    [native code]\n}"
    },
    {
      "path": "window.onseeked",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.onseeked",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.onseeking",
      "propertyName": "_get",
      "property": "function onseeking() {\n    [native code]\n}"
    },
    {
      "path": "window.onseeking",
      "propertyName": "_set",
      "property": "function onseeking() {\n    [native code]\n}"
    },
    {
      "path": "window.onseeking",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.onseeking",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.onselect",
      "propertyName": "_get",
      "property": "function onselect() {\n    [native code]\n}"
    },
    {
      "path": "window.onselect",
      "propertyName": "_set",
      "property": "function onselect() {\n    [native code]\n}"
    },
    {
      "path": "window.onselect",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.onselect",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.onstalled",
      "propertyName": "_get",
      "property": "function onstalled() {\n    [native code]\n}"
    },
    {
      "path": "window.onstalled",
      "propertyName": "_set",
      "property": "function onstalled() {\n    [native code]\n}"
    },
    {
      "path": "window.onstalled",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.onstalled",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.onsubmit",
      "propertyName": "_get",
      "property": "function onsubmit() {\n    [native code]\n}"
    },
    {
      "path": "window.onsubmit",
      "propertyName": "_set",
      "property": "function onsubmit() {\n    [native code]\n}"
    },
    {
      "path": "window.onsubmit",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.onsubmit",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.onsuspend",
      "propertyName": "_get",
      "property": "function onsuspend() {\n    [native code]\n}"
    },
    {
      "path": "window.onsuspend",
      "propertyName": "_set",
      "property": "function onsuspend() {\n    [native code]\n}"
    },
    {
      "path": "window.onsuspend",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.onsuspend",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.ontimeupdate",
      "propertyName": "_get",
      "property": "function ontimeupdate() {\n    [native code]\n}"
    },
    {
      "path": "window.ontimeupdate",
      "propertyName": "_set",
      "property": "function ontimeupdate() {\n    [native code]\n}"
    },
    {
      "path": "window.ontimeupdate",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.ontimeupdate",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.ontoggle",
      "propertyName": "_get",
      "property": "function ontoggle() {\n    [native code]\n}"
    },
    {
      "path": "window.ontoggle",
      "propertyName": "_set",
      "property": "function ontoggle() {\n    [native code]\n}"
    },
    {
      "path": "window.ontoggle",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.ontoggle",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.onunhandledrejection",
      "propertyName": "_get",
      "property": "function onunhandledrejection() {\n    [native code]\n}"
    },
    {
      "path": "window.onunhandledrejection",
      "propertyName": "_set",
      "property": "function onunhandledrejection() {\n    [native code]\n}"
    },
    {
      "path": "window.onunhandledrejection",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.onunhandledrejection",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.onvolumechange",
      "propertyName": "_get",
      "property": "function onvolumechange() {\n    [native code]\n}"
    },
    {
      "path": "window.onvolumechange",
      "propertyName": "_set",
      "property": "function onvolumechange() {\n    [native code]\n}"
    },
    {
      "path": "window.onvolumechange",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.onvolumechange",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.onwaiting",
      "propertyName": "_get",
      "property": "function onwaiting() {\n    [native code]\n}"
    },
    {
      "path": "window.onwaiting",
      "propertyName": "_set",
      "property": "function onwaiting() {\n    [native code]\n}"
    },
    {
      "path": "window.onwaiting",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.onwaiting",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.ontransitionend",
      "propertyName": "_get",
      "property": "function ontransitionend() {\n    [native code]\n}"
    },
    {
      "path": "window.ontransitionend",
      "propertyName": "_set",
      "property": "function ontransitionend() {\n    [native code]\n}"
    },
    {
      "path": "window.ontransitionend",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.ontransitionend",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.onanimationend",
      "propertyName": "_get",
      "property": "function onanimationend() {\n    [native code]\n}"
    },
    {
      "path": "window.onanimationend",
      "propertyName": "_set",
      "property": "function onanimationend() {\n    [native code]\n}"
    },
    {
      "path": "window.onanimationend",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.onanimationend",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.onanimationiteration",
      "propertyName": "_get",
      "property": "function onanimationiteration() {\n    [native code]\n}"
    },
    {
      "path": "window.onanimationiteration",
      "propertyName": "_set",
      "property": "function onanimationiteration() {\n    [native code]\n}"
    },
    {
      "path": "window.onanimationiteration",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.onanimationiteration",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.onanimationstart",
      "propertyName": "_get",
      "property": "function onanimationstart() {\n    [native code]\n}"
    },
    {
      "path": "window.onanimationstart",
      "propertyName": "_set",
      "property": "function onanimationstart() {\n    [native code]\n}"
    },
    {
      "path": "window.onanimationstart",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.onanimationstart",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.ongotpointercapture",
      "propertyName": "_get",
      "property": "function ongotpointercapture() {\n    [native code]\n}"
    },
    {
      "path": "window.ongotpointercapture",
      "propertyName": "_set",
      "property": "function ongotpointercapture() {\n    [native code]\n}"
    },
    {
      "path": "window.ongotpointercapture",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.ongotpointercapture",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.onlostpointercapture",
      "propertyName": "_get",
      "property": "function onlostpointercapture() {\n    [native code]\n}"
    },
    {
      "path": "window.onlostpointercapture",
      "propertyName": "_set",
      "property": "function onlostpointercapture() {\n    [native code]\n}"
    },
    {
      "path": "window.onlostpointercapture",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.onlostpointercapture",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.onpointerdown",
      "propertyName": "_get",
      "property": "function onpointerdown() {\n    [native code]\n}"
    },
    {
      "path": "window.onpointerdown",
      "propertyName": "_set",
      "property": "function onpointerdown() {\n    [native code]\n}"
    },
    {
      "path": "window.onpointerdown",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.onpointerdown",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.onpointermove",
      "propertyName": "_get",
      "property": "function onpointermove() {\n    [native code]\n}"
    },
    {
      "path": "window.onpointermove",
      "propertyName": "_set",
      "property": "function onpointermove() {\n    [native code]\n}"
    },
    {
      "path": "window.onpointermove",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.onpointermove",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.onpointerup",
      "propertyName": "_get",
      "property": "function onpointerup() {\n    [native code]\n}"
    },
    {
      "path": "window.onpointerup",
      "propertyName": "_set",
      "property": "function onpointerup() {\n    [native code]\n}"
    },
    {
      "path": "window.onpointerup",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.onpointerup",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.onpointercancel",
      "propertyName": "_get",
      "property": "function onpointercancel() {\n    [native code]\n}"
    },
    {
      "path": "window.onpointercancel",
      "propertyName": "_set",
      "property": "function onpointercancel() {\n    [native code]\n}"
    },
    {
      "path": "window.onpointercancel",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.onpointercancel",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.onpointerover",
      "propertyName": "_get",
      "property": "function onpointerover() {\n    [native code]\n}"
    },
    {
      "path": "window.onpointerover",
      "propertyName": "_set",
      "property": "function onpointerover() {\n    [native code]\n}"
    },
    {
      "path": "window.onpointerover",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.onpointerover",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.onpointerout",
      "propertyName": "_get",
      "property": "function onpointerout() {\n    [native code]\n}"
    },
    {
      "path": "window.onpointerout",
      "propertyName": "_set",
      "property": "function onpointerout() {\n    [native code]\n}"
    },
    {
      "path": "window.onpointerout",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.onpointerout",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.onpointerenter",
      "propertyName": "_get",
      "property": "function onpointerenter() {\n    [native code]\n}"
    },
    {
      "path": "window.onpointerenter",
      "propertyName": "_set",
      "property": "function onpointerenter() {\n    [native code]\n}"
    },
    {
      "path": "window.onpointerenter",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.onpointerenter",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.onpointerleave",
      "propertyName": "_get",
      "property": "function onpointerleave() {\n    [native code]\n}"
    },
    {
      "path": "window.onpointerleave",
      "propertyName": "_set",
      "property": "function onpointerleave() {\n    [native code]\n}"
    },
    {
      "path": "window.onpointerleave",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.onpointerleave",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.onsearch",
      "propertyName": "_flags",
      "property": "c"
    },
    {
      "path": "window.onsearch",
      "propertyName": "_get",
      "property": "function onsearch() {\n    [native code]\n}"
    },
    {
      "path": "window.onsearch",
      "propertyName": "_set",
      "property": "function onsearch() {\n    [native code]\n}"
    },
    {
      "path": "window.onsearch",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.onsearch",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.onwheel",
      "propertyName": "_flags",
      "property": "c"
    },
    {
      "path": "window.onwheel",
      "propertyName": "_get",
      "property": "function onwheel() {\n    [native code]\n}"
    },
    {
      "path": "window.onwheel",
      "propertyName": "_set",
      "property": "function onwheel() {\n    [native code]\n}"
    },
    {
      "path": "window.onwheel",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.onwheel",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.crypto",
      "propertyName": "_get",
      "property": "function crypto() {\n    [native code]\n}"
    },
    {
      "path": "window.crypto",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.performance",
      "propertyName": "_get",
      "property": "function performance() {\n    [native code]\n}"
    },
    {
      "path": "window.performance",
      "propertyName": "_set",
      "property": "function performance() {\n    [native code]\n}"
    },
    {
      "path": "window.performance",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.performance",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.onafterprint",
      "propertyName": "_get",
      "property": "function onafterprint() {\n    [native code]\n}"
    },
    {
      "path": "window.onafterprint",
      "propertyName": "_set",
      "property": "function onafterprint() {\n    [native code]\n}"
    },
    {
      "path": "window.onafterprint",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.onafterprint",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.onbeforeprint",
      "propertyName": "_get",
      "property": "function onbeforeprint() {\n    [native code]\n}"
    },
    {
      "path": "window.onbeforeprint",
      "propertyName": "_set",
      "property": "function onbeforeprint() {\n    [native code]\n}"
    },
    {
      "path": "window.onbeforeprint",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.onbeforeprint",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.onbeforeunload",
      "propertyName": "_get",
      "property": "function onbeforeunload() {\n    [native code]\n}"
    },
    {
      "path": "window.onbeforeunload",
      "propertyName": "_set",
      "property": "function onbeforeunload() {\n    [native code]\n}"
    },
    {
      "path": "window.onbeforeunload",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.onbeforeunload",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.onhashchange",
      "propertyName": "_get",
      "property": "function onhashchange() {\n    [native code]\n}"
    },
    {
      "path": "window.onhashchange",
      "propertyName": "_set",
      "property": "function onhashchange() {\n    [native code]\n}"
    },
    {
      "path": "window.onhashchange",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.onhashchange",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.onlanguagechange",
      "propertyName": "_get",
      "property": "function onlanguagechange() {\n    [native code]\n}"
    },
    {
      "path": "window.onlanguagechange",
      "propertyName": "_set",
      "property": "function onlanguagechange() {\n    [native code]\n}"
    },
    {
      "path": "window.onlanguagechange",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.onlanguagechange",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.onmessage",
      "propertyName": "_get",
      "property": "function onmessage() {\n    [native code]\n}"
    },
    {
      "path": "window.onmessage",
      "propertyName": "_set",
      "property": "function onmessage() {\n    [native code]\n}"
    },
    {
      "path": "window.onmessage",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.onmessage",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.onoffline",
      "propertyName": "_get",
      "property": "function onoffline() {\n    [native code]\n}"
    },
    {
      "path": "window.onoffline",
      "propertyName": "_set",
      "property": "function onoffline() {\n    [native code]\n}"
    },
    {
      "path": "window.onoffline",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.onoffline",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.ononline",
      "propertyName": "_get",
      "property": "function ononline() {\n    [native code]\n}"
    },
    {
      "path": "window.ononline",
      "propertyName": "_set",
      "property": "function ononline() {\n    [native code]\n}"
    },
    {
      "path": "window.ononline",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.ononline",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.onpagehide",
      "propertyName": "_get",
      "property": "function onpagehide() {\n    [native code]\n}"
    },
    {
      "path": "window.onpagehide",
      "propertyName": "_set",
      "property": "function onpagehide() {\n    [native code]\n}"
    },
    {
      "path": "window.onpagehide",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.onpagehide",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.onpageshow",
      "propertyName": "_get",
      "property": "function onpageshow() {\n    [native code]\n}"
    },
    {
      "path": "window.onpageshow",
      "propertyName": "_set",
      "property": "function onpageshow() {\n    [native code]\n}"
    },
    {
      "path": "window.onpageshow",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.onpageshow",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.onpopstate",
      "propertyName": "_get",
      "property": "function onpopstate() {\n    [native code]\n}"
    },
    {
      "path": "window.onpopstate",
      "propertyName": "_set",
      "property": "function onpopstate() {\n    [native code]\n}"
    },
    {
      "path": "window.onpopstate",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.onpopstate",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.onstorage",
      "propertyName": "_get",
      "property": "function onstorage() {\n    [native code]\n}"
    },
    {
      "path": "window.onstorage",
      "propertyName": "_set",
      "property": "function onstorage() {\n    [native code]\n}"
    },
    {
      "path": "window.onstorage",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.onstorage",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.onunload",
      "propertyName": "_get",
      "property": "function onunload() {\n    [native code]\n}"
    },
    {
      "path": "window.onunload",
      "propertyName": "_set",
      "property": "function onunload() {\n    [native code]\n}"
    },
    {
      "path": "window.onunload",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.onunload",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.close",
      "propertyName": "_function",
      "property": "function close() {\n    [native code]\n}"
    },
    {
      "path": "window.stop",
      "propertyName": "_function",
      "property": "function stop() {\n    [native code]\n}"
    },
    {
      "path": "window.focus",
      "propertyName": "_function",
      "property": "function focus() {\n    [native code]\n}"
    },
    {
      "path": "window.blur",
      "propertyName": "_function",
      "property": "function blur() {\n    [native code]\n}"
    },
    {
      "path": "window.open",
      "propertyName": "_function",
      "property": "function open() {\n    [native code]\n}"
    },
    {
      "path": "window.alert",
      "propertyName": "_function",
      "property": "function alert() {\n    [native code]\n}"
    },
    {
      "path": "window.confirm",
      "propertyName": "_function",
      "property": "function confirm() {\n    [native code]\n}"
    },
    {
      "path": "window.prompt",
      "propertyName": "_function",
      "property": "function prompt() {\n    [native code]\n}"
    },
    {
      "path": "window.print",
      "propertyName": "_function",
      "property": "function print() {\n    [native code]\n}"
    },
    {
      "path": "window.requestAnimationFrame",
      "propertyName": "_function",
      "property": "function requestAnimationFrame() {\n    [native code]\n}"
    },
    {
      "path": "window.cancelAnimationFrame",
      "propertyName": "_function",
      "property": "function cancelAnimationFrame() {\n    [native code]\n}"
    },
    {
      "path": "window.postMessage",
      "propertyName": "_function",
      "property": "function postMessage() {\n    [native code]\n}"
    },
    {
      "path": "window.captureEvents",
      "propertyName": "_function",
      "property": "function captureEvents() {\n    [native code]\n}"
    },
    {
      "path": "window.releaseEvents",
      "propertyName": "_function",
      "property": "function releaseEvents() {\n    [native code]\n}"
    },
    {
      "path": "window.getComputedStyle",
      "propertyName": "_function",
      "property": "function getComputedStyle() {\n    [native code]\n}"
    },
    {
      "path": "window.matchMedia",
      "propertyName": "_function",
      "property": "function matchMedia() {\n    [native code]\n}"
    },
    {
      "path": "window.moveTo",
      "propertyName": "_function",
      "property": "function moveTo() {\n    [native code]\n}"
    },
    {
      "path": "window.moveBy",
      "propertyName": "_function",
      "property": "function moveBy() {\n    [native code]\n}"
    },
    {
      "path": "window.resizeTo",
      "propertyName": "_function",
      "property": "function resizeTo() {\n    [native code]\n}"
    },
    {
      "path": "window.resizeBy",
      "propertyName": "_function",
      "property": "function resizeBy() {\n    [native code]\n}"
    },
    {
      "path": "window.scroll",
      "propertyName": "_function",
      "property": "function scroll() {\n    [native code]\n}"
    },
    {
      "path": "window.scrollTo",
      "propertyName": "_function",
      "property": "function scrollTo() {\n    [native code]\n}"
    },
    {
      "path": "window.scrollBy",
      "propertyName": "_function",
      "property": "function scrollBy() {\n    [native code]\n}"
    },
    {
      "path": "window.getSelection",
      "propertyName": "_function",
      "property": "function getSelection() {\n    [native code]\n}"
    },
    {
      "path": "window.find",
      "propertyName": "_function",
      "property": "function find() {\n    [native code]\n}"
    },
    {
      "path": "window.webkitRequestAnimationFrame",
      "propertyName": "_function",
      "property": "function webkitRequestAnimationFrame() {\n    [native code]\n}"
    },
    {
      "path": "window.webkitCancelAnimationFrame",
      "propertyName": "_function",
      "property": "function webkitCancelAnimationFrame() {\n    [native code]\n}"
    },
    {
      "path": "window.setTimeout",
      "propertyName": "_function",
      "property": "function setTimeout() {\n    [native code]\n}"
    },
    {
      "path": "window.clearTimeout",
      "propertyName": "_function",
      "property": "function clearTimeout() {\n    [native code]\n}"
    },
    {
      "path": "window.setInterval",
      "propertyName": "_function",
      "property": "function setInterval() {\n    [native code]\n}"
    },
    {
      "path": "window.clearInterval",
      "propertyName": "_function",
      "property": "function clearInterval() {\n    [native code]\n}"
    },
    {
      "path": "window.queueMicrotask",
      "propertyName": "_function",
      "property": "function queueMicrotask() {\n    [native code]\n}"
    },
    {
      "path": "window.atob",
      "propertyName": "_function",
      "property": "function atob() {\n    [native code]\n}"
    },
    {
      "path": "window.btoa",
      "propertyName": "_function",
      "property": "function btoa() {\n    [native code]\n}"
    },
    {
      "path": "window.isNaN",
      "propertyName": "_function",
      "property": "function isNaN() {\n    [native code]\n}"
    },
    {
      "path": "window.isFinite",
      "propertyName": "_function",
      "property": "function isFinite() {\n    [native code]\n}"
    },
    {
      "path": "window.escape",
      "propertyName": "_function",
      "property": "function escape() {\n    [native code]\n}"
    },
    {
      "path": "window.unescape",
      "propertyName": "_function",
      "property": "function unescape() {\n    [native code]\n}"
    },
    {
      "path": "window.decodeURI",
      "propertyName": "_function",
      "property": "function decodeURI() {\n    [native code]\n}"
    },
    {
      "path": "window.decodeURIComponent",
      "propertyName": "_function",
      "property": "function decodeURIComponent() {\n    [native code]\n}"
    },
    {
      "path": "window.encodeURI",
      "propertyName": "_function",
      "property": "function encodeURI() {\n    [native code]\n}"
    },
    {
      "path": "window.encodeURIComponent",
      "propertyName": "_function",
      "property": "function encodeURIComponent() {\n    [native code]\n}"
    },
    {
      "path": "window.eval",
      "propertyName": "_function",
      "property": "function eval() {\n    [native code]\n}"
    },
    {
      "path": "window",
      "propertyName": "parseInt",
      "property": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "parseInt"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 2
        },
        "_function": "function parseInt() {\n    [native code]\n}",
        "_invocation": null,
        "_flags": "cw"
      }
    },
    {
      "path": "window",
      "propertyName": "parseFloat",
      "property": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "parseFloat"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "_function": "function parseFloat() {\n    [native code]\n}",
        "_invocation": null,
        "_flags": "cw"
      }
    },
    {
      "path": "window.ArrayBuffer.prototype.slice",
      "propertyName": "_function",
      "property": "function slice() {\n    [native code]\n}"
    },
    {
      "path": "window.ArrayBuffer.prototype.byteLength",
      "propertyName": "_accessException",
      "property": "TypeError: Receiver should be an array buffer"
    },
    {
      "path": "window.ArrayBuffer.prototype.byteLength",
      "propertyName": "_get",
      "property": "function get byteLength() {\n    [native code]\n}"
    },
    {
      "path": "window.ArrayBuffer.prototype.byteLength",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.ArrayBuffer.isView",
      "propertyName": "_function",
      "property": "function isView() {\n    [native code]\n}"
    },
    {
      "path": "window.ArrayBuffer",
      "propertyName": "_function",
      "property": "function ArrayBuffer() {\n    [native code]\n}"
    },
    {
      "path": "window.EvalError.prototype",
      "propertyName": "toString",
      "property": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "toString"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "_function": "function toString() {\n    [native code]\n}",
        "_invocation": "EvalError",
        "_flags": "cw"
      }
    },
    {
      "path": "window.EvalError.stackTraceLimit",
      "propertyName": "_value",
      "property": 100
    },
    {
      "path": "window.EvalError.new().stack",
      "propertyName": "_value",
      "property": "<url>:2034:41\nasyncFunctionResume@[native code]\n[native code]\npromiseReactionJob@[native code]"
    },
    {
      "path": "window.EvalError",
      "propertyName": "_function",
      "property": "function EvalError() {\n    [native code]\n}"
    },
    {
      "path": "window.RangeError.prototype",
      "propertyName": "toString",
      "property": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "toString"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "_function": "function toString() {\n    [native code]\n}",
        "_invocation": "RangeError",
        "_flags": "cw"
      }
    },
    {
      "path": "window.RangeError.stackTraceLimit",
      "propertyName": "_value",
      "property": 100
    },
    {
      "path": "window.RangeError.new().stack",
      "propertyName": "_value",
      "property": "<url>:2034:41\nasyncFunctionResume@[native code]\n[native code]\npromiseReactionJob@[native code]"
    },
    {
      "path": "window.RangeError",
      "propertyName": "_function",
      "property": "function RangeError() {\n    [native code]\n}"
    },
    {
      "path": "window.ReferenceError.prototype",
      "propertyName": "toString",
      "property": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "toString"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "_function": "function toString() {\n    [native code]\n}",
        "_invocation": "ReferenceError",
        "_flags": "cw"
      }
    },
    {
      "path": "window.ReferenceError.stackTraceLimit",
      "propertyName": "_value",
      "property": 100
    },
    {
      "path": "window.ReferenceError.new().stack",
      "propertyName": "_value",
      "property": "<url>:2034:41\nasyncFunctionResume@[native code]\n[native code]\npromiseReactionJob@[native code]"
    },
    {
      "path": "window.ReferenceError",
      "propertyName": "_function",
      "property": "function ReferenceError() {\n    [native code]\n}"
    },
    {
      "path": "window.SyntaxError.prototype",
      "propertyName": "toString",
      "property": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "toString"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "_function": "function toString() {\n    [native code]\n}",
        "_invocation": "SyntaxError",
        "_flags": "cw"
      }
    },
    {
      "path": "window.SyntaxError.stackTraceLimit",
      "propertyName": "_value",
      "property": 100
    },
    {
      "path": "window.SyntaxError.new().stack",
      "propertyName": "_value",
      "property": "<url>:2034:41\nasyncFunctionResume@[native code]\n[native code]\npromiseReactionJob@[native code]"
    },
    {
      "path": "window.SyntaxError",
      "propertyName": "_function",
      "property": "function SyntaxError() {\n    [native code]\n}"
    },
    {
      "path": "window.TypeError.prototype",
      "propertyName": "toString",
      "property": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "toString"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "_function": "function toString() {\n    [native code]\n}",
        "_invocation": "TypeError",
        "_flags": "cw"
      }
    },
    {
      "path": "window.TypeError.stackTraceLimit",
      "propertyName": "_value",
      "property": 100
    },
    {
      "path": "window.TypeError.new().stack",
      "propertyName": "_value",
      "property": "<url>:2034:41\nasyncFunctionResume@[native code]\n[native code]\npromiseReactionJob@[native code]"
    },
    {
      "path": "window.TypeError",
      "propertyName": "_function",
      "property": "function TypeError() {\n    [native code]\n}"
    },
    {
      "path": "window.URIError.prototype",
      "propertyName": "toString",
      "property": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "toString"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "_function": "function toString() {\n    [native code]\n}",
        "_invocation": "URIError",
        "_flags": "cw"
      }
    },
    {
      "path": "window.URIError.stackTraceLimit",
      "propertyName": "_value",
      "property": 100
    },
    {
      "path": "window.URIError",
      "propertyName": "_function",
      "property": "function URIError() {\n    [native code]\n}"
    },
    {
      "path": "window.Proxy.revocable",
      "propertyName": "_function",
      "property": "function revocable() {\n    [native code]\n}"
    },
    {
      "path": "window.Proxy.revocable",
      "propertyName": "_flags",
      "property": "cew"
    },
    {
      "path": "window.Proxy",
      "propertyName": "_function",
      "property": "function Proxy() {\n    [native code]\n}"
    },
    {
      "path": "window.Reflect.apply",
      "propertyName": "_function",
      "property": "function apply() {\n    [native code]\n}"
    },
    {
      "path": "window.Reflect.construct",
      "propertyName": "_function",
      "property": "function construct() {\n    [native code]\n}"
    },
    {
      "path": "window.Reflect.defineProperty",
      "propertyName": "_function",
      "property": "function defineProperty() {\n    [native code]\n}"
    },
    {
      "path": "window.Reflect.deleteProperty",
      "propertyName": "_function",
      "property": "function deleteProperty() {\n    [native code]\n}"
    },
    {
      "path": "window.Reflect.get",
      "propertyName": "_function",
      "property": "function get() {\n    [native code]\n}"
    },
    {
      "path": "window.Reflect.getOwnPropertyDescriptor",
      "propertyName": "_function",
      "property": "function getOwnPropertyDescriptor() {\n    [native code]\n}"
    },
    {
      "path": "window.Reflect.getPrototypeOf",
      "propertyName": "_function",
      "property": "function getPrototypeOf() {\n    [native code]\n}"
    },
    {
      "path": "window.Reflect.has",
      "propertyName": "_function",
      "property": "function has() {\n    [native code]\n}"
    },
    {
      "path": "window.Reflect.isExtensible",
      "propertyName": "_function",
      "property": "function isExtensible() {\n    [native code]\n}"
    },
    {
      "path": "window.Reflect.ownKeys",
      "propertyName": "_function",
      "property": "function ownKeys() {\n    [native code]\n}"
    },
    {
      "path": "window.Reflect.preventExtensions",
      "propertyName": "_function",
      "property": "function preventExtensions() {\n    [native code]\n}"
    },
    {
      "path": "window.Reflect.set",
      "propertyName": "_function",
      "property": "function set() {\n    [native code]\n}"
    },
    {
      "path": "window.Reflect.setPrototypeOf",
      "propertyName": "_function",
      "property": "function setPrototypeOf() {\n    [native code]\n}"
    },
    {
      "path": "window.JSON.parse",
      "propertyName": "_function",
      "property": "function parse() {\n    [native code]\n}"
    },
    {
      "path": "window.JSON.stringify",
      "propertyName": "_function",
      "property": "function stringify() {\n    [native code]\n}"
    },
    {
      "path": "window.Math.abs",
      "propertyName": "_function",
      "property": "function abs() {\n    [native code]\n}"
    },
    {
      "path": "window.Math.acos",
      "propertyName": "_function",
      "property": "function acos() {\n    [native code]\n}"
    },
    {
      "path": "window.Math.asin",
      "propertyName": "_function",
      "property": "function asin() {\n    [native code]\n}"
    },
    {
      "path": "window.Math.atan",
      "propertyName": "_function",
      "property": "function atan() {\n    [native code]\n}"
    },
    {
      "path": "window.Math.acosh",
      "propertyName": "_function",
      "property": "function acosh() {\n    [native code]\n}"
    },
    {
      "path": "window.Math.asinh",
      "propertyName": "_function",
      "property": "function asinh() {\n    [native code]\n}"
    },
    {
      "path": "window.Math.atanh",
      "propertyName": "_function",
      "property": "function atanh() {\n    [native code]\n}"
    },
    {
      "path": "window.Math.atan2",
      "propertyName": "_function",
      "property": "function atan2() {\n    [native code]\n}"
    },
    {
      "path": "window.Math.cbrt",
      "propertyName": "_function",
      "property": "function cbrt() {\n    [native code]\n}"
    },
    {
      "path": "window.Math.ceil",
      "propertyName": "_function",
      "property": "function ceil() {\n    [native code]\n}"
    },
    {
      "path": "window.Math.clz32",
      "propertyName": "_function",
      "property": "function clz32() {\n    [native code]\n}"
    },
    {
      "path": "window.Math.cos",
      "propertyName": "_function",
      "property": "function cos() {\n    [native code]\n}"
    },
    {
      "path": "window.Math.cosh",
      "propertyName": "_function",
      "property": "function cosh() {\n    [native code]\n}"
    },
    {
      "path": "window.Math.exp",
      "propertyName": "_function",
      "property": "function exp() {\n    [native code]\n}"
    },
    {
      "path": "window.Math.expm1",
      "propertyName": "_function",
      "property": "function expm1() {\n    [native code]\n}"
    },
    {
      "path": "window.Math.floor",
      "propertyName": "_function",
      "property": "function floor() {\n    [native code]\n}"
    },
    {
      "path": "window.Math.fround",
      "propertyName": "_function",
      "property": "function fround() {\n    [native code]\n}"
    },
    {
      "path": "window.Math.hypot",
      "propertyName": "_function",
      "property": "function hypot() {\n    [native code]\n}"
    },
    {
      "path": "window.Math.log",
      "propertyName": "_function",
      "property": "function log() {\n    [native code]\n}"
    },
    {
      "path": "window.Math.log10",
      "propertyName": "_function",
      "property": "function log10() {\n    [native code]\n}"
    },
    {
      "path": "window.Math.log1p",
      "propertyName": "_function",
      "property": "function log1p() {\n    [native code]\n}"
    },
    {
      "path": "window.Math.log2",
      "propertyName": "_function",
      "property": "function log2() {\n    [native code]\n}"
    },
    {
      "path": "window.Math.max",
      "propertyName": "_function",
      "property": "function max() {\n    [native code]\n}"
    },
    {
      "path": "window.Math.min",
      "propertyName": "_function",
      "property": "function min() {\n    [native code]\n}"
    },
    {
      "path": "window.Math.pow",
      "propertyName": "_function",
      "property": "function pow() {\n    [native code]\n}"
    },
    {
      "path": "window.Math.random",
      "propertyName": "_function",
      "property": "function random() {\n    [native code]\n}"
    },
    {
      "path": "window.Math.round",
      "propertyName": "_function",
      "property": "function round() {\n    [native code]\n}"
    },
    {
      "path": "window.Math.sign",
      "propertyName": "_function",
      "property": "function sign() {\n    [native code]\n}"
    },
    {
      "path": "window.Math.sin",
      "propertyName": "_function",
      "property": "function sin() {\n    [native code]\n}"
    },
    {
      "path": "window.Math.sinh",
      "propertyName": "_function",
      "property": "function sinh() {\n    [native code]\n}"
    },
    {
      "path": "window.Math.sqrt",
      "propertyName": "_function",
      "property": "function sqrt() {\n    [native code]\n}"
    },
    {
      "path": "window.Math.tan",
      "propertyName": "_function",
      "property": "function tan() {\n    [native code]\n}"
    },
    {
      "path": "window.Math.tanh",
      "propertyName": "_function",
      "property": "function tanh() {\n    [native code]\n}"
    },
    {
      "path": "window.Math.trunc",
      "propertyName": "_function",
      "property": "function trunc() {\n    [native code]\n}"
    },
    {
      "path": "window.Math.imul",
      "propertyName": "_function",
      "property": "function imul() {\n    [native code]\n}"
    },
    {
      "path": "window.console.debug",
      "propertyName": "_function",
      "property": "function debug() {\n    [native code]\n}"
    },
    {
      "path": "window.console.error",
      "propertyName": "_function",
      "property": "function error() {\n    [native code]\n}"
    },
    {
      "path": "window.console.log",
      "propertyName": "_function",
      "property": "function log() {\n    [native code]\n}"
    },
    {
      "path": "window.console.info",
      "propertyName": "_function",
      "property": "function info() {\n    [native code]\n}"
    },
    {
      "path": "window.console.warn",
      "propertyName": "_function",
      "property": "function warn() {\n    [native code]\n}"
    },
    {
      "path": "window.console.clear",
      "propertyName": "_function",
      "property": "function clear() {\n    [native code]\n}"
    },
    {
      "path": "window.console.dir",
      "propertyName": "_function",
      "property": "function dir() {\n    [native code]\n}"
    },
    {
      "path": "window.console.dirxml",
      "propertyName": "_function",
      "property": "function dirxml() {\n    [native code]\n}"
    },
    {
      "path": "window.console.table",
      "propertyName": "_function",
      "property": "function table() {\n    [native code]\n}"
    },
    {
      "path": "window.console.trace",
      "propertyName": "_function",
      "property": "function trace() {\n    [native code]\n}"
    },
    {
      "path": "window.console.assert",
      "propertyName": "_function",
      "property": "function assert() {\n    [native code]\n}"
    },
    {
      "path": "window.console.count",
      "propertyName": "_function",
      "property": "function count() {\n    [native code]\n}"
    },
    {
      "path": "window.console.countReset",
      "propertyName": "_function",
      "property": "function countReset() {\n    [native code]\n}"
    },
    {
      "path": "window.console.profile",
      "propertyName": "_function",
      "property": "function profile() {\n    [native code]\n}"
    },
    {
      "path": "window.console.profileEnd",
      "propertyName": "_function",
      "property": "function profileEnd() {\n    [native code]\n}"
    },
    {
      "path": "window.console.time",
      "propertyName": "_function",
      "property": "function time() {\n    [native code]\n}"
    },
    {
      "path": "window.console.timeLog",
      "propertyName": "_function",
      "property": "function timeLog() {\n    [native code]\n}"
    },
    {
      "path": "window.console.timeEnd",
      "propertyName": "_function",
      "property": "function timeEnd() {\n    [native code]\n}"
    },
    {
      "path": "window.console.timeStamp",
      "propertyName": "_function",
      "property": "function timeStamp() {\n    [native code]\n}"
    },
    {
      "path": "window.console.group",
      "propertyName": "_function",
      "property": "function group() {\n    [native code]\n}"
    },
    {
      "path": "window.console.groupCollapsed",
      "propertyName": "_function",
      "property": "function groupCollapsed() {\n    [native code]\n}"
    },
    {
      "path": "window.console.groupEnd",
      "propertyName": "_function",
      "property": "function groupEnd() {\n    [native code]\n}"
    },
    {
      "path": "window.Int8Array",
      "propertyName": "_function",
      "property": "function Int8Array() {\n    [native code]\n}"
    },
    {
      "path": "window.Int16Array",
      "propertyName": "_function",
      "property": "function Int16Array() {\n    [native code]\n}"
    },
    {
      "path": "window.Int32Array",
      "propertyName": "_function",
      "property": "function Int32Array() {\n    [native code]\n}"
    },
    {
      "path": "window.Uint8Array",
      "propertyName": "_function",
      "property": "function Uint8Array() {\n    [native code]\n}"
    },
    {
      "path": "window.Uint8ClampedArray",
      "propertyName": "_function",
      "property": "function Uint8ClampedArray() {\n    [native code]\n}"
    },
    {
      "path": "window.Uint16Array",
      "propertyName": "_function",
      "property": "function Uint16Array() {\n    [native code]\n}"
    },
    {
      "path": "window.Uint32Array",
      "propertyName": "_function",
      "property": "function Uint32Array() {\n    [native code]\n}"
    },
    {
      "path": "window.Float32Array",
      "propertyName": "_function",
      "property": "function Float32Array() {\n    [native code]\n}"
    },
    {
      "path": "window.Float64Array",
      "propertyName": "_function",
      "property": "function Float64Array() {\n    [native code]\n}"
    },
    {
      "path": "window.DataView.prototype.getInt8",
      "propertyName": "_function",
      "property": "function getInt8() {\n    [native code]\n}"
    },
    {
      "path": "window.DataView.prototype.getUint8",
      "propertyName": "_function",
      "property": "function getUint8() {\n    [native code]\n}"
    },
    {
      "path": "window.DataView.prototype.getInt16",
      "propertyName": "_function",
      "property": "function getInt16() {\n    [native code]\n}"
    },
    {
      "path": "window.DataView.prototype.getUint16",
      "propertyName": "_function",
      "property": "function getUint16() {\n    [native code]\n}"
    },
    {
      "path": "window.DataView.prototype.getInt32",
      "propertyName": "_function",
      "property": "function getInt32() {\n    [native code]\n}"
    },
    {
      "path": "window.DataView.prototype.getUint32",
      "propertyName": "_function",
      "property": "function getUint32() {\n    [native code]\n}"
    },
    {
      "path": "window.DataView.prototype.getFloat32",
      "propertyName": "_function",
      "property": "function getFloat32() {\n    [native code]\n}"
    },
    {
      "path": "window.DataView.prototype.getFloat64",
      "propertyName": "_function",
      "property": "function getFloat64() {\n    [native code]\n}"
    },
    {
      "path": "window.DataView.prototype.setInt8",
      "propertyName": "_function",
      "property": "function setInt8() {\n    [native code]\n}"
    },
    {
      "path": "window.DataView.prototype.setUint8",
      "propertyName": "_function",
      "property": "function setUint8() {\n    [native code]\n}"
    },
    {
      "path": "window.DataView.prototype.setInt16",
      "propertyName": "_function",
      "property": "function setInt16() {\n    [native code]\n}"
    },
    {
      "path": "window.DataView.prototype.setUint16",
      "propertyName": "_function",
      "property": "function setUint16() {\n    [native code]\n}"
    },
    {
      "path": "window.DataView.prototype.setInt32",
      "propertyName": "_function",
      "property": "function setInt32() {\n    [native code]\n}"
    },
    {
      "path": "window.DataView.prototype.setUint32",
      "propertyName": "_function",
      "property": "function setUint32() {\n    [native code]\n}"
    },
    {
      "path": "window.DataView.prototype.setFloat32",
      "propertyName": "_function",
      "property": "function setFloat32() {\n    [native code]\n}"
    },
    {
      "path": "window.DataView.prototype.setFloat64",
      "propertyName": "_function",
      "property": "function setFloat64() {\n    [native code]\n}"
    },
    {
      "path": "window.DataView.prototype.buffer",
      "propertyName": "_accessException",
      "property": "TypeError: DataView.prototype.buffer expects |this| to be a DataView object"
    },
    {
      "path": "window.DataView.prototype.buffer",
      "propertyName": "_get",
      "property": "function get buffer() {\n    [native code]\n}"
    },
    {
      "path": "window.DataView.prototype.buffer",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.DataView.prototype.byteLength",
      "propertyName": "_accessException",
      "property": "TypeError: DataView.prototype.buffer expects |this| to be a DataView object"
    },
    {
      "path": "window.DataView.prototype.byteLength",
      "propertyName": "_get",
      "property": "function get byteLength() {\n    [native code]\n}"
    },
    {
      "path": "window.DataView.prototype.byteLength",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.DataView.prototype.byteOffset",
      "propertyName": "_accessException",
      "property": "TypeError: DataView.prototype.buffer expects |this| to be a DataView object"
    },
    {
      "path": "window.DataView.prototype.byteOffset",
      "propertyName": "_get",
      "property": "function get byteOffset() {\n    [native code]\n}"
    },
    {
      "path": "window.DataView.prototype.byteOffset",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.DataView",
      "propertyName": "new()",
      "property": "TypeError: DataView constructor requires at least one argument."
    },
    {
      "path": "window.DataView",
      "propertyName": "_function",
      "property": "function DataView() {\n    [native code]\n}"
    },
    {
      "path": "window.Date.parse",
      "propertyName": "_function",
      "property": "function parse() {\n    [native code]\n}"
    },
    {
      "path": "window.Date.UTC",
      "propertyName": "_function",
      "property": "function UTC() {\n    [native code]\n}"
    },
    {
      "path": "window.Date.now",
      "propertyName": "_function",
      "property": "function now() {\n    [native code]\n}"
    },
    {
      "path": "window.Date.prototype.toString",
      "propertyName": "_function",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Date.prototype.toISOString",
      "propertyName": "_function",
      "property": "function toISOString() {\n    [native code]\n}"
    },
    {
      "path": "window.Date.prototype.toDateString",
      "propertyName": "_function",
      "property": "function toDateString() {\n    [native code]\n}"
    },
    {
      "path": "window.Date.prototype.toTimeString",
      "propertyName": "_function",
      "property": "function toTimeString() {\n    [native code]\n}"
    },
    {
      "path": "window.Date.prototype.toLocaleString",
      "propertyName": "_function",
      "property": "function toLocaleString() {\n    [native code]\n}"
    },
    {
      "path": "window.Date.prototype.toLocaleDateString",
      "propertyName": "_function",
      "property": "function toLocaleDateString() {\n    [native code]\n}"
    },
    {
      "path": "window.Date.prototype.toLocaleTimeString",
      "propertyName": "_function",
      "property": "function toLocaleTimeString() {\n    [native code]\n}"
    },
    {
      "path": "window.Date.prototype.valueOf",
      "propertyName": "_function",
      "property": "function valueOf() {\n    [native code]\n}"
    },
    {
      "path": "window.Date.prototype.getTime",
      "propertyName": "_function",
      "property": "function getTime() {\n    [native code]\n}"
    },
    {
      "path": "window.Date.prototype.getFullYear",
      "propertyName": "_function",
      "property": "function getFullYear() {\n    [native code]\n}"
    },
    {
      "path": "window.Date.prototype.getUTCFullYear",
      "propertyName": "_function",
      "property": "function getUTCFullYear() {\n    [native code]\n}"
    },
    {
      "path": "window.Date.prototype.getMonth",
      "propertyName": "_function",
      "property": "function getMonth() {\n    [native code]\n}"
    },
    {
      "path": "window.Date.prototype.getUTCMonth",
      "propertyName": "_function",
      "property": "function getUTCMonth() {\n    [native code]\n}"
    },
    {
      "path": "window.Date.prototype.getDate",
      "propertyName": "_function",
      "property": "function getDate() {\n    [native code]\n}"
    },
    {
      "path": "window.Date.prototype.getUTCDate",
      "propertyName": "_function",
      "property": "function getUTCDate() {\n    [native code]\n}"
    },
    {
      "path": "window.Date.prototype.getDay",
      "propertyName": "_function",
      "property": "function getDay() {\n    [native code]\n}"
    },
    {
      "path": "window.Date.prototype.getUTCDay",
      "propertyName": "_function",
      "property": "function getUTCDay() {\n    [native code]\n}"
    },
    {
      "path": "window.Date.prototype.getHours",
      "propertyName": "_function",
      "property": "function getHours() {\n    [native code]\n}"
    },
    {
      "path": "window.Date.prototype.getUTCHours",
      "propertyName": "_function",
      "property": "function getUTCHours() {\n    [native code]\n}"
    },
    {
      "path": "window.Date.prototype.getMinutes",
      "propertyName": "_function",
      "property": "function getMinutes() {\n    [native code]\n}"
    },
    {
      "path": "window.Date.prototype.getUTCMinutes",
      "propertyName": "_function",
      "property": "function getUTCMinutes() {\n    [native code]\n}"
    },
    {
      "path": "window.Date.prototype.getSeconds",
      "propertyName": "_function",
      "property": "function getSeconds() {\n    [native code]\n}"
    },
    {
      "path": "window.Date.prototype.getUTCSeconds",
      "propertyName": "_function",
      "property": "function getUTCSeconds() {\n    [native code]\n}"
    },
    {
      "path": "window.Date.prototype.getMilliseconds",
      "propertyName": "_function",
      "property": "function getMilliseconds() {\n    [native code]\n}"
    },
    {
      "path": "window.Date.prototype.getUTCMilliseconds",
      "propertyName": "_function",
      "property": "function getUTCMilliseconds() {\n    [native code]\n}"
    },
    {
      "path": "window.Date.prototype.getTimezoneOffset",
      "propertyName": "_function",
      "property": "function getTimezoneOffset() {\n    [native code]\n}"
    },
    {
      "path": "window.Date.prototype.setTime",
      "propertyName": "_function",
      "property": "function setTime() {\n    [native code]\n}"
    },
    {
      "path": "window.Date.prototype.setMilliseconds",
      "propertyName": "_function",
      "property": "function setMilliseconds() {\n    [native code]\n}"
    },
    {
      "path": "window.Date.prototype.setUTCMilliseconds",
      "propertyName": "_function",
      "property": "function setUTCMilliseconds() {\n    [native code]\n}"
    },
    {
      "path": "window.Date.prototype.setSeconds",
      "propertyName": "_function",
      "property": "function setSeconds() {\n    [native code]\n}"
    },
    {
      "path": "window.Date.prototype.setUTCSeconds",
      "propertyName": "_function",
      "property": "function setUTCSeconds() {\n    [native code]\n}"
    },
    {
      "path": "window.Date.prototype.setMinutes",
      "propertyName": "_function",
      "property": "function setMinutes() {\n    [native code]\n}"
    },
    {
      "path": "window.Date.prototype.setUTCMinutes",
      "propertyName": "_function",
      "property": "function setUTCMinutes() {\n    [native code]\n}"
    },
    {
      "path": "window.Date.prototype.setHours",
      "propertyName": "_function",
      "property": "function setHours() {\n    [native code]\n}"
    },
    {
      "path": "window.Date.prototype.setUTCHours",
      "propertyName": "_function",
      "property": "function setUTCHours() {\n    [native code]\n}"
    },
    {
      "path": "window.Date.prototype.setDate",
      "propertyName": "_function",
      "property": "function setDate() {\n    [native code]\n}"
    },
    {
      "path": "window.Date.prototype.setUTCDate",
      "propertyName": "_function",
      "property": "function setUTCDate() {\n    [native code]\n}"
    },
    {
      "path": "window.Date.prototype.setMonth",
      "propertyName": "_function",
      "property": "function setMonth() {\n    [native code]\n}"
    },
    {
      "path": "window.Date.prototype.setUTCMonth",
      "propertyName": "_function",
      "property": "function setUTCMonth() {\n    [native code]\n}"
    },
    {
      "path": "window.Date.prototype.setFullYear",
      "propertyName": "_function",
      "property": "function setFullYear() {\n    [native code]\n}"
    },
    {
      "path": "window.Date.prototype.setUTCFullYear",
      "propertyName": "_function",
      "property": "function setUTCFullYear() {\n    [native code]\n}"
    },
    {
      "path": "window.Date.prototype.setYear",
      "propertyName": "_function",
      "property": "function setYear() {\n    [native code]\n}"
    },
    {
      "path": "window.Date.prototype.getYear",
      "propertyName": "_function",
      "property": "function getYear() {\n    [native code]\n}"
    },
    {
      "path": "window.Date.prototype.toJSON",
      "propertyName": "_function",
      "property": "function toJSON() {\n    [native code]\n}"
    },
    {
      "path": "window.Date.prototype.toUTCString",
      "propertyName": "_function",
      "property": "function toUTCString() {\n    [native code]\n}"
    },
    {
      "path": "window.Date.prototype",
      "propertyName": "Symbol.toPrimitive._function",
      "property": "function [Symbol.toPrimitive]() {\n    [native code]\n}"
    },
    {
      "path": "window.Date",
      "propertyName": "_function",
      "property": "function Date() {\n    [native code]\n}"
    },
    {
      "path": "window.Error.prototype.toString",
      "propertyName": "_function",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Error.stackTraceLimit",
      "propertyName": "_value",
      "property": 100
    },
    {
      "path": "window.Error.new().stack",
      "propertyName": "_value",
      "property": "<url>:2034:41\nasyncFunctionResume@[native code]\n[native code]\npromiseReactionJob@[native code]"
    },
    {
      "path": "window.Error",
      "propertyName": "_function",
      "property": "function Error() {\n    [native code]\n}"
    },
    {
      "path": "window.Boolean.prototype.toString",
      "propertyName": "_function",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Boolean.prototype.valueOf",
      "propertyName": "_function",
      "property": "function valueOf() {\n    [native code]\n}"
    },
    {
      "path": "window.Boolean",
      "propertyName": "_function",
      "property": "function Boolean() {\n    [native code]\n}"
    },
    {
      "path": "window.Number.isFinite",
      "propertyName": "_function",
      "property": "function isFinite() {\n    [native code]\n}"
    },
    {
      "path": "window.Number.isNaN",
      "propertyName": "_function",
      "property": "function isNaN() {\n    [native code]\n}"
    },
    {
      "path": "window.Number.isSafeInteger",
      "propertyName": "_function",
      "property": "function isSafeInteger() {\n    [native code]\n}"
    },
    {
      "path": "window.Number.prototype.toLocaleString",
      "propertyName": "_function",
      "property": "function toLocaleString() {\n    [native code]\n}"
    },
    {
      "path": "window.Number.prototype.valueOf",
      "propertyName": "_function",
      "property": "function valueOf() {\n    [native code]\n}"
    },
    {
      "path": "window.Number.prototype.toFixed",
      "propertyName": "_function",
      "property": "function toFixed() {\n    [native code]\n}"
    },
    {
      "path": "window.Number.prototype.toExponential",
      "propertyName": "_function",
      "property": "function toExponential() {\n    [native code]\n}"
    },
    {
      "path": "window.Number.prototype.toPrecision",
      "propertyName": "_function",
      "property": "function toPrecision() {\n    [native code]\n}"
    },
    {
      "path": "window.Number.prototype.toString",
      "propertyName": "_function",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Number",
      "propertyName": "parseInt",
      "property": "REF: window.parseInt"
    },
    {
      "path": "window.Number",
      "propertyName": "parseFloat",
      "property": "REF: window.parseFloat"
    },
    {
      "path": "window.Number.isInteger",
      "propertyName": "_function",
      "property": "function isInteger() {\n    [native code]\n}"
    },
    {
      "path": "window.Number",
      "propertyName": "_function",
      "property": "function Number() {\n    [native code]\n}"
    },
    {
      "path": "window.Symbol.for",
      "propertyName": "_function",
      "property": "function for() {\n    [native code]\n}"
    },
    {
      "path": "window.Symbol.keyFor",
      "propertyName": "_function",
      "property": "function keyFor() {\n    [native code]\n}"
    },
    {
      "path": "window.Symbol.prototype.description",
      "propertyName": "_accessException",
      "property": "TypeError: Symbol.prototype.description requires that |this| be a symbol or a symbol object"
    },
    {
      "path": "window.Symbol.prototype.description",
      "propertyName": "_get",
      "property": "function get description() {\n    [native code]\n}"
    },
    {
      "path": "window.Symbol.prototype.description",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Symbol.prototype.toString",
      "propertyName": "_function",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Symbol.prototype.valueOf",
      "propertyName": "_function",
      "property": "function valueOf() {\n    [native code]\n}"
    },
    {
      "path": "window.Symbol.prototype",
      "propertyName": "Symbol.toPrimitive._function",
      "property": "function [Symbol.toPrimitive]() {\n    [native code]\n}"
    },
    {
      "path": "window.Symbol",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.Symbol",
      "propertyName": "_function",
      "property": "function Symbol() {\n    [native code]\n}"
    },
    {
      "path": "window.WeakMap.prototype.delete",
      "propertyName": "_function",
      "property": "function delete() {\n    [native code]\n}"
    },
    {
      "path": "window.WeakMap.prototype.get",
      "propertyName": "_function",
      "property": "function get() {\n    [native code]\n}"
    },
    {
      "path": "window.WeakMap.prototype.has",
      "propertyName": "_function",
      "property": "function has() {\n    [native code]\n}"
    },
    {
      "path": "window.WeakMap.prototype.set",
      "propertyName": "_function",
      "property": "function set() {\n    [native code]\n}"
    },
    {
      "path": "window.WeakMap",
      "propertyName": "_function",
      "property": "function WeakMap() {\n    [native code]\n}"
    },
    {
      "path": "window.WeakSet.prototype.delete",
      "propertyName": "_function",
      "property": "function delete() {\n    [native code]\n}"
    },
    {
      "path": "window.WeakSet.prototype.has",
      "propertyName": "_function",
      "property": "function has() {\n    [native code]\n}"
    },
    {
      "path": "window.WeakSet.prototype.add",
      "propertyName": "_function",
      "property": "function add() {\n    [native code]\n}"
    },
    {
      "path": "window.WeakSet",
      "propertyName": "_function",
      "property": "function WeakSet() {\n    [native code]\n}"
    },
    {
      "path": "window.Object.getPrototypeOf",
      "propertyName": "_function",
      "property": "function getPrototypeOf() {\n    [native code]\n}"
    },
    {
      "path": "window.Object.setPrototypeOf",
      "propertyName": "_function",
      "property": "function setPrototypeOf() {\n    [native code]\n}"
    },
    {
      "path": "window.Object.getOwnPropertyDescriptor",
      "propertyName": "_function",
      "property": "function getOwnPropertyDescriptor() {\n    [native code]\n}"
    },
    {
      "path": "window.Object.getOwnPropertyDescriptors",
      "propertyName": "_function",
      "property": "function getOwnPropertyDescriptors() {\n    [native code]\n}"
    },
    {
      "path": "window.Object.getOwnPropertyNames",
      "propertyName": "_function",
      "property": "function getOwnPropertyNames() {\n    [native code]\n}"
    },
    {
      "path": "window.Object.getOwnPropertySymbols",
      "propertyName": "_function",
      "property": "function getOwnPropertySymbols() {\n    [native code]\n}"
    },
    {
      "path": "window.Object.keys",
      "propertyName": "_function",
      "property": "function keys() {\n    [native code]\n}"
    },
    {
      "path": "window.Object.defineProperty",
      "propertyName": "_function",
      "property": "function defineProperty() {\n    [native code]\n}"
    },
    {
      "path": "window.Object.defineProperties",
      "propertyName": "_function",
      "property": "function defineProperties() {\n    [native code]\n}"
    },
    {
      "path": "window.Object.create",
      "propertyName": "_function",
      "property": "function create() {\n    [native code]\n}"
    },
    {
      "path": "window.Object.seal",
      "propertyName": "_function",
      "property": "function seal() {\n    [native code]\n}"
    },
    {
      "path": "window.Object.freeze",
      "propertyName": "_function",
      "property": "function freeze() {\n    [native code]\n}"
    },
    {
      "path": "window.Object.preventExtensions",
      "propertyName": "_function",
      "property": "function preventExtensions() {\n    [native code]\n}"
    },
    {
      "path": "window.Object.isSealed",
      "propertyName": "_function",
      "property": "function isSealed() {\n    [native code]\n}"
    },
    {
      "path": "window.Object.isFrozen",
      "propertyName": "_function",
      "property": "function isFrozen() {\n    [native code]\n}"
    },
    {
      "path": "window.Object.isExtensible",
      "propertyName": "_function",
      "property": "function isExtensible() {\n    [native code]\n}"
    },
    {
      "path": "window.Object.is",
      "propertyName": "_function",
      "property": "function is() {\n    [native code]\n}"
    },
    {
      "path": "window.Object.assign",
      "propertyName": "_function",
      "property": "function assign() {\n    [native code]\n}"
    },
    {
      "path": "window.Object.values",
      "propertyName": "_function",
      "property": "function values() {\n    [native code]\n}"
    },
    {
      "path": "window.Object.entries",
      "propertyName": "_function",
      "property": "function entries() {\n    [native code]\n}"
    },
    {
      "path": "window.Object.fromEntries",
      "propertyName": "_function",
      "property": "function fromEntries() {\n    [native code]\n}"
    },
    {
      "path": "window.Object.prototype.toString",
      "propertyName": "_function",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Object.prototype.toLocaleString",
      "propertyName": "_function",
      "property": "function toLocaleString() {\n    [native code]\n}"
    },
    {
      "path": "window.Object.prototype.valueOf",
      "propertyName": "_function",
      "property": "function valueOf() {\n    [native code]\n}"
    },
    {
      "path": "window.Object.prototype.hasOwnProperty",
      "propertyName": "_function",
      "property": "function hasOwnProperty() {\n    [native code]\n}"
    },
    {
      "path": "window.Object.prototype.propertyIsEnumerable",
      "propertyName": "_function",
      "property": "function propertyIsEnumerable() {\n    [native code]\n}"
    },
    {
      "path": "window.Object.prototype.isPrototypeOf",
      "propertyName": "_function",
      "property": "function isPrototypeOf() {\n    [native code]\n}"
    },
    {
      "path": "window.Object.prototype.__defineGetter__",
      "propertyName": "_function",
      "property": "function __defineGetter__() {\n    [native code]\n}"
    },
    {
      "path": "window.Object.prototype.__defineSetter__",
      "propertyName": "_function",
      "property": "function __defineSetter__() {\n    [native code]\n}"
    },
    {
      "path": "window.Object.prototype.__lookupGetter__",
      "propertyName": "_function",
      "property": "function __lookupGetter__() {\n    [native code]\n}"
    },
    {
      "path": "window.Object.prototype.__lookupSetter__",
      "propertyName": "_function",
      "property": "function __lookupSetter__() {\n    [native code]\n}"
    },
    {
      "path": "window.Object",
      "propertyName": "_function",
      "property": "function Object() {\n    [native code]\n}"
    },
    {
      "path": "window.Function.prototype.length",
      "propertyName": "_flags",
      "property": ""
    },
    {
      "path": "window.Function.prototype.toString",
      "propertyName": "_function",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Function.prototype.toString",
      "propertyName": "_invocation",
      "property": "function () {\n    [native code]\n}"
    },
    {
      "path": "window.Function.prototype.apply",
      "propertyName": "_function",
      "property": "function apply() {\n    [native code]\n}"
    },
    {
      "path": "window.Function.prototype.call",
      "propertyName": "_function",
      "property": "function call() {\n    [native code]\n}"
    },
    {
      "path": "window.Function.prototype.bind",
      "propertyName": "_function",
      "property": "function bind() {\n    [native code]\n}"
    },
    {
      "path": "window.Function.prototype.caller",
      "propertyName": "_accessException",
      "property": "TypeError: 'arguments', 'callee', and 'caller' cannot be accessed in this context."
    },
    {
      "path": "window.Function.prototype.caller",
      "propertyName": "_get",
      "property": "function () {\n    [native code]\n}"
    },
    {
      "path": "window.Function.prototype.caller",
      "propertyName": "_set",
      "property": "function () {\n    [native code]\n}"
    },
    {
      "path": "window.Function.prototype.caller",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Function.prototype.caller",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Function.prototype.arguments",
      "propertyName": "_accessException",
      "property": "TypeError: 'arguments', 'callee', and 'caller' cannot be accessed in this context."
    },
    {
      "path": "window.Function.prototype.arguments",
      "propertyName": "_get",
      "property": "function () {\n    [native code]\n}"
    },
    {
      "path": "window.Function.prototype.arguments",
      "propertyName": "_set",
      "property": "function () {\n    [native code]\n}"
    },
    {
      "path": "window.Function.prototype.arguments",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Function.prototype.arguments",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Function.prototype",
      "propertyName": "Symbol.hasInstance._function",
      "property": "function [Symbol.hasInstance]() {\n    [native code]\n}"
    },
    {
      "path": "window.Function.prototype",
      "propertyName": "_function",
      "property": "function () {\n    [native code]\n}"
    },
    {
      "path": "window.Function",
      "propertyName": "_function",
      "property": "function Function() {\n    [native code]\n}"
    },
    {
      "path": "window.Array.of",
      "propertyName": "_function",
      "property": "function of() {\n    [native code]\n}"
    },
    {
      "path": "window.Array.from",
      "propertyName": "_function",
      "property": "function from() {\n    [native code]\n}"
    },
    {
      "path": "window.Array.prototype.toString",
      "propertyName": "_function",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Array.prototype",
      "propertyName": "values",
      "property": "REF: window.DOMStringList.prototype.Symbol(Symbol.iterator)"
    },
    {
      "path": "window.Array.prototype.toLocaleString",
      "propertyName": "_function",
      "property": "function toLocaleString() {\n    [native code]\n}"
    },
    {
      "path": "window.Array.prototype.concat",
      "propertyName": "_function",
      "property": "function concat() {\n    [native code]\n}"
    },
    {
      "path": "window.Array.prototype.fill",
      "propertyName": "_function",
      "property": "function fill() {\n    [native code]\n}"
    },
    {
      "path": "window.Array.prototype.fill",
      "propertyName": "_invocation",
      "property": ""
    },
    {
      "path": "window.Array.prototype.join",
      "propertyName": "_function",
      "property": "function join() {\n    [native code]\n}"
    },
    {
      "path": "window.Array.prototype.pop",
      "propertyName": "_function",
      "property": "function pop() {\n    [native code]\n}"
    },
    {
      "path": "window.Array.prototype.push",
      "propertyName": "_function",
      "property": "function push() {\n    [native code]\n}"
    },
    {
      "path": "window.Array.prototype.reverse",
      "propertyName": "_function",
      "property": "function reverse() {\n    [native code]\n}"
    },
    {
      "path": "window.Array.prototype.reverse",
      "propertyName": "_invocation",
      "property": ""
    },
    {
      "path": "window.Array.prototype.shift",
      "propertyName": "_function",
      "property": "function shift() {\n    [native code]\n}"
    },
    {
      "path": "window.Array.prototype.slice",
      "propertyName": "_function",
      "property": "function slice() {\n    [native code]\n}"
    },
    {
      "path": "window.Array.prototype.sort",
      "propertyName": "_function",
      "property": "function sort() {\n    [native code]\n}"
    },
    {
      "path": "window.Array.prototype.sort",
      "propertyName": "_invocation",
      "property": ""
    },
    {
      "path": "window.Array.prototype.splice",
      "propertyName": "_function",
      "property": "function splice() {\n    [native code]\n}"
    },
    {
      "path": "window.Array.prototype.unshift",
      "propertyName": "_function",
      "property": "function unshift() {\n    [native code]\n}"
    },
    {
      "path": "window.Array.prototype.every",
      "propertyName": "_function",
      "property": "function every() {\n    [native code]\n}"
    },
    {
      "path": "window.Array.prototype",
      "propertyName": "forEach",
      "property": "REF: window.DOMTokenList.prototype.forEach"
    },
    {
      "path": "window.Array.prototype.some",
      "propertyName": "_function",
      "property": "function some() {\n    [native code]\n}"
    },
    {
      "path": "window.Array.prototype.indexOf",
      "propertyName": "_function",
      "property": "function indexOf() {\n    [native code]\n}"
    },
    {
      "path": "window.Array.prototype.lastIndexOf",
      "propertyName": "_function",
      "property": "function lastIndexOf() {\n    [native code]\n}"
    },
    {
      "path": "window.Array.prototype.filter",
      "propertyName": "_function",
      "property": "function filter() {\n    [native code]\n}"
    },
    {
      "path": "window.Array.prototype.flat",
      "propertyName": "_function",
      "property": "function flat() {\n    [native code]\n}"
    },
    {
      "path": "window.Array.prototype.flatMap",
      "propertyName": "_function",
      "property": "function flatMap() {\n    [native code]\n}"
    },
    {
      "path": "window.Array.prototype.reduce",
      "propertyName": "_function",
      "property": "function reduce() {\n    [native code]\n}"
    },
    {
      "path": "window.Array.prototype.reduceRight",
      "propertyName": "_function",
      "property": "function reduceRight() {\n    [native code]\n}"
    },
    {
      "path": "window.Array.prototype.map",
      "propertyName": "_function",
      "property": "function map() {\n    [native code]\n}"
    },
    {
      "path": "window.Array.prototype",
      "propertyName": "entries",
      "property": "REF: window.DOMTokenList.prototype.entries"
    },
    {
      "path": "window.Array.prototype",
      "propertyName": "keys",
      "property": "REF: window.DOMTokenList.prototype.keys"
    },
    {
      "path": "window.Array.prototype.find",
      "propertyName": "_function",
      "property": "function find() {\n    [native code]\n}"
    },
    {
      "path": "window.Array.prototype.findIndex",
      "propertyName": "_function",
      "property": "function findIndex() {\n    [native code]\n}"
    },
    {
      "path": "window.Array.prototype.includes",
      "propertyName": "_function",
      "property": "function includes() {\n    [native code]\n}"
    },
    {
      "path": "window.Array.prototype.copyWithin",
      "propertyName": "_function",
      "property": "function copyWithin() {\n    [native code]\n}"
    },
    {
      "path": "window.Array.prototype.copyWithin",
      "propertyName": "_invocation",
      "property": ""
    },
    {
      "path": "window.Array.prototype",
      "propertyName": "Symbol.iterator",
      "property": "REF: window.DOMStringList.prototype.Symbol(Symbol.iterator)"
    },
    {
      "path": "window.Array.isArray",
      "propertyName": "_function",
      "property": "function isArray() {\n    [native code]\n}"
    },
    {
      "path": "window.Array",
      "propertyName": "_function",
      "property": "function Array() {\n    [native code]\n}"
    },
    {
      "path": "window.RegExp.input",
      "propertyName": "_flags",
      "property": "cew"
    },
    {
      "path": "window.RegExp.input",
      "propertyName": "_value",
      "property": ""
    },
    {
      "path": "window.RegExp.$_",
      "propertyName": "_flags",
      "property": "cw"
    },
    {
      "path": "window.RegExp.$_",
      "propertyName": "_value",
      "property": ""
    },
    {
      "path": "window.RegExp.lastMatch",
      "propertyName": "_flags",
      "property": "e"
    },
    {
      "path": "window.RegExp.$&",
      "propertyName": "_flags",
      "property": ""
    },
    {
      "path": "window.RegExp.lastParen",
      "propertyName": "_flags",
      "property": "e"
    },
    {
      "path": "window.RegExp.$+",
      "propertyName": "_flags",
      "property": ""
    },
    {
      "path": "window.RegExp.leftContext",
      "propertyName": "_flags",
      "property": "e"
    },
    {
      "path": "window.RegExp.leftContext",
      "propertyName": "_value",
      "property": ""
    },
    {
      "path": "window.RegExp.$`",
      "propertyName": "_flags",
      "property": ""
    },
    {
      "path": "window.RegExp.$`",
      "propertyName": "_value",
      "property": ""
    },
    {
      "path": "window.RegExp.rightContext",
      "propertyName": "_flags",
      "property": "e"
    },
    {
      "path": "window.RegExp.rightContext",
      "propertyName": "_value",
      "property": ""
    },
    {
      "path": "window.RegExp.$'",
      "propertyName": "_flags",
      "property": ""
    },
    {
      "path": "window.RegExp.$'",
      "propertyName": "_value",
      "property": ""
    },
    {
      "path": "window.RegExp.$1",
      "propertyName": "_flags",
      "property": "e"
    },
    {
      "path": "window.RegExp.$2",
      "propertyName": "_flags",
      "property": "e"
    },
    {
      "path": "window.RegExp.$3",
      "propertyName": "_flags",
      "property": "e"
    },
    {
      "path": "window.RegExp.$4",
      "propertyName": "_flags",
      "property": "e"
    },
    {
      "path": "window.RegExp.$5",
      "propertyName": "_flags",
      "property": "e"
    },
    {
      "path": "window.RegExp.$6",
      "propertyName": "_flags",
      "property": "e"
    },
    {
      "path": "window.RegExp.$7",
      "propertyName": "_flags",
      "property": "e"
    },
    {
      "path": "window.RegExp.$8",
      "propertyName": "_flags",
      "property": "e"
    },
    {
      "path": "window.RegExp.$9",
      "propertyName": "_flags",
      "property": "e"
    },
    {
      "path": "window.RegExp.prototype.compile",
      "propertyName": "_function",
      "property": "function compile() {\n    [native code]\n}"
    },
    {
      "path": "window.RegExp.prototype.exec",
      "propertyName": "_function",
      "property": "function exec() {\n    [native code]\n}"
    },
    {
      "path": "window.RegExp.prototype.toString",
      "propertyName": "_function",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.RegExp.prototype.global",
      "propertyName": "_get",
      "property": "function get global() {\n    [native code]\n}"
    },
    {
      "path": "window.RegExp.prototype.global",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.RegExp.prototype.dotAll",
      "propertyName": "_get",
      "property": "function get dotAll() {\n    [native code]\n}"
    },
    {
      "path": "window.RegExp.prototype.dotAll",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.RegExp.prototype.ignoreCase",
      "propertyName": "_get",
      "property": "function get ignoreCase() {\n    [native code]\n}"
    },
    {
      "path": "window.RegExp.prototype.ignoreCase",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.RegExp.prototype.multiline",
      "propertyName": "_get",
      "property": "function get multiline() {\n    [native code]\n}"
    },
    {
      "path": "window.RegExp.prototype.multiline",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.RegExp.prototype.sticky",
      "propertyName": "_get",
      "property": "function get sticky() {\n    [native code]\n}"
    },
    {
      "path": "window.RegExp.prototype.sticky",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.RegExp.prototype.unicode",
      "propertyName": "_get",
      "property": "function get unicode() {\n    [native code]\n}"
    },
    {
      "path": "window.RegExp.prototype.unicode",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.RegExp.prototype.source",
      "propertyName": "_get",
      "property": "function get source() {\n    [native code]\n}"
    },
    {
      "path": "window.RegExp.prototype.source",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.RegExp.prototype.flags",
      "propertyName": "_get",
      "property": "function get flags() {\n    [native code]\n}"
    },
    {
      "path": "window.RegExp.prototype.flags",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.RegExp.prototype.test",
      "propertyName": "_function",
      "property": "function test() {\n    [native code]\n}"
    },
    {
      "path": "window.RegExp.prototype",
      "propertyName": "Symbol.match._function",
      "property": "function [Symbol.match]() {\n    [native code]\n}"
    },
    {
      "path": "window.RegExp.prototype",
      "propertyName": "Symbol.matchAll._function",
      "property": "function [Symbol.matchAll]() {\n    [native code]\n}"
    },
    {
      "path": "window.RegExp.prototype",
      "propertyName": "Symbol.replace._function",
      "property": "function [Symbol.replace]() {\n    [native code]\n}"
    },
    {
      "path": "window.RegExp.prototype",
      "propertyName": "Symbol.search._function",
      "property": "function [Symbol.search]() {\n    [native code]\n}"
    },
    {
      "path": "window.RegExp.prototype",
      "propertyName": "Symbol.split._function",
      "property": "function [Symbol.split]() {\n    [native code]\n}"
    },
    {
      "path": "window.RegExp",
      "propertyName": "_function",
      "property": "function RegExp() {\n    [native code]\n}"
    },
    {
      "path": "window.String.fromCharCode",
      "propertyName": "_function",
      "property": "function fromCharCode() {\n    [native code]\n}"
    },
    {
      "path": "window.String.fromCodePoint",
      "propertyName": "_function",
      "property": "function fromCodePoint() {\n    [native code]\n}"
    },
    {
      "path": "window.String.raw",
      "propertyName": "_function",
      "property": "function raw() {\n    [native code]\n}"
    },
    {
      "path": "window.String.prototype.concat",
      "propertyName": "_function",
      "property": "function concat() {\n    [native code]\n}"
    },
    {
      "path": "window.String.prototype.match",
      "propertyName": "_function",
      "property": "function match() {\n    [native code]\n}"
    },
    {
      "path": "window.String.prototype.matchAll",
      "propertyName": "_function",
      "property": "function matchAll() {\n    [native code]\n}"
    },
    {
      "path": "window.String.prototype.padStart",
      "propertyName": "_function",
      "property": "function padStart() {\n    [native code]\n}"
    },
    {
      "path": "window.String.prototype.padEnd",
      "propertyName": "_function",
      "property": "function padEnd() {\n    [native code]\n}"
    },
    {
      "path": "window.String.prototype.repeat",
      "propertyName": "_function",
      "property": "function repeat() {\n    [native code]\n}"
    },
    {
      "path": "window.String.prototype.replace",
      "propertyName": "_function",
      "property": "function replace() {\n    [native code]\n}"
    },
    {
      "path": "window.String.prototype.search",
      "propertyName": "_function",
      "property": "function search() {\n    [native code]\n}"
    },
    {
      "path": "window.String.prototype.split",
      "propertyName": "_function",
      "property": "function split() {\n    [native code]\n}"
    },
    {
      "path": "window.String.prototype.anchor",
      "propertyName": "_function",
      "property": "function anchor() {\n    [native code]\n}"
    },
    {
      "path": "window.String.prototype.big",
      "propertyName": "_function",
      "property": "function big() {\n    [native code]\n}"
    },
    {
      "path": "window.String.prototype.bold",
      "propertyName": "_function",
      "property": "function bold() {\n    [native code]\n}"
    },
    {
      "path": "window.String.prototype.blink",
      "propertyName": "_function",
      "property": "function blink() {\n    [native code]\n}"
    },
    {
      "path": "window.String.prototype.fixed",
      "propertyName": "_function",
      "property": "function fixed() {\n    [native code]\n}"
    },
    {
      "path": "window.String.prototype.fontcolor",
      "propertyName": "_function",
      "property": "function fontcolor() {\n    [native code]\n}"
    },
    {
      "path": "window.String.prototype.fontsize",
      "propertyName": "_function",
      "property": "function fontsize() {\n    [native code]\n}"
    },
    {
      "path": "window.String.prototype.italics",
      "propertyName": "_function",
      "property": "function italics() {\n    [native code]\n}"
    },
    {
      "path": "window.String.prototype.link",
      "propertyName": "_function",
      "property": "function link() {\n    [native code]\n}"
    },
    {
      "path": "window.String.prototype.small",
      "propertyName": "_function",
      "property": "function small() {\n    [native code]\n}"
    },
    {
      "path": "window.String.prototype.strike",
      "propertyName": "_function",
      "property": "function strike() {\n    [native code]\n}"
    },
    {
      "path": "window.String.prototype.sub",
      "propertyName": "_function",
      "property": "function sub() {\n    [native code]\n}"
    },
    {
      "path": "window.String.prototype.sup",
      "propertyName": "_function",
      "property": "function sup() {\n    [native code]\n}"
    },
    {
      "path": "window.String.prototype.toString",
      "propertyName": "_function",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.String.prototype.valueOf",
      "propertyName": "_function",
      "property": "function valueOf() {\n    [native code]\n}"
    },
    {
      "path": "window.String.prototype.charAt",
      "propertyName": "_function",
      "property": "function charAt() {\n    [native code]\n}"
    },
    {
      "path": "window.String.prototype.charCodeAt",
      "propertyName": "_function",
      "property": "function charCodeAt() {\n    [native code]\n}"
    },
    {
      "path": "window.String.prototype.codePointAt",
      "propertyName": "_function",
      "property": "function codePointAt() {\n    [native code]\n}"
    },
    {
      "path": "window.String.prototype.indexOf",
      "propertyName": "_function",
      "property": "function indexOf() {\n    [native code]\n}"
    },
    {
      "path": "window.String.prototype.lastIndexOf",
      "propertyName": "_function",
      "property": "function lastIndexOf() {\n    [native code]\n}"
    },
    {
      "path": "window.String.prototype.slice",
      "propertyName": "_function",
      "property": "function slice() {\n    [native code]\n}"
    },
    {
      "path": "window.String.prototype.substr",
      "propertyName": "_function",
      "property": "function substr() {\n    [native code]\n}"
    },
    {
      "path": "window.String.prototype.substring",
      "propertyName": "_function",
      "property": "function substring() {\n    [native code]\n}"
    },
    {
      "path": "window.String.prototype.toLowerCase",
      "propertyName": "_function",
      "property": "function toLowerCase() {\n    [native code]\n}"
    },
    {
      "path": "window.String.prototype.toUpperCase",
      "propertyName": "_function",
      "property": "function toUpperCase() {\n    [native code]\n}"
    },
    {
      "path": "window.String.prototype.localeCompare",
      "propertyName": "_function",
      "property": "function localeCompare() {\n    [native code]\n}"
    },
    {
      "path": "window.String.prototype.toLocaleLowerCase",
      "propertyName": "_function",
      "property": "function toLocaleLowerCase() {\n    [native code]\n}"
    },
    {
      "path": "window.String.prototype.toLocaleUpperCase",
      "propertyName": "_function",
      "property": "function toLocaleUpperCase() {\n    [native code]\n}"
    },
    {
      "path": "window.String.prototype.trim",
      "propertyName": "_function",
      "property": "function trim() {\n    [native code]\n}"
    },
    {
      "path": "window.String.prototype.startsWith",
      "propertyName": "_function",
      "property": "function startsWith() {\n    [native code]\n}"
    },
    {
      "path": "window.String.prototype.endsWith",
      "propertyName": "_function",
      "property": "function endsWith() {\n    [native code]\n}"
    },
    {
      "path": "window.String.prototype.includes",
      "propertyName": "_function",
      "property": "function includes() {\n    [native code]\n}"
    },
    {
      "path": "window.String.prototype.normalize",
      "propertyName": "_function",
      "property": "function normalize() {\n    [native code]\n}"
    },
    {
      "path": "window.String.prototype.trimStart",
      "propertyName": "_function",
      "property": "function trimStart() {\n    [native code]\n}"
    },
    {
      "path": "window.String.prototype.trimEnd",
      "propertyName": "_function",
      "property": "function trimEnd() {\n    [native code]\n}"
    },
    {
      "path": "window.String.prototype",
      "propertyName": "Symbol.iterator._function",
      "property": "function [Symbol.iterator]() {\n    [native code]\n}"
    },
    {
      "path": "window.String",
      "propertyName": "_function",
      "property": "function String() {\n    [native code]\n}"
    },
    {
      "path": "window.Map.prototype.forEach",
      "propertyName": "_function",
      "property": "function forEach() {\n    [native code]\n}"
    },
    {
      "path": "window.Map.prototype.values",
      "propertyName": "_function",
      "property": "function values() {\n    [native code]\n}"
    },
    {
      "path": "window.Map.prototype.keys",
      "propertyName": "_function",
      "property": "function keys() {\n    [native code]\n}"
    },
    {
      "path": "window.Map.prototype.clear",
      "propertyName": "_function",
      "property": "function clear() {\n    [native code]\n}"
    },
    {
      "path": "window.Map.prototype.delete",
      "propertyName": "_function",
      "property": "function delete() {\n    [native code]\n}"
    },
    {
      "path": "window.Map.prototype.get",
      "propertyName": "_function",
      "property": "function get() {\n    [native code]\n}"
    },
    {
      "path": "window.Map.prototype.has",
      "propertyName": "_function",
      "property": "function has() {\n    [native code]\n}"
    },
    {
      "path": "window.Map.prototype.set",
      "propertyName": "_function",
      "property": "function set() {\n    [native code]\n}"
    },
    {
      "path": "window.Map.prototype.entries",
      "propertyName": "_function",
      "property": "function entries() {\n    [native code]\n}"
    },
    {
      "path": "window.Map.prototype.size",
      "propertyName": "_accessException",
      "property": "TypeError: Map operation called on non-Map object"
    },
    {
      "path": "window.Map.prototype.size",
      "propertyName": "_get",
      "property": "function get size() {\n    [native code]\n}"
    },
    {
      "path": "window.Map.prototype.size",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Map",
      "propertyName": "_function",
      "property": "function Map() {\n    [native code]\n}"
    },
    {
      "path": "window.Set.prototype.forEach",
      "propertyName": "_function",
      "property": "function forEach() {\n    [native code]\n}"
    },
    {
      "path": "window.Set.prototype.entries",
      "propertyName": "_function",
      "property": "function entries() {\n    [native code]\n}"
    },
    {
      "path": "window.Set.prototype.add",
      "propertyName": "_function",
      "property": "function add() {\n    [native code]\n}"
    },
    {
      "path": "window.Set.prototype.clear",
      "propertyName": "_function",
      "property": "function clear() {\n    [native code]\n}"
    },
    {
      "path": "window.Set.prototype.delete",
      "propertyName": "_function",
      "property": "function delete() {\n    [native code]\n}"
    },
    {
      "path": "window.Set.prototype.has",
      "propertyName": "_function",
      "property": "function has() {\n    [native code]\n}"
    },
    {
      "path": "window.Set.prototype.values",
      "propertyName": "_function",
      "property": "function values() {\n    [native code]\n}"
    },
    {
      "path": "window.Set.prototype.size",
      "propertyName": "_accessException",
      "property": "TypeError: Set operation called on non-Set object"
    },
    {
      "path": "window.Set.prototype.size",
      "propertyName": "_get",
      "property": "function get size() {\n    [native code]\n}"
    },
    {
      "path": "window.Set.prototype.size",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Set",
      "propertyName": "_function",
      "property": "function Set() {\n    [native code]\n}"
    },
    {
      "path": "window.Promise.resolve",
      "propertyName": "_function",
      "property": "function resolve() {\n    [native code]\n}"
    },
    {
      "path": "window.Promise.reject",
      "propertyName": "_function",
      "property": "function reject() {\n    [native code]\n}"
    },
    {
      "path": "window.Promise.reject",
      "propertyName": "_invocation",
      "property": "TypeError: undefined is not an object (evaluating 'err.toString')"
    },
    {
      "path": "window.Promise.race",
      "propertyName": "_function",
      "property": "function race() {\n    [native code]\n}"
    },
    {
      "path": "window.Promise.all",
      "propertyName": "_function",
      "property": "function all() {\n    [native code]\n}"
    },
    {
      "path": "window.Promise.allSettled",
      "propertyName": "_function",
      "property": "function allSettled() {\n    [native code]\n}"
    },
    {
      "path": "window.Promise.prototype",
      "propertyName": "_accessException",
      "property": "TypeError: |this| is not a object"
    },
    {
      "path": "window.Promise",
      "propertyName": "new()",
      "property": "TypeError: Promise constructor takes a function argument"
    },
    {
      "path": "window.Promise",
      "propertyName": "_function",
      "property": "function Promise() {\n    [native code]\n}"
    },
    {
      "path": "window.Intl.getCanonicalLocales",
      "propertyName": "_function",
      "property": "function getCanonicalLocales() {\n    [native code]\n}"
    },
    {
      "path": "window.Intl.Collator.supportedLocalesOf",
      "propertyName": "_function",
      "property": "function supportedLocalesOf() {\n    [native code]\n}"
    },
    {
      "path": "window.Intl.Collator.prototype.compare",
      "propertyName": "_accessException",
      "property": "TypeError: Intl.Collator.prototype.compare called on value that's not an object initialized as a Collator"
    },
    {
      "path": "window.Intl.Collator.prototype.compare",
      "propertyName": "_get",
      "property": "function get compare() {\n    [native code]\n}"
    },
    {
      "path": "window.Intl.Collator.prototype.compare",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Intl.Collator.prototype.resolvedOptions",
      "propertyName": "_function",
      "property": "function resolvedOptions() {\n    [native code]\n}"
    },
    {
      "path": "window.Intl.Collator",
      "propertyName": "_function",
      "property": "function Collator() {\n    [native code]\n}"
    },
    {
      "path": "window.Intl.DateTimeFormat.supportedLocalesOf",
      "propertyName": "_function",
      "property": "function supportedLocalesOf() {\n    [native code]\n}"
    },
    {
      "path": "window.Intl.DateTimeFormat.prototype.format",
      "propertyName": "_accessException",
      "property": "TypeError: Intl.DateTimeFormat.prototype.format called on value that's not an object initialized as a DateTimeFormat"
    },
    {
      "path": "window.Intl.DateTimeFormat.prototype.format",
      "propertyName": "_get",
      "property": "function get format() {\n    [native code]\n}"
    },
    {
      "path": "window.Intl.DateTimeFormat.prototype.format",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Intl.DateTimeFormat.prototype.resolvedOptions",
      "propertyName": "_function",
      "property": "function resolvedOptions() {\n    [native code]\n}"
    },
    {
      "path": "window.Intl.DateTimeFormat.prototype.formatToParts",
      "propertyName": "_function",
      "property": "function formatToParts() {\n    [native code]\n}"
    },
    {
      "path": "window.Intl.DateTimeFormat",
      "propertyName": "_function",
      "property": "function DateTimeFormat() {\n    [native code]\n}"
    },
    {
      "path": "window.Intl.NumberFormat.supportedLocalesOf",
      "propertyName": "_function",
      "property": "function supportedLocalesOf() {\n    [native code]\n}"
    },
    {
      "path": "window.Intl.NumberFormat.prototype.format",
      "propertyName": "_accessException",
      "property": "TypeError: Intl.NumberFormat.prototype.format called on value that's not an object initialized as a NumberFormat"
    },
    {
      "path": "window.Intl.NumberFormat.prototype.format",
      "propertyName": "_get",
      "property": "function get format() {\n    [native code]\n}"
    },
    {
      "path": "window.Intl.NumberFormat.prototype.format",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Intl.NumberFormat.prototype.resolvedOptions",
      "propertyName": "_function",
      "property": "function resolvedOptions() {\n    [native code]\n}"
    },
    {
      "path": "window.Intl.NumberFormat.prototype.formatToParts",
      "propertyName": "_function",
      "property": "function formatToParts() {\n    [native code]\n}"
    },
    {
      "path": "window.Intl.NumberFormat",
      "propertyName": "_function",
      "property": "function NumberFormat() {\n    [native code]\n}"
    },
    {
      "path": "window.Intl.PluralRules.supportedLocalesOf",
      "propertyName": "_function",
      "property": "function supportedLocalesOf() {\n    [native code]\n}"
    },
    {
      "path": "window.Intl.PluralRules.prototype.select",
      "propertyName": "_function",
      "property": "function select() {\n    [native code]\n}"
    },
    {
      "path": "window.Intl.PluralRules.prototype.resolvedOptions",
      "propertyName": "_function",
      "property": "function resolvedOptions() {\n    [native code]\n}"
    },
    {
      "path": "window.Intl.PluralRules",
      "propertyName": "_function",
      "property": "function PluralRules() {\n    [native code]\n}"
    },
    {
      "path": "window.WebAssembly.CompileError.length",
      "propertyName": "_flags",
      "property": ""
    },
    {
      "path": "window.WebAssembly.CompileError.new().stack",
      "propertyName": "_value",
      "property": "CompileError@[native code]\n<url>:2034:41\nasyncFunctionResume@[native code]\n[native code]\npromiseReactionJob@[native code]"
    },
    {
      "path": "window.WebAssembly.CompileError",
      "propertyName": "_function",
      "property": "function CompileError() {\n    [native code]\n}"
    },
    {
      "path": "window.WebAssembly.Instance.prototype.exports",
      "propertyName": "_flags",
      "property": "c"
    },
    {
      "path": "window.WebAssembly.Instance.prototype.exports",
      "propertyName": "_accessException",
      "property": "TypeError: expected |this| value to be an instance of WebAssembly.Instance"
    },
    {
      "path": "window.WebAssembly.Instance.prototype.exports",
      "propertyName": "_get",
      "property": "function get exports() {\n    [native code]\n}"
    },
    {
      "path": "window.WebAssembly.Instance.prototype.exports",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.WebAssembly.Instance.length",
      "propertyName": "_flags",
      "property": ""
    },
    {
      "path": "window.WebAssembly.Instance",
      "propertyName": "new()",
      "property": "TypeError: first argument to WebAssembly.Instance must be a WebAssembly.Module (evaluating 'new obj()')"
    },
    {
      "path": "window.WebAssembly.Instance",
      "propertyName": "_function",
      "property": "function Instance() {\n    [native code]\n}"
    },
    {
      "path": "window.WebAssembly.LinkError.length",
      "propertyName": "_flags",
      "property": ""
    },
    {
      "path": "window.WebAssembly.LinkError.new().stack",
      "propertyName": "_value",
      "property": "LinkError@[native code]\n<url>:2034:41\nasyncFunctionResume@[native code]\n[native code]\npromiseReactionJob@[native code]"
    },
    {
      "path": "window.WebAssembly.LinkError",
      "propertyName": "_function",
      "property": "function LinkError() {\n    [native code]\n}"
    },
    {
      "path": "window.WebAssembly.Memory.prototype.grow",
      "propertyName": "_function",
      "property": "function grow() {\n    [native code]\n}"
    },
    {
      "path": "window.WebAssembly.Memory.prototype.grow",
      "propertyName": "_flags",
      "property": "cw"
    },
    {
      "path": "window.WebAssembly.Memory.prototype.buffer",
      "propertyName": "_flags",
      "property": "c"
    },
    {
      "path": "window.WebAssembly.Memory.prototype.buffer",
      "propertyName": "_accessException",
      "property": "TypeError: WebAssembly.Memory.prototype.buffer getter called with non WebAssembly.Memory |this| value"
    },
    {
      "path": "window.WebAssembly.Memory.prototype.buffer",
      "propertyName": "_get",
      "property": "function get buffer() {\n    [native code]\n}"
    },
    {
      "path": "window.WebAssembly.Memory.prototype.buffer",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.WebAssembly.Memory.length",
      "propertyName": "_flags",
      "property": ""
    },
    {
      "path": "window.WebAssembly.Memory",
      "propertyName": "new()",
      "property": "TypeError: WebAssembly.Memory expects exactly one argument"
    },
    {
      "path": "window.WebAssembly.Memory",
      "propertyName": "_function",
      "property": "function Memory() {\n    [native code]\n}"
    },
    {
      "path": "window.WebAssembly.Module.customSections",
      "propertyName": "_function",
      "property": "function customSections() {\n    [native code]\n}"
    },
    {
      "path": "window.WebAssembly.Module.customSections",
      "propertyName": "_flags",
      "property": "cw"
    },
    {
      "path": "window.WebAssembly.Module.imports",
      "propertyName": "_function",
      "property": "function imports() {\n    [native code]\n}"
    },
    {
      "path": "window.WebAssembly.Module.imports",
      "propertyName": "_flags",
      "property": "cw"
    },
    {
      "path": "window.WebAssembly.Module.exports",
      "propertyName": "_function",
      "property": "function exports() {\n    [native code]\n}"
    },
    {
      "path": "window.WebAssembly.Module.exports",
      "propertyName": "_flags",
      "property": "cw"
    },
    {
      "path": "window.WebAssembly.Module.length",
      "propertyName": "_flags",
      "property": ""
    },
    {
      "path": "window.WebAssembly.Module",
      "propertyName": "new()",
      "property": "TypeError: first argument must be an ArrayBufferView or an ArrayBuffer (evaluating 'new obj()')"
    },
    {
      "path": "window.WebAssembly.Module",
      "propertyName": "_function",
      "property": "function Module() {\n    [native code]\n}"
    },
    {
      "path": "window.WebAssembly.RuntimeError.length",
      "propertyName": "_flags",
      "property": ""
    },
    {
      "path": "window.WebAssembly.RuntimeError.new().stack",
      "propertyName": "_value",
      "property": "RuntimeError@[native code]\n<url>:2034:41\nasyncFunctionResume@[native code]\n[native code]\npromiseReactionJob@[native code]"
    },
    {
      "path": "window.WebAssembly.RuntimeError",
      "propertyName": "_function",
      "property": "function RuntimeError() {\n    [native code]\n}"
    },
    {
      "path": "window.WebAssembly.Table.prototype.length",
      "propertyName": "_flags",
      "property": "c"
    },
    {
      "path": "window.WebAssembly.Table.prototype.length",
      "propertyName": "_accessException",
      "property": "TypeError: expected |this| value to be an instance of WebAssembly.Table"
    },
    {
      "path": "window.WebAssembly.Table.prototype.length",
      "propertyName": "_get",
      "property": "function get length() {\n    [native code]\n}"
    },
    {
      "path": "window.WebAssembly.Table.prototype.length",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.WebAssembly.Table.prototype.grow",
      "propertyName": "_function",
      "property": "function grow() {\n    [native code]\n}"
    },
    {
      "path": "window.WebAssembly.Table.prototype.grow",
      "propertyName": "_flags",
      "property": "cw"
    },
    {
      "path": "window.WebAssembly.Table.prototype.get",
      "propertyName": "_function",
      "property": "function get() {\n    [native code]\n}"
    },
    {
      "path": "window.WebAssembly.Table.prototype.get",
      "propertyName": "_flags",
      "property": "cw"
    },
    {
      "path": "window.WebAssembly.Table.prototype.set",
      "propertyName": "_function",
      "property": "function set() {\n    [native code]\n}"
    },
    {
      "path": "window.WebAssembly.Table.prototype.set",
      "propertyName": "_flags",
      "property": "cw"
    },
    {
      "path": "window.WebAssembly.Table.length",
      "propertyName": "_flags",
      "property": ""
    },
    {
      "path": "window.WebAssembly.Table",
      "propertyName": "new()",
      "property": "TypeError: WebAssembly.Table expects its first argument to be an object"
    },
    {
      "path": "window.WebAssembly.Table",
      "propertyName": "_function",
      "property": "function Table() {\n    [native code]\n}"
    },
    {
      "path": "window.customElements",
      "propertyName": "_get",
      "property": "function customElements() {\n    [native code]\n}"
    },
    {
      "path": "window.customElements",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.visualViewport",
      "propertyName": "_get",
      "property": "function visualViewport() {\n    [native code]\n}"
    },
    {
      "path": "window.visualViewport",
      "propertyName": "_set",
      "property": "function visualViewport() {\n    [native code]\n}"
    },
    {
      "path": "window.visualViewport",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.visualViewport",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Cache.prototype.match.name",
      "propertyName": "_value",
      "property": "match"
    },
    {
      "path": "window.Cache.prototype.match",
      "propertyName": "_function",
      "property": "function match() {\n    [native code]\n}"
    },
    {
      "path": "window.Cache.prototype.matchAll.name",
      "propertyName": "_value",
      "property": "matchAll"
    },
    {
      "path": "window.Cache.prototype.matchAll",
      "propertyName": "_function",
      "property": "function matchAll() {\n    [native code]\n}"
    },
    {
      "path": "window.Cache.prototype.add.name",
      "propertyName": "_value",
      "property": "add"
    },
    {
      "path": "window.Cache.prototype.add",
      "propertyName": "_function",
      "property": "function add() {\n    [native code]\n}"
    },
    {
      "path": "window.Cache.prototype.addAll.name",
      "propertyName": "_value",
      "property": "addAll"
    },
    {
      "path": "window.Cache.prototype.addAll",
      "propertyName": "_function",
      "property": "function addAll() {\n    [native code]\n}"
    },
    {
      "path": "window.Cache.prototype.put.name",
      "propertyName": "_value",
      "property": "put"
    },
    {
      "path": "window.Cache.prototype.put",
      "propertyName": "_function",
      "property": "function put() {\n    [native code]\n}"
    },
    {
      "path": "window.Cache.prototype.delete.name",
      "propertyName": "_value",
      "property": "delete"
    },
    {
      "path": "window.Cache.prototype.delete",
      "propertyName": "_function",
      "property": "function delete() {\n    [native code]\n}"
    },
    {
      "path": "window.Cache.prototype.keys.name",
      "propertyName": "_value",
      "property": "keys"
    },
    {
      "path": "window.Cache.prototype.keys",
      "propertyName": "_function",
      "property": "function keys() {\n    [native code]\n}"
    },
    {
      "path": "window.Cache",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.Cache",
      "propertyName": "_function",
      "property": "function Cache() {\n    [native code]\n}"
    },
    {
      "path": "window.CacheStorage.prototype.match.name",
      "propertyName": "_value",
      "property": "match"
    },
    {
      "path": "window.CacheStorage.prototype.match",
      "propertyName": "_function",
      "property": "function match() {\n    [native code]\n}"
    },
    {
      "path": "window.CacheStorage.prototype.has.name",
      "propertyName": "_value",
      "property": "has"
    },
    {
      "path": "window.CacheStorage.prototype.has",
      "propertyName": "_function",
      "property": "function has() {\n    [native code]\n}"
    },
    {
      "path": "window.CacheStorage.prototype.open.name",
      "propertyName": "_value",
      "property": "open"
    },
    {
      "path": "window.CacheStorage.prototype.open",
      "propertyName": "_function",
      "property": "function open() {\n    [native code]\n}"
    },
    {
      "path": "window.CacheStorage.prototype.delete.name",
      "propertyName": "_value",
      "property": "delete"
    },
    {
      "path": "window.CacheStorage.prototype.delete",
      "propertyName": "_function",
      "property": "function delete() {\n    [native code]\n}"
    },
    {
      "path": "window.CacheStorage.prototype.keys.name",
      "propertyName": "_value",
      "property": "keys"
    },
    {
      "path": "window.CacheStorage.prototype.keys",
      "propertyName": "_function",
      "property": "function keys() {\n    [native code]\n}"
    },
    {
      "path": "window.CacheStorage",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.CacheStorage",
      "propertyName": "_function",
      "property": "function CacheStorage() {\n    [native code]\n}"
    },
    {
      "path": "window.Credential.prototype.id",
      "propertyName": "_accessException",
      "property": "TypeError: The Credential.id getter can only be used on instances of Credential"
    },
    {
      "path": "window.Credential.prototype.id",
      "propertyName": "_get",
      "property": "function id() {\n    [native code]\n}"
    },
    {
      "path": "window.Credential.prototype.id",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Credential.prototype.type",
      "propertyName": "_accessException",
      "property": "TypeError: The Credential.type getter can only be used on instances of Credential"
    },
    {
      "path": "window.Credential.prototype.type",
      "propertyName": "_get",
      "property": "function type() {\n    [native code]\n}"
    },
    {
      "path": "window.Credential.prototype.type",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Credential",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.Credential",
      "propertyName": "_function",
      "property": "function Credential() {\n    [native code]\n}"
    },
    {
      "path": "window.CredentialsContainer.prototype.get.name",
      "propertyName": "_value",
      "property": "get"
    },
    {
      "path": "window.CredentialsContainer.prototype.get",
      "propertyName": "_function",
      "property": "function get() {\n    [native code]\n}"
    },
    {
      "path": "window.CredentialsContainer.prototype.store.name",
      "propertyName": "_value",
      "property": "store"
    },
    {
      "path": "window.CredentialsContainer.prototype.store",
      "propertyName": "_function",
      "property": "function store() {\n    [native code]\n}"
    },
    {
      "path": "window.CredentialsContainer.prototype.create.name",
      "propertyName": "_value",
      "property": "create"
    },
    {
      "path": "window.CredentialsContainer.prototype.create",
      "propertyName": "_function",
      "property": "function create() {\n    [native code]\n}"
    },
    {
      "path": "window.CredentialsContainer.prototype.preventSilentAccess.name",
      "propertyName": "_value",
      "property": "preventSilentAccess"
    },
    {
      "path": "window.CredentialsContainer.prototype.preventSilentAccess",
      "propertyName": "_function",
      "property": "function preventSilentAccess() {\n    [native code]\n}"
    },
    {
      "path": "window.CredentialsContainer",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.CredentialsContainer",
      "propertyName": "_function",
      "property": "function CredentialsContainer() {\n    [native code]\n}"
    },
    {
      "path": "window.MediaKeyMessageEvent.prototype.messageType",
      "propertyName": "_accessException",
      "property": "TypeError: The MediaKeyMessageEvent.messageType getter can only be used on instances of MediaKeyMessageEvent"
    },
    {
      "path": "window.MediaKeyMessageEvent.prototype.messageType",
      "propertyName": "_get",
      "property": "function messageType() {\n    [native code]\n}"
    },
    {
      "path": "window.MediaKeyMessageEvent.prototype.messageType",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.MediaKeyMessageEvent.prototype.message",
      "propertyName": "_accessException",
      "property": "TypeError: The MediaKeyMessageEvent.message getter can only be used on instances of MediaKeyMessageEvent"
    },
    {
      "path": "window.MediaKeyMessageEvent.prototype.message",
      "propertyName": "_get",
      "property": "function message() {\n    [native code]\n}"
    },
    {
      "path": "window.MediaKeyMessageEvent.prototype.message",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.MediaKeyMessageEvent",
      "propertyName": "new()",
      "property": "TypeError: Not enough arguments"
    },
    {
      "path": "window.MediaKeyMessageEvent",
      "propertyName": "_function",
      "property": "function MediaKeyMessageEvent() {\n    [native code]\n}"
    },
    {
      "path": "window.MediaKeySession.prototype.sessionId",
      "propertyName": "_accessException",
      "property": "TypeError: The MediaKeySession.sessionId getter can only be used on instances of MediaKeySession"
    },
    {
      "path": "window.MediaKeySession.prototype.sessionId",
      "propertyName": "_get",
      "property": "function sessionId() {\n    [native code]\n}"
    },
    {
      "path": "window.MediaKeySession.prototype.sessionId",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.MediaKeySession.prototype.expiration",
      "propertyName": "_accessException",
      "property": "TypeError: The MediaKeySession.expiration getter can only be used on instances of MediaKeySession"
    },
    {
      "path": "window.MediaKeySession.prototype.expiration",
      "propertyName": "_get",
      "property": "function expiration() {\n    [native code]\n}"
    },
    {
      "path": "window.MediaKeySession.prototype.expiration",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.MediaKeySession.prototype.closed",
      "propertyName": "_accessException",
      "property": "TypeError: The MediaKeySession.closed getter can only be used on instances of MediaKeySession"
    },
    {
      "path": "window.MediaKeySession.prototype.closed",
      "propertyName": "_get",
      "property": "function closed() {\n    [native code]\n}"
    },
    {
      "path": "window.MediaKeySession.prototype.closed",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.MediaKeySession.prototype.keyStatuses",
      "propertyName": "_accessException",
      "property": "TypeError: The MediaKeySession.keyStatuses getter can only be used on instances of MediaKeySession"
    },
    {
      "path": "window.MediaKeySession.prototype.keyStatuses",
      "propertyName": "_get",
      "property": "function keyStatuses() {\n    [native code]\n}"
    },
    {
      "path": "window.MediaKeySession.prototype.keyStatuses",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.MediaKeySession.prototype.onkeystatuseschange",
      "propertyName": "_accessException",
      "property": "TypeError: The MediaKeySession.onkeystatuseschange getter can only be used on instances of MediaKeySession"
    },
    {
      "path": "window.MediaKeySession.prototype.onkeystatuseschange",
      "propertyName": "_get",
      "property": "function onkeystatuseschange() {\n    [native code]\n}"
    },
    {
      "path": "window.MediaKeySession.prototype.onkeystatuseschange",
      "propertyName": "_set",
      "property": "function onkeystatuseschange() {\n    [native code]\n}"
    },
    {
      "path": "window.MediaKeySession.prototype.onkeystatuseschange",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.MediaKeySession.prototype.onkeystatuseschange",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.MediaKeySession.prototype.onmessage",
      "propertyName": "_accessException",
      "property": "TypeError: The MediaKeySession.onmessage getter can only be used on instances of MediaKeySession"
    },
    {
      "path": "window.MediaKeySession.prototype.onmessage",
      "propertyName": "_get",
      "property": "function onmessage() {\n    [native code]\n}"
    },
    {
      "path": "window.MediaKeySession.prototype.onmessage",
      "propertyName": "_set",
      "property": "function onmessage() {\n    [native code]\n}"
    },
    {
      "path": "window.MediaKeySession.prototype.onmessage",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.MediaKeySession.prototype.onmessage",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.MediaKeySession.prototype.generateRequest.name",
      "propertyName": "_value",
      "property": "generateRequest"
    },
    {
      "path": "window.MediaKeySession.prototype.generateRequest",
      "propertyName": "_function",
      "property": "function generateRequest() {\n    [native code]\n}"
    },
    {
      "path": "window.MediaKeySession.prototype.load.name",
      "propertyName": "_value",
      "property": "load"
    },
    {
      "path": "window.MediaKeySession.prototype.load",
      "propertyName": "_function",
      "property": "function load() {\n    [native code]\n}"
    },
    {
      "path": "window.MediaKeySession.prototype.update.name",
      "propertyName": "_value",
      "property": "update"
    },
    {
      "path": "window.MediaKeySession.prototype.update",
      "propertyName": "_function",
      "property": "function update() {\n    [native code]\n}"
    },
    {
      "path": "window.MediaKeySession.prototype.close.name",
      "propertyName": "_value",
      "property": "close"
    },
    {
      "path": "window.MediaKeySession.prototype.close",
      "propertyName": "_function",
      "property": "function close() {\n    [native code]\n}"
    },
    {
      "path": "window.MediaKeySession.prototype.remove.name",
      "propertyName": "_value",
      "property": "remove"
    },
    {
      "path": "window.MediaKeySession.prototype.remove",
      "propertyName": "_function",
      "property": "function remove() {\n    [native code]\n}"
    },
    {
      "path": "window.MediaKeySession",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.MediaKeySession",
      "propertyName": "_function",
      "property": "function MediaKeySession() {\n    [native code]\n}"
    },
    {
      "path": "window.MediaKeyStatusMap.prototype.size",
      "propertyName": "_accessException",
      "property": "TypeError: The MediaKeyStatusMap.size getter can only be used on instances of MediaKeyStatusMap"
    },
    {
      "path": "window.MediaKeyStatusMap.prototype.size",
      "propertyName": "_get",
      "property": "function size() {\n    [native code]\n}"
    },
    {
      "path": "window.MediaKeyStatusMap.prototype.size",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.MediaKeyStatusMap.prototype.has.name",
      "propertyName": "_value",
      "property": "has"
    },
    {
      "path": "window.MediaKeyStatusMap.prototype.has",
      "propertyName": "_function",
      "property": "function has() {\n    [native code]\n}"
    },
    {
      "path": "window.MediaKeyStatusMap.prototype.get.name",
      "propertyName": "_value",
      "property": "get"
    },
    {
      "path": "window.MediaKeyStatusMap.prototype.get",
      "propertyName": "_function",
      "property": "function get() {\n    [native code]\n}"
    },
    {
      "path": "window.MediaKeyStatusMap.prototype.entries",
      "propertyName": "_function",
      "property": "function entries() {\n    [native code]\n}"
    },
    {
      "path": "window.MediaKeyStatusMap.prototype.keys.name",
      "propertyName": "_value",
      "property": "keys"
    },
    {
      "path": "window.MediaKeyStatusMap.prototype.keys",
      "propertyName": "_function",
      "property": "function keys() {\n    [native code]\n}"
    },
    {
      "path": "window.MediaKeyStatusMap.prototype.values.name",
      "propertyName": "_value",
      "property": "values"
    },
    {
      "path": "window.MediaKeyStatusMap.prototype.values",
      "propertyName": "_function",
      "property": "function values() {\n    [native code]\n}"
    },
    {
      "path": "window.MediaKeyStatusMap.prototype.forEach.name",
      "propertyName": "_value",
      "property": "forEach"
    },
    {
      "path": "window.MediaKeyStatusMap.prototype.forEach",
      "propertyName": "_function",
      "property": "function forEach() {\n    [native code]\n}"
    },
    {
      "path": "window.MediaKeyStatusMap",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.MediaKeyStatusMap",
      "propertyName": "_function",
      "property": "function MediaKeyStatusMap() {\n    [native code]\n}"
    },
    {
      "path": "window.MediaKeySystemAccess.prototype.keySystem",
      "propertyName": "_accessException",
      "property": "TypeError: The MediaKeySystemAccess.keySystem getter can only be used on instances of MediaKeySystemAccess"
    },
    {
      "path": "window.MediaKeySystemAccess.prototype.keySystem",
      "propertyName": "_get",
      "property": "function keySystem() {\n    [native code]\n}"
    },
    {
      "path": "window.MediaKeySystemAccess.prototype.keySystem",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.MediaKeySystemAccess.prototype.getConfiguration.name",
      "propertyName": "_value",
      "property": "getConfiguration"
    },
    {
      "path": "window.MediaKeySystemAccess.prototype.getConfiguration",
      "propertyName": "_function",
      "property": "function getConfiguration() {\n    [native code]\n}"
    },
    {
      "path": "window.MediaKeySystemAccess.prototype.createMediaKeys.name",
      "propertyName": "_value",
      "property": "createMediaKeys"
    },
    {
      "path": "window.MediaKeySystemAccess.prototype.createMediaKeys",
      "propertyName": "_function",
      "property": "function createMediaKeys() {\n    [native code]\n}"
    },
    {
      "path": "window.MediaKeySystemAccess",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.MediaKeySystemAccess",
      "propertyName": "_function",
      "property": "function MediaKeySystemAccess() {\n    [native code]\n}"
    },
    {
      "path": "window.MediaKeys.prototype.createSession.name",
      "propertyName": "_value",
      "property": "createSession"
    },
    {
      "path": "window.MediaKeys.prototype.createSession",
      "propertyName": "_function",
      "property": "function createSession() {\n    [native code]\n}"
    },
    {
      "path": "window.MediaKeys.prototype.setServerCertificate.name",
      "propertyName": "_value",
      "property": "setServerCertificate"
    },
    {
      "path": "window.MediaKeys.prototype.setServerCertificate",
      "propertyName": "_function",
      "property": "function setServerCertificate() {\n    [native code]\n}"
    },
    {
      "path": "window.MediaKeys",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.MediaKeys",
      "propertyName": "_function",
      "property": "function MediaKeys() {\n    [native code]\n}"
    },
    {
      "path": "window.Headers.prototype.append",
      "propertyName": "_function",
      "property": "function append() {\n    [native code]\n}"
    },
    {
      "path": "window.Headers.prototype.delete",
      "propertyName": "_function",
      "property": "function delete() {\n    [native code]\n}"
    },
    {
      "path": "window.Headers.prototype.get",
      "propertyName": "_function",
      "property": "function get() {\n    [native code]\n}"
    },
    {
      "path": "window.Headers.prototype.has",
      "propertyName": "_function",
      "property": "function has() {\n    [native code]\n}"
    },
    {
      "path": "window.Headers.prototype.set",
      "propertyName": "_function",
      "property": "function set() {\n    [native code]\n}"
    },
    {
      "path": "window.Headers.prototype.entries",
      "propertyName": "_function",
      "property": "function entries() {\n    [native code]\n}"
    },
    {
      "path": "window.Headers.prototype.keys",
      "propertyName": "_function",
      "property": "function keys() {\n    [native code]\n}"
    },
    {
      "path": "window.Headers.prototype.values",
      "propertyName": "_function",
      "property": "function values() {\n    [native code]\n}"
    },
    {
      "path": "window.Headers.prototype.forEach",
      "propertyName": "_function",
      "property": "function forEach() {\n    [native code]\n}"
    },
    {
      "path": "window.Headers",
      "propertyName": "_function",
      "property": "function Headers() {\n    [native code]\n}"
    },
    {
      "path": "window.Request.prototype.method",
      "propertyName": "_accessException",
      "property": "TypeError: The Request.method getter can only be used on instances of Request"
    },
    {
      "path": "window.Request.prototype.method",
      "propertyName": "_get",
      "property": "function method() {\n    [native code]\n}"
    },
    {
      "path": "window.Request.prototype.method",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Request.prototype.url",
      "propertyName": "_accessException",
      "property": "TypeError: The Request.url getter can only be used on instances of Request"
    },
    {
      "path": "window.Request.prototype.url",
      "propertyName": "_get",
      "property": "function url() {\n    [native code]\n}"
    },
    {
      "path": "window.Request.prototype.url",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Request.prototype.headers",
      "propertyName": "_accessException",
      "property": "TypeError: The Request.headers getter can only be used on instances of Request"
    },
    {
      "path": "window.Request.prototype.headers",
      "propertyName": "_get",
      "property": "function headers() {\n    [native code]\n}"
    },
    {
      "path": "window.Request.prototype.headers",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Request.prototype.destination",
      "propertyName": "_accessException",
      "property": "TypeError: The Request.destination getter can only be used on instances of Request"
    },
    {
      "path": "window.Request.prototype.destination",
      "propertyName": "_get",
      "property": "function destination() {\n    [native code]\n}"
    },
    {
      "path": "window.Request.prototype.destination",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Request.prototype.referrer",
      "propertyName": "_accessException",
      "property": "TypeError: The Request.referrer getter can only be used on instances of Request"
    },
    {
      "path": "window.Request.prototype.referrer",
      "propertyName": "_get",
      "property": "function referrer() {\n    [native code]\n}"
    },
    {
      "path": "window.Request.prototype.referrer",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Request.prototype.referrerPolicy",
      "propertyName": "_accessException",
      "property": "TypeError: The Request.referrerPolicy getter can only be used on instances of Request"
    },
    {
      "path": "window.Request.prototype.referrerPolicy",
      "propertyName": "_get",
      "property": "function referrerPolicy() {\n    [native code]\n}"
    },
    {
      "path": "window.Request.prototype.referrerPolicy",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Request.prototype.mode",
      "propertyName": "_accessException",
      "property": "TypeError: The Request.mode getter can only be used on instances of Request"
    },
    {
      "path": "window.Request.prototype.mode",
      "propertyName": "_get",
      "property": "function mode() {\n    [native code]\n}"
    },
    {
      "path": "window.Request.prototype.mode",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Request.prototype.credentials",
      "propertyName": "_accessException",
      "property": "TypeError: The Request.credentials getter can only be used on instances of Request"
    },
    {
      "path": "window.Request.prototype.credentials",
      "propertyName": "_get",
      "property": "function credentials() {\n    [native code]\n}"
    },
    {
      "path": "window.Request.prototype.credentials",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Request.prototype.cache",
      "propertyName": "_accessException",
      "property": "TypeError: The Request.cache getter can only be used on instances of Request"
    },
    {
      "path": "window.Request.prototype.cache",
      "propertyName": "_get",
      "property": "function cache() {\n    [native code]\n}"
    },
    {
      "path": "window.Request.prototype.cache",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Request.prototype.redirect",
      "propertyName": "_accessException",
      "property": "TypeError: The Request.redirect getter can only be used on instances of Request"
    },
    {
      "path": "window.Request.prototype.redirect",
      "propertyName": "_get",
      "property": "function redirect() {\n    [native code]\n}"
    },
    {
      "path": "window.Request.prototype.redirect",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Request.prototype.integrity",
      "propertyName": "_accessException",
      "property": "TypeError: The Request.integrity getter can only be used on instances of Request"
    },
    {
      "path": "window.Request.prototype.integrity",
      "propertyName": "_get",
      "property": "function integrity() {\n    [native code]\n}"
    },
    {
      "path": "window.Request.prototype.integrity",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Request.prototype.keepalive",
      "propertyName": "_accessException",
      "property": "TypeError: The Request.keepalive getter can only be used on instances of Request"
    },
    {
      "path": "window.Request.prototype.keepalive",
      "propertyName": "_get",
      "property": "function keepalive() {\n    [native code]\n}"
    },
    {
      "path": "window.Request.prototype.keepalive",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Request.prototype.signal",
      "propertyName": "_accessException",
      "property": "TypeError: The Request.signal getter can only be used on instances of Request"
    },
    {
      "path": "window.Request.prototype.signal",
      "propertyName": "_get",
      "property": "function signal() {\n    [native code]\n}"
    },
    {
      "path": "window.Request.prototype.signal",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Request.prototype.bodyUsed",
      "propertyName": "_accessException",
      "property": "TypeError: The Request.bodyUsed getter can only be used on instances of Request"
    },
    {
      "path": "window.Request.prototype.bodyUsed",
      "propertyName": "_get",
      "property": "function bodyUsed() {\n    [native code]\n}"
    },
    {
      "path": "window.Request.prototype.bodyUsed",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Request.prototype.clone",
      "propertyName": "_function",
      "property": "function clone() {\n    [native code]\n}"
    },
    {
      "path": "window.Request.prototype.arrayBuffer",
      "propertyName": "_function",
      "property": "function arrayBuffer() {\n    [native code]\n}"
    },
    {
      "path": "window.Request.prototype.blob",
      "propertyName": "_function",
      "property": "function blob() {\n    [native code]\n}"
    },
    {
      "path": "window.Request.prototype.formData",
      "propertyName": "_function",
      "property": "function formData() {\n    [native code]\n}"
    },
    {
      "path": "window.Request.prototype.json",
      "propertyName": "_function",
      "property": "function json() {\n    [native code]\n}"
    },
    {
      "path": "window.Request.prototype.text",
      "propertyName": "_function",
      "property": "function text() {\n    [native code]\n}"
    },
    {
      "path": "window.Request",
      "propertyName": "new()",
      "property": "TypeError: Not enough arguments"
    },
    {
      "path": "window.Request",
      "propertyName": "_function",
      "property": "function Request() {\n    [native code]\n}"
    },
    {
      "path": "window.Response.prototype.type",
      "propertyName": "_accessException",
      "property": "TypeError: The Response.type getter can only be used on instances of Response"
    },
    {
      "path": "window.Response.prototype.type",
      "propertyName": "_get",
      "property": "function type() {\n    [native code]\n}"
    },
    {
      "path": "window.Response.prototype.type",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Response.prototype.url",
      "propertyName": "_accessException",
      "property": "TypeError: The Response.url getter can only be used on instances of Response"
    },
    {
      "path": "window.Response.prototype.url",
      "propertyName": "_get",
      "property": "function url() {\n    [native code]\n}"
    },
    {
      "path": "window.Response.prototype.url",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Response.prototype.redirected",
      "propertyName": "_accessException",
      "property": "TypeError: The Response.redirected getter can only be used on instances of Response"
    },
    {
      "path": "window.Response.prototype.redirected",
      "propertyName": "_get",
      "property": "function redirected() {\n    [native code]\n}"
    },
    {
      "path": "window.Response.prototype.redirected",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Response.prototype.status",
      "propertyName": "_accessException",
      "property": "TypeError: The Response.status getter can only be used on instances of Response"
    },
    {
      "path": "window.Response.prototype.status",
      "propertyName": "_get",
      "property": "function status() {\n    [native code]\n}"
    },
    {
      "path": "window.Response.prototype.status",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Response.prototype.ok",
      "propertyName": "_accessException",
      "property": "TypeError: The Response.ok getter can only be used on instances of Response"
    },
    {
      "path": "window.Response.prototype.ok",
      "propertyName": "_get",
      "property": "function ok() {\n    [native code]\n}"
    },
    {
      "path": "window.Response.prototype.ok",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Response.prototype.statusText",
      "propertyName": "_accessException",
      "property": "TypeError: The Response.statusText getter can only be used on instances of Response"
    },
    {
      "path": "window.Response.prototype.statusText",
      "propertyName": "_get",
      "property": "function statusText() {\n    [native code]\n}"
    },
    {
      "path": "window.Response.prototype.statusText",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Response.prototype.headers",
      "propertyName": "_accessException",
      "property": "TypeError: The Response.headers getter can only be used on instances of Response"
    },
    {
      "path": "window.Response.prototype.headers",
      "propertyName": "_get",
      "property": "function headers() {\n    [native code]\n}"
    },
    {
      "path": "window.Response.prototype.headers",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Response.prototype.body",
      "propertyName": "_accessException",
      "property": "TypeError: The Response.body getter can only be used on instances of Response"
    },
    {
      "path": "window.Response.prototype.body",
      "propertyName": "_get",
      "property": "function body() {\n    [native code]\n}"
    },
    {
      "path": "window.Response.prototype.body",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Response.prototype.bodyUsed",
      "propertyName": "_accessException",
      "property": "TypeError: The Response.bodyUsed getter can only be used on instances of Response"
    },
    {
      "path": "window.Response.prototype.bodyUsed",
      "propertyName": "_get",
      "property": "function bodyUsed() {\n    [native code]\n}"
    },
    {
      "path": "window.Response.prototype.bodyUsed",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Response.prototype.clone",
      "propertyName": "_function",
      "property": "function clone() {\n    [native code]\n}"
    },
    {
      "path": "window.Response.prototype.arrayBuffer",
      "propertyName": "_function",
      "property": "function arrayBuffer() {\n    [native code]\n}"
    },
    {
      "path": "window.Response.prototype.blob",
      "propertyName": "_function",
      "property": "function blob() {\n    [native code]\n}"
    },
    {
      "path": "window.Response.prototype.formData",
      "propertyName": "_function",
      "property": "function formData() {\n    [native code]\n}"
    },
    {
      "path": "window.Response.prototype.json",
      "propertyName": "_function",
      "property": "function json() {\n    [native code]\n}"
    },
    {
      "path": "window.Response.prototype.text",
      "propertyName": "_function",
      "property": "function text() {\n    [native code]\n}"
    },
    {
      "path": "window.Response.error",
      "propertyName": "_function",
      "property": "function error() {\n    [native code]\n}"
    },
    {
      "path": "window.Response.redirect",
      "propertyName": "_function",
      "property": "function redirect() {\n    [native code]\n}"
    },
    {
      "path": "window.Response.new().statusText",
      "propertyName": "_value",
      "property": "OK"
    },
    {
      "path": "window.Response",
      "propertyName": "_function",
      "property": "function Response() {\n    [native code]\n}"
    },
    {
      "path": "window.Gamepad.prototype.id",
      "propertyName": "_accessException",
      "property": "TypeError: The Gamepad.id getter can only be used on instances of Gamepad"
    },
    {
      "path": "window.Gamepad.prototype.id",
      "propertyName": "_get",
      "property": "function id() {\n    [native code]\n}"
    },
    {
      "path": "window.Gamepad.prototype.id",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Gamepad.prototype.index",
      "propertyName": "_accessException",
      "property": "TypeError: The Gamepad.index getter can only be used on instances of Gamepad"
    },
    {
      "path": "window.Gamepad.prototype.index",
      "propertyName": "_get",
      "property": "function index() {\n    [native code]\n}"
    },
    {
      "path": "window.Gamepad.prototype.index",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Gamepad.prototype.connected",
      "propertyName": "_accessException",
      "property": "TypeError: The Gamepad.connected getter can only be used on instances of Gamepad"
    },
    {
      "path": "window.Gamepad.prototype.connected",
      "propertyName": "_get",
      "property": "function connected() {\n    [native code]\n}"
    },
    {
      "path": "window.Gamepad.prototype.connected",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Gamepad.prototype.timestamp",
      "propertyName": "_accessException",
      "property": "TypeError: The Gamepad.timestamp getter can only be used on instances of Gamepad"
    },
    {
      "path": "window.Gamepad.prototype.timestamp",
      "propertyName": "_get",
      "property": "function timestamp() {\n    [native code]\n}"
    },
    {
      "path": "window.Gamepad.prototype.timestamp",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Gamepad.prototype.mapping",
      "propertyName": "_accessException",
      "property": "TypeError: The Gamepad.mapping getter can only be used on instances of Gamepad"
    },
    {
      "path": "window.Gamepad.prototype.mapping",
      "propertyName": "_get",
      "property": "function mapping() {\n    [native code]\n}"
    },
    {
      "path": "window.Gamepad.prototype.mapping",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Gamepad.prototype.axes",
      "propertyName": "_accessException",
      "property": "TypeError: The Gamepad.axes getter can only be used on instances of Gamepad"
    },
    {
      "path": "window.Gamepad.prototype.axes",
      "propertyName": "_get",
      "property": "function axes() {\n    [native code]\n}"
    },
    {
      "path": "window.Gamepad.prototype.axes",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Gamepad.prototype.buttons",
      "propertyName": "_accessException",
      "property": "TypeError: The Gamepad.buttons getter can only be used on instances of Gamepad"
    },
    {
      "path": "window.Gamepad.prototype.buttons",
      "propertyName": "_get",
      "property": "function buttons() {\n    [native code]\n}"
    },
    {
      "path": "window.Gamepad.prototype.buttons",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.Gamepad",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.Gamepad",
      "propertyName": "_function",
      "property": "function Gamepad() {\n    [native code]\n}"
    },
    {
      "path": "window.GamepadButton.prototype.pressed",
      "propertyName": "_accessException",
      "property": "TypeError: The GamepadButton.pressed getter can only be used on instances of GamepadButton"
    },
    {
      "path": "window.GamepadButton.prototype.pressed",
      "propertyName": "_get",
      "property": "function pressed() {\n    [native code]\n}"
    },
    {
      "path": "window.GamepadButton.prototype.pressed",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.GamepadButton.prototype.value",
      "propertyName": "_accessException",
      "property": "TypeError: The GamepadButton.value getter can only be used on instances of GamepadButton"
    },
    {
      "path": "window.GamepadButton.prototype.value",
      "propertyName": "_get",
      "property": "function value() {\n    [native code]\n}"
    },
    {
      "path": "window.GamepadButton.prototype.value",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.GamepadButton",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.GamepadButton",
      "propertyName": "_function",
      "property": "function GamepadButton() {\n    [native code]\n}"
    },
    {
      "path": "window.GamepadEvent.prototype.gamepad",
      "propertyName": "_accessException",
      "property": "TypeError: The GamepadEvent.gamepad getter can only be used on instances of GamepadEvent"
    },
    {
      "path": "window.GamepadEvent.prototype.gamepad",
      "propertyName": "_get",
      "property": "function gamepad() {\n    [native code]\n}"
    },
    {
      "path": "window.GamepadEvent.prototype.gamepad",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.GamepadEvent",
      "propertyName": "new()",
      "property": "TypeError: Not enough arguments"
    },
    {
      "path": "window.GamepadEvent",
      "propertyName": "_function",
      "property": "function GamepadEvent() {\n    [native code]\n}"
    },
    {
      "path": "window.MediaCapabilities.prototype.decodingInfo",
      "propertyName": "_function",
      "property": "function decodingInfo() {\n    [native code]\n}"
    },
    {
      "path": "window.MediaCapabilities",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.MediaCapabilities",
      "propertyName": "_function",
      "property": "function MediaCapabilities() {\n    [native code]\n}"
    },
    {
      "path": "window.MediaSource.prototype.sourceBuffers",
      "propertyName": "_accessException",
      "property": "TypeError: The MediaSource.sourceBuffers getter can only be used on instances of MediaSource"
    },
    {
      "path": "window.MediaSource.prototype.sourceBuffers",
      "propertyName": "_get",
      "property": "function sourceBuffers() {\n    [native code]\n}"
    },
    {
      "path": "window.MediaSource.prototype.sourceBuffers",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.MediaSource.prototype.activeSourceBuffers",
      "propertyName": "_accessException",
      "property": "TypeError: The MediaSource.activeSourceBuffers getter can only be used on instances of MediaSource"
    },
    {
      "path": "window.MediaSource.prototype.activeSourceBuffers",
      "propertyName": "_get",
      "property": "function activeSourceBuffers() {\n    [native code]\n}"
    },
    {
      "path": "window.MediaSource.prototype.activeSourceBuffers",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.MediaSource.prototype.duration",
      "propertyName": "_accessException",
      "property": "TypeError: The MediaSource.duration getter can only be used on instances of MediaSource"
    },
    {
      "path": "window.MediaSource.prototype.duration",
      "propertyName": "_get",
      "property": "function duration() {\n    [native code]\n}"
    },
    {
      "path": "window.MediaSource.prototype.duration",
      "propertyName": "_set",
      "property": "function duration() {\n    [native code]\n}"
    },
    {
      "path": "window.MediaSource.prototype.duration",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.MediaSource.prototype.duration",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.MediaSource.prototype.readyState",
      "propertyName": "_accessException",
      "property": "TypeError: The MediaSource.readyState getter can only be used on instances of MediaSource"
    },
    {
      "path": "window.MediaSource.prototype.readyState",
      "propertyName": "_get",
      "property": "function readyState() {\n    [native code]\n}"
    },
    {
      "path": "window.MediaSource.prototype.readyState",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.MediaSource.prototype.onsourceopen",
      "propertyName": "_accessException",
      "property": "TypeError: The MediaSource.onsourceopen getter can only be used on instances of MediaSource"
    },
    {
      "path": "window.MediaSource.prototype.onsourceopen",
      "propertyName": "_get",
      "property": "function onsourceopen() {\n    [native code]\n}"
    },
    {
      "path": "window.MediaSource.prototype.onsourceopen",
      "propertyName": "_set",
      "property": "function onsourceopen() {\n    [native code]\n}"
    },
    {
      "path": "window.MediaSource.prototype.onsourceopen",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.MediaSource.prototype.onsourceopen",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.MediaSource.prototype.onsourceended",
      "propertyName": "_accessException",
      "property": "TypeError: The MediaSource.onsourceended getter can only be used on instances of MediaSource"
    },
    {
      "path": "window.MediaSource.prototype.onsourceended",
      "propertyName": "_get",
      "property": "function onsourceended() {\n    [native code]\n}"
    },
    {
      "path": "window.MediaSource.prototype.onsourceended",
      "propertyName": "_set",
      "property": "function onsourceended() {\n    [native code]\n}"
    },
    {
      "path": "window.MediaSource.prototype.onsourceended",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.MediaSource.prototype.onsourceended",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.MediaSource.prototype.onsourceclose",
      "propertyName": "_accessException",
      "property": "TypeError: The MediaSource.onsourceclose getter can only be used on instances of MediaSource"
    },
    {
      "path": "window.MediaSource.prototype.onsourceclose",
      "propertyName": "_get",
      "property": "function onsourceclose() {\n    [native code]\n}"
    },
    {
      "path": "window.MediaSource.prototype.onsourceclose",
      "propertyName": "_set",
      "property": "function onsourceclose() {\n    [native code]\n}"
    },
    {
      "path": "window.MediaSource.prototype.onsourceclose",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.MediaSource.prototype.onsourceclose",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.MediaSource.prototype.addSourceBuffer",
      "propertyName": "_function",
      "property": "function addSourceBuffer() {\n    [native code]\n}"
    },
    {
      "path": "window.MediaSource.prototype.removeSourceBuffer",
      "propertyName": "_function",
      "property": "function removeSourceBuffer() {\n    [native code]\n}"
    },
    {
      "path": "window.MediaSource.prototype.endOfStream",
      "propertyName": "_function",
      "property": "function endOfStream() {\n    [native code]\n}"
    },
    {
      "path": "window.MediaSource.prototype.setLiveSeekableRange",
      "propertyName": "_function",
      "property": "function setLiveSeekableRange() {\n    [native code]\n}"
    },
    {
      "path": "window.MediaSource.prototype.clearLiveSeekableRange",
      "propertyName": "_function",
      "property": "function clearLiveSeekableRange() {\n    [native code]\n}"
    },
    {
      "path": "window.MediaSource.isTypeSupported",
      "propertyName": "_function",
      "property": "function isTypeSupported() {\n    [native code]\n}"
    },
    {
      "path": "window.MediaSource",
      "propertyName": "_function",
      "property": "function MediaSource() {\n    [native code]\n}"
    },
    {
      "path": "window.RTCCertificate.prototype.expires",
      "propertyName": "_accessException",
      "property": "TypeError: The RTCCertificate.expires getter can only be used on instances of RTCCertificate"
    },
    {
      "path": "window.RTCCertificate.prototype.expires",
      "propertyName": "_get",
      "property": "function expires() {\n    [native code]\n}"
    },
    {
      "path": "window.RTCCertificate.prototype.expires",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.RTCCertificate.prototype.getFingerprints",
      "propertyName": "_function",
      "property": "function getFingerprints() {\n    [native code]\n}"
    },
    {
      "path": "window.RTCCertificate",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.RTCCertificate",
      "propertyName": "_function",
      "property": "function RTCCertificate() {\n    [native code]\n}"
    },
    {
      "path": "window.RTCDataChannel.prototype.label",
      "propertyName": "_accessException",
      "property": "TypeError: The RTCDataChannel.label getter can only be used on instances of RTCDataChannel"
    },
    {
      "path": "window.RTCDataChannel.prototype.label",
      "propertyName": "_get",
      "property": "function label() {\n    [native code]\n}"
    },
    {
      "path": "window.RTCDataChannel.prototype.label",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.RTCDataChannel.prototype.ordered",
      "propertyName": "_accessException",
      "property": "TypeError: The RTCDataChannel.ordered getter can only be used on instances of RTCDataChannel"
    },
    {
      "path": "window.RTCDataChannel.prototype.ordered",
      "propertyName": "_get",
      "property": "function ordered() {\n    [native code]\n}"
    },
    {
      "path": "window.RTCDataChannel.prototype.ordered",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.RTCDataChannel.prototype.maxPacketLifeTime",
      "propertyName": "_accessException",
      "property": "TypeError: The RTCDataChannel.maxPacketLifeTime getter can only be used on instances of RTCDataChannel"
    },
    {
      "path": "window.RTCDataChannel.prototype.maxPacketLifeTime",
      "propertyName": "_get",
      "property": "function maxPacketLifeTime() {\n    [native code]\n}"
    },
    {
      "path": "window.RTCDataChannel.prototype.maxPacketLifeTime",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.RTCDataChannel.prototype.maxRetransmits",
      "propertyName": "_accessException",
      "property": "TypeError: The RTCDataChannel.maxRetransmits getter can only be used on instances of RTCDataChannel"
    },
    {
      "path": "window.RTCDataChannel.prototype.maxRetransmits",
      "propertyName": "_get",
      "property": "function maxRetransmits() {\n    [native code]\n}"
    },
    {
      "path": "window.RTCDataChannel.prototype.maxRetransmits",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.RTCDataChannel.prototype.protocol",
      "propertyName": "_accessException",
      "property": "TypeError: The RTCDataChannel.protocol getter can only be used on instances of RTCDataChannel"
    },
    {
      "path": "window.RTCDataChannel.prototype.protocol",
      "propertyName": "_get",
      "property": "function protocol() {\n    [native code]\n}"
    },
    {
      "path": "window.RTCDataChannel.prototype.protocol",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.RTCDataChannel.prototype.negotiated",
      "propertyName": "_accessException",
      "property": "TypeError: The RTCDataChannel.negotiated getter can only be used on instances of RTCDataChannel"
    },
    {
      "path": "window.RTCDataChannel.prototype.negotiated",
      "propertyName": "_get",
      "property": "function negotiated() {\n    [native code]\n}"
    },
    {
      "path": "window.RTCDataChannel.prototype.negotiated",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.RTCDataChannel.prototype.id",
      "propertyName": "_accessException",
      "property": "TypeError: The RTCDataChannel.id getter can only be used on instances of RTCDataChannel"
    },
    {
      "path": "window.RTCDataChannel.prototype.id",
      "propertyName": "_get",
      "property": "function id() {\n    [native code]\n}"
    },
    {
      "path": "window.RTCDataChannel.prototype.id",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.RTCDataChannel.prototype.readyState",
      "propertyName": "_accessException",
      "property": "TypeError: The RTCDataChannel.readyState getter can only be used on instances of RTCDataChannel"
    },
    {
      "path": "window.RTCDataChannel.prototype.readyState",
      "propertyName": "_get",
      "property": "function readyState() {\n    [native code]\n}"
    },
    {
      "path": "window.RTCDataChannel.prototype.readyState",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.RTCDataChannel.prototype.bufferedAmount",
      "propertyName": "_accessException",
      "property": "TypeError: The RTCDataChannel.bufferedAmount getter can only be used on instances of RTCDataChannel"
    },
    {
      "path": "window.RTCDataChannel.prototype.bufferedAmount",
      "propertyName": "_get",
      "property": "function bufferedAmount() {\n    [native code]\n}"
    },
    {
      "path": "window.RTCDataChannel.prototype.bufferedAmount",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.RTCDataChannel.prototype.bufferedAmountLowThreshold",
      "propertyName": "_accessException",
      "property": "TypeError: The RTCDataChannel.bufferedAmountLowThreshold getter can only be used on instances of RTCDataChannel"
    },
    {
      "path": "window.RTCDataChannel.prototype.bufferedAmountLowThreshold",
      "propertyName": "_get",
      "property": "function bufferedAmountLowThreshold() {\n    [native code]\n}"
    },
    {
      "path": "window.RTCDataChannel.prototype.bufferedAmountLowThreshold",
      "propertyName": "_set",
      "property": "function bufferedAmountLowThreshold() {\n    [native code]\n}"
    },
    {
      "path": "window.RTCDataChannel.prototype.bufferedAmountLowThreshold",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.RTCDataChannel.prototype.bufferedAmountLowThreshold",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.RTCDataChannel.prototype.binaryType",
      "propertyName": "_accessException",
      "property": "TypeError: The RTCDataChannel.binaryType getter can only be used on instances of RTCDataChannel"
    },
    {
      "path": "window.RTCDataChannel.prototype.binaryType",
      "propertyName": "_get",
      "property": "function binaryType() {\n    [native code]\n}"
    },
    {
      "path": "window.RTCDataChannel.prototype.binaryType",
      "propertyName": "_set",
      "property": "function binaryType() {\n    [native code]\n}"
    },
    {
      "path": "window.RTCDataChannel.prototype.binaryType",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.RTCDataChannel.prototype.binaryType",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.RTCDataChannel.prototype.onopen",
      "propertyName": "_accessException",
      "property": "TypeError: The RTCDataChannel.onopen getter can only be used on instances of RTCDataChannel"
    },
    {
      "path": "window.RTCDataChannel.prototype.onopen",
      "propertyName": "_get",
      "property": "function onopen() {\n    [native code]\n}"
    },
    {
      "path": "window.RTCDataChannel.prototype.onopen",
      "propertyName": "_set",
      "property": "function onopen() {\n    [native code]\n}"
    },
    {
      "path": "window.RTCDataChannel.prototype.onopen",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.RTCDataChannel.prototype.onopen",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.RTCDataChannel.prototype.onerror",
      "propertyName": "_accessException",
      "property": "TypeError: The RTCDataChannel.onerror getter can only be used on instances of RTCDataChannel"
    },
    {
      "path": "window.RTCDataChannel.prototype.onerror",
      "propertyName": "_get",
      "property": "function onerror() {\n    [native code]\n}"
    },
    {
      "path": "window.RTCDataChannel.prototype.onerror",
      "propertyName": "_set",
      "property": "function onerror() {\n    [native code]\n}"
    },
    {
      "path": "window.RTCDataChannel.prototype.onerror",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.RTCDataChannel.prototype.onerror",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.RTCDataChannel.prototype.onclose",
      "propertyName": "_accessException",
      "property": "TypeError: The RTCDataChannel.onclose getter can only be used on instances of RTCDataChannel"
    },
    {
      "path": "window.RTCDataChannel.prototype.onclose",
      "propertyName": "_get",
      "property": "function onclose() {\n    [native code]\n}"
    },
    {
      "path": "window.RTCDataChannel.prototype.onclose",
      "propertyName": "_set",
      "property": "function onclose() {\n    [native code]\n}"
    },
    {
      "path": "window.RTCDataChannel.prototype.onclose",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.RTCDataChannel.prototype.onclose",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.RTCDataChannel.prototype.onmessage",
      "propertyName": "_accessException",
      "property": "TypeError: The RTCDataChannel.onmessage getter can only be used on instances of RTCDataChannel"
    },
    {
      "path": "window.RTCDataChannel.prototype.onmessage",
      "propertyName": "_get",
      "property": "function onmessage() {\n    [native code]\n}"
    },
    {
      "path": "window.RTCDataChannel.prototype.onmessage",
      "propertyName": "_set",
      "property": "function onmessage() {\n    [native code]\n}"
    },
    {
      "path": "window.RTCDataChannel.prototype.onmessage",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.RTCDataChannel.prototype.onmessage",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.RTCDataChannel.prototype.onbufferedamountlow",
      "propertyName": "_accessException",
      "property": "TypeError: The RTCDataChannel.onbufferedamountlow getter can only be used on instances of RTCDataChannel"
    },
    {
      "path": "window.RTCDataChannel.prototype.onbufferedamountlow",
      "propertyName": "_get",
      "property": "function onbufferedamountlow() {\n    [native code]\n}"
    },
    {
      "path": "window.RTCDataChannel.prototype.onbufferedamountlow",
      "propertyName": "_set",
      "property": "function onbufferedamountlow() {\n    [native code]\n}"
    },
    {
      "path": "window.RTCDataChannel.prototype.onbufferedamountlow",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.RTCDataChannel.prototype.onbufferedamountlow",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.RTCDataChannel.prototype.send",
      "propertyName": "_function",
      "property": "function send() {\n    [native code]\n}"
    },
    {
      "path": "window.RTCDataChannel.prototype.close",
      "propertyName": "_function",
      "property": "function close() {\n    [native code]\n}"
    },
    {
      "path": "window.RTCDataChannel",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.RTCDataChannel",
      "propertyName": "_function",
      "property": "function RTCDataChannel() {\n    [native code]\n}"
    },
    {
      "path": "window.RTCDataChannelEvent.prototype.channel",
      "propertyName": "_accessException",
      "property": "TypeError: The RTCDataChannelEvent.channel getter can only be used on instances of RTCDataChannelEvent"
    },
    {
      "path": "window.RTCDataChannelEvent.prototype.channel",
      "propertyName": "_get",
      "property": "function channel() {\n    [native code]\n}"
    },
    {
      "path": "window.RTCDataChannelEvent.prototype.channel",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.RTCDataChannelEvent",
      "propertyName": "new()",
      "property": "TypeError: Not enough arguments"
    },
    {
      "path": "window.RTCDataChannelEvent",
      "propertyName": "_function",
      "property": "function RTCDataChannelEvent() {\n    [native code]\n}"
    },
    {
      "path": "window.RTCIceCandidate.prototype.candidate",
      "propertyName": "_accessException",
      "property": "TypeError: The RTCIceCandidate.candidate getter can only be used on instances of RTCIceCandidate"
    },
    {
      "path": "window.RTCIceCandidate.prototype.candidate",
      "propertyName": "_get",
      "property": "function candidate() {\n    [native code]\n}"
    },
    {
      "path": "window.RTCIceCandidate.prototype.candidate",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.RTCIceCandidate.prototype.sdpMid",
      "propertyName": "_accessException",
      "property": "TypeError: The RTCIceCandidate.sdpMid getter can only be used on instances of RTCIceCandidate"
    },
    {
      "path": "window.RTCIceCandidate.prototype.sdpMid",
      "propertyName": "_get",
      "property": "function sdpMid() {\n    [native code]\n}"
    },
    {
      "path": "window.RTCIceCandidate.prototype.sdpMid",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.RTCIceCandidate.prototype.sdpMLineIndex",
      "propertyName": "_accessException",
      "property": "TypeError: The RTCIceCandidate.sdpMLineIndex getter can only be used on instances of RTCIceCandidate"
    },
    {
      "path": "window.RTCIceCandidate.prototype.sdpMLineIndex",
      "propertyName": "_get",
      "property": "function sdpMLineIndex() {\n    [native code]\n}"
    },
    {
      "path": "window.RTCIceCandidate.prototype.sdpMLineIndex",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.RTCIceCandidate.prototype.toJSON",
      "propertyName": "_function",
      "property": "function toJSON() {\n    [native code]\n}"
    },
    {
      "path": "window.RTCIceCandidate",
      "propertyName": "new()",
      "property": "TypeError: Not enough arguments"
    },
    {
      "path": "window.RTCIceCandidate",
      "propertyName": "_function",
      "property": "function RTCIceCandidate() {\n    [native code]\n}"
    },
    {
      "path": "window.RTCIceTransport.prototype._protos",
      "propertyName": "0",
      "property": "Object.prototype"
    },
    {
      "path": "window.RTCIceTransport.prototype.state",
      "propertyName": "_accessException",
      "property": "TypeError: The RTCIceTransport.state getter can only be used on instances of RTCIceTransport"
    },
    {
      "path": "window.RTCIceTransport.prototype.state",
      "propertyName": "_get",
      "property": "function state() {\n    [native code]\n}"
    },
    {
      "path": "window.RTCIceTransport.prototype.state",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.RTCIceTransport.prototype.gatheringState",
      "propertyName": "_accessException",
      "property": "TypeError: The RTCIceTransport.gatheringState getter can only be used on instances of RTCIceTransport"
    },
    {
      "path": "window.RTCIceTransport.prototype.gatheringState",
      "propertyName": "_get",
      "property": "function gatheringState() {\n    [native code]\n}"
    },
    {
      "path": "window.RTCIceTransport.prototype.gatheringState",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.RTCIceTransport",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.RTCIceTransport",
      "propertyName": "_function",
      "property": "function RTCIceTransport() {\n    [native code]\n}"
    },
    {
      "path": "window",
      "propertyName": "RTCPeerConnection",
      "property": {
        "prototype": {
          "_protos": ["EventTarget.prototype", "Object.prototype"],
          "localDescription": {
            "_flags": "ce",
            "_accessException": "TypeError: The RTCPeerConnection.localDescription getter can only be used on instances of RTCPeerConnection",
            "_get": "function localDescription() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "currentLocalDescription": {
            "_flags": "ce",
            "_accessException": "TypeError: The RTCPeerConnection.currentLocalDescription getter can only be used on instances of RTCPeerConnection",
            "_get": "function currentLocalDescription() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "pendingLocalDescription": {
            "_flags": "ce",
            "_accessException": "TypeError: The RTCPeerConnection.pendingLocalDescription getter can only be used on instances of RTCPeerConnection",
            "_get": "function pendingLocalDescription() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "remoteDescription": {
            "_flags": "ce",
            "_accessException": "TypeError: The RTCPeerConnection.remoteDescription getter can only be used on instances of RTCPeerConnection",
            "_get": "function remoteDescription() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "currentRemoteDescription": {
            "_flags": "ce",
            "_accessException": "TypeError: The RTCPeerConnection.currentRemoteDescription getter can only be used on instances of RTCPeerConnection",
            "_get": "function currentRemoteDescription() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "pendingRemoteDescription": {
            "_flags": "ce",
            "_accessException": "TypeError: The RTCPeerConnection.pendingRemoteDescription getter can only be used on instances of RTCPeerConnection",
            "_get": "function pendingRemoteDescription() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "signalingState": {
            "_flags": "ce",
            "_accessException": "TypeError: The RTCPeerConnection.signalingState getter can only be used on instances of RTCPeerConnection",
            "_get": "function signalingState() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "iceGatheringState": {
            "_flags": "ce",
            "_accessException": "TypeError: The RTCPeerConnection.iceGatheringState getter can only be used on instances of RTCPeerConnection",
            "_get": "function iceGatheringState() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "iceConnectionState": {
            "_flags": "ce",
            "_accessException": "TypeError: The RTCPeerConnection.iceConnectionState getter can only be used on instances of RTCPeerConnection",
            "_get": "function iceConnectionState() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "connectionState": {
            "_flags": "ce",
            "_accessException": "TypeError: The RTCPeerConnection.connectionState getter can only be used on instances of RTCPeerConnection",
            "_get": "function connectionState() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onnegotiationneeded": {
            "_flags": "ce",
            "_accessException": "TypeError: The RTCPeerConnection.onnegotiationneeded getter can only be used on instances of RTCPeerConnection",
            "_get": "function onnegotiationneeded() {\n    [native code]\n}",
            "_set": "function onnegotiationneeded() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onicecandidate": {
            "_flags": "ce",
            "_accessException": "TypeError: The RTCPeerConnection.onicecandidate getter can only be used on instances of RTCPeerConnection",
            "_get": "function onicecandidate() {\n    [native code]\n}",
            "_set": "function onicecandidate() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onsignalingstatechange": {
            "_flags": "ce",
            "_accessException": "TypeError: The RTCPeerConnection.onsignalingstatechange getter can only be used on instances of RTCPeerConnection",
            "_get": "function onsignalingstatechange() {\n    [native code]\n}",
            "_set": "function onsignalingstatechange() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "oniceconnectionstatechange": {
            "_flags": "ce",
            "_accessException": "TypeError: The RTCPeerConnection.oniceconnectionstatechange getter can only be used on instances of RTCPeerConnection",
            "_get": "function oniceconnectionstatechange() {\n    [native code]\n}",
            "_set": "function oniceconnectionstatechange() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onicegatheringstatechange": {
            "_flags": "ce",
            "_accessException": "TypeError: The RTCPeerConnection.onicegatheringstatechange getter can only be used on instances of RTCPeerConnection",
            "_get": "function onicegatheringstatechange() {\n    [native code]\n}",
            "_set": "function onicegatheringstatechange() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onconnectionstatechange": {
            "_flags": "ce",
            "_accessException": "TypeError: The RTCPeerConnection.onconnectionstatechange getter can only be used on instances of RTCPeerConnection",
            "_get": "function onconnectionstatechange() {\n    [native code]\n}",
            "_set": "function onconnectionstatechange() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "ontrack": {
            "_flags": "ce",
            "_accessException": "TypeError: The RTCPeerConnection.ontrack getter can only be used on instances of RTCPeerConnection",
            "_get": "function ontrack() {\n    [native code]\n}",
            "_set": "function ontrack() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "ondatachannel": {
            "_flags": "ce",
            "_accessException": "TypeError: The RTCPeerConnection.ondatachannel getter can only be used on instances of RTCPeerConnection",
            "_get": "function ondatachannel() {\n    [native code]\n}",
            "_set": "function ondatachannel() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "createOffer": {
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "createOffer"
            },
            "_function": "function createOffer() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "createAnswer": {
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "createAnswer"
            },
            "_function": "function createAnswer() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "setLocalDescription": {
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "setLocalDescription"
            },
            "_function": "function setLocalDescription() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "setRemoteDescription": {
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "setRemoteDescription"
            },
            "_function": "function setRemoteDescription() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "addIceCandidate": {
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "addIceCandidate"
            },
            "_function": "function addIceCandidate() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "getConfiguration": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getConfiguration"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function getConfiguration() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "setConfiguration": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "setConfiguration"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function setConfiguration() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "close": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "close"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function close() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "getSenders": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getSenders"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function getSenders() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "getReceivers": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getReceivers"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function getReceivers() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "getTransceivers": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getTransceivers"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function getTransceivers() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "addTrack": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "addTrack"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function addTrack() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "removeTrack": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "removeTrack"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function removeTrack() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "addTransceiver": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "addTransceiver"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function addTransceiver() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "createDataChannel": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "createDataChannel"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function createDataChannel() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "getStats": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getStats"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function getStats() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "RTCPeerConnection"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "generateCertificate": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "generateCertificate"
          },
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "_function": "function generateCertificate() {\n    [native code]\n}",
          "_flags": "cew"
        },
        "new()": {
          "_protos": ["RTCPeerConnection.prototype", "EventTarget.prototype", "Object.prototype"],
          "localDescription": {
            "_type": "object",
            "_value": null
          },
          "currentLocalDescription": {
            "_type": "object",
            "_value": null
          },
          "pendingLocalDescription": {
            "_type": "object",
            "_value": null
          },
          "remoteDescription": {
            "_type": "object",
            "_value": null
          },
          "currentRemoteDescription": {
            "_type": "object",
            "_value": null
          },
          "pendingRemoteDescription": {
            "_type": "object",
            "_value": null
          },
          "signalingState": {
            "_type": "string",
            "_value": "stable"
          },
          "iceGatheringState": {
            "_type": "string",
            "_value": "new"
          },
          "iceConnectionState": {
            "_type": "string",
            "_value": "new"
          },
          "connectionState": {
            "_type": "string",
            "_value": "new"
          },
          "onnegotiationneeded": {
            "_type": "object",
            "_value": null
          },
          "onicecandidate": {
            "_type": "object",
            "_value": null
          },
          "onsignalingstatechange": {
            "_type": "object",
            "_value": null
          },
          "oniceconnectionstatechange": {
            "_type": "object",
            "_value": null
          },
          "onicegatheringstatechange": {
            "_type": "object",
            "_value": null
          },
          "onconnectionstatechange": {
            "_type": "object",
            "_value": null
          },
          "ontrack": {
            "_type": "object",
            "_value": null
          },
          "ondatachannel": {
            "_type": "object",
            "_value": null
          }
        },
        "_function": "function RTCPeerConnection() {\n    [native code]\n}",
        "_flags": "cw"
      }
    },
    {
      "path": "window.RTCPeerConnectionIceEvent.prototype.candidate",
      "propertyName": "_accessException",
      "property": "TypeError: The RTCPeerConnectionIceEvent.candidate getter can only be used on instances of RTCPeerConnectionIceEvent"
    },
    {
      "path": "window.RTCPeerConnectionIceEvent.prototype.candidate",
      "propertyName": "_get",
      "property": "function candidate() {\n    [native code]\n}"
    },
    {
      "path": "window.RTCPeerConnectionIceEvent.prototype.candidate",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.RTCPeerConnectionIceEvent",
      "propertyName": "new()",
      "property": "TypeError: Not enough arguments"
    },
    {
      "path": "window.RTCPeerConnectionIceEvent",
      "propertyName": "_function",
      "property": "function RTCPeerConnectionIceEvent() {\n    [native code]\n}"
    },
    {
      "path": "window.RTCRtpReceiver.prototype.track",
      "propertyName": "_accessException",
      "property": "TypeError: The RTCRtpReceiver.track getter can only be used on instances of RTCRtpReceiver"
    },
    {
      "path": "window.RTCRtpReceiver.prototype.track",
      "propertyName": "_get",
      "property": "function track() {\n    [native code]\n}"
    },
    {
      "path": "window.RTCRtpReceiver.prototype.track",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.RTCRtpReceiver.prototype.getParameters",
      "propertyName": "_function",
      "property": "function getParameters() {\n    [native code]\n}"
    },
    {
      "path": "window.RTCRtpReceiver.prototype.getContributingSources",
      "propertyName": "_function",
      "property": "function getContributingSources() {\n    [native code]\n}"
    },
    {
      "path": "window.RTCRtpReceiver.prototype.getSynchronizationSources",
      "propertyName": "_function",
      "property": "function getSynchronizationSources() {\n    [native code]\n}"
    },
    {
      "path": "window.RTCRtpReceiver.prototype.getStats",
      "propertyName": "_function",
      "property": "function getStats() {\n    [native code]\n}"
    },
    {
      "path": "window.RTCRtpReceiver.getCapabilities",
      "propertyName": "_function",
      "property": "function getCapabilities() {\n    [native code]\n}"
    },
    {
      "path": "window.RTCRtpReceiver",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.RTCRtpReceiver",
      "propertyName": "_function",
      "property": "function RTCRtpReceiver() {\n    [native code]\n}"
    },
    {
      "path": "window.RTCRtpSender.prototype.track",
      "propertyName": "_accessException",
      "property": "TypeError: The RTCRtpSender.track getter can only be used on instances of RTCRtpSender"
    },
    {
      "path": "window.RTCRtpSender.prototype.track",
      "propertyName": "_get",
      "property": "function track() {\n    [native code]\n}"
    },
    {
      "path": "window.RTCRtpSender.prototype.track",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.RTCRtpSender.prototype.getParameters",
      "propertyName": "_function",
      "property": "function getParameters() {\n    [native code]\n}"
    },
    {
      "path": "window.RTCRtpSender.prototype.setParameters",
      "propertyName": "_function",
      "property": "function setParameters() {\n    [native code]\n}"
    },
    {
      "path": "window.RTCRtpSender.prototype.replaceTrack",
      "propertyName": "_function",
      "property": "function replaceTrack() {\n    [native code]\n}"
    },
    {
      "path": "window.RTCRtpSender.prototype.getStats",
      "propertyName": "_function",
      "property": "function getStats() {\n    [native code]\n}"
    },
    {
      "path": "window.RTCRtpSender.getCapabilities",
      "propertyName": "_function",
      "property": "function getCapabilities() {\n    [native code]\n}"
    },
    {
      "path": "window.RTCRtpSender",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.RTCRtpSender",
      "propertyName": "_function",
      "property": "function RTCRtpSender() {\n    [native code]\n}"
    },
    {
      "path": "window.RTCRtpTransceiver.prototype.mid",
      "propertyName": "_accessException",
      "property": "TypeError: The RTCRtpTransceiver.mid getter can only be used on instances of RTCRtpTransceiver"
    },
    {
      "path": "window.RTCRtpTransceiver.prototype.mid",
      "propertyName": "_get",
      "property": "function mid() {\n    [native code]\n}"
    },
    {
      "path": "window.RTCRtpTransceiver.prototype.mid",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.RTCRtpTransceiver.prototype.sender",
      "propertyName": "_accessException",
      "property": "TypeError: The RTCRtpTransceiver.sender getter can only be used on instances of RTCRtpTransceiver"
    },
    {
      "path": "window.RTCRtpTransceiver.prototype.sender",
      "propertyName": "_get",
      "property": "function sender() {\n    [native code]\n}"
    },
    {
      "path": "window.RTCRtpTransceiver.prototype.sender",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.RTCRtpTransceiver.prototype.receiver",
      "propertyName": "_accessException",
      "property": "TypeError: The RTCRtpTransceiver.receiver getter can only be used on instances of RTCRtpTransceiver"
    },
    {
      "path": "window.RTCRtpTransceiver.prototype.receiver",
      "propertyName": "_get",
      "property": "function receiver() {\n    [native code]\n}"
    },
    {
      "path": "window.RTCRtpTransceiver.prototype.receiver",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.RTCRtpTransceiver.prototype.stopped",
      "propertyName": "_accessException",
      "property": "TypeError: The RTCRtpTransceiver.stopped getter can only be used on instances of RTCRtpTransceiver"
    },
    {
      "path": "window.RTCRtpTransceiver.prototype.stopped",
      "propertyName": "_get",
      "property": "function stopped() {\n    [native code]\n}"
    },
    {
      "path": "window.RTCRtpTransceiver.prototype.stopped",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.RTCRtpTransceiver.prototype.direction",
      "propertyName": "_accessException",
      "property": "TypeError: The RTCRtpTransceiver.direction getter can only be used on instances of RTCRtpTransceiver"
    },
    {
      "path": "window.RTCRtpTransceiver.prototype.direction",
      "propertyName": "_get",
      "property": "function direction() {\n    [native code]\n}"
    },
    {
      "path": "window.RTCRtpTransceiver.prototype.direction",
      "propertyName": "_set",
      "property": "function direction() {\n    [native code]\n}"
    },
    {
      "path": "window.RTCRtpTransceiver.prototype.direction",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.RTCRtpTransceiver.prototype.direction",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.RTCRtpTransceiver.prototype.currentDirection",
      "propertyName": "_accessException",
      "property": "TypeError: The RTCRtpTransceiver.currentDirection getter can only be used on instances of RTCRtpTransceiver"
    },
    {
      "path": "window.RTCRtpTransceiver.prototype.currentDirection",
      "propertyName": "_get",
      "property": "function currentDirection() {\n    [native code]\n}"
    },
    {
      "path": "window.RTCRtpTransceiver.prototype.currentDirection",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.RTCRtpTransceiver",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.RTCRtpTransceiver",
      "propertyName": "_function",
      "property": "function RTCRtpTransceiver() {\n    [native code]\n}"
    },
    {
      "path": "window.RTCSessionDescription.prototype.type",
      "propertyName": "_accessException",
      "property": "TypeError: The RTCSessionDescription.type getter can only be used on instances of RTCSessionDescription"
    },
    {
      "path": "window.RTCSessionDescription.prototype.type",
      "propertyName": "_get",
      "property": "function type() {\n    [native code]\n}"
    },
    {
      "path": "window.RTCSessionDescription.prototype.type",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.RTCSessionDescription.prototype.sdp",
      "propertyName": "_accessException",
      "property": "TypeError: The RTCSessionDescription.sdp getter can only be used on instances of RTCSessionDescription"
    },
    {
      "path": "window.RTCSessionDescription.prototype.sdp",
      "propertyName": "_get",
      "property": "function sdp() {\n    [native code]\n}"
    },
    {
      "path": "window.RTCSessionDescription.prototype.sdp",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.RTCSessionDescription.prototype.toJSON",
      "propertyName": "_function",
      "property": "function toJSON() {\n    [native code]\n}"
    },
    {
      "path": "window.RTCSessionDescription",
      "propertyName": "new()",
      "property": "TypeError: Not enough arguments"
    },
    {
      "path": "window.RTCSessionDescription",
      "propertyName": "_function",
      "property": "function RTCSessionDescription() {\n    [native code]\n}"
    },
    {
      "path": "window.RTCStatsReport.prototype.size",
      "propertyName": "_accessException",
      "property": "TypeError: The RTCStatsReport.size getter can only be used on instances of RTCStatsReport"
    },
    {
      "path": "window.RTCStatsReport.prototype.size",
      "propertyName": "_get",
      "property": "function size() {\n    [native code]\n}"
    },
    {
      "path": "window.RTCStatsReport.prototype.size",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.RTCStatsReport.prototype.get",
      "propertyName": "_function",
      "property": "function get() {\n    [native code]\n}"
    },
    {
      "path": "window.RTCStatsReport.prototype.get",
      "propertyName": "_flags",
      "property": "cw"
    },
    {
      "path": "window.RTCStatsReport.prototype.has",
      "propertyName": "_function",
      "property": "function has() {\n    [native code]\n}"
    },
    {
      "path": "window.RTCStatsReport.prototype.has",
      "propertyName": "_flags",
      "property": "cw"
    },
    {
      "path": "window.RTCStatsReport.prototype.entries",
      "propertyName": "_function",
      "property": "function entries() {\n    [native code]\n}"
    },
    {
      "path": "window.RTCStatsReport.prototype.entries",
      "propertyName": "_flags",
      "property": "cw"
    },
    {
      "path": "window.RTCStatsReport.prototype.keys",
      "propertyName": "_function",
      "property": "function keys() {\n    [native code]\n}"
    },
    {
      "path": "window.RTCStatsReport.prototype.keys",
      "propertyName": "_flags",
      "property": "cw"
    },
    {
      "path": "window.RTCStatsReport.prototype.values",
      "propertyName": "_function",
      "property": "function values() {\n    [native code]\n}"
    },
    {
      "path": "window.RTCStatsReport.prototype.values",
      "propertyName": "_flags",
      "property": "cw"
    },
    {
      "path": "window.RTCStatsReport.prototype.forEach",
      "propertyName": "_function",
      "property": "function forEach() {\n    [native code]\n}"
    },
    {
      "path": "window.RTCStatsReport",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.RTCStatsReport",
      "propertyName": "_function",
      "property": "function RTCStatsReport() {\n    [native code]\n}"
    },
    {
      "path": "window.RTCTrackEvent.prototype.receiver",
      "propertyName": "_accessException",
      "property": "TypeError: The RTCTrackEvent.receiver getter can only be used on instances of RTCTrackEvent"
    },
    {
      "path": "window.RTCTrackEvent.prototype.receiver",
      "propertyName": "_get",
      "property": "function receiver() {\n    [native code]\n}"
    },
    {
      "path": "window.RTCTrackEvent.prototype.receiver",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.RTCTrackEvent.prototype.track",
      "propertyName": "_accessException",
      "property": "TypeError: The RTCTrackEvent.track getter can only be used on instances of RTCTrackEvent"
    },
    {
      "path": "window.RTCTrackEvent.prototype.track",
      "propertyName": "_get",
      "property": "function track() {\n    [native code]\n}"
    },
    {
      "path": "window.RTCTrackEvent.prototype.track",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.RTCTrackEvent.prototype.streams",
      "propertyName": "_accessException",
      "property": "TypeError: The RTCTrackEvent.streams getter can only be used on instances of RTCTrackEvent"
    },
    {
      "path": "window.RTCTrackEvent.prototype.streams",
      "propertyName": "_get",
      "property": "function streams() {\n    [native code]\n}"
    },
    {
      "path": "window.RTCTrackEvent.prototype.streams",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.RTCTrackEvent.prototype.transceiver",
      "propertyName": "_accessException",
      "property": "TypeError: The RTCTrackEvent.transceiver getter can only be used on instances of RTCTrackEvent"
    },
    {
      "path": "window.RTCTrackEvent.prototype.transceiver",
      "propertyName": "_get",
      "property": "function transceiver() {\n    [native code]\n}"
    },
    {
      "path": "window.RTCTrackEvent.prototype.transceiver",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.RTCTrackEvent",
      "propertyName": "new()",
      "property": "TypeError: Not enough arguments"
    },
    {
      "path": "window.RTCTrackEvent",
      "propertyName": "_function",
      "property": "function RTCTrackEvent() {\n    [native code]\n}"
    },
    {
      "path": "window.PaymentAddress.prototype.country",
      "propertyName": "_accessException",
      "property": "TypeError: The PaymentAddress.country getter can only be used on instances of PaymentAddress"
    },
    {
      "path": "window.PaymentAddress.prototype.country",
      "propertyName": "_get",
      "property": "function country() {\n    [native code]\n}"
    },
    {
      "path": "window.PaymentAddress.prototype.country",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.PaymentAddress.prototype.addressLine",
      "propertyName": "_accessException",
      "property": "TypeError: The PaymentAddress.addressLine getter can only be used on instances of PaymentAddress"
    },
    {
      "path": "window.PaymentAddress.prototype.addressLine",
      "propertyName": "_get",
      "property": "function addressLine() {\n    [native code]\n}"
    },
    {
      "path": "window.PaymentAddress.prototype.addressLine",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.PaymentAddress.prototype.region",
      "propertyName": "_accessException",
      "property": "TypeError: The PaymentAddress.region getter can only be used on instances of PaymentAddress"
    },
    {
      "path": "window.PaymentAddress.prototype.region",
      "propertyName": "_get",
      "property": "function region() {\n    [native code]\n}"
    },
    {
      "path": "window.PaymentAddress.prototype.region",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.PaymentAddress.prototype.city",
      "propertyName": "_accessException",
      "property": "TypeError: The PaymentAddress.city getter can only be used on instances of PaymentAddress"
    },
    {
      "path": "window.PaymentAddress.prototype.city",
      "propertyName": "_get",
      "property": "function city() {\n    [native code]\n}"
    },
    {
      "path": "window.PaymentAddress.prototype.city",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.PaymentAddress.prototype.dependentLocality",
      "propertyName": "_accessException",
      "property": "TypeError: The PaymentAddress.dependentLocality getter can only be used on instances of PaymentAddress"
    },
    {
      "path": "window.PaymentAddress.prototype.dependentLocality",
      "propertyName": "_get",
      "property": "function dependentLocality() {\n    [native code]\n}"
    },
    {
      "path": "window.PaymentAddress.prototype.dependentLocality",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.PaymentAddress.prototype.postalCode",
      "propertyName": "_accessException",
      "property": "TypeError: The PaymentAddress.postalCode getter can only be used on instances of PaymentAddress"
    },
    {
      "path": "window.PaymentAddress.prototype.postalCode",
      "propertyName": "_get",
      "property": "function postalCode() {\n    [native code]\n}"
    },
    {
      "path": "window.PaymentAddress.prototype.postalCode",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.PaymentAddress.prototype.sortingCode",
      "propertyName": "_accessException",
      "property": "TypeError: The PaymentAddress.sortingCode getter can only be used on instances of PaymentAddress"
    },
    {
      "path": "window.PaymentAddress.prototype.sortingCode",
      "propertyName": "_get",
      "property": "function sortingCode() {\n    [native code]\n}"
    },
    {
      "path": "window.PaymentAddress.prototype.sortingCode",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.PaymentAddress.prototype.organization",
      "propertyName": "_accessException",
      "property": "TypeError: The PaymentAddress.organization getter can only be used on instances of PaymentAddress"
    },
    {
      "path": "window.PaymentAddress.prototype.organization",
      "propertyName": "_get",
      "property": "function organization() {\n    [native code]\n}"
    },
    {
      "path": "window.PaymentAddress.prototype.organization",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.PaymentAddress.prototype.recipient",
      "propertyName": "_accessException",
      "property": "TypeError: The PaymentAddress.recipient getter can only be used on instances of PaymentAddress"
    },
    {
      "path": "window.PaymentAddress.prototype.recipient",
      "propertyName": "_get",
      "property": "function recipient() {\n    [native code]\n}"
    },
    {
      "path": "window.PaymentAddress.prototype.recipient",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.PaymentAddress.prototype.phone",
      "propertyName": "_accessException",
      "property": "TypeError: The PaymentAddress.phone getter can only be used on instances of PaymentAddress"
    },
    {
      "path": "window.PaymentAddress.prototype.phone",
      "propertyName": "_get",
      "property": "function phone() {\n    [native code]\n}"
    },
    {
      "path": "window.PaymentAddress.prototype.phone",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.PaymentAddress.prototype.toJSON.name",
      "propertyName": "_value",
      "property": "toJSON"
    },
    {
      "path": "window.PaymentAddress.prototype.toJSON",
      "propertyName": "_function",
      "property": "function toJSON() {\n    [native code]\n}"
    },
    {
      "path": "window.PaymentAddress",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.PaymentAddress",
      "propertyName": "_function",
      "property": "function PaymentAddress() {\n    [native code]\n}"
    },
    {
      "path": "window.PaymentMethodChangeEvent.prototype.methodName",
      "propertyName": "_accessException",
      "property": "TypeError: The PaymentMethodChangeEvent.methodName getter can only be used on instances of PaymentMethodChangeEvent"
    },
    {
      "path": "window.PaymentMethodChangeEvent.prototype.methodName",
      "propertyName": "_get",
      "property": "function methodName() {\n    [native code]\n}"
    },
    {
      "path": "window.PaymentMethodChangeEvent.prototype.methodName",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.PaymentMethodChangeEvent.prototype.methodDetails",
      "propertyName": "_accessException",
      "property": "TypeError: The PaymentMethodChangeEvent.methodDetails getter can only be used on instances of PaymentMethodChangeEvent"
    },
    {
      "path": "window.PaymentMethodChangeEvent.prototype.methodDetails",
      "propertyName": "_get",
      "property": "function methodDetails() {\n    [native code]\n}"
    },
    {
      "path": "window.PaymentMethodChangeEvent.prototype.methodDetails",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.PaymentMethodChangeEvent",
      "propertyName": "new()",
      "property": "TypeError: Not enough arguments"
    },
    {
      "path": "window.PaymentMethodChangeEvent",
      "propertyName": "_function",
      "property": "function PaymentMethodChangeEvent() {\n    [native code]\n}"
    },
    {
      "path": "window.PaymentRequest.prototype.id",
      "propertyName": "_accessException",
      "property": "TypeError: The PaymentRequest.id getter can only be used on instances of PaymentRequest"
    },
    {
      "path": "window.PaymentRequest.prototype.id",
      "propertyName": "_get",
      "property": "function id() {\n    [native code]\n}"
    },
    {
      "path": "window.PaymentRequest.prototype.id",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.PaymentRequest.prototype.shippingAddress",
      "propertyName": "_accessException",
      "property": "TypeError: The PaymentRequest.shippingAddress getter can only be used on instances of PaymentRequest"
    },
    {
      "path": "window.PaymentRequest.prototype.shippingAddress",
      "propertyName": "_get",
      "property": "function shippingAddress() {\n    [native code]\n}"
    },
    {
      "path": "window.PaymentRequest.prototype.shippingAddress",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.PaymentRequest.prototype.shippingOption",
      "propertyName": "_accessException",
      "property": "TypeError: The PaymentRequest.shippingOption getter can only be used on instances of PaymentRequest"
    },
    {
      "path": "window.PaymentRequest.prototype.shippingOption",
      "propertyName": "_get",
      "property": "function shippingOption() {\n    [native code]\n}"
    },
    {
      "path": "window.PaymentRequest.prototype.shippingOption",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.PaymentRequest.prototype.shippingType",
      "propertyName": "_accessException",
      "property": "TypeError: The PaymentRequest.shippingType getter can only be used on instances of PaymentRequest"
    },
    {
      "path": "window.PaymentRequest.prototype.shippingType",
      "propertyName": "_get",
      "property": "function shippingType() {\n    [native code]\n}"
    },
    {
      "path": "window.PaymentRequest.prototype.shippingType",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.PaymentRequest.prototype.onshippingaddresschange",
      "propertyName": "_accessException",
      "property": "TypeError: The PaymentRequest.onshippingaddresschange getter can only be used on instances of PaymentRequest"
    },
    {
      "path": "window.PaymentRequest.prototype.onshippingaddresschange",
      "propertyName": "_get",
      "property": "function onshippingaddresschange() {\n    [native code]\n}"
    },
    {
      "path": "window.PaymentRequest.prototype.onshippingaddresschange",
      "propertyName": "_set",
      "property": "function onshippingaddresschange() {\n    [native code]\n}"
    },
    {
      "path": "window.PaymentRequest.prototype.onshippingaddresschange",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.PaymentRequest.prototype.onshippingaddresschange",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.PaymentRequest.prototype.onshippingoptionchange",
      "propertyName": "_accessException",
      "property": "TypeError: The PaymentRequest.onshippingoptionchange getter can only be used on instances of PaymentRequest"
    },
    {
      "path": "window.PaymentRequest.prototype.onshippingoptionchange",
      "propertyName": "_get",
      "property": "function onshippingoptionchange() {\n    [native code]\n}"
    },
    {
      "path": "window.PaymentRequest.prototype.onshippingoptionchange",
      "propertyName": "_set",
      "property": "function onshippingoptionchange() {\n    [native code]\n}"
    },
    {
      "path": "window.PaymentRequest.prototype.onshippingoptionchange",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.PaymentRequest.prototype.onshippingoptionchange",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.PaymentRequest.prototype.onpaymentmethodchange",
      "propertyName": "_accessException",
      "property": "TypeError: The PaymentRequest.onpaymentmethodchange getter can only be used on instances of PaymentRequest"
    },
    {
      "path": "window.PaymentRequest.prototype.onpaymentmethodchange",
      "propertyName": "_get",
      "property": "function onpaymentmethodchange() {\n    [native code]\n}"
    },
    {
      "path": "window.PaymentRequest.prototype.onpaymentmethodchange",
      "propertyName": "_set",
      "property": "function onpaymentmethodchange() {\n    [native code]\n}"
    },
    {
      "path": "window.PaymentRequest.prototype.onpaymentmethodchange",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.PaymentRequest.prototype.onpaymentmethodchange",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.PaymentRequest.prototype.show.name",
      "propertyName": "_value",
      "property": "show"
    },
    {
      "path": "window.PaymentRequest.prototype.show",
      "propertyName": "_function",
      "property": "function show() {\n    [native code]\n}"
    },
    {
      "path": "window.PaymentRequest.prototype.abort.name",
      "propertyName": "_value",
      "property": "abort"
    },
    {
      "path": "window.PaymentRequest.prototype.abort",
      "propertyName": "_function",
      "property": "function abort() {\n    [native code]\n}"
    },
    {
      "path": "window.PaymentRequest.prototype.canMakePayment.name",
      "propertyName": "_value",
      "property": "canMakePayment"
    },
    {
      "path": "window.PaymentRequest.prototype.canMakePayment",
      "propertyName": "_function",
      "property": "function canMakePayment() {\n    [native code]\n}"
    },
    {
      "path": "window.PaymentRequest",
      "propertyName": "new()",
      "property": "TypeError: Not enough arguments"
    },
    {
      "path": "window.PaymentRequest",
      "propertyName": "_function",
      "property": "function PaymentRequest() {\n    [native code]\n}"
    },
    {
      "path": "window.PaymentRequestUpdateEvent.prototype.updateWith",
      "propertyName": "_function",
      "property": "function updateWith() {\n    [native code]\n}"
    },
    {
      "path": "window.PaymentRequestUpdateEvent",
      "propertyName": "new()",
      "property": "TypeError: Not enough arguments"
    },
    {
      "path": "window.PaymentRequestUpdateEvent",
      "propertyName": "_function",
      "property": "function PaymentRequestUpdateEvent() {\n    [native code]\n}"
    },
    {
      "path": "window.PaymentResponse.prototype.requestId",
      "propertyName": "_accessException",
      "property": "TypeError: The PaymentResponse.requestId getter can only be used on instances of PaymentResponse"
    },
    {
      "path": "window.PaymentResponse.prototype.requestId",
      "propertyName": "_get",
      "property": "function requestId() {\n    [native code]\n}"
    },
    {
      "path": "window.PaymentResponse.prototype.requestId",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.PaymentResponse.prototype.methodName",
      "propertyName": "_accessException",
      "property": "TypeError: The PaymentResponse.methodName getter can only be used on instances of PaymentResponse"
    },
    {
      "path": "window.PaymentResponse.prototype.methodName",
      "propertyName": "_get",
      "property": "function methodName() {\n    [native code]\n}"
    },
    {
      "path": "window.PaymentResponse.prototype.methodName",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.PaymentResponse.prototype.details",
      "propertyName": "_accessException",
      "property": "TypeError: The PaymentResponse.details getter can only be used on instances of PaymentResponse"
    },
    {
      "path": "window.PaymentResponse.prototype.details",
      "propertyName": "_get",
      "property": "function details() {\n    [native code]\n}"
    },
    {
      "path": "window.PaymentResponse.prototype.details",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.PaymentResponse.prototype.shippingAddress",
      "propertyName": "_accessException",
      "property": "TypeError: The PaymentResponse.shippingAddress getter can only be used on instances of PaymentResponse"
    },
    {
      "path": "window.PaymentResponse.prototype.shippingAddress",
      "propertyName": "_get",
      "property": "function shippingAddress() {\n    [native code]\n}"
    },
    {
      "path": "window.PaymentResponse.prototype.shippingAddress",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.PaymentResponse.prototype.shippingOption",
      "propertyName": "_accessException",
      "property": "TypeError: The PaymentResponse.shippingOption getter can only be used on instances of PaymentResponse"
    },
    {
      "path": "window.PaymentResponse.prototype.shippingOption",
      "propertyName": "_get",
      "property": "function shippingOption() {\n    [native code]\n}"
    },
    {
      "path": "window.PaymentResponse.prototype.shippingOption",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.PaymentResponse.prototype.payerName",
      "propertyName": "_accessException",
      "property": "TypeError: The PaymentResponse.payerName getter can only be used on instances of PaymentResponse"
    },
    {
      "path": "window.PaymentResponse.prototype.payerName",
      "propertyName": "_get",
      "property": "function payerName() {\n    [native code]\n}"
    },
    {
      "path": "window.PaymentResponse.prototype.payerName",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.PaymentResponse.prototype.payerEmail",
      "propertyName": "_accessException",
      "property": "TypeError: The PaymentResponse.payerEmail getter can only be used on instances of PaymentResponse"
    },
    {
      "path": "window.PaymentResponse.prototype.payerEmail",
      "propertyName": "_get",
      "property": "function payerEmail() {\n    [native code]\n}"
    },
    {
      "path": "window.PaymentResponse.prototype.payerEmail",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.PaymentResponse.prototype.payerPhone",
      "propertyName": "_accessException",
      "property": "TypeError: The PaymentResponse.payerPhone getter can only be used on instances of PaymentResponse"
    },
    {
      "path": "window.PaymentResponse.prototype.payerPhone",
      "propertyName": "_get",
      "property": "function payerPhone() {\n    [native code]\n}"
    },
    {
      "path": "window.PaymentResponse.prototype.payerPhone",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.PaymentResponse.prototype.onpayerdetailchange",
      "propertyName": "_accessException",
      "property": "TypeError: The PaymentResponse.onpayerdetailchange getter can only be used on instances of PaymentResponse"
    },
    {
      "path": "window.PaymentResponse.prototype.onpayerdetailchange",
      "propertyName": "_get",
      "property": "function onpayerdetailchange() {\n    [native code]\n}"
    },
    {
      "path": "window.PaymentResponse.prototype.onpayerdetailchange",
      "propertyName": "_set",
      "property": "function onpayerdetailchange() {\n    [native code]\n}"
    },
    {
      "path": "window.PaymentResponse.prototype.onpayerdetailchange",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.PaymentResponse.prototype.onpayerdetailchange",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.PaymentResponse.prototype.complete.name",
      "propertyName": "_value",
      "property": "complete"
    },
    {
      "path": "window.PaymentResponse.prototype.complete",
      "propertyName": "_function",
      "property": "function complete() {\n    [native code]\n}"
    },
    {
      "path": "window.PaymentResponse.prototype.retry.name",
      "propertyName": "_value",
      "property": "retry"
    },
    {
      "path": "window.PaymentResponse.prototype.retry",
      "propertyName": "_function",
      "property": "function retry() {\n    [native code]\n}"
    },
    {
      "path": "window.PaymentResponse.prototype.toJSON.name",
      "propertyName": "_value",
      "property": "toJSON"
    },
    {
      "path": "window.PaymentResponse.prototype.toJSON",
      "propertyName": "_function",
      "property": "function toJSON() {\n    [native code]\n}"
    },
    {
      "path": "window.PaymentResponse",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.PaymentResponse",
      "propertyName": "_function",
      "property": "function PaymentResponse() {\n    [native code]\n}"
    },
    {
      "path": "window.AuthenticatorAssertionResponse.prototype.authenticatorData",
      "propertyName": "_accessException",
      "property": "TypeError: The AuthenticatorAssertionResponse.authenticatorData getter can only be used on instances of AuthenticatorAssertionResponse"
    },
    {
      "path": "window.AuthenticatorAssertionResponse.prototype.authenticatorData",
      "propertyName": "_get",
      "property": "function authenticatorData() {\n    [native code]\n}"
    },
    {
      "path": "window.AuthenticatorAssertionResponse.prototype.authenticatorData",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.AuthenticatorAssertionResponse.prototype.signature",
      "propertyName": "_accessException",
      "property": "TypeError: The AuthenticatorAssertionResponse.signature getter can only be used on instances of AuthenticatorAssertionResponse"
    },
    {
      "path": "window.AuthenticatorAssertionResponse.prototype.signature",
      "propertyName": "_get",
      "property": "function signature() {\n    [native code]\n}"
    },
    {
      "path": "window.AuthenticatorAssertionResponse.prototype.signature",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.AuthenticatorAssertionResponse.prototype.userHandle",
      "propertyName": "_accessException",
      "property": "TypeError: The AuthenticatorAssertionResponse.userHandle getter can only be used on instances of AuthenticatorAssertionResponse"
    },
    {
      "path": "window.AuthenticatorAssertionResponse.prototype.userHandle",
      "propertyName": "_get",
      "property": "function userHandle() {\n    [native code]\n}"
    },
    {
      "path": "window.AuthenticatorAssertionResponse.prototype.userHandle",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.AuthenticatorAssertionResponse",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.AuthenticatorAssertionResponse",
      "propertyName": "_function",
      "property": "function AuthenticatorAssertionResponse() {\n    [native code]\n}"
    },
    {
      "path": "window.AuthenticatorAttestationResponse.prototype.attestationObject",
      "propertyName": "_accessException",
      "property": "TypeError: The AuthenticatorAttestationResponse.attestationObject getter can only be used on instances of AuthenticatorAttestationResponse"
    },
    {
      "path": "window.AuthenticatorAttestationResponse.prototype.attestationObject",
      "propertyName": "_get",
      "property": "function attestationObject() {\n    [native code]\n}"
    },
    {
      "path": "window.AuthenticatorAttestationResponse.prototype.attestationObject",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.AuthenticatorAttestationResponse",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.AuthenticatorAttestationResponse",
      "propertyName": "_function",
      "property": "function AuthenticatorAttestationResponse() {\n    [native code]\n}"
    },
    {
      "path": "window.AuthenticatorResponse.prototype.clientDataJSON",
      "propertyName": "_accessException",
      "property": "TypeError: The AuthenticatorResponse.clientDataJSON getter can only be used on instances of AuthenticatorResponse"
    },
    {
      "path": "window.AuthenticatorResponse.prototype.clientDataJSON",
      "propertyName": "_get",
      "property": "function clientDataJSON() {\n    [native code]\n}"
    },
    {
      "path": "window.AuthenticatorResponse.prototype.clientDataJSON",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.AuthenticatorResponse",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.AuthenticatorResponse",
      "propertyName": "_function",
      "property": "function AuthenticatorResponse() {\n    [native code]\n}"
    },
    {
      "path": "window.PublicKeyCredential.prototype.rawId",
      "propertyName": "_accessException",
      "property": "TypeError: The PublicKeyCredential.rawId getter can only be used on instances of PublicKeyCredential"
    },
    {
      "path": "window.PublicKeyCredential.prototype.rawId",
      "propertyName": "_get",
      "property": "function rawId() {\n    [native code]\n}"
    },
    {
      "path": "window.PublicKeyCredential.prototype.rawId",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.PublicKeyCredential.prototype.response",
      "propertyName": "_accessException",
      "property": "TypeError: The PublicKeyCredential.response getter can only be used on instances of PublicKeyCredential"
    },
    {
      "path": "window.PublicKeyCredential.prototype.response",
      "propertyName": "_get",
      "property": "function response() {\n    [native code]\n}"
    },
    {
      "path": "window.PublicKeyCredential.prototype.response",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.PublicKeyCredential.prototype.getClientExtensionResults.name",
      "propertyName": "_value",
      "property": "getClientExtensionResults"
    },
    {
      "path": "window.PublicKeyCredential.prototype.getClientExtensionResults",
      "propertyName": "_function",
      "property": "function getClientExtensionResults() {\n    [native code]\n}"
    },
    {
      "path": "window.PublicKeyCredential.isUserVerifyingPlatformAuthenticatorAvailable.name",
      "propertyName": "_value",
      "property": "isUserVerifyingPlatformAuthenticatorAvailable"
    },
    {
      "path": "window.PublicKeyCredential.isUserVerifyingPlatformAuthenticatorAvailable",
      "propertyName": "_function",
      "property": "function isUserVerifyingPlatformAuthenticatorAvailable() {\n    [native code]\n}"
    },
    {
      "path": "window.PublicKeyCredential",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.PublicKeyCredential",
      "propertyName": "_function",
      "property": "function PublicKeyCredential() {\n    [native code]\n}"
    },
    {
      "path": "window.WebSocket.prototype.url",
      "propertyName": "_accessException",
      "property": "TypeError: The WebSocket.url getter can only be used on instances of WebSocket"
    },
    {
      "path": "window.WebSocket.prototype.url",
      "propertyName": "_get",
      "property": "function url() {\n    [native code]\n}"
    },
    {
      "path": "window.WebSocket.prototype.url",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.WebSocket.prototype.readyState",
      "propertyName": "_accessException",
      "property": "TypeError: The WebSocket.readyState getter can only be used on instances of WebSocket"
    },
    {
      "path": "window.WebSocket.prototype.readyState",
      "propertyName": "_get",
      "property": "function readyState() {\n    [native code]\n}"
    },
    {
      "path": "window.WebSocket.prototype.readyState",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.WebSocket.prototype.bufferedAmount",
      "propertyName": "_accessException",
      "property": "TypeError: The WebSocket.bufferedAmount getter can only be used on instances of WebSocket"
    },
    {
      "path": "window.WebSocket.prototype.bufferedAmount",
      "propertyName": "_get",
      "property": "function bufferedAmount() {\n    [native code]\n}"
    },
    {
      "path": "window.WebSocket.prototype.bufferedAmount",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.WebSocket.prototype.onopen",
      "propertyName": "_accessException",
      "property": "TypeError: The WebSocket.onopen getter can only be used on instances of WebSocket"
    },
    {
      "path": "window.WebSocket.prototype.onopen",
      "propertyName": "_get",
      "property": "function onopen() {\n    [native code]\n}"
    },
    {
      "path": "window.WebSocket.prototype.onopen",
      "propertyName": "_set",
      "property": "function onopen() {\n    [native code]\n}"
    },
    {
      "path": "window.WebSocket.prototype.onopen",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.WebSocket.prototype.onopen",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.WebSocket.prototype.onmessage",
      "propertyName": "_accessException",
      "property": "TypeError: The WebSocket.onmessage getter can only be used on instances of WebSocket"
    },
    {
      "path": "window.WebSocket.prototype.onmessage",
      "propertyName": "_get",
      "property": "function onmessage() {\n    [native code]\n}"
    },
    {
      "path": "window.WebSocket.prototype.onmessage",
      "propertyName": "_set",
      "property": "function onmessage() {\n    [native code]\n}"
    },
    {
      "path": "window.WebSocket.prototype.onmessage",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.WebSocket.prototype.onmessage",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.WebSocket.prototype.onerror",
      "propertyName": "_accessException",
      "property": "TypeError: The WebSocket.onerror getter can only be used on instances of WebSocket"
    },
    {
      "path": "window.WebSocket.prototype.onerror",
      "propertyName": "_get",
      "property": "function onerror() {\n    [native code]\n}"
    },
    {
      "path": "window.WebSocket.prototype.onerror",
      "propertyName": "_set",
      "property": "function onerror() {\n    [native code]\n}"
    },
    {
      "path": "window.WebSocket.prototype.onerror",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.WebSocket.prototype.onerror",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.WebSocket.prototype.onclose",
      "propertyName": "_accessException",
      "property": "TypeError: The WebSocket.onclose getter can only be used on instances of WebSocket"
    },
    {
      "path": "window.WebSocket.prototype.onclose",
      "propertyName": "_get",
      "property": "function onclose() {\n    [native code]\n}"
    },
    {
      "path": "window.WebSocket.prototype.onclose",
      "propertyName": "_set",
      "property": "function onclose() {\n    [native code]\n}"
    },
    {
      "path": "window.WebSocket.prototype.onclose",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.WebSocket.prototype.onclose",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.WebSocket.prototype.protocol",
      "propertyName": "_accessException",
      "property": "TypeError: The WebSocket.protocol getter can only be used on instances of WebSocket"
    },
    {
      "path": "window.WebSocket.prototype.protocol",
      "propertyName": "_get",
      "property": "function protocol() {\n    [native code]\n}"
    },
    {
      "path": "window.WebSocket.prototype.protocol",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.WebSocket.prototype.extensions",
      "propertyName": "_accessException",
      "property": "TypeError: The WebSocket.extensions getter can only be used on instances of WebSocket"
    },
    {
      "path": "window.WebSocket.prototype.extensions",
      "propertyName": "_get",
      "property": "function extensions() {\n    [native code]\n}"
    },
    {
      "path": "window.WebSocket.prototype.extensions",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.WebSocket.prototype.binaryType",
      "propertyName": "_accessException",
      "property": "TypeError: The WebSocket.binaryType getter can only be used on instances of WebSocket"
    },
    {
      "path": "window.WebSocket.prototype.binaryType",
      "propertyName": "_get",
      "property": "function binaryType() {\n    [native code]\n}"
    },
    {
      "path": "window.WebSocket.prototype.binaryType",
      "propertyName": "_set",
      "property": "function binaryType() {\n    [native code]\n}"
    },
    {
      "path": "window.WebSocket.prototype.binaryType",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.WebSocket.prototype.binaryType",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.WebSocket.prototype.send",
      "propertyName": "_function",
      "property": "function send() {\n    [native code]\n}"
    },
    {
      "path": "window.WebSocket.prototype.close",
      "propertyName": "_function",
      "property": "function close() {\n    [native code]\n}"
    },
    {
      "path": "window.WebSocket",
      "propertyName": "new()",
      "property": "TypeError: Not enough arguments"
    },
    {
      "path": "window.WebSocket",
      "propertyName": "_function",
      "property": "function WebSocket() {\n    [native code]\n}"
    },
    {
      "path": "window.CustomElementRegistry.prototype.define",
      "propertyName": "_function",
      "property": "function define() {\n    [native code]\n}"
    },
    {
      "path": "window.CustomElementRegistry.prototype.get",
      "propertyName": "_function",
      "property": "function get() {\n    [native code]\n}"
    },
    {
      "path": "window.CustomElementRegistry.prototype.whenDefined",
      "propertyName": "_function",
      "property": "function whenDefined() {\n    [native code]\n}"
    },
    {
      "path": "window.CustomElementRegistry.prototype.upgrade",
      "propertyName": "_function",
      "property": "function upgrade() {\n    [native code]\n}"
    },
    {
      "path": "window.CustomElementRegistry",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.CustomElementRegistry",
      "propertyName": "_function",
      "property": "function CustomElementRegistry() {\n    [native code]\n}"
    },
    {
      "path": "window.DataTransferItem.prototype.kind",
      "propertyName": "_accessException",
      "property": "TypeError: The DataTransferItem.kind getter can only be used on instances of DataTransferItem"
    },
    {
      "path": "window.DataTransferItem.prototype.kind",
      "propertyName": "_get",
      "property": "function kind() {\n    [native code]\n}"
    },
    {
      "path": "window.DataTransferItem.prototype.kind",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.DataTransferItem.prototype.type",
      "propertyName": "_accessException",
      "property": "TypeError: The DataTransferItem.type getter can only be used on instances of DataTransferItem"
    },
    {
      "path": "window.DataTransferItem.prototype.type",
      "propertyName": "_get",
      "property": "function type() {\n    [native code]\n}"
    },
    {
      "path": "window.DataTransferItem.prototype.type",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.DataTransferItem.prototype.getAsString",
      "propertyName": "_function",
      "property": "function getAsString() {\n    [native code]\n}"
    },
    {
      "path": "window.DataTransferItem.prototype.getAsFile",
      "propertyName": "_function",
      "property": "function getAsFile() {\n    [native code]\n}"
    },
    {
      "path": "window.DataTransferItem.prototype.webkitGetAsEntry",
      "propertyName": "_function",
      "property": "function webkitGetAsEntry() {\n    [native code]\n}"
    },
    {
      "path": "window.DataTransferItem",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.DataTransferItem",
      "propertyName": "_function",
      "property": "function DataTransferItem() {\n    [native code]\n}"
    },
    {
      "path": "window.DataTransferItemList.prototype.length",
      "propertyName": "_accessException",
      "property": "TypeError: The DataTransferItemList.length getter can only be used on instances of DataTransferItemList"
    },
    {
      "path": "window.DataTransferItemList.prototype.length",
      "propertyName": "_get",
      "property": "function length() {\n    [native code]\n}"
    },
    {
      "path": "window.DataTransferItemList.prototype.length",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.DataTransferItemList.prototype.add",
      "propertyName": "_function",
      "property": "function add() {\n    [native code]\n}"
    },
    {
      "path": "window.DataTransferItemList.prototype.remove",
      "propertyName": "_function",
      "property": "function remove() {\n    [native code]\n}"
    },
    {
      "path": "window.DataTransferItemList.prototype.clear",
      "propertyName": "_function",
      "property": "function clear() {\n    [native code]\n}"
    },
    {
      "path": "window.DataTransferItemList.prototype",
      "propertyName": "Symbol.iterator",
      "property": "REF: window.DOMStringList.prototype.Symbol(Symbol.iterator)"
    },
    {
      "path": "window.DataTransferItemList",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.DataTransferItemList",
      "propertyName": "_function",
      "property": "function DataTransferItemList() {\n    [native code]\n}"
    },
    {
      "path": "window.InputEvent.prototype.inputType",
      "propertyName": "_accessException",
      "property": "TypeError: The InputEvent.inputType getter can only be used on instances of InputEvent"
    },
    {
      "path": "window.InputEvent.prototype.inputType",
      "propertyName": "_get",
      "property": "function inputType() {\n    [native code]\n}"
    },
    {
      "path": "window.InputEvent.prototype.inputType",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.InputEvent.prototype.data",
      "propertyName": "_accessException",
      "property": "TypeError: The InputEvent.data getter can only be used on instances of InputEvent"
    },
    {
      "path": "window.InputEvent.prototype.data",
      "propertyName": "_get",
      "property": "function data() {\n    [native code]\n}"
    },
    {
      "path": "window.InputEvent.prototype.data",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.InputEvent.prototype.dataTransfer",
      "propertyName": "_accessException",
      "property": "TypeError: The InputEvent.dataTransfer getter can only be used on instances of InputEvent"
    },
    {
      "path": "window.InputEvent.prototype.dataTransfer",
      "propertyName": "_get",
      "property": "function dataTransfer() {\n    [native code]\n}"
    },
    {
      "path": "window.InputEvent.prototype.dataTransfer",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.InputEvent.prototype.getTargetRanges",
      "propertyName": "_function",
      "property": "function getTargetRanges() {\n    [native code]\n}"
    },
    {
      "path": "window.InputEvent",
      "propertyName": "new()",
      "property": "TypeError: Not enough arguments"
    },
    {
      "path": "window.InputEvent",
      "propertyName": "_function",
      "property": "function InputEvent() {\n    [native code]\n}"
    },
    {
      "path": "window.PointerEvent.prototype.pointerId",
      "propertyName": "_accessException",
      "property": "TypeError: The PointerEvent.pointerId getter can only be used on instances of PointerEvent"
    },
    {
      "path": "window.PointerEvent.prototype.pointerId",
      "propertyName": "_get",
      "property": "function pointerId() {\n    [native code]\n}"
    },
    {
      "path": "window.PointerEvent.prototype.pointerId",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.PointerEvent.prototype.width",
      "propertyName": "_accessException",
      "property": "TypeError: The PointerEvent.width getter can only be used on instances of PointerEvent"
    },
    {
      "path": "window.PointerEvent.prototype.width",
      "propertyName": "_get",
      "property": "function width() {\n    [native code]\n}"
    },
    {
      "path": "window.PointerEvent.prototype.width",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.PointerEvent.prototype.height",
      "propertyName": "_accessException",
      "property": "TypeError: The PointerEvent.height getter can only be used on instances of PointerEvent"
    },
    {
      "path": "window.PointerEvent.prototype.height",
      "propertyName": "_get",
      "property": "function height() {\n    [native code]\n}"
    },
    {
      "path": "window.PointerEvent.prototype.height",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.PointerEvent.prototype.pressure",
      "propertyName": "_accessException",
      "property": "TypeError: The PointerEvent.pressure getter can only be used on instances of PointerEvent"
    },
    {
      "path": "window.PointerEvent.prototype.pressure",
      "propertyName": "_get",
      "property": "function pressure() {\n    [native code]\n}"
    },
    {
      "path": "window.PointerEvent.prototype.pressure",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.PointerEvent.prototype.tangentialPressure",
      "propertyName": "_accessException",
      "property": "TypeError: The PointerEvent.tangentialPressure getter can only be used on instances of PointerEvent"
    },
    {
      "path": "window.PointerEvent.prototype.tangentialPressure",
      "propertyName": "_get",
      "property": "function tangentialPressure() {\n    [native code]\n}"
    },
    {
      "path": "window.PointerEvent.prototype.tangentialPressure",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.PointerEvent.prototype.tiltX",
      "propertyName": "_accessException",
      "property": "TypeError: The PointerEvent.tiltX getter can only be used on instances of PointerEvent"
    },
    {
      "path": "window.PointerEvent.prototype.tiltX",
      "propertyName": "_get",
      "property": "function tiltX() {\n    [native code]\n}"
    },
    {
      "path": "window.PointerEvent.prototype.tiltX",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.PointerEvent.prototype.tiltY",
      "propertyName": "_accessException",
      "property": "TypeError: The PointerEvent.tiltY getter can only be used on instances of PointerEvent"
    },
    {
      "path": "window.PointerEvent.prototype.tiltY",
      "propertyName": "_get",
      "property": "function tiltY() {\n    [native code]\n}"
    },
    {
      "path": "window.PointerEvent.prototype.tiltY",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.PointerEvent.prototype.twist",
      "propertyName": "_accessException",
      "property": "TypeError: The PointerEvent.twist getter can only be used on instances of PointerEvent"
    },
    {
      "path": "window.PointerEvent.prototype.twist",
      "propertyName": "_get",
      "property": "function twist() {\n    [native code]\n}"
    },
    {
      "path": "window.PointerEvent.prototype.twist",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.PointerEvent.prototype.pointerType",
      "propertyName": "_accessException",
      "property": "TypeError: The PointerEvent.pointerType getter can only be used on instances of PointerEvent"
    },
    {
      "path": "window.PointerEvent.prototype.pointerType",
      "propertyName": "_get",
      "property": "function pointerType() {\n    [native code]\n}"
    },
    {
      "path": "window.PointerEvent.prototype.pointerType",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.PointerEvent.prototype.isPrimary",
      "propertyName": "_accessException",
      "property": "TypeError: The PointerEvent.isPrimary getter can only be used on instances of PointerEvent"
    },
    {
      "path": "window.PointerEvent.prototype.isPrimary",
      "propertyName": "_get",
      "property": "function isPrimary() {\n    [native code]\n}"
    },
    {
      "path": "window.PointerEvent.prototype.isPrimary",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.PointerEvent",
      "propertyName": "new()",
      "property": "TypeError: Not enough arguments"
    },
    {
      "path": "window.PointerEvent",
      "propertyName": "_function",
      "property": "function PointerEvent() {\n    [native code]\n}"
    },
    {
      "path": "window.ShadowRoot.prototype.mode",
      "propertyName": "_accessException",
      "property": "TypeError: The ShadowRoot.mode getter can only be used on instances of ShadowRoot"
    },
    {
      "path": "window.ShadowRoot.prototype.mode",
      "propertyName": "_get",
      "property": "function mode() {\n    [native code]\n}"
    },
    {
      "path": "window.ShadowRoot.prototype.mode",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.ShadowRoot.prototype.host",
      "propertyName": "_accessException",
      "property": "TypeError: The ShadowRoot.host getter can only be used on instances of ShadowRoot"
    },
    {
      "path": "window.ShadowRoot.prototype.host",
      "propertyName": "_get",
      "property": "function host() {\n    [native code]\n}"
    },
    {
      "path": "window.ShadowRoot.prototype.host",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.ShadowRoot.prototype.innerHTML",
      "propertyName": "_accessException",
      "property": "TypeError: The ShadowRoot.innerHTML getter can only be used on instances of ShadowRoot"
    },
    {
      "path": "window.ShadowRoot.prototype.innerHTML",
      "propertyName": "_get",
      "property": "function innerHTML() {\n    [native code]\n}"
    },
    {
      "path": "window.ShadowRoot.prototype.innerHTML",
      "propertyName": "_set",
      "property": "function innerHTML() {\n    [native code]\n}"
    },
    {
      "path": "window.ShadowRoot.prototype.innerHTML",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.ShadowRoot.prototype.innerHTML",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.ShadowRoot.prototype.activeElement",
      "propertyName": "_accessException",
      "property": "TypeError: The ShadowRoot.activeElement getter can only be used on instances of ShadowRoot"
    },
    {
      "path": "window.ShadowRoot.prototype.activeElement",
      "propertyName": "_get",
      "property": "function activeElement() {\n    [native code]\n}"
    },
    {
      "path": "window.ShadowRoot.prototype.activeElement",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.ShadowRoot.prototype.styleSheets",
      "propertyName": "_accessException",
      "property": "TypeError: The ShadowRoot.styleSheets getter can only be used on instances of ShadowRoot"
    },
    {
      "path": "window.ShadowRoot.prototype.styleSheets",
      "propertyName": "_get",
      "property": "function styleSheets() {\n    [native code]\n}"
    },
    {
      "path": "window.ShadowRoot.prototype.styleSheets",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.ShadowRoot.prototype.pointerLockElement",
      "propertyName": "_accessException",
      "property": "TypeError: The ShadowRoot.pointerLockElement getter can only be used on instances of ShadowRoot"
    },
    {
      "path": "window.ShadowRoot.prototype.pointerLockElement",
      "propertyName": "_get",
      "property": "function pointerLockElement() {\n    [native code]\n}"
    },
    {
      "path": "window.ShadowRoot.prototype.pointerLockElement",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.ShadowRoot.prototype.elementFromPoint",
      "propertyName": "_function",
      "property": "function elementFromPoint() {\n    [native code]\n}"
    },
    {
      "path": "window.ShadowRoot.prototype.elementsFromPoint",
      "propertyName": "_function",
      "property": "function elementsFromPoint() {\n    [native code]\n}"
    },
    {
      "path": "window.ShadowRoot",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.ShadowRoot",
      "propertyName": "_function",
      "property": "function ShadowRoot() {\n    [native code]\n}"
    },
    {
      "path": "window.StaticRange.prototype.startOffset",
      "propertyName": "_accessException",
      "property": "TypeError: The StaticRange.startOffset getter can only be used on instances of StaticRange"
    },
    {
      "path": "window.StaticRange.prototype.startOffset",
      "propertyName": "_get",
      "property": "function startOffset() {\n    [native code]\n}"
    },
    {
      "path": "window.StaticRange.prototype.startOffset",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.StaticRange.prototype.endOffset",
      "propertyName": "_accessException",
      "property": "TypeError: The StaticRange.endOffset getter can only be used on instances of StaticRange"
    },
    {
      "path": "window.StaticRange.prototype.endOffset",
      "propertyName": "_get",
      "property": "function endOffset() {\n    [native code]\n}"
    },
    {
      "path": "window.StaticRange.prototype.endOffset",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.StaticRange.prototype.startContainer",
      "propertyName": "_accessException",
      "property": "TypeError: The StaticRange.startContainer getter can only be used on instances of StaticRange"
    },
    {
      "path": "window.StaticRange.prototype.startContainer",
      "propertyName": "_get",
      "property": "function startContainer() {\n    [native code]\n}"
    },
    {
      "path": "window.StaticRange.prototype.startContainer",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.StaticRange.prototype.endContainer",
      "propertyName": "_accessException",
      "property": "TypeError: The StaticRange.endContainer getter can only be used on instances of StaticRange"
    },
    {
      "path": "window.StaticRange.prototype.endContainer",
      "propertyName": "_get",
      "property": "function endContainer() {\n    [native code]\n}"
    },
    {
      "path": "window.StaticRange.prototype.endContainer",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.StaticRange.prototype.collapsed",
      "propertyName": "_accessException",
      "property": "TypeError: The StaticRange.collapsed getter can only be used on instances of StaticRange"
    },
    {
      "path": "window.StaticRange.prototype.collapsed",
      "propertyName": "_get",
      "property": "function collapsed() {\n    [native code]\n}"
    },
    {
      "path": "window.StaticRange.prototype.collapsed",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.StaticRange",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.StaticRange",
      "propertyName": "_function",
      "property": "function StaticRange() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLDataListElement.prototype.options",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLDataListElement.options getter can only be used on instances of HTMLDataListElement"
    },
    {
      "path": "window.HTMLDataListElement.prototype.options",
      "propertyName": "_get",
      "property": "function options() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLDataListElement.prototype.options",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLDataListElement",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.HTMLDataListElement",
      "propertyName": "_function",
      "property": "function HTMLDataListElement() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLSlotElement.prototype.name",
      "propertyName": "_accessException",
      "property": "TypeError: The HTMLSlotElement.name getter can only be used on instances of HTMLSlotElement"
    },
    {
      "path": "window.HTMLSlotElement.prototype.name",
      "propertyName": "_get",
      "property": "function name() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLSlotElement.prototype.name",
      "propertyName": "_set",
      "property": "function name() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLSlotElement.prototype.name",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLSlotElement.prototype.name",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLSlotElement.prototype.assignedNodes",
      "propertyName": "_function",
      "property": "function assignedNodes() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLSlotElement.prototype.assignedElements",
      "propertyName": "_function",
      "property": "function assignedElements() {\n    [native code]\n}"
    },
    {
      "path": "window.HTMLSlotElement",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.HTMLSlotElement",
      "propertyName": "_function",
      "property": "function HTMLSlotElement() {\n    [native code]\n}"
    },
    {
      "path": "window.MediaEncryptedEvent.prototype.initDataType",
      "propertyName": "_accessException",
      "property": "TypeError: The MediaEncryptedEvent.initDataType getter can only be used on instances of MediaEncryptedEvent"
    },
    {
      "path": "window.MediaEncryptedEvent.prototype.initDataType",
      "propertyName": "_get",
      "property": "function initDataType() {\n    [native code]\n}"
    },
    {
      "path": "window.MediaEncryptedEvent.prototype.initDataType",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.MediaEncryptedEvent.prototype.initData",
      "propertyName": "_accessException",
      "property": "TypeError: The MediaEncryptedEvent.initData getter can only be used on instances of MediaEncryptedEvent"
    },
    {
      "path": "window.MediaEncryptedEvent.prototype.initData",
      "propertyName": "_get",
      "property": "function initData() {\n    [native code]\n}"
    },
    {
      "path": "window.MediaEncryptedEvent.prototype.initData",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.MediaEncryptedEvent",
      "propertyName": "new()",
      "property": "TypeError: Not enough arguments"
    },
    {
      "path": "window.MediaEncryptedEvent",
      "propertyName": "_function",
      "property": "function MediaEncryptedEvent() {\n    [native code]\n}"
    },
    {
      "path": "window.IntersectionObserver.prototype.root",
      "propertyName": "_accessException",
      "property": "TypeError: The IntersectionObserver.root getter can only be used on instances of IntersectionObserver"
    },
    {
      "path": "window.IntersectionObserver.prototype.root",
      "propertyName": "_get",
      "property": "function root() {\n    [native code]\n}"
    },
    {
      "path": "window.IntersectionObserver.prototype.root",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.IntersectionObserver.prototype.rootMargin",
      "propertyName": "_accessException",
      "property": "TypeError: The IntersectionObserver.rootMargin getter can only be used on instances of IntersectionObserver"
    },
    {
      "path": "window.IntersectionObserver.prototype.rootMargin",
      "propertyName": "_get",
      "property": "function rootMargin() {\n    [native code]\n}"
    },
    {
      "path": "window.IntersectionObserver.prototype.rootMargin",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.IntersectionObserver.prototype.thresholds",
      "propertyName": "_accessException",
      "property": "TypeError: The IntersectionObserver.thresholds getter can only be used on instances of IntersectionObserver"
    },
    {
      "path": "window.IntersectionObserver.prototype.thresholds",
      "propertyName": "_get",
      "property": "function thresholds() {\n    [native code]\n}"
    },
    {
      "path": "window.IntersectionObserver.prototype.thresholds",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.IntersectionObserver.prototype.observe",
      "propertyName": "_function",
      "property": "function observe() {\n    [native code]\n}"
    },
    {
      "path": "window.IntersectionObserver.prototype.unobserve",
      "propertyName": "_function",
      "property": "function unobserve() {\n    [native code]\n}"
    },
    {
      "path": "window.IntersectionObserver.prototype.disconnect",
      "propertyName": "_function",
      "property": "function disconnect() {\n    [native code]\n}"
    },
    {
      "path": "window.IntersectionObserver.prototype.takeRecords",
      "propertyName": "_function",
      "property": "function takeRecords() {\n    [native code]\n}"
    },
    {
      "path": "window.IntersectionObserver",
      "propertyName": "new()",
      "property": "TypeError: Not enough arguments"
    },
    {
      "path": "window.IntersectionObserver",
      "propertyName": "_function",
      "property": "function IntersectionObserver() {\n    [native code]\n}"
    },
    {
      "path": "window.IntersectionObserverEntry.prototype.time",
      "propertyName": "_accessException",
      "property": "TypeError: The IntersectionObserverEntry.time getter can only be used on instances of IntersectionObserverEntry"
    },
    {
      "path": "window.IntersectionObserverEntry.prototype.time",
      "propertyName": "_get",
      "property": "function time() {\n    [native code]\n}"
    },
    {
      "path": "window.IntersectionObserverEntry.prototype.time",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.IntersectionObserverEntry.prototype.rootBounds",
      "propertyName": "_accessException",
      "property": "TypeError: The IntersectionObserverEntry.rootBounds getter can only be used on instances of IntersectionObserverEntry"
    },
    {
      "path": "window.IntersectionObserverEntry.prototype.rootBounds",
      "propertyName": "_get",
      "property": "function rootBounds() {\n    [native code]\n}"
    },
    {
      "path": "window.IntersectionObserverEntry.prototype.rootBounds",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.IntersectionObserverEntry.prototype.boundingClientRect",
      "propertyName": "_accessException",
      "property": "TypeError: The IntersectionObserverEntry.boundingClientRect getter can only be used on instances of IntersectionObserverEntry"
    },
    {
      "path": "window.IntersectionObserverEntry.prototype.boundingClientRect",
      "propertyName": "_get",
      "property": "function boundingClientRect() {\n    [native code]\n}"
    },
    {
      "path": "window.IntersectionObserverEntry.prototype.boundingClientRect",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.IntersectionObserverEntry.prototype.intersectionRect",
      "propertyName": "_accessException",
      "property": "TypeError: The IntersectionObserverEntry.intersectionRect getter can only be used on instances of IntersectionObserverEntry"
    },
    {
      "path": "window.IntersectionObserverEntry.prototype.intersectionRect",
      "propertyName": "_get",
      "property": "function intersectionRect() {\n    [native code]\n}"
    },
    {
      "path": "window.IntersectionObserverEntry.prototype.intersectionRect",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.IntersectionObserverEntry.prototype.isIntersecting",
      "propertyName": "_accessException",
      "property": "TypeError: The IntersectionObserverEntry.isIntersecting getter can only be used on instances of IntersectionObserverEntry"
    },
    {
      "path": "window.IntersectionObserverEntry.prototype.isIntersecting",
      "propertyName": "_get",
      "property": "function isIntersecting() {\n    [native code]\n}"
    },
    {
      "path": "window.IntersectionObserverEntry.prototype.isIntersecting",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.IntersectionObserverEntry.prototype.intersectionRatio",
      "propertyName": "_accessException",
      "property": "TypeError: The IntersectionObserverEntry.intersectionRatio getter can only be used on instances of IntersectionObserverEntry"
    },
    {
      "path": "window.IntersectionObserverEntry.prototype.intersectionRatio",
      "propertyName": "_get",
      "property": "function intersectionRatio() {\n    [native code]\n}"
    },
    {
      "path": "window.IntersectionObserverEntry.prototype.intersectionRatio",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.IntersectionObserverEntry.prototype.target",
      "propertyName": "_accessException",
      "property": "TypeError: The IntersectionObserverEntry.target getter can only be used on instances of IntersectionObserverEntry"
    },
    {
      "path": "window.IntersectionObserverEntry.prototype.target",
      "propertyName": "_get",
      "property": "function target() {\n    [native code]\n}"
    },
    {
      "path": "window.IntersectionObserverEntry.prototype.target",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.IntersectionObserverEntry",
      "propertyName": "new()",
      "property": "TypeError: Not enough arguments"
    },
    {
      "path": "window.IntersectionObserverEntry",
      "propertyName": "_function",
      "property": "function IntersectionObserverEntry() {\n    [native code]\n}"
    },
    {
      "path": "window.PerformanceEntry.prototype.name",
      "propertyName": "_accessException",
      "property": "TypeError: The PerformanceEntry.name getter can only be used on instances of PerformanceEntry"
    },
    {
      "path": "window.PerformanceEntry.prototype.name",
      "propertyName": "_get",
      "property": "function name() {\n    [native code]\n}"
    },
    {
      "path": "window.PerformanceEntry.prototype.name",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.PerformanceEntry.prototype.entryType",
      "propertyName": "_accessException",
      "property": "TypeError: The PerformanceEntry.entryType getter can only be used on instances of PerformanceEntry"
    },
    {
      "path": "window.PerformanceEntry.prototype.entryType",
      "propertyName": "_get",
      "property": "function entryType() {\n    [native code]\n}"
    },
    {
      "path": "window.PerformanceEntry.prototype.entryType",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.PerformanceEntry.prototype.startTime",
      "propertyName": "_accessException",
      "property": "TypeError: The PerformanceEntry.startTime getter can only be used on instances of PerformanceEntry"
    },
    {
      "path": "window.PerformanceEntry.prototype.startTime",
      "propertyName": "_get",
      "property": "function startTime() {\n    [native code]\n}"
    },
    {
      "path": "window.PerformanceEntry.prototype.startTime",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.PerformanceEntry.prototype.duration",
      "propertyName": "_accessException",
      "property": "TypeError: The PerformanceEntry.duration getter can only be used on instances of PerformanceEntry"
    },
    {
      "path": "window.PerformanceEntry.prototype.duration",
      "propertyName": "_get",
      "property": "function duration() {\n    [native code]\n}"
    },
    {
      "path": "window.PerformanceEntry.prototype.duration",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.PerformanceEntry.prototype.toJSON",
      "propertyName": "_function",
      "property": "function toJSON() {\n    [native code]\n}"
    },
    {
      "path": "window.PerformanceEntry",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.PerformanceEntry",
      "propertyName": "_function",
      "property": "function PerformanceEntry() {\n    [native code]\n}"
    },
    {
      "path": "window.PerformanceMark",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.PerformanceMark",
      "propertyName": "_function",
      "property": "function PerformanceMark() {\n    [native code]\n}"
    },
    {
      "path": "window.PerformanceMeasure",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.PerformanceMeasure",
      "propertyName": "_function",
      "property": "function PerformanceMeasure() {\n    [native code]\n}"
    },
    {
      "path": "window.PerformanceObserver.prototype.observe",
      "propertyName": "_function",
      "property": "function observe() {\n    [native code]\n}"
    },
    {
      "path": "window.PerformanceObserver.prototype.disconnect",
      "propertyName": "_function",
      "property": "function disconnect() {\n    [native code]\n}"
    },
    {
      "path": "window.PerformanceObserver.supportedEntryTypes.0",
      "propertyName": "_value",
      "property": "mark"
    },
    {
      "path": "window.PerformanceObserver.supportedEntryTypes.1",
      "propertyName": "_value",
      "property": "measure"
    },
    {
      "path": "window.PerformanceObserver.supportedEntryTypes.2",
      "propertyName": "_value",
      "property": "resource"
    },
    {
      "path": "window.PerformanceObserver.supportedEntryTypes.length",
      "propertyName": "_value",
      "property": 3
    },
    {
      "path": "window.PerformanceObserver",
      "propertyName": "new()",
      "property": "TypeError: Not enough arguments"
    },
    {
      "path": "window.PerformanceObserver",
      "propertyName": "_function",
      "property": "function PerformanceObserver() {\n    [native code]\n}"
    },
    {
      "path": "window.PerformanceObserverEntryList.prototype.getEntries",
      "propertyName": "_function",
      "property": "function getEntries() {\n    [native code]\n}"
    },
    {
      "path": "window.PerformanceObserverEntryList.prototype.getEntriesByType",
      "propertyName": "_function",
      "property": "function getEntriesByType() {\n    [native code]\n}"
    },
    {
      "path": "window.PerformanceObserverEntryList.prototype.getEntriesByName",
      "propertyName": "_function",
      "property": "function getEntriesByName() {\n    [native code]\n}"
    },
    {
      "path": "window.PerformanceObserverEntryList",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.PerformanceObserverEntryList",
      "propertyName": "_function",
      "property": "function PerformanceObserverEntryList() {\n    [native code]\n}"
    },
    {
      "path": "window.PerformanceResourceTiming.prototype.initiatorType",
      "propertyName": "_accessException",
      "property": "TypeError: The PerformanceResourceTiming.initiatorType getter can only be used on instances of PerformanceResourceTiming"
    },
    {
      "path": "window.PerformanceResourceTiming.prototype.initiatorType",
      "propertyName": "_get",
      "property": "function initiatorType() {\n    [native code]\n}"
    },
    {
      "path": "window.PerformanceResourceTiming.prototype.initiatorType",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.PerformanceResourceTiming.prototype.nextHopProtocol",
      "propertyName": "_accessException",
      "property": "TypeError: The PerformanceResourceTiming.nextHopProtocol getter can only be used on instances of PerformanceResourceTiming"
    },
    {
      "path": "window.PerformanceResourceTiming.prototype.nextHopProtocol",
      "propertyName": "_get",
      "property": "function nextHopProtocol() {\n    [native code]\n}"
    },
    {
      "path": "window.PerformanceResourceTiming.prototype.nextHopProtocol",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.PerformanceResourceTiming.prototype.workerStart",
      "propertyName": "_accessException",
      "property": "TypeError: The PerformanceResourceTiming.workerStart getter can only be used on instances of PerformanceResourceTiming"
    },
    {
      "path": "window.PerformanceResourceTiming.prototype.workerStart",
      "propertyName": "_get",
      "property": "function workerStart() {\n    [native code]\n}"
    },
    {
      "path": "window.PerformanceResourceTiming.prototype.workerStart",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.PerformanceResourceTiming.prototype.redirectStart",
      "propertyName": "_accessException",
      "property": "TypeError: The PerformanceResourceTiming.redirectStart getter can only be used on instances of PerformanceResourceTiming"
    },
    {
      "path": "window.PerformanceResourceTiming.prototype.redirectStart",
      "propertyName": "_get",
      "property": "function redirectStart() {\n    [native code]\n}"
    },
    {
      "path": "window.PerformanceResourceTiming.prototype.redirectStart",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.PerformanceResourceTiming.prototype.redirectEnd",
      "propertyName": "_accessException",
      "property": "TypeError: The PerformanceResourceTiming.redirectEnd getter can only be used on instances of PerformanceResourceTiming"
    },
    {
      "path": "window.PerformanceResourceTiming.prototype.redirectEnd",
      "propertyName": "_get",
      "property": "function redirectEnd() {\n    [native code]\n}"
    },
    {
      "path": "window.PerformanceResourceTiming.prototype.redirectEnd",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.PerformanceResourceTiming.prototype.fetchStart",
      "propertyName": "_accessException",
      "property": "TypeError: The PerformanceResourceTiming.fetchStart getter can only be used on instances of PerformanceResourceTiming"
    },
    {
      "path": "window.PerformanceResourceTiming.prototype.fetchStart",
      "propertyName": "_get",
      "property": "function fetchStart() {\n    [native code]\n}"
    },
    {
      "path": "window.PerformanceResourceTiming.prototype.fetchStart",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.PerformanceResourceTiming.prototype.domainLookupStart",
      "propertyName": "_accessException",
      "property": "TypeError: The PerformanceResourceTiming.domainLookupStart getter can only be used on instances of PerformanceResourceTiming"
    },
    {
      "path": "window.PerformanceResourceTiming.prototype.domainLookupStart",
      "propertyName": "_get",
      "property": "function domainLookupStart() {\n    [native code]\n}"
    },
    {
      "path": "window.PerformanceResourceTiming.prototype.domainLookupStart",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.PerformanceResourceTiming.prototype.domainLookupEnd",
      "propertyName": "_accessException",
      "property": "TypeError: The PerformanceResourceTiming.domainLookupEnd getter can only be used on instances of PerformanceResourceTiming"
    },
    {
      "path": "window.PerformanceResourceTiming.prototype.domainLookupEnd",
      "propertyName": "_get",
      "property": "function domainLookupEnd() {\n    [native code]\n}"
    },
    {
      "path": "window.PerformanceResourceTiming.prototype.domainLookupEnd",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.PerformanceResourceTiming.prototype.connectStart",
      "propertyName": "_accessException",
      "property": "TypeError: The PerformanceResourceTiming.connectStart getter can only be used on instances of PerformanceResourceTiming"
    },
    {
      "path": "window.PerformanceResourceTiming.prototype.connectStart",
      "propertyName": "_get",
      "property": "function connectStart() {\n    [native code]\n}"
    },
    {
      "path": "window.PerformanceResourceTiming.prototype.connectStart",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.PerformanceResourceTiming.prototype.connectEnd",
      "propertyName": "_accessException",
      "property": "TypeError: The PerformanceResourceTiming.connectEnd getter can only be used on instances of PerformanceResourceTiming"
    },
    {
      "path": "window.PerformanceResourceTiming.prototype.connectEnd",
      "propertyName": "_get",
      "property": "function connectEnd() {\n    [native code]\n}"
    },
    {
      "path": "window.PerformanceResourceTiming.prototype.connectEnd",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.PerformanceResourceTiming.prototype.secureConnectionStart",
      "propertyName": "_accessException",
      "property": "TypeError: The PerformanceResourceTiming.secureConnectionStart getter can only be used on instances of PerformanceResourceTiming"
    },
    {
      "path": "window.PerformanceResourceTiming.prototype.secureConnectionStart",
      "propertyName": "_get",
      "property": "function secureConnectionStart() {\n    [native code]\n}"
    },
    {
      "path": "window.PerformanceResourceTiming.prototype.secureConnectionStart",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.PerformanceResourceTiming.prototype.requestStart",
      "propertyName": "_accessException",
      "property": "TypeError: The PerformanceResourceTiming.requestStart getter can only be used on instances of PerformanceResourceTiming"
    },
    {
      "path": "window.PerformanceResourceTiming.prototype.requestStart",
      "propertyName": "_get",
      "property": "function requestStart() {\n    [native code]\n}"
    },
    {
      "path": "window.PerformanceResourceTiming.prototype.requestStart",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.PerformanceResourceTiming.prototype.responseStart",
      "propertyName": "_accessException",
      "property": "TypeError: The PerformanceResourceTiming.responseStart getter can only be used on instances of PerformanceResourceTiming"
    },
    {
      "path": "window.PerformanceResourceTiming.prototype.responseStart",
      "propertyName": "_get",
      "property": "function responseStart() {\n    [native code]\n}"
    },
    {
      "path": "window.PerformanceResourceTiming.prototype.responseStart",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.PerformanceResourceTiming.prototype.responseEnd",
      "propertyName": "_accessException",
      "property": "TypeError: The PerformanceResourceTiming.responseEnd getter can only be used on instances of PerformanceResourceTiming"
    },
    {
      "path": "window.PerformanceResourceTiming.prototype.responseEnd",
      "propertyName": "_get",
      "property": "function responseEnd() {\n    [native code]\n}"
    },
    {
      "path": "window.PerformanceResourceTiming.prototype.responseEnd",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.PerformanceResourceTiming.prototype.toJSON",
      "propertyName": "_function",
      "property": "function toJSON() {\n    [native code]\n}"
    },
    {
      "path": "window.PerformanceResourceTiming",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.PerformanceResourceTiming",
      "propertyName": "_function",
      "property": "function PerformanceResourceTiming() {\n    [native code]\n}"
    },
    {
      "path": "window.VisualViewport.prototype.offsetLeft",
      "propertyName": "_accessException",
      "property": "TypeError: The VisualViewport.offsetLeft getter can only be used on instances of VisualViewport"
    },
    {
      "path": "window.VisualViewport.prototype.offsetLeft",
      "propertyName": "_get",
      "property": "function offsetLeft() {\n    [native code]\n}"
    },
    {
      "path": "window.VisualViewport.prototype.offsetLeft",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.VisualViewport.prototype.offsetTop",
      "propertyName": "_accessException",
      "property": "TypeError: The VisualViewport.offsetTop getter can only be used on instances of VisualViewport"
    },
    {
      "path": "window.VisualViewport.prototype.offsetTop",
      "propertyName": "_get",
      "property": "function offsetTop() {\n    [native code]\n}"
    },
    {
      "path": "window.VisualViewport.prototype.offsetTop",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.VisualViewport.prototype.pageLeft",
      "propertyName": "_accessException",
      "property": "TypeError: The VisualViewport.pageLeft getter can only be used on instances of VisualViewport"
    },
    {
      "path": "window.VisualViewport.prototype.pageLeft",
      "propertyName": "_get",
      "property": "function pageLeft() {\n    [native code]\n}"
    },
    {
      "path": "window.VisualViewport.prototype.pageLeft",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.VisualViewport.prototype.pageTop",
      "propertyName": "_accessException",
      "property": "TypeError: The VisualViewport.pageTop getter can only be used on instances of VisualViewport"
    },
    {
      "path": "window.VisualViewport.prototype.pageTop",
      "propertyName": "_get",
      "property": "function pageTop() {\n    [native code]\n}"
    },
    {
      "path": "window.VisualViewport.prototype.pageTop",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.VisualViewport.prototype.width",
      "propertyName": "_accessException",
      "property": "TypeError: The VisualViewport.width getter can only be used on instances of VisualViewport"
    },
    {
      "path": "window.VisualViewport.prototype.width",
      "propertyName": "_get",
      "property": "function width() {\n    [native code]\n}"
    },
    {
      "path": "window.VisualViewport.prototype.width",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.VisualViewport.prototype.height",
      "propertyName": "_accessException",
      "property": "TypeError: The VisualViewport.height getter can only be used on instances of VisualViewport"
    },
    {
      "path": "window.VisualViewport.prototype.height",
      "propertyName": "_get",
      "property": "function height() {\n    [native code]\n}"
    },
    {
      "path": "window.VisualViewport.prototype.height",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.VisualViewport.prototype.scale",
      "propertyName": "_accessException",
      "property": "TypeError: The VisualViewport.scale getter can only be used on instances of VisualViewport"
    },
    {
      "path": "window.VisualViewport.prototype.scale",
      "propertyName": "_get",
      "property": "function scale() {\n    [native code]\n}"
    },
    {
      "path": "window.VisualViewport.prototype.scale",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.VisualViewport.prototype.onresize",
      "propertyName": "_accessException",
      "property": "TypeError: The VisualViewport.onresize getter can only be used on instances of VisualViewport"
    },
    {
      "path": "window.VisualViewport.prototype.onresize",
      "propertyName": "_get",
      "property": "function onresize() {\n    [native code]\n}"
    },
    {
      "path": "window.VisualViewport.prototype.onresize",
      "propertyName": "_set",
      "property": "function onresize() {\n    [native code]\n}"
    },
    {
      "path": "window.VisualViewport.prototype.onresize",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.VisualViewport.prototype.onresize",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.VisualViewport.prototype.onscroll",
      "propertyName": "_accessException",
      "property": "TypeError: The VisualViewport.onscroll getter can only be used on instances of VisualViewport"
    },
    {
      "path": "window.VisualViewport.prototype.onscroll",
      "propertyName": "_get",
      "property": "function onscroll() {\n    [native code]\n}"
    },
    {
      "path": "window.VisualViewport.prototype.onscroll",
      "propertyName": "_set",
      "property": "function onscroll() {\n    [native code]\n}"
    },
    {
      "path": "window.VisualViewport.prototype.onscroll",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.VisualViewport.prototype.onscroll",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.VisualViewport",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.VisualViewport",
      "propertyName": "_function",
      "property": "function VisualViewport() {\n    [native code]\n}"
    },
    {
      "path": "window.ServiceWorker.prototype.scriptURL",
      "propertyName": "_accessException",
      "property": "TypeError: The ServiceWorker.scriptURL getter can only be used on instances of ServiceWorker"
    },
    {
      "path": "window.ServiceWorker.prototype.scriptURL",
      "propertyName": "_get",
      "property": "function scriptURL() {\n    [native code]\n}"
    },
    {
      "path": "window.ServiceWorker.prototype.scriptURL",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.ServiceWorker.prototype.state",
      "propertyName": "_accessException",
      "property": "TypeError: The ServiceWorker.state getter can only be used on instances of ServiceWorker"
    },
    {
      "path": "window.ServiceWorker.prototype.state",
      "propertyName": "_get",
      "property": "function state() {\n    [native code]\n}"
    },
    {
      "path": "window.ServiceWorker.prototype.state",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.ServiceWorker.prototype.onstatechange",
      "propertyName": "_accessException",
      "property": "TypeError: The ServiceWorker.onstatechange getter can only be used on instances of ServiceWorker"
    },
    {
      "path": "window.ServiceWorker.prototype.onstatechange",
      "propertyName": "_get",
      "property": "function onstatechange() {\n    [native code]\n}"
    },
    {
      "path": "window.ServiceWorker.prototype.onstatechange",
      "propertyName": "_set",
      "property": "function onstatechange() {\n    [native code]\n}"
    },
    {
      "path": "window.ServiceWorker.prototype.onstatechange",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.ServiceWorker.prototype.onstatechange",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.ServiceWorker.prototype.onerror",
      "propertyName": "_accessException",
      "property": "TypeError: The ServiceWorker.onerror getter can only be used on instances of ServiceWorker"
    },
    {
      "path": "window.ServiceWorker.prototype.onerror",
      "propertyName": "_get",
      "property": "function onerror() {\n    [native code]\n}"
    },
    {
      "path": "window.ServiceWorker.prototype.onerror",
      "propertyName": "_set",
      "property": "function onerror() {\n    [native code]\n}"
    },
    {
      "path": "window.ServiceWorker.prototype.onerror",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.ServiceWorker.prototype.onerror",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.ServiceWorker.prototype.postMessage.name",
      "propertyName": "_value",
      "property": "postMessage"
    },
    {
      "path": "window.ServiceWorker.prototype.postMessage",
      "propertyName": "_function",
      "property": "function postMessage() {\n    [native code]\n}"
    },
    {
      "path": "window.ServiceWorker",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.ServiceWorker",
      "propertyName": "_function",
      "property": "function ServiceWorker() {\n    [native code]\n}"
    },
    {
      "path": "window.ServiceWorkerContainer.prototype.controller",
      "propertyName": "_accessException",
      "property": "TypeError: The ServiceWorkerContainer.controller getter can only be used on instances of ServiceWorkerContainer"
    },
    {
      "path": "window.ServiceWorkerContainer.prototype.controller",
      "propertyName": "_get",
      "property": "function controller() {\n    [native code]\n}"
    },
    {
      "path": "window.ServiceWorkerContainer.prototype.controller",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.ServiceWorkerContainer.prototype.ready",
      "propertyName": "_accessException",
      "property": "TypeError: The ServiceWorkerContainer.ready getter can only be used on instances of ServiceWorkerContainer"
    },
    {
      "path": "window.ServiceWorkerContainer.prototype.ready",
      "propertyName": "_get",
      "property": "function ready() {\n    [native code]\n}"
    },
    {
      "path": "window.ServiceWorkerContainer.prototype.ready",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.ServiceWorkerContainer.prototype.oncontrollerchange",
      "propertyName": "_accessException",
      "property": "TypeError: The ServiceWorkerContainer.oncontrollerchange getter can only be used on instances of ServiceWorkerContainer"
    },
    {
      "path": "window.ServiceWorkerContainer.prototype.oncontrollerchange",
      "propertyName": "_get",
      "property": "function oncontrollerchange() {\n    [native code]\n}"
    },
    {
      "path": "window.ServiceWorkerContainer.prototype.oncontrollerchange",
      "propertyName": "_set",
      "property": "function oncontrollerchange() {\n    [native code]\n}"
    },
    {
      "path": "window.ServiceWorkerContainer.prototype.oncontrollerchange",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.ServiceWorkerContainer.prototype.oncontrollerchange",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.ServiceWorkerContainer.prototype.onmessage",
      "propertyName": "_accessException",
      "property": "TypeError: The ServiceWorkerContainer.onmessage getter can only be used on instances of ServiceWorkerContainer"
    },
    {
      "path": "window.ServiceWorkerContainer.prototype.onmessage",
      "propertyName": "_get",
      "property": "function onmessage() {\n    [native code]\n}"
    },
    {
      "path": "window.ServiceWorkerContainer.prototype.onmessage",
      "propertyName": "_set",
      "property": "function onmessage() {\n    [native code]\n}"
    },
    {
      "path": "window.ServiceWorkerContainer.prototype.onmessage",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.ServiceWorkerContainer.prototype.onmessage",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.ServiceWorkerContainer.prototype.onmessageerror",
      "propertyName": "_accessException",
      "property": "TypeError: The ServiceWorkerContainer.onmessageerror getter can only be used on instances of ServiceWorkerContainer"
    },
    {
      "path": "window.ServiceWorkerContainer.prototype.onmessageerror",
      "propertyName": "_get",
      "property": "function onmessageerror() {\n    [native code]\n}"
    },
    {
      "path": "window.ServiceWorkerContainer.prototype.onmessageerror",
      "propertyName": "_set",
      "property": "function onmessageerror() {\n    [native code]\n}"
    },
    {
      "path": "window.ServiceWorkerContainer.prototype.onmessageerror",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.ServiceWorkerContainer.prototype.onmessageerror",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.ServiceWorkerContainer.prototype.register.name",
      "propertyName": "_value",
      "property": "register"
    },
    {
      "path": "window.ServiceWorkerContainer.prototype.register",
      "propertyName": "_function",
      "property": "function register() {\n    [native code]\n}"
    },
    {
      "path": "window.ServiceWorkerContainer.prototype.getRegistration.name",
      "propertyName": "_value",
      "property": "getRegistration"
    },
    {
      "path": "window.ServiceWorkerContainer.prototype.getRegistration",
      "propertyName": "_function",
      "property": "function getRegistration() {\n    [native code]\n}"
    },
    {
      "path": "window.ServiceWorkerContainer.prototype.getRegistrations.name",
      "propertyName": "_value",
      "property": "getRegistrations"
    },
    {
      "path": "window.ServiceWorkerContainer.prototype.getRegistrations",
      "propertyName": "_function",
      "property": "function getRegistrations() {\n    [native code]\n}"
    },
    {
      "path": "window.ServiceWorkerContainer.prototype.startMessages.name",
      "propertyName": "_value",
      "property": "startMessages"
    },
    {
      "path": "window.ServiceWorkerContainer.prototype.startMessages",
      "propertyName": "_function",
      "property": "function startMessages() {\n    [native code]\n}"
    },
    {
      "path": "window.ServiceWorkerContainer",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.ServiceWorkerContainer",
      "propertyName": "_function",
      "property": "function ServiceWorkerContainer() {\n    [native code]\n}"
    },
    {
      "path": "window.ServiceWorkerRegistration.prototype.installing",
      "propertyName": "_accessException",
      "property": "TypeError: The ServiceWorkerRegistration.installing getter can only be used on instances of ServiceWorkerRegistration"
    },
    {
      "path": "window.ServiceWorkerRegistration.prototype.installing",
      "propertyName": "_get",
      "property": "function installing() {\n    [native code]\n}"
    },
    {
      "path": "window.ServiceWorkerRegistration.prototype.installing",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.ServiceWorkerRegistration.prototype.waiting",
      "propertyName": "_accessException",
      "property": "TypeError: The ServiceWorkerRegistration.waiting getter can only be used on instances of ServiceWorkerRegistration"
    },
    {
      "path": "window.ServiceWorkerRegistration.prototype.waiting",
      "propertyName": "_get",
      "property": "function waiting() {\n    [native code]\n}"
    },
    {
      "path": "window.ServiceWorkerRegistration.prototype.waiting",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.ServiceWorkerRegistration.prototype.active",
      "propertyName": "_accessException",
      "property": "TypeError: The ServiceWorkerRegistration.active getter can only be used on instances of ServiceWorkerRegistration"
    },
    {
      "path": "window.ServiceWorkerRegistration.prototype.active",
      "propertyName": "_get",
      "property": "function active() {\n    [native code]\n}"
    },
    {
      "path": "window.ServiceWorkerRegistration.prototype.active",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.ServiceWorkerRegistration.prototype.scope",
      "propertyName": "_accessException",
      "property": "TypeError: The ServiceWorkerRegistration.scope getter can only be used on instances of ServiceWorkerRegistration"
    },
    {
      "path": "window.ServiceWorkerRegistration.prototype.scope",
      "propertyName": "_get",
      "property": "function scope() {\n    [native code]\n}"
    },
    {
      "path": "window.ServiceWorkerRegistration.prototype.scope",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.ServiceWorkerRegistration.prototype.updateViaCache",
      "propertyName": "_accessException",
      "property": "TypeError: The ServiceWorkerRegistration.updateViaCache getter can only be used on instances of ServiceWorkerRegistration"
    },
    {
      "path": "window.ServiceWorkerRegistration.prototype.updateViaCache",
      "propertyName": "_get",
      "property": "function updateViaCache() {\n    [native code]\n}"
    },
    {
      "path": "window.ServiceWorkerRegistration.prototype.updateViaCache",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.ServiceWorkerRegistration.prototype.onupdatefound",
      "propertyName": "_accessException",
      "property": "TypeError: The ServiceWorkerRegistration.onupdatefound getter can only be used on instances of ServiceWorkerRegistration"
    },
    {
      "path": "window.ServiceWorkerRegistration.prototype.onupdatefound",
      "propertyName": "_get",
      "property": "function onupdatefound() {\n    [native code]\n}"
    },
    {
      "path": "window.ServiceWorkerRegistration.prototype.onupdatefound",
      "propertyName": "_set",
      "property": "function onupdatefound() {\n    [native code]\n}"
    },
    {
      "path": "window.ServiceWorkerRegistration.prototype.onupdatefound",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.ServiceWorkerRegistration.prototype.onupdatefound",
      "propertyName": "_setToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.ServiceWorkerRegistration.prototype.update.name",
      "propertyName": "_value",
      "property": "update"
    },
    {
      "path": "window.ServiceWorkerRegistration.prototype.update",
      "propertyName": "_function",
      "property": "function update() {\n    [native code]\n}"
    },
    {
      "path": "window.ServiceWorkerRegistration.prototype.unregister.name",
      "propertyName": "_value",
      "property": "unregister"
    },
    {
      "path": "window.ServiceWorkerRegistration.prototype.unregister",
      "propertyName": "_function",
      "property": "function unregister() {\n    [native code]\n}"
    },
    {
      "path": "window.ServiceWorkerRegistration",
      "propertyName": "new()",
      "property": "TypeError: function is not a constructor (evaluating 'new obj()')"
    },
    {
      "path": "window.ServiceWorkerRegistration",
      "propertyName": "_function",
      "property": "function ServiceWorkerRegistration() {\n    [native code]\n}"
    },
    {
      "path": "window.caches",
      "propertyName": "_get",
      "property": "function caches() {\n    [native code]\n}"
    },
    {
      "path": "window.caches",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.isSecureContext",
      "propertyName": "_get",
      "property": "function isSecureContext() {\n    [native code]\n}"
    },
    {
      "path": "window.isSecureContext",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "window.fetch",
      "propertyName": "_function",
      "property": "function fetch() {\n    [native code]\n}"
    },
    {
      "path": "detached.TypedArray.prototype.buffer",
      "propertyName": "_accessException",
      "property": "TypeError: Receiver should be a typed array view"
    },
    {
      "path": "detached.TypedArray.prototype.buffer",
      "propertyName": "_get",
      "property": "function get buffer() {\n    [native code]\n}"
    },
    {
      "path": "detached.TypedArray.prototype.buffer",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "detached.TypedArray.prototype.byteLength",
      "propertyName": "_accessException",
      "property": "TypeError: Receiver should be a typed array view"
    },
    {
      "path": "detached.TypedArray.prototype.byteLength",
      "propertyName": "_get",
      "property": "function get byteLength() {\n    [native code]\n}"
    },
    {
      "path": "detached.TypedArray.prototype.byteLength",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "detached.TypedArray.prototype.byteOffset",
      "propertyName": "_accessException",
      "property": "TypeError: Receiver should be a typed array view"
    },
    {
      "path": "detached.TypedArray.prototype.byteOffset",
      "propertyName": "_get",
      "property": "function get byteOffset() {\n    [native code]\n}"
    },
    {
      "path": "detached.TypedArray.prototype.byteOffset",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "detached.TypedArray.prototype.copyWithin",
      "propertyName": "_function",
      "property": "function copyWithin() {\n    [native code]\n}"
    },
    {
      "path": "detached.TypedArray.prototype.every",
      "propertyName": "_function",
      "property": "function every() {\n    [native code]\n}"
    },
    {
      "path": "detached.TypedArray.prototype.filter",
      "propertyName": "_function",
      "property": "function filter() {\n    [native code]\n}"
    },
    {
      "path": "detached.TypedArray.prototype.sort",
      "propertyName": "_function",
      "property": "function sort() {\n    [native code]\n}"
    },
    {
      "path": "detached.TypedArray.prototype.entries",
      "propertyName": "_function",
      "property": "function entries() {\n    [native code]\n}"
    },
    {
      "path": "detached.TypedArray.prototype.includes",
      "propertyName": "_function",
      "property": "function includes() {\n    [native code]\n}"
    },
    {
      "path": "detached.TypedArray.prototype.fill",
      "propertyName": "_function",
      "property": "function fill() {\n    [native code]\n}"
    },
    {
      "path": "detached.TypedArray.prototype.find",
      "propertyName": "_function",
      "property": "function find() {\n    [native code]\n}"
    },
    {
      "path": "detached.TypedArray.prototype.findIndex",
      "propertyName": "_function",
      "property": "function findIndex() {\n    [native code]\n}"
    },
    {
      "path": "detached.TypedArray.prototype.forEach",
      "propertyName": "_function",
      "property": "function forEach() {\n    [native code]\n}"
    },
    {
      "path": "detached.TypedArray.prototype.indexOf",
      "propertyName": "_function",
      "property": "function indexOf() {\n    [native code]\n}"
    },
    {
      "path": "detached.TypedArray.prototype.join",
      "propertyName": "_function",
      "property": "function join() {\n    [native code]\n}"
    },
    {
      "path": "detached.TypedArray.prototype.keys",
      "propertyName": "_function",
      "property": "function keys() {\n    [native code]\n}"
    },
    {
      "path": "detached.TypedArray.prototype.lastIndexOf",
      "propertyName": "_function",
      "property": "function lastIndexOf() {\n    [native code]\n}"
    },
    {
      "path": "detached.TypedArray.prototype.length",
      "propertyName": "_accessException",
      "property": "TypeError: Receiver should be a typed array view"
    },
    {
      "path": "detached.TypedArray.prototype.length",
      "propertyName": "_get",
      "property": "function get length() {\n    [native code]\n}"
    },
    {
      "path": "detached.TypedArray.prototype.length",
      "propertyName": "_getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    },
    {
      "path": "detached.TypedArray.prototype.map",
      "propertyName": "_function",
      "property": "function map() {\n    [native code]\n}"
    },
    {
      "path": "detached.TypedArray.prototype.reduce",
      "propertyName": "_function",
      "property": "function reduce() {\n    [native code]\n}"
    },
    {
      "path": "detached.TypedArray.prototype.reduceRight",
      "propertyName": "_function",
      "property": "function reduceRight() {\n    [native code]\n}"
    },
    {
      "path": "detached.TypedArray.prototype.reverse",
      "propertyName": "_function",
      "property": "function reverse() {\n    [native code]\n}"
    },
    {
      "path": "detached.TypedArray.prototype.set",
      "propertyName": "_function",
      "property": "function set() {\n    [native code]\n}"
    },
    {
      "path": "detached.TypedArray.prototype.slice",
      "propertyName": "_function",
      "property": "function slice() {\n    [native code]\n}"
    },
    {
      "path": "detached.TypedArray.prototype.some",
      "propertyName": "_function",
      "property": "function some() {\n    [native code]\n}"
    },
    {
      "path": "detached.TypedArray.prototype.subarray",
      "propertyName": "_function",
      "property": "function subarray() {\n    [native code]\n}"
    },
    {
      "path": "detached.TypedArray.prototype.toLocaleString",
      "propertyName": "_function",
      "property": "function toLocaleString() {\n    [native code]\n}"
    },
    {
      "path": "detached.TypedArray.prototype.values",
      "propertyName": "_function",
      "property": "function values() {\n    [native code]\n}"
    },
    {
      "path": "detached.TypedArray.prototype",
      "propertyName": "Symbol.toStringTag._get",
      "property": "function get [Symbol.toStringTag]() {\n    [native code]\n}"
    },
    {
      "path": "detached.TypedArray.prototype",
      "propertyName": "Symbol.toStringTag._getToStringToString",
      "property": "function toString() {\n    [native code]\n}"
    }
  ]
}
